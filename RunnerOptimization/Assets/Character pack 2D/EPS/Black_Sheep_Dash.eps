%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Black_Sheep_Dash.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: WINDOWS
%%CreationDate: 1/25/2017
%%BoundingBox: 0 0 1647 253
%%HiResBoundingBox: 0 0 1646.5098 252.6661
%%CropBox: 0 0 1646.5098 252.6661
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.2 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 20 8%%BeginData: 4945 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD15FFC9C9C9CFCFFD2BFFC8C8C9FD27FFCFFFFFC9C8CECFFD1AFF
%C9CFFD04FFC9C7C0C7C1C8C8CFFD1AFFCFFD07FFC9C9C9CFCAFFC2C0C6C8
%C9FD22FFCFCAFFCFFFFFC9C0C7C7C8C9FD18FFC9C9C8C9C9CEC9C8C09F7A
%7B507BA7FD21FFC9C8C1C7C7C1749F747A9FCEFD20FFCFC9C1C1C1C8C8C7
%749F7A7475CEFD11FFCACFCAFFCFFFC9C8C0C0C0C6C6747B9FA7754A75C7
%CEFD1AFFC9C8C2C8C8C9C8C8C09E517CA67C26519FCDCAFD19FFC9C9C9CF
%C9CFCAC9C1C0C0C6507C7BA7265174CCC9FD0AFFCFCFCAFFFFCFC8C8C1C1
%C0C7C7C7C0C7C6A550A55051A07C517B9FC8FD0CFFCFFD0DFFCACEC2C1C0
%C7C6C74AA575757BA6517CA6C8CFFD19FFCFCFC8C7C0C7C7C7C6C77A759F
%7575C9517CA0C7C9FD0AFFCACFCAFFFFFFCFCFC8C7C0C7C6C7C6CC759F4A
%26204A265150504AA0FD0AFFCAFD07FFC9C8C1C1C1FD05C7C0C7C0C79E7B
%7426F84A26515051507BCAFD11FFCFCFC9C9C8C9C9C9C8C9C1C1C0C7C6FE
%C67B7A4AF84A504B50515050A6FD08FFC9C9C1C8C1C8C1C87BA09FC7C0C7
%C7C7CC9F747B204BF8272627275126C9FD14FFC9C8749E9EC7C6CCFECCCD
%CD749F204B202726512751507BFD0EFFC9FFFFFFCFCFC8C7C0C09E7A9EC7
%C6CCC6CDCCCD749F26272027002727515074CAFD08FFC9C9C1C0C0C07450
%26507AA47A7B507B50747A5026515026F80026509FFD0CFFCFC9C9C8FD04
%C9CEA651505050C17A7A747B7B517474264B4A26F800F8507ACFFD0CFFCF
%CFCAFD05FFCAC9C174265026A5A47A747B7B51507B26262651F800F82750
%C8FD0BFFCAC9C19FF82751515051275127512651747B744BF89A4B51A8CE
%C9FD0CFFCFC9C9C1C1C0C1C0C626055151505127512751264B749F7451F8
%7575277DCFC8FD0DFFC9C9C8C8C1C7C1C7C7CC740027514A7B2651275126
%4B749F747B2627752727CFC8CACFC9C9C8C8C1C7C0C1C0C7C0C79E26F827
%F827002700270027F827F827F87575757DFFC8CEFD05FFCFC9CEC9C9C2C8
%C1C8C1C7C0C7C6C7C650F800F827002700270027F827F827F84B997575FF
%CFC8FD06FFCACFC9C9C8C9C8C8C1C7C0C6C0C7C6C6C69FF800F827052700
%270027F8272027F800757550A8FFC8FFCFFFCFCFC9CEC9C9C8C9C8C8C0C7
%C04BF82727270527272700270027207599524AA7FFCEC9FD07FFCACFC9CF
%C9CFC9C9C1C7C0C7C0C7C67BF8270527052727270527F827F84B7576267C
%FFCFC8FD07FFCFFFCACFC9CEC8C8C0C0C0C6C0C7C6CCFEA52605F8272727
%05272727F82700274BA02751A8FFC8FFFFFFCFC9FD05FFCAC9C1C1C0C1C0
%4AF827002700270027F8F8F84B99C275754AA9C8CFFD04FFCAFD06FFCFC9
%C9C1C1C0C1C0C1C0C7C674F827002700270027F8F8F82799C275754AA8CE
%C9FD0CFFCACFC9C9C8C9C2C8C2C8C1C7C0C7F800F8270027002700F8F800
%6FC275757552AEC8FFFFFFCFFFFFFFCAC9C1C7C0C0C0C7C6CC2600262700
%270527F827F827267599A027A1CFCDFD0CFFCFFFCFFFFFFFCFFFCFCFC7C7
%7400F827002705270027F827F84B99C24B76A8CECAFD14FFCFC8C7C0C7C6
%27F827052700270527F827F8276FC2754B7DCFC8FD06FFCACFC9C9C9CEC9
%A0749F74757451F805F827F8274A2DF8754A4B4BA8FFCDC9FD11FFCFCFC8
%C1749E74745075F805F827F8002651F875744B4A76AFCEC8FD11FFCFCFC8
%C1C0C098747A7B26752027F805F8272650F84B74514A7584FFC7FD0EFF52
%2675A0997520050027F827F84B999F515126A8CFCDC8FD12FFCFC8CE7B26
%75A099994A050027F827F827759F5175207CFFCEC7FD13FFCFFFCFFFCA51
%509F99A06F27F8270027F827759F50754B27A8CFC7CFFD0CFFCFC927F84B
%204B205126FD04F826504B6F9F5050A5C7C9FD16FF7DF84B204B20262020
%F800F8274A514B9F50267CCDC7FD11FFCAFD07FFF8214B4B20262705F800
%F8F804514B99744A51CDC7CFFD0FFFA0CA7DF84BA0C1C79EC175C7C0CCC6
%7B4A2074CDCFFD17FFA8A8A82727A1A7CFA8C974C1C6CCC69F4B2726CCC9
%FD1AFFA1A852F876A8FF9F98747A9EC7C69F504B209FC8FD10FFCACFFFFF
%A7CFC9CFCAFFCFC9C1FD04C6C7A0CFFD14FFCFFD07FFA8FFFFFFCAC9C1C7
%C7C9C2C0C6C67AC8CAFD1DFFA8A8FFFFC8C8C8CEC9C9C1C6C6C67AA1CAFD
%1AFFC9C8C1C7C2C9C9CFFD23FFCFCAFFFFFFCAC7C0C8C9FD23FFCAFD05FF
%C8C7C7C9CAFD1CFFCFCFCAFD2EFFC9C9FD2BFFC8C9CAFD0AFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Sheep_Dash</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2017-01-25T22:00:52+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-01-25T22:00:53+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-01-25T22:00:53+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>40</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAKAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq49PD3xVK7vU&#xA;bzT+bPaXF3F2eL02oB/kqEb57ZrM+qyYLJhOY7xwn7BR+xzcWCGXlKMT53+0MdvvMtjfMfqsmo2l&#xA;yOojAZKjxj5/qzntZ25gnuJZsUvhXy4v1O0w6CeMeoY5R8/10xq5/MbWdOubi1je5v7izRJbqJYI&#xA;uEMcrcYmmlleLiXY0VASx6hSN8xdN2lriDOMwcY6y6/IE/o811OLTAgcO57pfgKx/O99L1h9L8ya&#xA;M9o0QDzXEE9tKEQhSWMaSuTxDAsoPML8XHiCw6PB2jlA/eCJ/q/t5/P7XVzw4z9JI9/4/Q9Os7+1&#xA;vIy9vIGp9pdwy/NTuM2Wl1mLPHixy4h93vcbLhlA+oK+ZLW7FXYq7FXEVFK09xiVaZgiFjUhRvQV&#xA;P3DATQtIFlAN5h0RXZHvI0dftK54kfQ1MwT2ppgaM4g+e33uSNFmIsRJSe/8z3NsS9rdWN7EP2Of&#xA;pygfS3E/R92arU9rzx7wniyR99S++j+NnOw9nxntKOSB91j7rYd5p8/QROZ7W3mOqxQPeXCadLVl&#xA;tYf7ya4D+iiItDRnccug5dtOdZk1h48cTimP4hI0fgBv+L6OWIQ0/omeOPcYj7DbU35x3+hXsFnr&#xA;elXKiWNZSZHs3bg24KGCZmc8akJ6fqNQ8VahzY6PXayA/eGGSNA9RKjy6V+NyHXZYYZHYGP3fL9r&#xA;03S9ZsNTgSW2kBEiLIq1G6MKq6kEhlIOzKSM3uj7QxagHhNSHOJ2kPg4eXBKG/Md4RuZzS7FXYq7&#xA;FXYq7FVAX9gSQLmIkbH412P35QNTi/nR+YbfBn/NPyQWpajeQp6tnBHexdSqT+nJUeGxBH05iavV&#xA;ZIjixxjkj5So/tb8GCEjUyYH+rYY7eeZI9RVoptOlguY/wDdkc4SaPvtUISPwzmdd2/in6cuOUJd&#xA;4O4+z7C7XFoTi3EwYnvjYP3sY0v8ydYeRY9NtdR1aN0mmtpwLT0Z4rcqskkTXU9s8iKXUc0Yoexw&#xA;abP2hAipjhPSd38aB7jtdtWpOmJ2j/pdvx8k68k/nPonmS4NpLaz2N1waRBJ6bc0jbg7cYnlKUbs&#xA;29Pi+zvm+h2xwAeOBH+lGzH47Aj7R3lwDpRL6D8Dsf1fc9BjkjljWSNg8bCqupqCPYjNzCYkLBsF&#xA;w5RINHmuySFK6aVYW9ONpWIpwRgrb+BJA/HKsxIiaF+40WeMAnc0xm68y/o92F1p15wPw/vm5If+&#xA;JL+Oc7m7W8Anjx5K/pGx+p2+PQeKPTOHw5sU8zedvJ1nbC5vNGKCSQRI0U0cHxNU1ZnMUK7Akl2p&#xA;9Oaz8zpdVIgYKPka+yINn4Fy5Y82njxHJY91/eUg0fzL5f1m5uF07nbm1jaW4iv6oFSMKZD6hSNG&#xA;EfqJyKsQOQNaEE6TX6fw6qJAJobiR8uQFXRqx0Pc5OLXwkKJ38hX6SjIfOXkFJFE2o2JUbtc285k&#xA;hQd2eVeUcarUcmZqLUVpUZi/yfqj/DL3Ggft/U0ZNcOk/seT+cdRu7yw1mTQ7kXFzPqs4ufqlx60&#xA;9zaGQNFxhWN+fpW4jIdWBUA7jcHp9HhjCcBkHDEQFWNonr6rHM30o9zrpyuNjv8Axt7mIL5s82w6&#xA;TFbXfqyaPYTTXZlf1rUNLMVWWT1V4yeo6Xiqw5nZ6kEUbN7HT49+GVE7AAg9O7l0+xxckjfeB1ZJ&#xA;5N/OrzJa3iNY3s0zWwWX6lcSiaFo4iPUhWR0muFj9LlRQWaoUk1U84ZezjgkMsSOLldb78rAIid6&#xA;vl5VYqEM9jhPLufYmnXn1yyiuChidx+8iJqUcbMhPfiwIzbaXUDNjEx1+/qPm1ZcfBKkRmQ1rZE5&#xA;gDky0NaqaZGUbTE0pzX1lC3Ga4jjb+V3VT+JyueoxwNSlEHzIZxwzluAT8EFfahZvH+51aG1cdG5&#xA;Qsp+Yb+BzE1GqxkenNGB98T9/wCtyMOCYO+My/0zD/NHm3WNB02bUf0ra31tCUBSAwCUmR1jX4XK&#xA;qPiYVJagG5IGaLNq9XE+jNimPLhv/S7n5W7KOHT8Nzxzj8/v/XTHNM/NKw8x3KadczyRXZTkEltY&#xA;ZYjUFv3dwiywuSqlh6bnavgaaftHV67hufBKI/oxv5SHEPkPubNP4IP7vn/WkP00fmqReavJEDAf&#xA;4nsmFfsCWKUCta1CFuIFCT0AAqds0kdDnyHfHKPnRDPJrYnoPgXl35gakbqXzO2gXsN1e3U0UFvL&#xA;ZTpKLm0ntYo2hghpJ626tQJuHD+9el0OmGI445fpiLO3KQkTZO1fHpXwwJ5OIEjmwO087ec4rF7R&#xA;TNNaRXS6jNcETRSi4RTxkkmQiRDHHVaxyDYbbCmdDDT4o8pcPcBX2fPqHFySJ82R+Ufzk123urTT&#xA;9P1KWGG3ASzguXhlgjSGpjh9Z09SNCo4u2+zUACqgyvVdnzgBlsGUOoFS8+XP3HagLvdhjz710Py&#xA;fXHlfWZNa0Cx1Ka3a0uLmGOS4tHryikdAzIagdOWbbSagZYX1BMT7waLXlx8J8juE0zJanYqslkZ&#xA;E5LG0p/kTiD/AMMVH45CciBYBl7q/SQyiATuadJ6zRH0iElI25jkAfAhSP14y4jH07Hz/YVjQO+4&#xA;SDUr/wA4Wm8dtaTL4oWrT/VZkP3VzR6vU6/FyjjkPK/uJH6XZ4MOlnzlMfL9RefeY/zWgtNSXT9Z&#xA;soeZRZJX9FG9KNiy8uLyrO9ODFhCjkDc0GaTJrtTqIkyx4zW1GJv578PPqQ5k8eHTkCMp777SDtP&#xA;1fy1d6emrR6pa21jK/pVuo/QpJSvBkuSkiNTenhuNs5jUQy+JweGeL+iSR79r2cr89Exvf50lnm/&#xA;zL5MuPJ+rx6brWl3F61q4QW9xGJHVl/eLCFYlpPT5UVakGmZ+h7L1Ec0ZTieG+t/D7e9wsut4gQC&#xA;aLxf8wNe1e11YfVZ2j0K2hCW1uCk9vSeUTy2cjw04JILZeKN8QSo+x06fszT454/V/eE+YOwriF9&#xA;Rxbnv83FyyIPl+NvsUH/ADR80xar+mNTe5sr65dbiG6gYQxiSOI2okS3kRoZKRAKeQq3HiWpsNmN&#xA;GJjhjLiobgix02P486cKWQjcinsX5Ifm3reqapHY3ch1CwufgdyscctsUQsZpAm0iHkiPJRPj34/&#xA;FRcbEDocnCdscvfw7nhBH83fpuKPOxvbfjCv4hy/V5+Xm91vH1CGNpRdWsMS9XmjYKB03b1VHXNp&#xA;nllgDLjhGP8ASifv42GIY5GuGRPkf+OpfXzPcp6lpf2Mib/EisR99XzA/wANyC8eTER5A/tcr/Bo&#xA;GpwmPx8EBex+dIY2e6v7ZYKUahjjBr/lSR5gaqHaUY3LLjA+H6YhycUtJI1GEuL4n7pPMfzF8sWv&#xA;mvRLjR2vnspZnjd7qBI5Yz6bcuJQCGoJAPwsDXv1Gc1ptbPTanxCIZK7tvlW32OzzaWeXFwA8I87&#xA;v7SXzbqbebvLGqDRtXZFMEatHG6rNE0bklWQOGUrUHqOvgRnoOn/AC+rj4kevPob86eXz454ZcEu&#xA;aybXtbnlWabUbmWVCrJI80jMCteJBJrUcjT55nR0mGIoQiB7g4xnLvQdx5j1uzvhdRXrxvOnozOr&#xA;cWkoDT1SKF6KTQn+mVZNDhkKMRTZDNKPIsn8paLrnnPUIbrU7lbjR7OVfrdo0jRs9I+KhUC8aURF&#xA;bcfDtmDlji04qAqR6uy0mCeYiUj6AeT178prLQn/ADCs7vzFY20c7/WLbTRMql1vEaCW2jmSIGAS&#xA;okczwydSpWlG446SvEIBscIr39aYa2MqEiK3r9VvojSOl2R/dm5k9P5AAH/hgcj2R9EyOXizr3cT&#xA;j6n+Hv4R+PkjJSwQlXVD2ZxUfdVf15s5kgbED3/gNERv3oOaPXf903Fr0/ahk6/RKcxMkNT/AAyx&#xA;/wCll/xbfGWHqJf6Yf8AEpJq0usxgx3eo6YtBtHKu+/fiwc5p9bPUR2nkwe4j9Bt2OmjiO8YZfh+&#xA;AxC+kszL8bRS+JtB6S1+RiTON1hJltLGf6sSP0Rd7hjOtrH9bf8A3xS7zBoFr5k8tX+hJcXVil/F&#xA;6TXEciHiOQJqrFAytSjDuCdxmNptTLT5o5SIy4TyouPq8UpxMSRv5PmXzVpHmjyPr0Wi380ckEQe&#xA;5snHGSN4JWaEOU+IVZY/iRq9ffPTNBqcGvx+IB3CXTcb1flfN5bNjlilRQ0vmTXpiGfUbkjYqBK4&#xA;UUNVoAQBSgpTpmyhocERtCPyDQckj1Qlx5o16zvIL+G+kjuFqj3Aakr8qcRI/wBpwKbciabUyvJ2&#xA;fglHhMRX45DozhnnE2Cnfl6x8zeeLiK1ub5W02xNul5AXMLNbBiAI1RCrFV5AFqUr1zDyYsOm3jH&#xA;1G9+e7n6bHk1HM+kVb1fyDofl2b8wLNde0i3hsI7prSyWWEKr+pGyxQSxQl4XjM1GieTY1pseten&#xA;3yAXxCt/6zPWQlV8NAHb3eb6X03/AHq1Ej7Prge3IRpXJdm/XmI5eL/vY39riZ/ph/V/SUfm1cZC&#xA;zJqh5GGeAfyh4nP3kSD9WY045v4ZR+MT/wAU3ROPqJfMf8SlOqwa80Z5yW8i0oFjgnJP/AO2avWY&#xA;9URuYH3Qn+glztPPADsJD3yj+kMPvdO1cyHnZ3TrT4mjSZV/4cPnI6vSaonaM/8ASz/S73FnxVtK&#xA;Px4f0Up29kI2/eWk8Zp/u1QR9xjOarLpNQOcT/pZBnPLY2lE+7+151+c35aX3ma5s9b8v6gkeqaf&#xA;GluumyMsUZUyF2lR/h4yDkK16gClCN9v7P8Aa40nFjzQPDLe+Z5ciO79bp9ZosuU8QsvBLDzbrTx&#xA;OVuDFLOS8rrTm/MANVqVCsqqGVfhIABGwz0AdnYSbMb7u75fp5ukOWXerv5h1yTl61/POrgLIk0j&#xA;Sq6j9h1kLKy/5JFMu/I4ekIj3CvlXI+bHxJd6GsvO/miyQ2UF6yxQySNFEQrInqqyfACKAem5Wnu&#xA;cxcvZeCciTHf8FvjqZgVbNtD8rautheeZ9XiXVNQu4Yv0cvppeKiyAHlJDIYqcSFVuL/AArWmYhn&#xA;jBGOHpiLvo7THp5xiZyHFI1XV7x+TeheUNO8m6wdOsobTXkaWPUYFeSWaBJW5wRo8or6ThQylAFa&#xA;n8ysBja83oJEm5na+88Wzi44GOoAqt3tGdC69TnhM0ZT1Hjr1aMgN99DleSHEKsj3MoS4TdX70iu&#xA;vJekTMZrme5kbu8kvI/eRmlzdgYJHinKZ98v2Ozx9q5Y7RER7g8I/Mnz/b+WfP6+XdMmSG2ht0lu&#xA;Lm/hLtzcF6p+8tl48aAe9fbNbk9ncJiTAzI8zX+9cvH2nllLhlwD8f1nm3nq78v+YbqXV6XGs69c&#xA;Rraw/VYmgt2cKVjCoxlMkgJFFRzX+U5n9m6bJp4jHE8MLvvPz7vh8WjU4scrmdz5bD7beXTM0E0k&#xA;EwME0TMksElUdGXZlZWoQR3qM6OMgRYLpSKLIfKXl201mK7m1CC+TTYxQ6xbQNPa27DdzcGnGnEj&#xA;9tadfnrtdrDjlGMJQ4z/AAyNGXu6/YXJ02GMwbsefRltv5em8tafA+mmKS9Hx/pWyvlPrxgtJT6v&#xA;cSgMyx1oghFabMdzmulqjkkTPiA/mmOw/wA6I7+pl8HYCBwRsXxd97H8B9LeQvy80zy/NLfGKDUP&#xA;ON6fWvdRSLjFbM8KQsIeRZ1QLH1ZuTValAxGVjXnKPB0wJlyMzyiD+nuDRkBkTkybRPTvek2lslt&#xA;bpAlSEG7HqSd2Y+5O+b3TaeOHGMceUQ4OTIZyMiq5ewdirsVQ16LsoPq0MMr70M7MoH/AAKPX8Mx&#xA;9QMhHojEn+ka/QW7EY36iR7v7Q8K/N/80fMHlfzTY+Xbm4s7QXlst28iQGRArvIi/EZbZl4mE1+I&#xA;1qOmaTPodVkifEMa7obfaYkuxxajFGYGMfGf7DTyHz1e+Utcl/TF7dSaneW9uII/qETW8IUMXHqs&#xA;8lyhPJzQKwJ98HZ2ny6ePBE8MSb33Pw2j9xb9VGGU8czdD+H8EPKWd4ZDFLWGZTR4mqjK1OhU0Iz&#xA;poSBFg26CUaKceVtKstYvJ4r1Lt7OOItJeWcTTrbt2knUAj0woYkEr48gAcw9dqJYwOEx4ieUjXF&#xA;5Dz+fucjT4ozJEtmZweWT5b02KfTXjubxmAtdWsb0Ksglk+BHgnenwqQKCLfs1c1UtUck/XxRH80&#xA;xsbeYH3y+DsI4jghYvi7wfSX0R+WvkDT7SO18z6rHFqfmvVYLW4t4/R9NLThGSpozSfGPV+Nq0BH&#xA;wgH7T+djEDFh9eY/KPmT3f2NOQyykzn6Y9fx3vWLK1FtbrHy5vUtI/8AM7GrH782uj0wwYxAb957&#xA;yeZ+bhZcnHK1fMprdirj08fbFVknrNEfSIjkPQyLzA+YVl/XkJcRj6dj57/cR97KNA77j8eSRaho&#xA;XmG7qDrPCM9Uji9Ifer1P0nNLquztXl/y9Dyjw/cbdlg1mCH+S38zf6HzZoX5x21+kl3NqFlZHme&#xA;EN5ZvNTYNTkt7GZNm+16Yqe2aPP7OyBr1HzEv+rZr5l2GPXyyxNGMB+PN4/5n0vy7pyQRaSbudkU&#xA;me7mXhGy1G6xkckG9Kkmvj1zrdJkyyJ4yK7g6fVaeGMbWSx83GxrLt3+LNhbgsx0LyPpWtW1lPFO&#xA;bbUQweWxvlaBbqJW5N9XmqN2jZQRWgry5CoA02fXZISkK4o98ecfePn91OxxaSMwDE+8dfgz/wAl&#xA;eX9W1HzCPJ1nJNY6XcW0n6Qe9Zb6KKEo4YwtC6UNeKCsrDfwGYYz468TJIAd9cJ27wefyDkzzyh6&#xA;IgkV/E+k/J3lHQtIsYrHRbX0dNiMb3Fy1TJdzRKERmP8q8RsPhH2VFNhPCTrZxlXDp4Gxf8AHLof&#xA;6o5+ZcWf7oGz+8Ir3BmGb5wXYq7FUsuvLWi3bXbXdsLlr23ezuTKWYtbS15w1JqEPI7ZTDAIyJuW&#xA;/eSfs5NkspIrb5BjHlv8lPy98txFNHsGt2PIGYyM83Fqck9V+UnHb7PKmY2p7Pjn+uU67rofZz+N&#xA;t+HWSx/SI/K1XVvJelNG0NroRvjyVjJPKqx803VuJYMxXtsPY5pNR2THHthxSlLvM+Ef7qz9jsMW&#xA;uM98s4gd3DZ+6lCy8n60JfUeC2iatR6ju4X/AFQOX4nNP/oX1OQ78OMd1/2/e5WXtPDVAyPuACCj&#xA;/IPyHJrNvrF7Zqbq2k9aOC1Mlta+p/MYEfgTXckAV71zqNH2VOGMwy5ZZAfd9/1faHUZdXE1wxqu&#xA;839nL7Holta29tEIreNY4x+yopv4nxObXDghijwwAjHycTJklM3I2VXLWDsVdirsVaVQooK/SSf1&#xA;4AKSSh59L0y4u4ry4tIZru3VkguJI0aRFfZ1RyCyhu9OuJAIoqCRyYl5Q/Jj8tvKTtLo+ixfWC5k&#xA;juLktcyRk1AETTF/TAX4fgpUda4JQEuYtImRyKO13yXHrkUtveLZpZzACWAWqSl1Vgyh2frQgHpm&#xA;n1HZ2bKdpxxR/ox3/wBNY+ynYYtZjhziZn+kdvkld55cubIJYaOJ5ZBTm0caQwJ/sqCrf7LOZ1vs&#xA;8BLhxieXJ1J2iPif17OxwayEvVk4Yj3kn5d3wSS4/wCcf/KWr3kN5qdmLUpKJ5obaWQLM4rUyxgr&#xA;BViTyIQk9zm57M7L1kI1ly+nlQAJA/rHl9rganVYj9Iv7I/L+x6haWNtaIVhShbd3JLMx/ymO5ze&#xA;6XR4tPHhxivvPvLgZc0pndXzKanYq7FXYq7FXYqwzzT+T35feZNIg0i70uO0sILxb8RaeFs+cwVk&#xA;bmYQteauQ3f3BxVHW3kXRbHTpNJ0iFNK0uReNxBbRoDPVeJM0jcnkJGxLbnvXMDU6WeX0icoR/o1&#xA;9/P7nLxaiMNzETl5/qSG5/K7yZppWa30tri94hI/q8EAPENyCtIIvgXkK9flml1fZUcca4s+SXcD&#xA;t8dqDn4dZ4h3jiiO8j7t92pfy/uNatHtdasop7eQ1C3khk4eDRhKsriuzBgR2pmn0ns7rBk44kYf&#xA;v+zn7i36nXYDsN/cK+1W8k/kt5Q8qX13qFsJ7u8vKB2uZXlVEFP3aByzcfhWvNmrQV6DOvHZsZiP&#xA;jHxDHyAF9/CHUy1RsmO1/E/NnwAAoNgOgzZAOI//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:F47C39C7E0E2E611BF2DF3497AE93A38</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F47C39C7E0E2E611BF2DF3497AE93A38</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:F37C39C7E0E2E611BF2DF3497AE93A38</stRef:instanceID>
            <stRef:documentID>xmp.did:F37C39C7E0E2E611BF2DF3497AE93A38</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D95F27F540E2E611931BE4445CC23D15</stEvt:instanceID>
                  <stEvt:when>2017-01-24T21:26:36+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F37C39C7E0E2E611BF2DF3497AE93A38</stEvt:instanceID>
                  <stEvt:when>2017-01-25T22:00:41+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F47C39C7E0E2E611BF2DF3497AE93A38</stEvt:instanceID>
                  <stEvt:when>2017-01-25T22:00:53+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1800.000000</stDim:w>
            <stDim:h>300.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -252.666 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 252.666 li
1646.51 252.666 li
1646.51 0 li
cp
clp
[1 0 0 1 0 0 ]ct
479.833 126.334 mo
479.833 212.607 361.193 244.504 266.889 244.504 cv
326.785 217.826 li
212.277 222.465 li
273.055 199.846 li
144.453 201.006 li
242.227 174.908 li
82.958 169.688 li
180.57 139.398 li
0 126.334 li
180.57 113.268 li
82.958 82.9785 li
242.227 77.7598 li
144.453 51.6602 li
273.055 52.8223 li
212.277 30.2012 li
326.785 34.8418 li
266.889 8.16211 li
361.193 8.16211 479.833 40.0605 479.833 126.334 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 .419074 .980804 0 cmyk
f
474.996 126.334 mo
474.996 199.686 390.613 226.807 323.537 226.807 cv
366.137 204.123 li
284.693 208.068 li
327.922 188.836 li
236.453 189.822 li
305.994 167.633 li
192.713 163.195 li
262.143 137.441 li
133.709 126.334 li
262.143 115.225 li
192.713 89.4727 li
305.994 85.0352 li
236.453 62.8438 li
327.922 63.8301 li
284.693 44.5996 li
366.137 48.5449 li
323.537 25.8613 li
390.613 25.8613 474.996 52.9824 474.996 126.334 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
471.606 126.334 mo
471.606 189.506 410.314 212.861 361.594 212.861 cv
392.537 193.328 li
333.379 196.725 li
364.779 180.162 li
298.342 181.012 li
348.854 161.9 li
266.57 158.078 li
317 135.9 li
223.713 126.334 li
317 116.768 li
266.57 94.5879 li
348.854 90.7656 li
298.342 71.6563 li
364.779 72.5059 li
333.379 55.9434 li
392.537 59.3398 li
361.594 39.8047 li
410.314 39.8047 471.606 63.1621 471.606 126.334 cv
cp
.0187381 0 .613275 0 cmyk
f
468.167 126.334 mo
468.167 173.844 431.078 191.41 401.596 191.41 cv
420.32 176.719 li
384.523 179.273 li
403.523 166.816 li
363.32 167.455 li
393.887 153.082 li
344.096 150.209 li
374.611 133.529 li
318.16 126.334 li
374.611 119.139 li
344.096 102.459 li
393.887 99.584 li
363.32 85.2109 li
403.523 85.8496 li
384.523 73.3945 li
420.32 75.9492 li
401.596 61.2578 li
431.078 61.2578 468.167 78.8242 468.167 126.334 cv
cp
0 0 0 0 cmyk
f
132.665 62.8359 mo
122.721 61.5918 95.1738 60.2695 97.332 63.502 cv
100.334 68 148.665 64.8359 132.665 62.8359 cv
cp
0 .419074 .980804 0 cmyk
f
230.834 16.5 mo
224.771 15.4902 199.332 12.1641 202.666 16.5 cv
205.998 20.834 238.834 17.834 230.834 16.5 cv
cp
f
70.334 151 mo
61.3828 149.623 39.8701 148.049 39.334 151 cv
38.334 156.5 76.834 152 70.334 151 cv
cp
f
187.834 216 mo
180.834 215.5 157.334 212 160.834 218 cv
162.865 221.482 195.813 216.57 187.834 216 cv
cp
f
420.635 80.3555 mo
423.176 76.3555 425.158 80.0957 422.964 87.8555 cv
420.423 96.8555 412.167 116.855 385.912 117.105 cv
354.558 117.405 347.52 90.8457 347.165 76.8555 cv
346.741 59.8555 355.634 34.8555 382.312 32.6055 cv
405.788 30.625 413.013 53.3555 412.378 62.8555 cv
412.437 63.3154 li
409.007 63.9551 405.28 66.5059 403.697 71.6055 cv
398.573 69.7148 394.414 70.3955 391.593 72.4756 cv
389.189 63.5654 377.712 59.5156 372.785 70.1055 cv
366.856 82.8555 377.248 98.4951 392.687 96.6055 cv
408.991 94.6055 417.628 85.0957 420.635 80.3555 cv
cp
.118532 .179629 .999206 0 cmyk
f
394.414 107.655 mo
411.404 104.735 420.584 91.4951 422.837 82.6953 cv
423.887 82.7949 li
423.811 84.1855 423.514 85.8848 422.964 87.8555 cv
420.423 96.8555 412.167 116.855 385.912 117.105 cv
354.558 117.405 347.52 90.8457 347.165 76.8555 cv
346.834 63.5156 352.238 45.2451 367.474 36.916 cv
349.536 51.3555 349.866 80.6953 357.608 92.9854 cv
367.262 108.275 383.498 109.535 394.414 107.655 cv
cp
.240848 .455299 1 .0437018 cmyk
f
403.697 71.6055 mo
398.573 69.7148 394.414 70.3955 391.593 72.4756 cv
389.189 63.5654 377.712 59.5156 372.785 70.1055 cv
368.109 80.1553 373.58 92.0059 383.675 95.6455 cv
357.887 92.7051 363.307 61.3154 376.908 56.2949 cv
393.229 50.2754 401.868 64.6855 403.697 71.6055 cv
cp
f
383.657 38.9375 mo
381.692 40.3457 382.527 49.4385 385.492 50.2715 cv
388.456 51.1045 394.808 44.2715 397.066 42.6045 cv
399.325 40.9375 387.609 36.1045 383.657 38.9375 cv
cp
0 0 0 0 cmyk
f
404.265 48.7715 mo
402.178 48.1143 397.066 52.7715 397.208 56.1045 cv
397.348 59.4375 405.536 61.4375 407.229 60.9375 cv
408.923 60.4375 406.382 49.4385 404.265 48.7715 cv
cp
f
370.954 41.1045 mo
367.707 41.9375 364.154 43.4453 362.908 47.2715 cv
362.201 49.4375 369.683 54.4375 370.954 50.4375 cv
372.852 44.457 373.041 40.5684 370.954 41.1045 cv
cp
f
419.721 86.0215 mo
418.238 87.7734 417.306 88.6582 417.604 89.2715 cv
419.51 93.1875 421.204 84.2715 419.721 86.0215 cv
cp
f
412.593 92.7295 mo
410.546 93.8545 408.782 94.7295 409.065 95.4375 cv
409.445 96.3916 412.664 96.3545 414.075 95.8545 cv
415.487 95.3545 413.772 92.0811 412.593 92.7295 cv
cp
f
402.572 97.9375 mo
401.308 98.3105 398.619 99.1045 399.184 99.6045 cv
399.749 100.104 403.417 100.605 404.124 100.271 cv
404.831 99.9375 403.983 97.5215 402.572 97.9375 cv
cp
f
421.763 87.3809 mo
418.815 97.8223 410.237 115.373 385.905 115.604 cv
351.178 115.925 348.601 83.3457 348.438 76.8105 cv
348.095 63.0576 354.754 36.4326 382.407 34.1006 cv
391.262 33.3516 398.722 36.2656 403.98 42.5195 cv
409.642 49.2559 411.34 58.0293 411.125 62.4805 cv
410.203 62.6377 409.29 62.9219 408.415 63.3525 cv
407.032 64.0283 405.749 65.0762 404.721 66.4199 cv
403.963 67.4063 403.362 68.5625 402.96 69.791 cv
402.026 69.4189 401.049 69.1777 400.056 69.0527 cv
398.669 68.8809 397.243 68.9795 395.865 69.3418 cv
394.662 69.6504 393.499 70.1934 392.454 70.9453 cv
391.647 68.7012 390.298 66.7285 388.616 65.2354 cv
388.843 63.3887 389.474 61.4521 390.194 59.627 cv
391.042 57.5244 392.117 55.5254 393.381 53.6992 cv
394.647 51.8711 396.135 50.2539 397.806 48.8887 cv
399.49 47.5449 401.383 46.5176 403.417 45.8281 cv
401.298 45.8643 399.157 46.4727 397.174 47.5488 cv
395.177 48.5996 393.363 50.1445 391.786 51.9609 cv
390.205 53.7793 388.865 55.8945 387.824 58.2197 cv
387.105 59.876 386.489 61.6338 386.193 63.5508 cv
385.027 62.9316 383.779 62.5137 382.491 62.3564 cv
381.579 62.2461 380.691 62.2656 379.836 62.4014 cv
379.337 60.7686 378.892 59.1182 378.512 57.4404 cv
378.081 55.4531 377.737 53.4346 377.548 51.3877 cv
377.141 47.291 377.351 43.1055 378.263 38.8857 cv
377.245 40.7012 376.471 42.7461 375.986 44.8955 cv
375.483 47.043 375.257 49.2852 375.238 51.5264 cv
375.233 53.7686 375.439 56.0137 375.864 58.1992 cv
376.187 59.9199 376.656 61.6055 377.26 63.2197 cv
375.25 64.2051 373.51 65.9492 372.187 68.373 cv
370.878 67.9473 369.583 67.3613 368.349 66.627 cv
366.863 65.7168 365.442 64.6309 364.168 63.3105 cv
362.888 62.002 361.754 60.4746 360.763 58.7852 cv
360.265 57.9424 359.812 57.0508 359.411 56.1191 cv
358.976 55.2012 358.624 54.2305 358.258 53.2461 cv
358.324 54.3184 358.496 55.377 358.705 56.4375 cv
358.941 57.4854 359.242 58.5215 359.605 59.5371 cv
360.341 61.5615 361.389 63.4531 362.67 65.1123 cv
363.958 66.7617 365.463 68.1992 367.139 69.291 cv
368.339 70.083 369.615 70.7344 370.958 71.1699 cv
370.03 73.8271 369.686 76.6484 369.921 79.4443 cv
368.692 79.8857 367.414 80.2695 366.112 80.5703 cv
364.551 80.9395 362.968 81.2285 361.379 81.4121 cv
359.789 81.5898 358.188 81.6426 356.601 81.4814 cv
355.031 81.2822 353.418 80.8906 352.106 79.6758 cv
353.102 81.291 354.776 82.1904 356.39 82.75 cv
358.031 83.3271 359.734 83.5586 361.425 83.6484 cv
363.12 83.7334 364.815 83.6406 366.499 83.3936 cv
367.802 83.1816 369.106 82.9111 370.4 82.4551 cv
370.84 84.3174 371.539 86.1367 372.502 87.8516 cv
372.953 88.6514 373.454 89.4033 373.986 90.1201 cv
373.239 91.2461 372.411 92.292 371.5 93.3008 cv
370.391 94.5137 369.196 95.6484 367.921 96.6621 cv
365.372 98.7031 362.533 100.279 359.344 101.111 cv
360.963 101.389 362.652 101.291 364.288 100.889 cv
365.929 100.5 367.524 99.8184 369.038 98.9414 cv
370.545 98.0508 371.977 96.9619 373.273 95.6504 cv
374.23 94.6875 375.141 93.582 375.891 92.3359 cv
377.771 94.2334 379.97 95.7217 382.393 96.7256 cv
382.436 98.0205 382.395 99.3379 382.314 100.68 cv
382.213 102.137 382.064 103.6 381.825 105.042 cv
381.583 106.482 381.275 107.911 380.832 109.291 cv
380.375 110.659 379.821 112.012 378.94 113.215 cv
380.187 112.593 381.261 111.426 382.071 110.1 cv
382.89 108.768 383.504 107.28 383.969 105.746 cv
384.43 104.209 384.76 102.622 384.932 101.004 cv
385.055 99.8945 385.104 98.7549 385.051 97.6084 cv
387.513 98.2432 390.135 98.4258 392.821 98.0967 cv
393.006 98.0742 393.183 98.0449 393.365 98.0205 cv
393.849 98.8672 394.235 99.7207 394.581 100.666 cv
394.967 101.762 395.274 102.938 395.496 104.166 cv
395.954 106.628 396.11 109.257 396.349 111.979 cv
397.202 109.434 397.652 106.705 397.585 103.873 cv
397.542 102.461 397.367 101.016 396.967 99.6172 cv
396.776 98.918 396.516 98.2188 396.203 97.5605 cv
398.806 97.0527 401.186 96.3594 403.353 95.541 cv
404.016 96.0488 404.559 96.5547 405.101 97.2051 cv
405.643 97.8662 406.145 98.625 406.588 99.4707 cv
407.49 101.158 408.17 103.123 408.916 105.178 cv
409.204 102.967 409.07 100.677 408.428 98.4531 cv
408.099 97.3486 407.637 96.2559 406.987 95.2852 cv
406.767 94.9473 406.509 94.627 406.24 94.3223 cv
408.884 93.0859 411.161 91.6768 413.094 90.2383 cv
413.309 90.3887 413.554 90.5879 413.819 90.832 cv
414.22 91.2109 414.644 91.6406 415.049 92.1094 cv
415.463 92.5703 415.869 93.0645 416.272 93.5781 cv
416.667 94.1035 417.076 94.6309 417.45 95.2617 cv
417.551 94.4941 417.483 93.6914 417.329 92.9395 cv
417.18 92.1797 416.942 91.4531 416.651 90.75 cv
416.349 90.0527 415.993 89.377 415.525 88.7559 cv
415.453 88.6621 415.372 88.5664 415.292 88.4727 cv
418.71 85.5137 420.747 82.6846 421.656 81.2539 cv
422.012 80.6934 422.277 80.4355 422.428 80.3203 cv
422.695 81.0078 422.907 83.3301 421.763 87.3809 cv
cp
423.565 77.5303 mo
422.978 77.166 421.417 76.627 419.623 79.4551 cv
418.203 81.6895 410.228 92.9453 392.56 95.1123 cv
385.094 96.0293 378.227 92.6084 374.619 86.1914 cv
371.884 81.3281 371.623 75.7275 373.901 70.8262 cv
375.719 66.917 378.754 64.9121 382.23 65.3408 cv
383.76 65.5273 385.222 66.167 386.492 67.1279 cv
386.581 67.2129 386.67 67.291 386.779 67.3457 cv
388.474 68.7266 389.788 70.7002 390.392 72.959 cv
389.958 73.543 389.586 74.1787 389.302 74.8545 cv
391.378 72.8789 393.792 72.0742 396.169 71.96 cv
397.365 71.9082 398.555 72.0215 399.746 72.2129 cv
400.939 72.3867 402.122 72.6855 403.353 72.916 cv
403.353 72.917 li
404.176 73.3623 li
404.793 72.0781 li
405.399 70.8184 406.025 69.6543 406.808 68.624 cv
407.583 67.5918 408.493 66.6875 409.518 65.9248 cv
410.546 65.1641 411.694 64.5742 412.917 64.1543 cv
414.145 63.7441 415.438 63.5098 416.828 63.6045 cv
415.899 62.9082 414.796 62.543 413.668 62.4063 cv
413.888 56.4805 411.565 47.2842 405.783 40.4063 cv
401.742 35.5996 394.378 30.0879 382.224 31.1084 cv
352.651 33.6025 345.531 62.1514 345.898 76.8984 cv
346.379 96.1934 357.024 118.609 385.407 118.607 cv
385.579 118.607 385.752 118.605 385.925 118.604 cv
411.837 118.357 421.011 99.5293 424.173 88.3281 cv
425.718 82.8555 425.486 78.7188 423.565 77.5303 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
274.358 168.915 mo
272.647 171.781 272.067 176.04 273.747 179.627 cv
262.737 194.147 240.032 207.231 222.636 212.391 cv
222.636 212.391 215.239 218.596 208.299 217.665 cv
199.552 209.113 204.658 189.255 210.713 186.159 cv
240.733 186.463 256.249 170.729 264.09 162.563 cv
265.366 165.665 268.774 168.695 274.358 168.915 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
222.636 212.391 mo
222.636 212.391 215.239 218.596 208.299 217.665 cv
199.552 209.113 204.658 189.255 210.713 186.159 cv
215.466 186.205 219.852 185.85 223.907 185.193 cv
217.771 196.804 219.631 206.976 222.636 212.391 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
222.209 210.947 mo
221.911 211.035 li
221.671 211.236 li
221.604 211.293 215.07 216.708 208.997 216.229 cv
204.338 211.26 204.966 203.202 205.466 199.91 cv
206.425 193.594 209.023 189.003 211.106 187.657 cv
240.154 187.814 255.961 173.095 264.101 164.726 cv
264.46 165.396 264.892 166.035 265.402 166.61 cv
266.494 167.877 267.917 168.865 269.458 169.515 cv
270.265 169.85 271.103 170.085 271.952 170.231 cv
271.63 171.061 271.413 171.926 271.293 172.798 cv
271.072 174.446 271.234 176.142 271.728 177.72 cv
271.872 178.188 272.057 178.639 272.264 179.08 cv
261.142 193.452 238.455 206.137 222.209 210.947 cv
cp
275.447 180.955 mo
274.792 179.746 274.423 178.455 274.283 177.16 cv
274.145 175.862 274.258 174.562 274.499 173.306 cv
274.739 172.045 275.156 170.84 275.646 169.679 cv
276.661 167.272 li
274.416 167.414 li
274.414 167.413 li
273.076 167.258 271.786 167.018 270.558 166.612 cv
269.328 166.211 268.168 165.622 267.128 164.825 cv
266.103 164.016 265.205 162.994 264.588 161.776 cv
263.992 160.567 263.602 159.146 263.986 157.673 cv
263.188 158.696 262.945 160.11 263.077 161.469 cv
255.566 169.277 240.161 184.953 210.727 184.654 cv
210.358 184.65 li
210.03 184.818 li
206.589 186.577 203.563 192.462 202.5 199.46 cv
201.271 207.556 203.003 214.582 207.254 218.735 cv
207.61 219.083 li
208.103 219.149 li
214.948 220.065 221.929 214.865 223.349 213.737 cv
240.138 208.701 262.305 196.286 274.018 181.688 cv
274.081 181.756 274.135 181.832 274.2 181.897 cv
275.329 183.039 276.711 183.836 278.143 184.289 cv
277.02 183.283 276.093 182.166 275.447 180.955 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
400.535 168.223 mo
400.535 168.223 409.417 165.497 415.186 168.088 cv
418.212 178.578 406.525 193.331 403.726 193.922 cv
387.518 194.078 354.664 181.771 335.224 169.699 cv
336.446 167.248 336.933 164.164 335.648 160.835 cv
338.069 160.494 341.987 157.875 343.285 153.852 cv
369.726 164.429 385.068 166.764 400.535 168.223 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
400.535 168.223 mo
400.535 168.223 409.417 165.497 415.186 168.088 cv
418.212 178.578 406.525 193.331 403.726 193.922 cv
399.871 193.962 395.066 193.291 389.736 192.084 cv
389.832 191.669 li
397.862 184.788 401.94 172.233 400.535 168.223 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
415.186 168.088 mo
409.417 165.497 400.535 168.223 400.535 168.223 cv
385.068 166.764 369.726 164.429 343.285 153.852 cv
342.596 155.985 341.171 157.724 339.624 158.937 cv
339.774 159.225 340.148 159.457 340.148 159.457 cv
366.012 169.922 380.997 172.287 396.098 173.8 cv
396.098 173.8 404.75 171.194 410.395 173.753 cv
412.26 180.093 408.636 187.988 404.956 193.221 cv
408.938 190.106 417.877 177.416 415.186 168.088 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
403.492 192.423 mo
387.111 192.477 355.526 180.284 336.903 168.966 cv
337.455 167.771 337.808 166.463 337.9 165.115 cv
337.968 164.036 337.846 162.949 337.581 161.906 cv
338.656 161.518 339.577 160.927 340.434 160.264 cv
341.698 159.255 342.746 157.984 343.484 156.543 cv
343.626 156.268 343.742 155.98 343.857 155.692 cv
370.409 166.203 385.772 168.338 400.389 169.716 cv
400.685 169.743 li
400.969 169.657 li
401.049 169.632 408.706 167.324 413.915 169.192 cv
415.943 178.54 405.755 191.442 403.492 192.423 cv
cp
415.795 166.719 mo
410.129 164.174 402.053 166.23 400.385 166.702 cv
385.995 165.337 370.801 163.177 344.508 152.724 cv
344.521 152.445 344.54 152.166 344.525 151.891 cv
344.443 150.309 343.917 148.813 343.055 147.61 cv
343.207 149.083 343.167 150.479 342.854 151.757 cv
342.547 153.033 341.98 154.18 341.24 155.192 cv
340.497 156.203 339.568 157.072 338.558 157.801 cv
337.559 158.514 336.393 159.107 335.432 159.349 cv
333.729 159.776 li
334.245 161.374 li
334.633 162.583 334.866 163.798 334.896 165.038 cv
334.938 166.279 334.738 167.541 334.341 168.786 cv
333.928 170.025 333.304 171.234 332.483 172.334 cv
331.65 173.414 330.677 174.472 329.334 175.074 cv
330.834 175.021 332.268 174.253 333.477 173.322 cv
334.149 172.796 334.761 172.183 335.312 171.51 cv
354.392 183.1 386.93 195.589 403.736 195.422 cv
404.03 195.389 li
405.08 195.169 406.459 194.058 407.886 192.507 cv
409.477 190.778 411.125 188.506 412.442 186.316 cv
414.855 182.302 418.608 174.541 416.623 167.671 cv
416.43 167.003 li
415.795 166.719 li
cp
.75021 .679683 .670222 .90164 cmyk
f
240.333 126.604 mo
242.216 120.484 239.667 105.271 230.167 93.2715 cv
224.64 86.291 219.5 90.9375 221.333 101.104 cv
212.833 89.9375 204.712 85.0977 196.833 87.2715 cv
187.167 89.9375 190.833 105.604 199.833 113.104 cv
192.833 113.604 188.51 117.435 192.333 121.604 cv
197.833 127.604 209.833 125.604 213.333 125.604 cv
207.833 129.104 206.5 135.938 214.5 135.938 cv
220.09 135.938 238.333 133.104 240.333 126.604 cv
cp
.795712 .70428 .552972 .608392 cmyk
f
234.848 100.375 mo
240.478 110.726 241.858 121.646 240.329 126.605 cv
238.329 133.105 220.088 135.936 214.499 135.936 cv
206.499 135.936 207.829 129.105 213.329 125.605 cv
209.829 125.605 197.829 127.605 192.329 121.605 cv
188.508 117.436 192.829 113.605 199.829 113.105 cv
191.558 106.215 187.798 92.4355 194.728 88.1758 cv
191.818 92.5254 196.388 103.676 211.098 109.745 cv
201.808 110.516 205.938 117.485 213.678 118.775 cv
218.818 119.635 225.088 118.375 229.159 115.936 cv
232.749 113.775 234.798 109.146 234.848 100.375 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
230.167 93.2715 mo
224.64 86.291 219.5 90.9375 221.333 101.104 cv
212.833 89.9375 204.712 85.0977 196.833 87.2715 cv
188.974 89.4385 189.928 100.198 195.395 108.177 cv
193.38 102.86 192.945 96.1436 197.438 94.7461 cv
204.424 92.5723 218.154 101.724 225.69 112.891 cv
224.065 102.724 226.291 95.7432 231.19 102.724 cv
236.969 110.956 239.466 120.409 239.926 127.51 cv
240.093 127.215 240.237 126.916 240.333 126.604 cv
242.216 120.484 239.667 105.271 230.167 93.2715 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
213.333 124.104 mo
218.484 124.104 li
214.138 126.87 li
211.283 128.688 210.011 131.268 210.432 132.713 cv
210.87 134.214 213.168 134.438 214.5 134.438 cv
220.987 134.438 237.341 131.227 238.899 126.164 cv
240.661 120.44 238.145 105.766 228.99 94.2021 cv
227.6 92.4473 226.174 91.4395 225.079 91.4395 cv
224.569 91.4395 224.128 91.6699 223.733 92.1426 cv
222.742 93.3281 221.979 96.2354 222.809 100.838 cv
223.916 106.974 li
220.139 102.014 li
213.194 92.8887 206.601 88.2637 200.542 88.2637 cv
199.437 88.2637 198.323 88.416 197.232 88.7168 cv
194.863 89.3711 193.386 90.9795 192.841 93.5 cv
191.648 99.0254 195.214 107.304 200.793 111.952 cv
203.653 114.336 li
199.94 114.601 li
195.622 114.909 193.073 116.511 192.533 117.869 cv
192.213 118.671 192.518 119.587 193.439 120.591 cv
195.803 123.17 199.917 124.424 206.013 124.424 cv
207.861 124.424 209.583 124.311 210.965 124.221 cv
211.948 124.156 212.724 124.104 213.333 124.104 cv
cp
214.5 137.438 mo
209.439 137.438 207.975 135.004 207.552 133.553 cv
206.988 131.613 207.64 129.348 209.196 127.334 cv
208.215 127.385 207.143 127.424 206.013 127.424 cv
199.028 127.424 194.192 125.853 191.227 122.618 cv
188.914 120.094 189.305 117.863 189.746 116.76 cv
190.62 114.563 193.134 112.881 196.584 112.074 cv
191.52 106.581 188.658 98.6582 189.91 92.8662 cv
190.686 89.2725 193.002 86.7715 196.434 85.8252 cv
197.786 85.4521 199.167 85.2637 200.542 85.2637 cv
206.728 85.2637 212.949 88.9248 219.471 96.4297 cv
219.575 93.8027 220.241 91.6426 221.431 90.2188 cv
222.404 89.0547 223.666 88.4395 225.079 88.4395 cv
226.528 88.4395 228.791 89.1162 231.342 92.3398 cv
241.258 104.865 243.767 120.543 241.766 127.046 cv
239.369 134.84 219.596 137.438 214.5 137.438 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
270.145 101.831 mo
264.167 96.6045 252.5 97.6045 253.395 106.081 cv
245.645 103.831 229.5 112.271 236.645 125.081 cv
224.833 127.604 217.833 141.271 228.395 153.831 cv
221.833 156.604 222.5 168.271 232.895 172.331 cv
230.167 181.938 239.167 187.604 249.395 187.331 cv
246.5 194.271 256.895 200.831 266.395 198.331 cv
266.5 207.271 285.395 205.581 290.145 201.081 cv
292.167 209.271 304.833 208.271 310.645 201.331 cv
314.833 206.271 326.5 204.938 332.645 195.831 cv
337.833 200.938 350.5 196.271 352.645 186.331 cv
362.833 190.271 374.833 172.271 364.645 154.831 cv
370.395 146.581 367.5 132.604 359.145 132.831 cv
359.833 114.271 350.5 108.938 342.395 113.081 cv
339.5 102.271 327.167 98.2715 323.145 106.331 cv
319.5 96.9375 308.167 94.6045 305.395 101.081 cv
300.167 92.6045 289.167 91.9375 287.145 99.0811 cv
280.167 93.6045 271.833 95.6045 270.145 101.831 cv
cp
.795712 .70428 .552972 .608392 cmyk
f
349.898 112.065 mo
355.297 113.476 359.618 119.985 359.148 132.836 cv
367.499 132.605 370.398 146.585 364.648 154.835 cv
374.829 172.275 362.829 190.275 352.648 186.335 cv
350.499 196.275 337.829 200.936 332.648 195.835 cv
326.499 204.936 314.829 206.275 310.648 201.335 cv
304.829 208.275 292.168 209.275 290.148 201.085 cv
285.398 205.585 266.499 207.275 266.398 198.335 cv
256.898 200.835 246.499 194.275 249.398 187.335 cv
239.168 187.605 230.168 181.936 232.898 172.335 cv
222.499 168.275 221.829 156.605 228.398 153.835 cv
217.829 141.275 224.829 127.605 236.648 125.086 cv
232.268 117.226 236.638 111.016 242.468 107.916 cv
238.148 113.135 236.499 121.855 246.648 128.586 cv
237.409 133.995 245.918 147.405 258.789 145.515 cv
252.108 151.275 264.648 156.835 272.048 153.436 cv
271.199 160.565 286.148 160.585 290.558 155.415 cv
290.039 162.886 303.898 160.835 306.548 155.595 cv
309.638 163.146 325.648 157.085 326.398 149.835 cv
331.568 156.695 346.148 146.835 343.148 136.836 cv
356.068 141.735 361.148 118.836 349.898 112.086 cv
349.898 112.065 li
cp
.78027 .700557 .606195 .759976 cmyk
f
364.645 154.831 mo
370.395 146.581 367.5 132.604 359.145 132.831 cv
359.833 114.271 350.5 108.938 342.395 113.081 cv
339.5 102.271 327.167 98.2715 323.145 106.331 cv
319.5 96.9375 308.167 94.6045 305.395 101.081 cv
300.167 92.6045 289.167 91.9375 287.145 99.0811 cv
280.167 93.6045 271.833 95.6045 270.145 101.831 cv
264.167 96.6045 252.5 97.6045 253.395 106.081 cv
245.645 103.831 229.5 112.271 236.645 125.081 cv
234.69 112.891 247.917 110.88 255.317 112.977 cv
254.461 105.079 265.6 104.147 271.309 109.017 cv
272.92 103.216 280.876 101.353 287.54 106.455 cv
289.469 99.7998 299.972 100.422 304.964 108.318 cv
307.61 102.284 318.431 104.458 321.912 113.209 cv
325.75 105.701 337.526 109.427 340.291 119.497 cv
348.029 115.637 356.939 120.606 356.283 137.896 cv
364.259 137.686 366.2 147.672 364.645 154.831 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
290.984 198.22 mo
291.602 200.722 li
292.64 204.929 296.888 205.384 298.667 205.384 cv
302.693 205.384 306.944 203.415 309.496 200.368 cv
310.638 199.003 li
311.79 200.361 li
313.03 201.824 315.245 202.663 317.868 202.663 cv
321.908 202.663 327.584 200.647 331.402 194.992 cv
332.411 193.496 li
333.698 194.763 li
335.09 196.134 336.995 196.421 338.348 196.421 cv
343.438 196.421 349.792 192.442 351.178 186.015 cv
351.549 184.299 li
353.186 184.933 li
357.031 186.422 361.508 184.009 364.335 179.082 cv
367.387 173.765 368.731 164.8 363.35 155.588 cv
362.866 154.76 li
363.415 153.974 li
366.963 148.88 366.7 141.955 364.648 138.025 cv
363.768 136.339 362.133 134.328 359.345 134.328 cv
357.586 134.374 li
357.646 132.775 li
357.932 125.033 356.384 118.998 353.286 115.782 cv
350.612 113.008 346.786 112.521 343.078 114.416 cv
341.426 115.262 li
340.946 113.469 li
339.223 107.039 333.999 103.57 329.957 103.57 cv
328.243 103.57 325.902 104.165 324.488 107 cv
322.974 110.035 li
321.747 106.874 li
319.625 101.408 314.904 98.918 311.415 98.918 cv
310.122 98.918 307.799 99.2754 306.774 101.671 cv
305.637 104.33 li
304.119 101.869 li
301.8 98.1094 297.883 95.6816 294.141 95.6816 cv
292.795 95.6816 289.561 96.0527 288.588 99.4893 cv
287.979 101.643 li
286.219 100.262 li
283.86 98.4102 281.157 97.3906 278.607 97.3906 cv
275.088 97.3906 272.401 99.2422 271.593 102.224 cv
270.965 104.54 li
269.158 102.961 li
267.129 101.187 264.204 100.128 261.332 100.128 cv
259.018 100.128 257.056 100.834 255.949 102.064 cv
255.076 103.034 254.719 104.332 254.887 105.924 cv
255.122 108.145 li
252.977 107.521 li
252.284 107.32 251.487 107.219 250.61 107.219 cv
246.268 107.219 240.227 109.856 237.634 114.271 cv
235.831 117.344 235.938 120.734 237.956 124.351 cv
238.945 126.123 li
236.958 126.548 li
231.562 127.701 227.162 131.473 225.473 136.394 cv
223.645 141.721 225.09 147.571 229.543 152.866 cv
230.852 154.421 li
228.979 155.213 li
226.849 156.112 225.6 158.272 225.638 160.989 cv
225.682 164.188 227.752 168.712 233.441 170.934 cv
234.71 171.43 li
234.338 172.741 li
233.475 175.78 233.884 178.442 235.554 180.653 cv
238.065 183.978 243.399 185.98 249.355 185.831 cv
251.672 185.77 li
250.78 187.909 li
250.131 189.462 250.314 191.017 251.322 192.528 cv
253.223 195.382 257.675 197.374 262.149 197.374 cv
263.469 197.374 264.769 197.208 266.013 196.88 cv
267.873 196.392 li
267.895 198.313 li
267.949 202.897 275.007 203.254 277.168 203.254 cv
282.016 203.254 287.151 201.852 289.114 199.992 cv
290.984 198.22 li
cp
298.667 208.384 mo
294.343 208.384 291.029 206.572 289.429 203.44 cv
286.478 205.146 281.807 206.254 277.168 206.254 cv
270.508 206.254 266.165 204 265.132 200.132 cv
264.154 200.293 263.156 200.374 262.149 200.374 cv
256.643 200.374 251.29 197.89 248.826 194.192 cv
247.698 192.501 247.237 190.646 247.46 188.813 cv
241.279 188.54 235.993 186.21 233.161 182.462 cv
231.17 179.827 230.484 176.651 231.145 173.209 cv
224.977 170.286 222.692 164.917 222.638 161.03 cv
222.594 157.835 223.902 155.061 226.143 153.4 cv
221.865 147.632 220.617 141.305 222.635 135.42 cv
224.466 130.084 228.921 125.879 234.495 124.102 cv
232.395 119.168 233.577 115.257 235.047 112.752 cv
238.302 107.209 245.495 104.219 250.61 104.219 cv
251.05 104.219 251.478 104.238 251.893 104.279 cv
252.058 102.652 252.675 101.217 253.718 100.058 cv
255.418 98.168 258.123 97.1279 261.332 97.1279 cv
264.194 97.1279 267.111 97.9834 269.475 99.4707 cv
271.152 96.3281 274.54 94.3906 278.607 94.3906 cv
281.252 94.3906 283.994 95.2324 286.488 96.7891 cv
287.962 94.2129 290.743 92.6816 294.141 92.6816 cv
298.29 92.6816 302.416 94.8301 305.333 98.4102 cv
306.777 96.8047 308.893 95.918 311.415 95.918 cv
315.321 95.918 320.398 98.2676 323.378 103.367 cv
325.052 101.564 327.345 100.57 329.957 100.57 cv
334.865 100.57 340.791 104.158 343.321 111.039 cv
344.727 110.521 346.147 110.26 347.557 110.26 cv
350.549 110.26 353.277 111.449 355.446 113.701 cv
357.924 116.272 360.78 121.416 360.678 131.432 cv
363.442 131.869 365.763 133.679 367.307 136.637 cv
370.104 141.996 369.694 149.513 366.4 154.888 cv
371.885 164.923 370.317 174.688 366.937 180.575 cv
364.133 185.462 359.878 188.38 355.557 188.38 cv
354.929 188.38 354.306 188.317 353.692 188.194 cv
351.377 195.255 344.317 199.421 338.348 199.421 cv
336.276 199.421 334.438 198.925 332.94 197.972 cv
328.501 203.613 322.35 205.663 317.868 205.663 cv
315.007 205.663 312.525 204.892 310.707 203.461 cv
307.572 206.488 303.01 208.384 298.667 208.384 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
451.118 149.565 mo
450.968 154.785 444.718 159.806 440.989 161.046 cv
438.518 161.396 432.438 160.025 427.598 152.386 cv
422.368 161.195 427.598 166.415 430.829 168.785 cv
432.168 170.546 420.188 180.186 412.168 175.775 cv
401.829 170.085 400.388 168.995 389.829 163.936 cv
381.829 160.105 378.329 154.936 376.999 148.275 cv
375.458 140.575 379.648 122.676 397.829 132.885 cv
398.329 128.896 398.329 123.916 395.588 118.436 cv
405.398 118.086 408.348 109.465 407.788 102.495 cv
413.768 106.735 424.448 103.805 428.208 101.006 cv
430.768 108.285 434.888 111.506 439.448 111.795 cv
439.398 112.586 li
440.409 117.436 441.409 121.676 441.159 125.905 cv
437.168 130.885 434.768 134.916 438.508 139.525 cv
442.398 144.335 450.368 147.325 451.118 149.565 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
438.508 139.525 mo
434.768 134.916 437.168 130.885 441.159 125.905 cv
441.409 121.676 440.409 117.436 439.398 112.586 cv
439.448 111.795 li
437.359 111.662 435.364 110.905 433.567 109.434 cv
436.19 114.558 437.617 121.002 437.357 125.391 cv
434.357 131.078 433.357 134.953 434.107 137.328 cv
436.357 143.641 445.232 145.891 451.043 150.309 cv
451.078 150.062 451.111 149.814 451.118 149.565 cv
450.368 147.325 442.398 144.335 438.508 139.525 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
428.732 118.453 mo
430.732 122.391 432.331 127.887 433.169 127.328 cv
433.732 126.953 433.958 123.631 433.857 123.328 cv
432.982 120.703 427.674 116.371 428.732 118.453 cv
cp
f
453.108 83.5752 mo
466.058 69.875 465.499 93.2256 452.608 105.735 cv
448.489 109.735 443.778 112.086 439.448 111.795 cv
434.888 111.506 430.768 108.285 428.208 101.006 cv
424.448 103.805 413.768 106.735 407.788 102.495 cv
408.348 109.465 405.398 118.086 395.588 118.436 cv
398.329 123.916 398.329 128.896 397.829 132.885 cv
379.648 122.676 375.458 140.575 376.999 148.275 cv
378.329 154.936 381.829 160.105 389.829 163.936 cv
374.168 164.605 360.829 166.775 359.829 155.775 cv
349.898 158.505 333.829 147.355 346.329 140.355 cv
329.579 133.355 329.728 123.075 337.428 117.855 cv
328.239 109.416 327.829 98.3555 340.409 94.0156 cv
332.579 87.6055 338.079 77.8555 351.088 78.6152 cv
348.079 68.1055 355.329 63.1055 370.468 66.4355 cv
367.079 57.1055 382.829 54.3555 390.829 63.2051 cv
391.829 54.3555 404.829 55.3555 410.208 64.2051 cv
412.579 57.8555 422.228 60.416 424.368 69.1758 cv
427.958 55.1855 437.918 64.6455 439.418 74.3555 cv
446.638 58.666 455.098 71.6152 453.108 83.5752 cv
cp
.795712 .70428 .552972 .608392 cmyk
f
458.108 98.6455 mo
456.638 101.166 454.797 103.605 452.608 105.735 cv
448.489 109.735 443.778 112.086 439.448 111.795 cv
434.888 111.506 430.768 108.285 428.208 101.006 cv
424.448 103.805 413.768 106.735 407.788 102.495 cv
408.348 109.465 405.398 118.086 395.588 118.436 cv
398.329 123.916 398.329 128.896 397.829 132.885 cv
379.648 122.676 375.458 140.575 376.999 148.275 cv
378.329 154.936 381.829 160.105 389.829 163.936 cv
374.168 164.605 360.829 166.775 359.829 155.775 cv
349.898 158.505 333.829 147.355 346.329 140.355 cv
329.579 133.355 329.728 123.075 337.428 117.855 cv
328.239 109.416 327.829 98.3555 340.409 94.0156 cv
329.898 99.0859 339.818 111.596 348.418 109.655 cv
347.888 116.686 360.348 120.176 365.098 113.176 cv
368.598 119.676 382.088 119.575 384.758 108.075 cv
393.918 111.745 404.418 100.006 401.608 92.1055 cv
406.108 96.1055 426.008 98.0752 432.848 89.8252 cv
435.108 101.285 446.579 105.325 458.108 98.6455 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
453.108 83.5752 mo
455.098 71.6152 446.638 58.666 439.418 74.3555 cv
437.918 64.6455 427.958 55.1855 424.368 69.1758 cv
422.228 60.416 412.579 57.8555 410.208 64.2051 cv
404.829 55.3555 391.829 54.3555 390.829 63.2051 cv
382.829 54.3555 367.079 57.1055 370.468 66.4355 cv
371.357 62.7236 380.815 57.2969 392.19 72.3906 cv
393.174 65.4121 402.023 58.7236 409.311 74.6064 cv
414.524 61.8906 422.083 73.3154 424.19 80.2236 cv
429.357 63.3906 436.592 74.9531 438.07 82.6113 cv
448.523 67.2236 450.442 82.833 448.482 92.2656 cv
461.231 81.46 454.357 103.266 444.173 107.359 cv
441.475 108.443 431.982 110.141 428.208 101.006 cv
431.732 111.516 438.581 111.74 439.448 111.795 cv
443.778 112.086 448.489 109.735 452.608 105.735 cv
465.499 93.2256 466.058 69.875 453.108 83.5752 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
451.118 149.565 mo
451.038 152.255 449.348 154.886 447.218 156.976 cv
445.648 155.695 446.579 152.966 445.288 151.226 cv
443.608 148.976 444.409 146.235 445.208 145.005 cv
448.108 146.876 450.708 148.335 451.118 149.565 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
398.999 159.436 mo
407.829 162.936 410.648 176.995 422.898 175.245 cv
423.018 175.546 li
419.547 177.005 415.518 177.615 412.168 175.775 cv
401.829 170.085 400.388 168.995 389.829 163.936 cv
381.829 160.105 378.329 154.936 376.999 148.275 cv
375.928 142.936 377.618 132.676 384.838 130.315 cv
376.978 137.676 384.288 153.605 398.999 159.436 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
361.16 153.854 mo
361.322 155.64 li
362.042 163.547 370.16 163.49 384.441 162.706 cv
384.522 162.702 384.602 162.698 384.684 162.693 cv
379.684 159.2 376.735 154.62 375.528 148.569 cv
374.519 143.528 375.67 134.563 381.385 130.41 cv
384.151 128.401 388.961 126.912 396.542 130.526 cv
396.713 127.445 396.414 123.441 394.247 119.106 cv
393.203 117.02 li
395.534 116.937 li
398.776 116.82 401.36 115.706 403.215 113.623 cv
405.491 111.067 406.641 106.952 406.293 102.615 cv
406.036 99.4141 li
408.656 101.271 li
413.874 104.971 423.84 102.387 427.312 99.8027 cv
428.947 98.585 li
429.624 100.508 li
431.779 106.637 435.209 110.023 439.543 110.299 cv
443.29 110.557 447.559 108.547 451.563 104.659 cv
458.94 97.5 461.968 86.6494 460.813 82.3242 cv
460.662 81.7617 460.374 81.0625 459.856 80.9307 cv
459.563 80.8555 457.909 80.6807 454.198 84.6055 cv
450.821 88.1777 li
451.628 83.3291 li
452.792 76.3428 450.159 69.6211 447.206 68.7129 cv
445.233 68.1104 442.893 70.3936 440.781 74.9824 cv
438.697 79.5117 li
437.936 74.584 li
437.102 69.1934 433.282 63.7539 430.221 63.6035 cv
427.754 63.4961 426.405 67.2754 425.821 69.5488 cv
424.333 75.3496 li
422.911 69.5313 li
421.787 64.9297 418.336 62.3525 415.51 62.1855 cv
414.436 62.127 412.495 62.3691 411.614 64.7305 cv
410.532 67.627 li
408.926 64.9844 li
405.792 59.8281 400.163 57.9121 396.464 58.7266 cv
394.77 59.0996 392.676 60.209 392.319 63.374 cv
391.946 66.6777 li
389.715 64.2109 li
385.102 59.1074 377.526 58.1729 373.612 60.5273 cv
371.6 61.7383 371.017 63.5537 371.877 65.9238 cv
372.809 68.4863 li
370.146 67.9004 li
362.14 66.1406 356.256 66.7412 353.577 69.5938 cv
351.792 71.4951 351.438 74.3906 352.53 78.2021 cv
353.112 80.2363 li
351 80.1133 li
343.607 79.6768 339.731 82.7363 338.658 85.4844 cv
337.688 87.9688 338.672 90.6553 341.358 92.8545 cv
343.438 94.5566 li
340.897 95.4336 li
336.081 97.0957 333.145 99.8438 332.408 103.381 cv
331.551 107.495 333.807 112.493 338.443 116.75 cv
339.839 118.033 li
338.27 119.098 li
335.231 121.157 333.655 123.994 333.944 126.881 cv
334.394 131.373 338.998 135.666 346.907 138.972 cv
349.749 140.159 li
347.061 141.664 li
343.817 143.481 342.645 145.556 343.578 147.829 cv
345.288 151.999 353.434 155.977 359.43 154.329 cv
361.16 153.854 li
cp
390.502 162.595 mo
398.434 166.396 401.304 168.002 406.51 170.915 cv
408.266 171.897 410.299 173.034 412.891 174.462 cv
416.022 176.183 419.744 175.279 422.315 174.22 cv
425.868 172.754 428.415 170.509 429.202 169.427 cv
423.317 164.694 422.282 158.401 426.308 151.62 cv
427.557 149.517 li
428.866 151.583 li
433.369 158.691 438.774 159.762 440.651 159.575 cv
444.094 158.362 449.198 154.017 449.596 149.884 cv
449.092 149.241 447.171 148.028 445.737 147.123 cv
442.995 145.393 439.583 143.239 437.342 140.469 cv
432.917 135.014 435.842 130.195 439.683 125.35 cv
439.811 121.836 439.057 118.257 438.192 114.14 cv
437.979 113.125 li
434.522 112.499 430.358 110.137 427.458 103.23 cv
423.153 105.511 415.223 107.381 409.34 105.026 cv
409.178 109.202 407.817 112.967 405.456 115.619 cv
403.479 117.838 400.914 119.214 397.81 119.723 cv
399.96 125.096 399.721 129.844 399.317 133.072 cv
399.04 135.285 li
397.094 134.193 li
391.176 130.871 386.485 130.415 383.148 132.838 cv
378.756 136.027 377.609 143.683 378.469 147.981 cv
379.819 154.742 383.514 159.242 390.448 162.569 cv
390.466 162.577 390.485 162.587 390.502 162.595 cv
cp
416.815 178.396 mo
414.952 178.396 413.119 178.01 411.446 177.09 cv
408.844 175.659 406.807 174.519 405.045 173.532 cv
399.961 170.688 397.128 169.103 389.518 165.45 cv
387.848 165.524 386.208 165.614 384.605 165.702 cv
371.756 166.407 360.569 167.019 358.578 157.557 cv
351.739 158.489 343.052 154.452 340.802 148.968 cv
340.178 147.447 339.362 143.903 343.275 140.624 cv
335.813 136.995 331.469 132.279 330.958 127.18 cv
330.608 123.684 332.116 120.313 335.137 117.719 cv
330.526 112.957 328.469 107.582 329.471 102.77 cv
330.071 99.8857 332.017 96.0791 337.712 93.4756 cv
335.366 90.7246 334.668 87.4531 335.864 84.3936 cv
337.584 79.9834 342.706 77.2227 349.186 77.0801 cv
348.286 72.1641 349.827 69.2041 351.391 67.5391 cv
354.58 64.1445 360.475 63.1133 368.524 64.5215 cv
368.329 61.8184 369.567 59.4609 372.065 57.957 cv
376.551 55.2588 384.369 55.7588 390.03 60.3818 cv
391.053 58.0254 393.067 56.4043 395.819 55.7969 cv
400.678 54.7266 406.451 57.1113 410.084 61.4639 cv
411.429 59.8809 413.405 59.0557 415.686 59.1914 cv
418.616 59.3633 422.131 61.2451 424.296 64.9727 cv
426.237 61.0986 428.801 60.5332 430.368 60.6074 cv
434.438 60.8066 438.108 65.2852 439.917 70.3086 cv
443.163 65.3379 446.328 65.3047 448.086 65.8457 cv
452.118 67.084 454.905 73.1836 454.909 79.8926 cv
457.073 78.2412 458.978 77.6133 460.592 78.0234 cv
461.463 78.2432 463.028 78.9951 463.71 81.5508 cv
465.266 87.3711 461.518 99.1777 453.653 106.813 cv
449.604 110.743 445.202 112.997 441.078 113.287 cv
441.127 113.521 li
442.037 117.846 442.896 121.93 442.656 125.994 cv
442.627 126.471 li
442.329 126.844 li
438.229 131.96 436.786 135.021 439.673 138.58 cv
441.603 140.967 444.784 142.974 447.338 144.587 cv
450.057 146.302 452.023 147.542 452.541 149.089 cv
452.625 149.342 li
452.618 149.608 li
452.441 155.761 445.37 161.169 441.461 162.469 cv
441.199 162.53 li
438.616 162.894 432.791 161.743 427.798 155.286 cv
425.754 160.114 427.047 164.151 431.715 167.575 cv
431.89 167.704 li
432.022 167.876 li
432.555 168.577 432.84 169.817 431.172 171.753 cv
428.607 174.728 422.563 178.396 416.815 178.396 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
413.395 119.979 mo
416.145 118.667 424.895 117.917 425.583 118.792 cv
428.249 122.185 430.458 127.229 432.458 132.604 cv
433.395 131.604 434.083 130.354 434.833 127.417 cv
434.708 131.792 433.083 134.354 431.694 136.117 cv
429.653 131.746 424.27 124.042 413.395 119.979 cv
cp
f
427.964 133.896 mo
426.955 137.964 423.021 140.698 419.177 140.006 cv
415.335 139.313 413.041 135.455 414.051 131.387 cv
415.061 127.32 418.995 124.586 422.837 125.279 cv
426.68 125.972 428.975 129.829 427.964 133.896 cv
cp
f
410.184 139.985 mo
413.95 135.682 421.884 137.161 423.767 144.692 cv
420.54 140.119 414.488 139.582 410.184 139.985 cv
cp
f
421.876 131.861 mo
420.196 133.281 417.985 133.692 416.932 132.781 cv
415.879 131.866 416.389 129.975 418.066 128.554 cv
419.745 127.133 421.958 126.722 423.009 127.635 cv
424.063 128.549 423.551 130.44 421.876 131.861 cv
cp
0 0 0 0 cmyk
f
413.616 142.529 mo
413.616 143.114 412.889 143.588 411.993 143.588 cv
411.095 143.588 410.369 143.114 410.369 142.529 cv
410.369 141.944 411.095 141.471 411.993 141.471 cv
412.889 141.471 413.616 141.944 413.616 142.529 cv
cp
f
448.341 149.381 mo
448.101 149.819 447.312 149.852 446.58 149.45 cv
445.846 149.049 445.447 148.368 445.687 147.929 cv
445.927 147.489 446.717 147.457 447.45 147.858 cv
448.182 148.259 448.582 148.94 448.341 149.381 cv
cp
f
405.329 80.3555 mo
408.329 76.3555 410.668 80.0957 408.079 87.8555 cv
405.079 96.8555 395.329 116.855 364.329 117.105 cv
327.308 117.405 318.999 90.8457 318.579 76.8555 cv
318.079 59.8555 328.579 34.8555 360.079 32.6055 cv
387.797 30.625 396.329 53.3555 395.579 62.8555 cv
395.648 63.3154 li
391.598 63.9551 387.198 66.5059 385.329 71.6055 cv
379.278 69.7148 374.368 70.3955 371.038 72.4756 cv
368.198 63.5654 354.648 59.5156 348.829 70.1055 cv
341.829 82.8555 354.098 98.4951 372.329 96.6055 cv
391.579 94.6055 401.778 85.0957 405.329 80.3555 cv
cp
.118532 .179629 .999206 0 cmyk
f
374.368 107.655 mo
394.428 104.735 405.268 91.4951 407.928 82.6953 cv
409.168 82.7949 li
409.079 84.1855 408.728 85.8848 408.079 87.8555 cv
405.079 96.8555 395.329 116.855 364.329 117.105 cv
327.308 117.405 318.999 90.8457 318.579 76.8555 cv
318.188 63.5156 324.568 45.2451 342.558 36.916 cv
321.378 51.3555 321.768 80.6953 330.909 92.9854 cv
342.308 108.275 361.478 109.535 374.368 107.655 cv
cp
.240848 .455299 1 .0437018 cmyk
f
385.329 71.6055 mo
379.278 69.7148 374.368 70.3955 371.038 72.4756 cv
368.198 63.5654 354.648 59.5156 348.829 70.1055 cv
343.308 80.1553 349.768 92.0059 361.688 95.6455 cv
331.239 92.7051 337.638 61.3154 353.698 56.2949 cv
372.968 50.2754 383.168 64.6855 385.329 71.6055 cv
cp
f
361.667 38.9375 mo
359.346 40.3457 360.333 49.4385 363.833 50.2715 cv
367.333 51.1045 374.833 44.2715 377.5 42.6045 cv
380.167 40.9375 366.333 36.1045 361.667 38.9375 cv
cp
0 0 0 0 cmyk
f
386 48.7715 mo
383.536 48.1143 377.5 52.7715 377.667 56.1045 cv
377.833 59.4375 387.5 61.4375 389.5 60.9375 cv
391.5 60.4375 388.5 49.4385 386 48.7715 cv
cp
f
346.667 41.1045 mo
342.833 41.9375 338.638 43.4453 337.167 47.2715 cv
336.333 49.4375 345.167 54.4375 346.667 50.4375 cv
348.909 44.457 349.131 40.5684 346.667 41.1045 cv
cp
f
404.25 86.0215 mo
402.498 87.7734 401.397 88.6582 401.75 89.2715 cv
404 93.1875 406 84.2715 404.25 86.0215 cv
cp
f
395.833 92.7295 mo
393.417 93.8545 391.333 94.7295 391.667 95.4375 cv
392.115 96.3916 395.916 96.3545 397.583 95.8545 cv
399.25 95.3545 397.225 92.0811 395.833 92.7295 cv
cp
f
384 97.9375 mo
382.508 98.3105 379.333 99.1045 380 99.6045 cv
380.667 100.104 384.999 100.605 385.833 100.271 cv
386.667 99.9375 385.667 97.5215 384 97.9375 cv
cp
f
406.66 87.3809 mo
403.179 97.8223 393.05 115.373 364.321 115.604 cv
323.317 115.925 320.274 83.3457 320.083 76.8105 cv
319.677 63.0576 327.54 36.4326 360.19 34.1006 cv
370.646 33.3516 379.455 36.2656 385.663 42.5195 cv
392.348 49.2559 394.353 58.0293 394.098 62.4805 cv
393.01 62.6377 391.932 62.9219 390.899 63.3525 cv
389.266 64.0283 387.751 65.0762 386.538 66.4199 cv
385.643 67.4063 384.933 68.5625 384.459 69.791 cv
383.356 69.4189 382.203 69.1777 381.03 69.0527 cv
379.392 68.8809 377.708 68.9795 376.081 69.3418 cv
374.661 69.6504 373.287 70.1934 372.053 70.9453 cv
371.101 68.7012 369.508 66.7285 367.521 65.2354 cv
367.79 63.3887 368.535 61.4521 369.385 59.627 cv
370.385 57.5244 371.656 55.5254 373.148 53.6992 cv
374.643 51.8711 376.4 50.2539 378.374 48.8887 cv
380.361 47.5449 382.596 46.5176 384.999 45.8281 cv
382.497 45.8643 379.967 46.4727 377.627 47.5488 cv
375.269 48.5996 373.126 50.1445 371.264 51.9609 cv
369.397 53.7793 367.816 55.8945 366.586 58.2197 cv
365.738 59.876 365.01 61.6338 364.661 63.5508 cv
363.284 62.9316 361.81 62.5137 360.29 62.3564 cv
359.212 62.2461 358.165 62.2656 357.155 62.4014 cv
356.566 60.7686 356.041 59.1182 355.592 57.4404 cv
355.083 55.4531 354.676 53.4346 354.454 51.3877 cv
353.973 47.291 354.221 43.1055 355.297 38.8857 cv
354.095 40.7012 353.182 42.7461 352.609 44.8955 cv
352.015 47.043 351.749 49.2852 351.725 51.5264 cv
351.72 53.7686 351.963 56.0137 352.464 58.1992 cv
352.846 59.9199 353.4 61.6055 354.114 63.2197 cv
351.741 64.2051 349.686 65.9492 348.124 68.373 cv
346.579 67.9473 345.048 67.3613 343.592 66.627 cv
341.836 65.7168 340.159 64.6309 338.656 63.3105 cv
337.144 62.002 335.805 60.4746 334.634 58.7852 cv
334.046 57.9424 333.511 57.0508 333.038 56.1191 cv
332.525 55.2012 332.109 54.2305 331.677 53.2461 cv
331.754 54.3184 331.958 55.377 332.204 56.4375 cv
332.483 57.4854 332.838 58.5215 333.267 59.5371 cv
334.136 61.5615 335.374 63.4531 336.886 65.1123 cv
338.407 66.7617 340.184 68.1992 342.163 69.291 cv
343.581 70.083 345.086 70.7344 346.672 71.1699 cv
345.576 73.8271 345.17 76.6484 345.448 79.4443 cv
343.997 79.8857 342.487 80.2695 340.95 80.5703 cv
339.108 80.9395 337.239 81.2285 335.362 81.4121 cv
333.484 81.5898 331.594 81.6426 329.72 81.4814 cv
327.867 81.2822 325.963 80.8906 324.413 79.6758 cv
325.588 81.291 327.566 82.1904 329.471 82.75 cv
331.409 83.3271 333.419 83.5586 335.417 83.6484 cv
337.417 83.7334 339.418 83.6406 341.407 83.3936 cv
342.946 83.1816 344.486 82.9111 346.013 82.4551 cv
346.534 84.3174 347.358 86.1367 348.496 87.8516 cv
349.027 88.6514 349.619 89.4033 350.248 90.1201 cv
349.366 91.2461 348.387 92.292 347.313 93.3008 cv
346.003 94.5137 344.591 95.6484 343.086 96.6621 cv
340.076 98.7031 336.724 100.279 332.959 101.111 cv
334.872 101.389 336.865 101.291 338.796 100.889 cv
340.735 100.5 342.618 99.8184 344.405 98.9414 cv
346.185 98.0508 347.875 96.9619 349.406 95.6504 cv
350.536 94.6875 351.611 93.582 352.497 92.3359 cv
354.716 94.2334 357.313 95.7217 360.174 96.7256 cv
360.225 98.0205 360.176 99.3379 360.081 100.68 cv
359.962 102.137 359.786 103.6 359.502 105.042 cv
359.218 106.482 358.854 107.911 358.331 109.291 cv
357.792 110.659 357.137 112.012 356.097 113.215 cv
357.569 112.593 358.837 111.426 359.793 110.1 cv
360.761 108.768 361.487 107.28 362.035 105.746 cv
362.58 104.209 362.969 102.622 363.172 101.004 cv
363.318 99.8945 363.375 98.7549 363.313 97.6084 cv
366.219 98.2432 369.316 98.4258 372.487 98.0967 cv
372.706 98.0742 372.915 98.0449 373.129 98.0205 cv
373.701 98.8672 374.156 99.7207 374.564 100.666 cv
375.021 101.762 375.383 102.938 375.645 104.166 cv
376.186 106.628 376.37 109.257 376.653 111.979 cv
377.659 109.434 378.191 106.705 378.113 103.873 cv
378.061 102.461 377.854 101.016 377.382 99.6172 cv
377.157 98.918 376.85 98.2188 376.48 97.5605 cv
379.554 97.0527 382.364 96.3594 384.922 95.541 cv
385.706 96.0488 386.346 96.5547 386.987 97.2051 cv
387.626 97.8662 388.219 98.625 388.743 99.4707 cv
389.807 101.158 390.611 103.123 391.491 105.178 cv
391.831 102.967 391.672 100.677 390.915 98.4531 cv
390.526 97.3486 389.981 96.2559 389.213 95.2852 cv
388.954 94.9473 388.649 94.627 388.331 94.3223 cv
391.454 93.0859 394.141 91.6768 396.424 90.2383 cv
396.678 90.3887 396.967 90.5879 397.28 90.832 cv
397.753 91.2109 398.254 91.6406 398.733 92.1094 cv
399.221 92.5703 399.7 93.0645 400.176 93.5781 cv
400.642 94.1035 401.125 94.6309 401.567 95.2617 cv
401.687 94.4941 401.606 93.6914 401.424 92.9395 cv
401.249 92.1797 400.967 91.4531 400.624 90.75 cv
400.267 90.0527 399.847 89.377 399.294 88.7559 cv
399.209 88.6621 399.114 88.5664 399.02 88.4727 cv
403.056 85.5137 405.459 82.6846 406.533 81.2539 cv
406.954 80.6934 407.266 80.4355 407.446 80.3203 cv
407.76 81.0078 408.01 83.3301 406.66 87.3809 cv
cp
408.788 77.5303 mo
408.094 77.166 406.252 76.627 404.132 79.4551 cv
402.457 81.6895 393.04 92.9453 372.178 95.1123 cv
363.364 96.0293 355.255 92.6084 350.995 86.1914 cv
347.766 81.3281 347.457 75.7275 350.147 70.8262 cv
352.293 66.917 355.877 64.9121 359.981 65.3408 cv
361.789 65.5273 363.514 66.167 365.013 67.1279 cv
365.119 67.2129 365.225 67.291 365.352 67.3457 cv
367.354 68.7266 368.905 70.7002 369.619 72.959 cv
369.107 73.543 368.667 74.1787 368.333 74.8545 cv
370.784 72.8789 373.633 72.0742 376.441 71.96 cv
377.852 71.9082 379.257 72.0215 380.663 72.2129 cv
382.072 72.3867 383.468 72.6855 384.922 72.916 cv
384.922 72.917 li
385.895 73.3623 li
386.624 72.0781 li
387.338 70.8184 388.077 69.6543 389.001 68.624 cv
389.917 67.5918 390.991 66.6875 392.202 65.9248 cv
393.417 65.1641 394.771 64.5742 396.215 64.1543 cv
397.666 63.7441 399.192 63.5098 400.833 63.6045 cv
399.736 62.9082 398.434 62.543 397.102 62.4063 cv
397.362 56.4805 394.619 47.2842 387.792 40.4063 cv
383.02 35.5996 374.326 30.0879 359.975 31.1084 cv
325.056 33.6025 316.65 62.1514 317.083 76.8984 cv
317.651 96.1934 330.219 118.609 363.733 118.607 cv
363.935 118.607 364.141 118.605 364.344 118.604 cv
394.94 118.357 405.772 99.5293 409.505 88.3281 cv
411.331 82.8555 411.055 78.7188 408.788 77.5303 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
257.898 171.415 mo
255.938 174.08 254.931 178.205 256.203 181.922 cv
236.81 199.608 204.81 201.357 191.166 202.593 cv
191.166 202.593 183.732 207.2 176.328 206.201 cv
168.388 197.58 175.543 177.805 181.874 175.318 cv
218.029 178.677 235.884 172.439 248.815 165.386 cv
250.154 168.16 253.117 170.749 257.898 171.415 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
257.898 171.415 mo
255.938 174.08 254.931 178.205 256.203 181.922 cv
236.81 199.608 204.81 201.357 191.166 202.593 cv
188.747 196.994 187.878 186.918 194.768 176.153 cv
196.335 176.204 197.857 176.236 199.343 176.249 cv
191.7 185.725 209.435 194.533 224.817 190.667 cv
239.883 186.886 243.572 176.583 243.81 167.935 cv
245.569 167.11 247.232 166.251 248.815 165.386 cv
250.154 168.16 253.117 170.749 257.898 171.415 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
191.166 202.593 mo
191.166 202.593 183.732 207.2 176.328 206.201 cv
168.388 197.58 175.543 177.805 181.874 175.318 cv
186.457 175.739 190.74 176.016 194.768 176.153 cv
187.878 186.918 188.747 196.994 191.166 202.593 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
181.32 181.034 mo
218.84 183.735 238.235 177.035 252.238 169.299 cv
250.647 168.202 249.508 166.822 248.815 165.386 cv
235.884 172.439 218.029 178.677 181.874 175.318 cv
177.894 176.882 173.591 185.278 172.915 193.44 cv
174.928 187.394 178.253 182.324 181.32 181.034 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
193.632 200.867 mo
192.705 200.947 191.835 201.021 191.03 201.094 cv
190.677 201.127 li
190.376 201.312 li
190.308 201.354 183.667 205.394 177.081 204.778 cv
174.319 201.414 173.581 195.858 175.062 189.419 cv
176.553 182.935 179.752 178.058 182.126 176.844 cv
216.868 180.013 235.016 174.396 248.56 167.211 cv
248.755 167.567 248.972 167.912 249.211 168.242 cv
250.173 169.61 251.492 170.733 252.963 171.53 cv
253.733 171.944 254.544 172.26 255.374 172.489 cv
254.973 173.282 254.671 174.122 254.467 174.979 cv
254.084 176.598 254.081 178.301 254.417 179.919 cv
254.502 180.342 254.617 180.758 254.753 181.166 cv
236.831 197.14 207.771 199.654 193.632 200.867 cv
cp
257.799 183.504 mo
257.266 182.236 257.027 180.915 257.014 179.613 cv
257.003 178.308 257.245 177.025 257.607 175.799 cv
257.969 174.567 258.503 173.408 259.105 172.302 cv
260.351 170.006 li
258.102 169.927 li
258.1 169.926 li
256.784 169.641 255.524 169.274 254.342 168.75 cv
253.158 168.23 252.061 167.53 251.105 166.636 cv
250.164 165.729 249.37 164.624 248.875 163.353 cv
248.401 162.091 248.153 160.638 248.679 159.209 cv
247.614 160.33 247.27 162.077 247.435 163.677 cv
247.458 163.902 247.511 164.124 247.551 164.347 cv
234.325 171.435 216.577 177.028 182.012 173.82 cv
181.657 173.787 li
181.325 173.917 li
177.586 175.386 173.809 181.483 172.138 188.747 cv
170.37 196.434 171.497 203.167 175.228 207.22 cv
175.595 207.618 li
176.132 207.689 li
183.178 208.633 190.076 204.954 191.637 204.053 cv
192.342 203.989 193.094 203.924 193.888 203.856 cv
208.208 202.628 237.475 200.094 256.174 183.907 cv
256.273 184.044 256.361 184.189 256.466 184.319 cv
257.478 185.566 258.776 186.495 260.156 187.086 cv
259.137 185.975 258.325 184.772 257.799 183.504 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
392.778 192.544 mo
392.778 192.544 403.042 190.67 409 193.527 cv
411.534 203.677 397.564 217.909 394.74 218.366 cv
378.869 217.767 343.092 194.155 330.902 183.748 cv
332.346 181.325 333.058 178.176 331.898 174.668 cv
334.304 174.442 338.279 172.077 339.809 168.205 cv
354.499 178.194 380.111 189.511 392.778 192.544 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
392.785 192.551 mo
392.785 192.551 403.042 190.67 409 193.527 cv
411.534 203.677 397.564 217.909 394.74 218.366 cv
391.206 218.23 386.667 216.952 381.616 214.927 cv
389.548 208.329 393.948 196.532 392.785 192.551 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
392.778 192.544 mo
392.785 192.551 li
393.948 196.532 389.548 208.329 381.616 214.927 cv
364.074 207.882 340.377 191.832 330.902 183.748 cv
332.346 181.325 333.058 178.176 331.898 174.668 cv
334.304 174.442 338.279 172.077 339.809 168.205 cv
341.492 169.354 343.316 170.503 345.253 171.667 cv
345.676 178.77 348.248 189.64 362.552 197.718 cv
377.963 206.433 388.738 197.574 387.448 191.032 cv
389.396 191.653 391.189 192.16 392.778 192.544 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
388.047 197.448 mo
388.047 197.448 398.411 195.645 404.46 198.587 cv
405.806 203.811 402.858 210.059 399.256 215.004 cv
404.209 210.094 410.809 200.771 409 193.527 cv
403.042 190.67 392.778 192.544 392.778 192.544 cv
380.111 189.511 354.499 178.194 339.809 168.205 cv
338.939 170.408 337.277 172.121 335.563 173.232 cv
350.671 183.248 375.574 194.358 388.047 197.448 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
394.585 216.857 mo
379.19 216.084 344.873 193.405 332.576 183.188 cv
333.288 181.936 333.773 180.525 333.944 179.051 cv
334.064 177.977 333.993 176.885 333.777 175.831 cv
334.87 175.494 335.818 174.947 336.706 174.325 cv
338.016 173.379 339.124 172.16 339.929 170.755 cv
340.023 170.594 340.095 170.421 340.178 170.253 cv
355.395 180.29 380.178 191.071 392.424 194.002 cv
392.731 194.075 li
393.042 194.02 li
393.136 194.001 402.143 192.394 407.691 194.592 cv
409.138 203.524 397.086 215.979 394.585 216.857 cv
cp
409.652 192.178 mo
403.865 189.397 394.688 190.706 392.825 191.012 cv
380.52 187.989 355.869 177.191 341.115 167.274 cv
341.164 166.902 341.192 166.528 341.192 166.157 cv
341.185 164.573 340.73 163.055 339.927 161.812 cv
340.008 163.29 339.902 164.683 339.529 165.943 cv
339.161 167.204 338.54 168.322 337.752 169.299 cv
336.962 170.272 335.993 171.097 334.95 171.776 cv
333.918 172.441 332.725 172.979 331.753 173.174 cv
330.032 173.52 li
330.47 175.14 li
330.801 176.365 330.976 177.591 330.947 178.831 cv
330.929 180.072 330.668 181.323 330.214 182.549 cv
329.743 183.767 329.061 184.944 328.188 186.004 cv
327.304 187.042 326.283 188.053 324.914 188.59 cv
326.414 188.609 327.882 187.909 329.134 187.037 cv
329.725 186.618 330.278 186.136 330.789 185.605 cv
343.729 196.339 378.541 219.255 394.679 219.864 cv
394.973 219.846 li
396.187 219.651 398.152 218.217 400.259 216.134 cv
402.261 214.156 404.393 211.595 406.137 208.955 cv
408.872 204.814 411.841 198.715 410.458 193.166 cv
410.288 192.482 li
409.652 192.178 li
cp
.75021 .679683 .670222 .90164 cmyk
f
381.329 81.6055 mo
382.047 81.9355 li
380.858 83.5957 380.338 85.9053 380.668 88.9355 cv
377.928 88.6855 373.518 89.4648 371.329 91.9453 cv
349.308 91.8555 354.718 69.0254 358.668 69.2754 cv
366.329 71.7754 376.168 77.7754 381.329 81.6055 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
374.127 89.9951 mo
373.047 90.4756 372.058 91.1152 371.329 91.9453 cv
349.718 91.8555 354.528 69.8652 358.448 69.2852 cv
357.448 71.6553 354.728 82.5352 363.518 85.0654 cv
361.768 82.1553 360.398 78.8047 360.168 74.9355 cv
366.598 77.1953 372.068 83.9053 374.127 89.9951 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
358.448 69.2852 mo
360.578 69.5029 373.909 75.8672 382.047 81.9355 cv
380.71 84.0449 380.267 87.3477 380.668 88.9355 cv
377.951 83.0859 369.075 76.0078 359.238 72.5293 cv
357.438 73.6094 356.599 76.8477 356.239 81.6465 cv
354.919 76.4883 355.759 70.8496 358.448 69.2852 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
377 87.4287 mo
376.85 87.457 376.702 87.498 376.553 87.5332 cv
376.054 86.0801 375.317 84.7158 374.444 83.4785 cv
373.317 81.8711 371.922 80.4961 370.434 79.291 cv
368.937 78.0918 367.316 77.0771 365.602 76.2754 cv
364.741 75.8848 363.865 75.5264 362.951 75.2813 cv
362.045 75.0449 361.098 74.8105 360.167 74.9375 cv
361.066 75.1348 361.861 75.5684 362.629 76.0293 cv
363.391 76.5059 364.128 77.0059 364.829 77.5566 cv
366.237 78.6426 367.53 79.8555 368.7 81.1445 cv
369.87 82.4355 370.888 83.8271 371.788 85.2549 cv
372.479 86.3555 373.071 87.4922 373.602 88.6592 cv
373.546 88.6914 373.488 88.7168 373.432 88.749 cv
372.674 89.1934 371.954 89.7559 371.35 90.4307 cv
361.116 90.3936 357.825 85.3369 356.882 81.0215 cv
355.803 76.0859 357.62 71.5645 358.594 70.8281 cv
366.098 73.3672 375.379 79.1094 380.107 82.5684 cv
379.624 83.4033 379.274 84.3125 379.096 85.2305 cv
378.964 85.9053 378.911 86.5801 378.927 87.2441 cv
378.278 87.2461 377.633 87.3145 377 87.4287 cv
cp
384.029 79.2383 mo
383.354 79.4824 382.699 79.8477 382.094 80.3027 cv
377.19 76.6855 367.144 70.458 359.131 67.8447 cv
358.76 67.7734 li
357.913 67.7188 356.684 68.0508 355.522 69.9121 cv
353.612 72.9746 352.297 80.1621 355.544 85.8691 cv
357.415 89.1563 361.432 92.9648 369.908 93.3857 cv
369.827 93.9766 369.846 94.5664 370 95.1045 cv
370.467 93.9883 371.139 93.166 371.942 92.5898 cv
372.748 92.0146 373.651 91.6328 374.605 91.3535 cv
376.514 90.8096 378.576 90.623 380.53 90.4316 cv
382.542 90.2344 li
382.158 88.7773 li
382.157 88.7754 li
382.227 87.7002 382.206 86.6826 382.292 85.7031 cv
382.374 84.7256 382.517 83.7715 382.915 82.8965 cv
383.292 82.0137 383.915 81.2051 384.739 80.5137 cv
385.56 79.8145 386.573 79.252 387.667 78.7715 cv
386.477 78.6885 385.237 78.8027 384.029 79.2383 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
1049.81 126.334 mo
1049.81 176.398 1006.84 226.666 885.841 252.666 cv
896.341 242.666 917.341 224.166 917.341 224.166 cv
822.341 234.666 li
880.841 207.166 li
762.841 210.166 li
840.341 187.166 li
691.841 185.666 li
782.841 156.666 li
629.841 152.666 li
709.341 136.666 li
548.514 126.334 li
709.341 116 li
629.841 100 li
782.841 96 li
691.841 67 li
840.341 65.5 li
762.841 42.5 li
880.841 45.5 li
822.341 18 li
917.341 28.5 li
917.341 28.5 896.341 10 885.841 0 cv
1006.84 26 1049.81 76.2676 1049.81 126.334 cv
cp
0 .419074 .980804 0 cmyk
f
1045.01 126.334 mo
1045.01 169.463 1013.02 212.768 922.946 235.166 cv
930.763 226.551 946.394 210.613 946.394 210.613 cv
875.677 219.66 li
919.224 195.969 li
831.385 198.555 li
889.075 178.74 li
778.532 177.447 li
846.273 152.465 li
732.38 149.018 li
791.56 135.234 li
671.841 126.334 li
791.56 117.432 li
732.38 103.648 li
846.273 100.201 li
778.532 75.2188 li
889.075 73.9277 li
831.385 54.1133 li
919.224 56.6973 li
875.677 33.0078 li
946.394 42.0527 li
946.394 42.0527 930.763 26.1152 922.946 17.5 cv
1013.02 39.8984 1045.01 83.2031 1045.01 126.334 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
1041.59 126.334 mo
1041.59 163.32 1018.6 200.457 953.848 219.666 cv
959.467 212.277 970.702 198.611 970.702 198.611 cv
919.867 206.367 li
951.172 186.051 li
888.03 188.268 li
929.499 171.275 li
850.035 170.168 li
898.733 148.742 li
816.858 145.787 li
859.399 133.967 li
773.341 126.334 li
859.399 118.699 li
816.858 106.879 li
898.733 103.924 li
850.035 82.498 li
929.499 81.3906 li
888.03 64.3984 li
951.172 66.6152 li
919.867 46.2988 li
970.702 54.0566 li
970.702 54.0566 959.467 40.3887 953.848 33 cv
1018.6 52.209 1041.59 89.3457 1041.59 126.334 cv
cp
.0187381 0 .613275 0 cmyk
f
1038.09 126.334 mo
1038.09 154.998 1023.67 183.779 983.058 198.666 cv
986.582 192.941 993.628 182.348 993.628 182.348 cv
961.744 188.359 li
981.379 172.615 li
941.774 174.332 li
967.787 161.164 li
917.944 160.305 li
948.488 143.701 li
897.136 141.41 li
923.818 132.25 li
869.841 126.334 li
923.818 120.416 li
897.136 111.256 li
948.488 108.967 li
917.944 92.3613 li
967.787 91.502 li
941.774 78.334 li
981.379 80.0527 li
961.744 64.3066 li
993.628 70.3184 li
993.628 70.3184 986.582 59.7266 983.058 54 cv
1023.67 68.8867 1038.09 97.668 1038.09 126.334 cv
cp
0 0 0 0 cmyk
f
613.895 62.8359 mo
609.676 61.5918 597.991 60.2695 598.906 63.502 cv
600.18 68 620.682 64.8359 613.895 62.8359 cv
cp
0 .419074 .980804 0 cmyk
f
724.536 16.5 mo
721.965 15.4902 711.174 12.1641 712.588 16.5 cv
714.002 20.834 727.93 17.834 724.536 16.5 cv
cp
f
564.454 151 mo
560.657 149.623 551.532 148.049 551.304 151 cv
550.88 156.5 567.211 152 564.454 151 cv
cp
f
684.296 216 mo
681.327 215.5 671.358 212 672.843 218 cv
673.704 221.482 687.681 216.57 684.296 216 cv
cp
f
990.617 81.3555 mo
993.158 77.3555 995.139 81.0957 992.945 88.8555 cv
990.404 97.8555 982.148 117.855 955.893 118.105 cv
924.539 118.405 917.502 91.8457 917.146 77.8555 cv
916.723 60.8555 925.615 35.8555 952.293 33.6055 cv
975.77 31.625 982.994 54.3555 982.359 63.8555 cv
982.418 64.3154 li
978.988 64.9551 975.262 67.5059 973.678 72.6055 cv
968.555 70.7148 964.395 71.3955 961.574 73.4756 cv
959.17 64.5654 947.693 60.5156 942.766 71.1055 cv
936.838 83.8555 947.229 99.4951 962.668 97.6055 cv
978.973 95.6055 987.609 86.0957 990.617 81.3555 cv
cp
.118532 .179629 .999206 0 cmyk
f
964.395 108.655 mo
981.385 105.735 990.566 92.4951 992.818 83.6953 cv
993.869 83.7949 li
993.793 85.1855 993.496 86.8848 992.945 88.8555 cv
990.404 97.8555 982.148 117.855 955.893 118.105 cv
924.539 118.405 917.502 91.8457 917.146 77.8555 cv
916.816 64.5156 922.219 46.2451 937.455 37.916 cv
919.518 52.3555 919.848 81.6953 927.59 93.9854 cv
937.244 109.275 953.479 110.535 964.395 108.655 cv
cp
.240848 .455299 1 .0437018 cmyk
f
973.678 72.6055 mo
968.555 70.7148 964.395 71.3955 961.574 73.4756 cv
959.17 64.5654 947.693 60.5156 942.766 71.1055 cv
938.09 81.1553 943.561 93.0059 953.656 96.6455 cv
927.869 93.7051 933.289 62.3154 946.889 57.2949 cv
963.211 51.2754 971.85 65.6855 973.678 72.6055 cv
cp
f
953.639 39.9375 mo
951.674 41.3457 952.508 50.4385 955.473 51.2715 cv
958.438 52.1045 964.789 45.2715 967.047 43.6045 cv
969.307 41.9375 957.59 37.1045 953.639 39.9375 cv
cp
0 0 0 0 cmyk
f
974.246 49.7715 mo
972.16 49.1143 967.047 53.7715 967.189 57.1045 cv
967.33 60.4375 975.518 62.4375 977.211 61.9375 cv
978.904 61.4375 976.363 50.4385 974.246 49.7715 cv
cp
f
940.936 42.1045 mo
937.688 42.9375 934.135 44.4453 932.889 48.2715 cv
932.182 50.4375 939.664 55.4375 940.936 51.4375 cv
942.834 45.457 943.021 41.5684 940.936 42.1045 cv
cp
f
989.703 87.0215 mo
988.219 88.7734 987.287 89.6582 987.586 90.2715 cv
989.492 94.1875 991.186 85.2715 989.703 87.0215 cv
cp
f
982.574 93.7295 mo
980.527 94.8545 978.764 95.7295 979.047 96.4375 cv
979.426 97.3916 982.645 97.3545 984.057 96.8545 cv
985.469 96.3545 983.754 93.0811 982.574 93.7295 cv
cp
f
972.553 98.9375 mo
971.289 99.3105 968.6 100.104 969.166 100.604 cv
969.73 101.104 973.398 101.605 974.105 101.271 cv
974.813 100.938 973.965 98.5215 972.553 98.9375 cv
cp
f
991.744 88.3809 mo
988.797 98.8223 980.219 116.373 955.887 116.604 cv
921.16 116.925 918.582 84.3457 918.42 77.8105 cv
918.076 64.0576 924.736 37.4326 952.389 35.1006 cv
961.244 34.3516 968.703 37.2656 973.961 43.5195 cv
979.623 50.2559 981.322 59.0293 981.105 63.4805 cv
980.184 63.6377 979.271 63.9219 978.396 64.3525 cv
977.014 65.0283 975.73 66.0762 974.703 67.4199 cv
973.945 68.4063 973.344 69.5625 972.941 70.791 cv
972.008 70.4189 971.031 70.1777 970.037 70.0527 cv
968.65 69.8809 967.225 69.9795 965.846 70.3418 cv
964.643 70.6504 963.48 71.1934 962.436 71.9453 cv
961.629 69.7012 960.279 67.7285 958.598 66.2354 cv
958.824 64.3887 959.455 62.4521 960.176 60.627 cv
961.023 58.5244 962.098 56.5254 963.363 54.6992 cv
964.629 52.8711 966.117 51.2539 967.787 49.8887 cv
969.471 48.5449 971.365 47.5176 973.398 46.8281 cv
971.279 46.8643 969.139 47.4727 967.156 48.5488 cv
965.158 49.5996 963.344 51.1445 961.768 52.9609 cv
960.186 54.7793 958.846 56.8945 957.805 59.2197 cv
957.086 60.876 956.471 62.6338 956.174 64.5508 cv
955.008 63.9316 953.76 63.5137 952.473 63.3564 cv
951.561 63.2461 950.672 63.2656 949.818 63.4014 cv
949.318 61.7686 948.873 60.1182 948.494 58.4404 cv
948.063 56.4531 947.719 54.4346 947.529 52.3877 cv
947.123 48.291 947.332 44.1055 948.244 39.8857 cv
947.227 41.7012 946.453 43.7461 945.967 45.8955 cv
945.465 48.043 945.238 50.2852 945.219 52.5264 cv
945.215 54.7686 945.42 57.0137 945.846 59.1992 cv
946.168 60.9199 946.637 62.6055 947.242 64.2197 cv
945.232 65.2051 943.492 66.9492 942.168 69.373 cv
940.859 68.9473 939.564 68.3613 938.33 67.627 cv
936.844 66.7168 935.424 65.6309 934.15 64.3105 cv
932.869 63.002 931.736 61.4746 930.744 59.7852 cv
930.246 58.9424 929.793 58.0508 929.393 57.1191 cv
928.957 56.2012 928.605 55.2305 928.24 54.2461 cv
928.305 55.3184 928.477 56.377 928.686 57.4375 cv
928.922 58.4854 929.223 59.5215 929.586 60.5371 cv
930.322 62.5615 931.371 64.4531 932.652 66.1123 cv
933.939 67.7617 935.445 69.1992 937.121 70.291 cv
938.32 71.083 939.596 71.7344 940.939 72.1699 cv
940.012 74.8271 939.668 77.6484 939.902 80.4443 cv
938.674 80.8857 937.395 81.2695 936.094 81.5703 cv
934.533 81.9395 932.949 82.2285 931.361 82.4121 cv
929.77 82.5898 928.17 82.6426 926.582 82.4814 cv
925.012 82.2822 923.4 81.8906 922.088 80.6758 cv
923.084 82.291 924.758 83.1904 926.371 83.75 cv
928.012 84.3271 929.715 84.5586 931.406 84.6484 cv
933.102 84.7334 934.797 84.6406 936.48 84.3936 cv
937.783 84.1816 939.088 83.9111 940.381 83.4551 cv
940.822 85.3174 941.52 87.1367 942.484 88.8516 cv
942.934 89.6514 943.436 90.4033 943.967 91.1201 cv
943.221 92.2461 942.393 93.292 941.482 94.3008 cv
940.373 95.5137 939.178 96.6484 937.902 97.6621 cv
935.354 99.7031 932.514 101.279 929.326 102.111 cv
930.945 102.389 932.633 102.291 934.27 101.889 cv
935.91 101.5 937.506 100.818 939.02 99.9414 cv
940.527 99.0508 941.959 97.9619 943.254 96.6504 cv
944.211 95.6875 945.123 94.582 945.873 93.3359 cv
947.752 95.2334 949.951 96.7217 952.375 97.7256 cv
952.418 99.0205 952.377 100.338 952.295 101.68 cv
952.195 103.137 952.045 104.6 951.807 106.042 cv
951.564 107.482 951.256 108.911 950.813 110.291 cv
950.357 111.659 949.803 113.012 948.922 114.215 cv
950.168 113.593 951.242 112.426 952.053 111.1 cv
952.871 109.768 953.486 108.28 953.951 106.746 cv
954.412 105.209 954.742 103.622 954.914 102.004 cv
955.037 100.895 955.086 99.7549 955.033 98.6084 cv
957.494 99.2432 960.117 99.4258 962.803 99.0967 cv
962.988 99.0742 963.164 99.0449 963.346 99.0205 cv
963.83 99.8672 964.217 100.721 964.563 101.666 cv
964.949 102.762 965.256 103.938 965.477 105.166 cv
965.936 107.628 966.092 110.257 966.33 112.979 cv
967.184 110.434 967.633 107.705 967.566 104.873 cv
967.523 103.461 967.348 102.016 966.949 100.617 cv
966.758 99.918 966.498 99.2188 966.184 98.5605 cv
968.787 98.0527 971.168 97.3594 973.334 96.541 cv
973.998 97.0488 974.541 97.5547 975.082 98.2051 cv
975.625 98.8662 976.127 99.625 976.57 100.471 cv
977.471 102.158 978.152 104.123 978.896 106.178 cv
979.186 103.967 979.051 101.677 978.41 99.4531 cv
978.08 98.3486 977.619 97.2559 976.969 96.2852 cv
976.748 95.9473 976.49 95.627 976.221 95.3223 cv
978.865 94.0859 981.143 92.6768 983.076 91.2383 cv
983.291 91.3887 983.535 91.5879 983.801 91.832 cv
984.201 92.2109 984.625 92.6406 985.031 93.1094 cv
985.445 93.5703 985.85 94.0645 986.254 94.5781 cv
986.648 95.1035 987.057 95.6309 987.432 96.2617 cv
987.533 95.4941 987.465 94.6914 987.311 93.9395 cv
987.162 93.1797 986.924 92.4531 986.633 91.75 cv
986.33 91.0527 985.975 90.377 985.506 89.7559 cv
985.434 89.6621 985.354 89.5664 985.273 89.4727 cv
988.691 86.5137 990.729 83.6846 991.637 82.2539 cv
991.994 81.6934 992.258 81.4355 992.41 81.3203 cv
992.676 82.0078 992.889 84.3301 991.744 88.3809 cv
cp
993.547 78.5303 mo
992.959 78.166 991.398 77.627 989.604 80.4551 cv
988.184 82.6895 980.209 93.9453 962.541 96.1123 cv
955.076 97.0293 948.209 93.6084 944.6 87.1914 cv
941.865 82.3281 941.604 76.7275 943.883 71.8262 cv
945.701 67.917 948.736 65.9121 952.211 66.3408 cv
953.742 66.5273 955.203 67.167 956.473 68.1279 cv
956.563 68.2129 956.652 68.291 956.76 68.3457 cv
958.455 69.7266 959.77 71.7002 960.373 73.959 cv
959.939 74.543 959.568 75.1787 959.283 75.8545 cv
961.359 73.8789 963.773 73.0742 966.15 72.96 cv
967.346 72.9082 968.537 73.0215 969.727 73.2129 cv
970.92 73.3867 972.104 73.6855 973.334 73.916 cv
973.334 73.917 li
974.158 74.3623 li
974.775 73.0781 li
975.381 71.8184 976.006 70.6543 976.789 69.624 cv
977.564 68.5918 978.475 67.6875 979.5 66.9248 cv
980.527 66.1641 981.676 65.5742 982.898 65.1543 cv
984.127 64.7441 985.42 64.5098 986.809 64.6045 cv
985.881 63.9082 984.777 63.543 983.65 63.4063 cv
983.869 57.4805 981.547 48.2842 975.764 41.4063 cv
971.723 36.5996 964.359 31.0879 952.205 32.1084 cv
922.633 34.6025 915.512 63.1514 915.879 77.8984 cv
916.361 97.1934 927.006 119.609 955.389 119.607 cv
955.561 119.607 955.734 119.605 955.906 119.604 cv
981.818 119.357 990.992 100.529 994.154 89.3281 cv
995.699 83.8555 995.467 79.7188 993.547 78.5303 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
844.34 169.915 mo
842.629 172.781 842.049 177.04 843.729 180.627 cv
832.719 195.147 810.013 208.231 792.618 213.391 cv
792.618 213.391 785.22 219.596 778.281 218.665 cv
769.534 210.113 774.639 190.255 780.695 187.159 cv
810.714 187.463 826.23 171.729 834.072 163.563 cv
835.348 166.665 838.756 169.695 844.34 169.915 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
792.618 213.391 mo
792.618 213.391 785.22 219.596 778.281 218.665 cv
769.534 210.113 774.639 190.255 780.695 187.159 cv
785.448 187.205 789.833 186.85 793.888 186.193 cv
787.752 197.804 789.613 207.976 792.618 213.391 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
792.191 211.947 mo
791.892 212.035 li
791.653 212.236 li
791.585 212.293 785.051 217.708 778.978 217.229 cv
774.32 212.26 774.948 204.202 775.448 200.91 cv
776.407 194.594 779.004 190.003 781.087 188.657 cv
810.135 188.814 825.943 174.095 834.082 165.726 cv
834.441 166.396 834.873 167.035 835.383 167.61 cv
836.475 168.877 837.898 169.865 839.439 170.515 cv
840.246 170.85 841.084 171.085 841.934 171.231 cv
841.611 172.061 841.395 172.926 841.275 173.798 cv
841.053 175.446 841.215 177.142 841.709 178.72 cv
841.854 179.188 842.039 179.639 842.246 180.08 cv
831.123 194.452 808.436 207.137 792.191 211.947 cv
cp
845.428 181.955 mo
844.773 180.746 844.404 179.455 844.264 178.16 cv
844.127 176.862 844.24 175.562 844.48 174.306 cv
844.721 173.045 845.137 171.84 845.627 170.679 cv
846.643 168.272 li
844.396 168.414 li
844.395 168.413 li
843.057 168.258 841.768 168.018 840.539 167.612 cv
839.309 167.211 838.15 166.622 837.109 165.825 cv
836.084 165.016 835.186 163.994 834.57 162.776 cv
833.973 161.567 833.584 160.146 833.967 158.673 cv
833.17 159.696 832.926 161.11 833.059 162.469 cv
825.547 170.277 810.142 185.953 780.708 185.654 cv
780.339 185.65 li
780.011 185.818 li
776.571 187.577 773.544 193.462 772.482 200.46 cv
771.252 208.556 772.985 215.582 777.236 219.735 cv
777.591 220.083 li
778.084 220.149 li
784.929 221.065 791.911 215.865 793.331 214.737 cv
810.12 209.701 832.287 197.286 844 182.688 cv
844.063 182.756 844.117 182.832 844.182 182.897 cv
845.311 184.039 846.693 184.836 848.125 185.289 cv
847.002 184.283 846.074 183.166 845.428 181.955 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
970.516 169.223 mo
970.516 169.223 979.398 166.497 985.168 169.088 cv
988.193 179.578 976.506 194.331 973.707 194.922 cv
957.5 195.078 924.645 182.771 905.205 170.699 cv
906.428 168.248 906.914 165.164 905.629 161.835 cv
908.051 161.494 911.969 158.875 913.266 154.852 cv
939.707 165.429 955.049 167.764 970.516 169.223 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
970.516 169.223 mo
970.516 169.223 979.398 166.497 985.168 169.088 cv
988.193 179.578 976.506 194.331 973.707 194.922 cv
969.852 194.962 965.047 194.291 959.717 193.084 cv
959.813 192.669 li
967.844 185.788 971.922 173.233 970.516 169.223 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
985.168 169.088 mo
979.398 166.497 970.516 169.223 970.516 169.223 cv
955.049 167.764 939.707 165.429 913.266 154.852 cv
912.578 156.985 911.152 158.724 909.605 159.937 cv
909.756 160.225 910.129 160.457 910.129 160.457 cv
935.994 170.922 950.979 173.287 966.08 174.8 cv
966.08 174.8 974.73 172.194 980.377 174.753 cv
982.242 181.093 978.617 188.988 974.938 194.221 cv
978.92 191.106 987.859 178.416 985.168 169.088 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
973.473 193.423 mo
957.092 193.477 925.508 181.284 906.885 169.966 cv
907.436 168.771 907.789 167.463 907.881 166.115 cv
907.949 165.036 907.828 163.949 907.563 162.906 cv
908.637 162.518 909.559 161.927 910.416 161.264 cv
911.68 160.255 912.727 158.984 913.465 157.543 cv
913.607 157.268 913.723 156.98 913.838 156.692 cv
940.391 167.203 955.754 169.338 970.371 170.716 cv
970.666 170.743 li
970.951 170.657 li
971.031 170.632 978.688 168.324 983.896 170.192 cv
985.924 179.54 975.736 192.442 973.473 193.423 cv
cp
985.777 167.719 mo
980.111 165.174 972.035 167.23 970.367 167.702 cv
955.977 166.337 940.783 164.177 914.49 153.724 cv
914.502 153.445 914.521 153.166 914.506 152.891 cv
914.424 151.309 913.898 149.813 913.037 148.61 cv
913.188 150.083 913.148 151.479 912.836 152.757 cv
912.529 154.033 911.961 155.18 911.221 156.192 cv
910.479 157.203 909.549 158.072 908.539 158.801 cv
907.541 159.514 906.375 160.107 905.414 160.349 cv
903.711 160.776 li
904.227 162.374 li
904.615 163.583 904.848 164.798 904.877 166.038 cv
904.92 167.279 904.719 168.541 904.322 169.786 cv
903.91 171.025 903.285 172.234 902.465 173.334 cv
901.631 174.414 900.658 175.472 899.316 176.074 cv
900.816 176.021 902.25 175.253 903.459 174.322 cv
904.131 173.796 904.742 173.183 905.293 172.51 cv
924.373 184.1 956.912 196.589 973.717 196.422 cv
974.012 196.389 li
975.061 196.169 976.441 195.058 977.867 193.507 cv
979.459 191.778 981.105 189.506 982.424 187.316 cv
984.836 183.302 988.59 175.541 986.604 168.671 cv
986.412 168.003 li
985.777 167.719 li
cp
.75021 .679683 .670222 .90164 cmyk
f
810.354 127.624 mo
812.513 121.595 810.654 106.282 801.708 93.8652 cv
796.503 86.6416 791.157 91.0498 792.528 101.29 cv
784.542 89.75 776.649 84.5469 768.679 86.3623 cv
758.902 88.5879 761.856 104.405 770.507 112.305 cv
763.492 112.487 759 116.118 762.63 120.457 cv
767.853 126.7 779.931 125.244 783.427 125.402 cv
777.775 128.65 776.134 135.416 784.125 135.778 cv
789.71 136.031 808.063 134.026 810.354 127.624 cv
cp
.795712 .70428 .552972 .608392 cmyk
f
806.063 101.173 mo
811.218 111.769 812.103 122.738 810.351 127.624 cv
808.059 134.027 789.708 136.029 784.125 135.776 cv
776.133 135.414 777.771 128.651 783.423 125.403 cv
779.927 125.245 767.849 126.7 762.626 120.457 cv
758.999 116.119 763.488 112.488 770.503 112.306 cv
762.553 105.048 759.42 91.1123 766.536 87.1709 cv
763.432 91.3838 767.493 102.729 781.913 109.459 cv
772.598 109.808 776.408 116.958 784.082 118.597 cv
789.177 119.688 795.499 118.713 799.675 116.461 cv
803.359 114.465 805.616 109.932 806.063 101.173 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
801.708 93.8652 mo
796.503 86.6416 791.157 91.0498 792.528 101.29 cv
784.542 89.75 776.649 84.5469 768.679 86.3623 cv
760.73 88.1719 761.197 98.9629 766.297 107.181 cv
764.525 101.778 764.394 95.0498 768.946 93.8574 cv
776.023 92.001 789.324 101.765 796.348 113.261 cv
795.185 103.031 797.724 96.1582 802.302 103.354 cv
807.703 111.839 809.77 121.396 809.908 128.51 cv
810.088 128.223 810.245 127.931 810.354 127.624 cv
812.513 121.595 810.654 106.282 801.708 93.8652 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
783.495 123.904 mo
788.641 124.138 li
784.175 126.704 li
781.24 128.39 779.854 130.91 780.208 132.373 cv
780.577 133.892 782.864 134.22 784.193 134.28 cv
790.674 134.573 807.157 132.105 808.942 127.119 cv
810.961 121.48 809.112 106.708 800.49 94.7412 cv
799.181 92.9248 797.802 91.8535 796.708 91.8037 cv
796.199 91.7813 795.748 91.9912 795.331 92.4463 cv
794.288 93.585 793.394 96.4551 794.015 101.091 cv
794.843 107.27 li
791.295 102.145 li
784.77 92.7148 778.393 87.7959 772.339 87.5215 cv
771.236 87.4717 770.116 87.5732 769.013 87.8242 cv
766.616 88.3711 765.069 89.9111 764.41 92.4043 cv
762.968 97.8701 766.156 106.301 771.519 111.197 cv
774.268 113.708 li
770.547 113.804 li
766.219 113.917 763.6 115.402 762.999 116.734 cv
762.644 117.521 762.907 118.449 763.781 119.494 cv
766.026 122.178 770.078 123.616 776.169 123.893 cv
778.015 123.976 779.74 123.941 781.125 123.914 cv
782.11 123.894 782.888 123.877 783.495 123.904 cv
cp
784.058 137.277 mo
779.002 137.048 777.65 134.551 777.293 133.082 cv
776.817 131.119 777.572 128.885 779.217 126.943 cv
778.235 126.95 777.162 126.94 776.033 126.89 cv
769.055 126.573 764.295 124.785 761.479 121.42 cv
759.283 118.792 759.775 116.583 760.265 115.5 cv
761.237 113.346 763.826 111.778 767.309 111.128 cv
762.498 105.411 759.998 97.3672 761.51 91.6387 cv
762.448 88.083 764.875 85.6895 768.346 84.9004 cv
769.714 84.5879 771.103 84.4629 772.476 84.5244 cv
778.655 84.8047 784.704 88.7432 790.88 96.5361 cv
791.103 93.916 791.865 91.7881 793.119 90.4199 cv
794.144 89.3008 795.432 88.7441 796.843 88.8076 cv
798.291 88.873 800.521 89.6514 802.924 92.9873 cv
812.263 105.948 814.06 121.725 811.767 128.129 cv
809.019 135.807 789.149 137.507 784.058 137.277 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
840.127 102.831 mo
834.148 97.6045 822.481 98.6045 823.376 107.081 cv
815.626 104.831 799.481 113.271 806.626 126.081 cv
794.814 128.604 787.814 142.271 798.376 154.831 cv
791.814 157.604 792.481 169.271 802.876 173.331 cv
800.148 182.938 809.148 188.604 819.376 188.331 cv
816.481 195.271 826.877 201.831 836.377 199.331 cv
836.48 208.271 855.377 206.581 860.127 202.081 cv
862.148 210.271 874.814 209.271 880.627 202.331 cv
884.814 207.271 896.48 205.938 902.627 196.831 cv
907.814 201.938 920.48 197.271 922.627 187.331 cv
932.814 191.271 944.814 173.271 934.627 155.831 cv
940.377 147.581 937.48 133.604 929.127 133.831 cv
929.814 115.271 920.48 109.938 912.377 114.081 cv
909.48 103.271 897.148 99.2715 893.127 107.331 cv
889.48 97.9375 878.148 95.6045 875.377 102.081 cv
870.148 93.6045 859.148 92.9375 857.127 100.081 cv
850.148 94.6045 841.814 96.6045 840.127 102.831 cv
cp
.795712 .70428 .552972 .608392 cmyk
f
919.879 113.065 mo
925.279 114.476 929.6 120.985 929.129 133.836 cv
937.48 133.605 940.379 147.585 934.629 155.835 cv
944.811 173.275 932.811 191.275 922.629 187.335 cv
920.48 197.275 907.811 201.936 902.629 196.835 cv
896.48 205.936 884.811 207.275 880.629 202.335 cv
874.811 209.275 862.15 210.275 860.129 202.085 cv
855.379 206.585 836.48 208.275 836.379 199.335 cv
826.879 201.835 816.48 195.275 819.379 188.335 cv
809.15 188.605 800.15 182.936 802.879 173.335 cv
792.48 169.275 791.81 157.605 798.379 154.835 cv
787.81 142.275 794.81 128.605 806.629 126.086 cv
802.25 118.226 806.62 112.016 812.45 108.916 cv
808.129 114.135 806.48 122.855 816.629 129.586 cv
807.39 134.995 815.9 148.405 828.77 146.515 cv
822.089 152.275 834.629 157.835 842.029 154.436 cv
841.18 161.565 856.129 161.585 860.539 156.415 cv
860.02 163.886 873.879 161.835 876.529 156.595 cv
879.619 164.146 895.629 158.085 896.379 150.835 cv
901.549 157.695 916.129 147.835 913.129 137.836 cv
926.049 142.735 931.129 119.836 919.879 113.086 cv
919.879 113.065 li
cp
.78027 .700557 .606195 .759976 cmyk
f
934.627 155.831 mo
940.377 147.581 937.48 133.604 929.127 133.831 cv
929.814 115.271 920.48 109.938 912.377 114.081 cv
909.48 103.271 897.148 99.2715 893.127 107.331 cv
889.48 97.9375 878.148 95.6045 875.377 102.081 cv
870.148 93.6045 859.148 92.9375 857.127 100.081 cv
850.148 94.6045 841.814 96.6045 840.127 102.831 cv
834.148 97.6045 822.481 98.6045 823.376 107.081 cv
815.626 104.831 799.481 113.271 806.626 126.081 cv
804.671 113.891 817.899 111.88 825.299 113.977 cv
824.443 106.079 835.582 105.147 841.291 110.017 cv
842.902 104.216 850.857 102.353 857.521 107.455 cv
859.451 100.8 869.953 101.422 874.945 109.318 cv
877.592 103.284 888.412 105.458 891.893 114.209 cv
895.732 106.701 907.508 110.427 910.271 120.497 cv
918.01 116.637 926.92 121.606 926.264 138.896 cv
934.24 138.686 936.182 148.672 934.627 155.831 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
860.965 199.22 mo
861.584 201.722 li
862.621 205.929 866.869 206.384 868.648 206.384 cv
872.674 206.384 876.926 204.415 879.477 201.368 cv
880.619 200.003 li
881.771 201.361 li
883.012 202.824 885.227 203.663 887.85 203.663 cv
891.889 203.663 897.566 201.647 901.383 195.992 cv
902.393 194.496 li
903.68 195.763 li
905.072 197.134 906.977 197.421 908.33 197.421 cv
913.42 197.421 919.773 193.442 921.16 187.015 cv
921.531 185.299 li
923.168 185.933 li
927.012 187.422 931.49 185.009 934.316 180.082 cv
937.369 174.765 938.713 165.8 933.332 156.588 cv
932.848 155.76 li
933.396 154.974 li
936.945 149.88 936.682 142.955 934.629 139.025 cv
933.75 137.339 932.115 135.328 929.326 135.328 cv
927.568 135.374 li
927.627 133.775 li
927.914 126.033 926.365 119.998 923.268 116.782 cv
920.594 114.008 916.768 113.521 913.059 115.416 cv
911.408 116.262 li
910.928 114.469 li
909.205 108.039 903.98 104.57 899.938 104.57 cv
898.225 104.57 895.883 105.165 894.469 108 cv
892.955 111.035 li
891.729 107.874 li
889.607 102.408 884.885 99.918 881.396 99.918 cv
880.104 99.918 877.781 100.275 876.756 102.671 cv
875.619 105.33 li
874.1 102.869 li
871.781 99.1094 867.865 96.6816 864.123 96.6816 cv
862.777 96.6816 859.543 97.0527 858.57 100.489 cv
857.961 102.643 li
856.201 101.262 li
853.842 99.4102 851.139 98.3906 848.588 98.3906 cv
845.07 98.3906 842.383 100.242 841.574 103.224 cv
840.947 105.54 li
839.139 103.961 li
837.111 102.187 834.186 101.128 831.313 101.128 cv
829 101.128 827.037 101.834 825.93 103.064 cv
825.057 104.034 824.701 105.332 824.869 106.924 cv
825.104 109.145 li
822.958 108.521 li
822.265 108.32 821.468 108.219 820.591 108.219 cv
816.25 108.219 810.208 110.856 807.616 115.271 cv
805.812 118.344 805.919 121.734 807.937 125.351 cv
808.926 127.123 li
806.94 127.548 li
801.543 128.701 797.143 132.473 795.455 137.394 cv
793.626 142.721 795.072 148.571 799.525 153.866 cv
800.833 155.421 li
798.96 156.213 li
796.831 157.112 795.582 159.272 795.62 161.989 cv
795.664 165.188 797.734 169.712 803.422 171.934 cv
804.692 172.43 li
804.32 173.741 li
803.457 176.78 803.866 179.442 805.536 181.653 cv
808.046 184.978 813.38 186.98 819.336 186.831 cv
821.654 186.77 li
820.761 188.909 li
820.113 190.462 820.295 192.017 821.303 193.528 cv
823.205 196.382 827.656 198.374 832.131 198.374 cv
833.451 198.374 834.75 198.208 835.994 197.88 cv
837.854 197.392 li
837.877 199.313 li
837.93 203.897 844.988 204.254 847.15 204.254 cv
851.998 204.254 857.133 202.852 859.096 200.992 cv
860.965 199.22 li
cp
868.648 209.384 mo
864.324 209.384 861.01 207.572 859.41 204.44 cv
856.459 206.146 851.789 207.254 847.15 207.254 cv
840.49 207.254 836.146 205 835.113 201.132 cv
834.135 201.293 833.137 201.374 832.131 201.374 cv
826.625 201.374 821.271 198.89 818.807 195.192 cv
817.679 193.501 817.218 191.646 817.442 189.813 cv
811.26 189.54 805.974 187.21 803.142 183.462 cv
801.152 180.827 800.465 177.651 801.126 174.209 cv
794.958 171.286 792.673 165.917 792.62 162.03 cv
792.576 158.835 793.883 156.061 796.125 154.4 cv
791.846 148.632 790.598 142.305 792.617 136.42 cv
794.448 131.084 798.903 126.879 804.476 125.102 cv
802.376 120.168 803.558 116.257 805.029 113.752 cv
808.284 108.209 815.476 105.219 820.591 105.219 cv
821.032 105.219 821.459 105.238 821.875 105.279 cv
822.04 103.652 822.657 102.217 823.7 101.058 cv
825.4 99.168 828.104 98.1279 831.313 98.1279 cv
834.176 98.1279 837.092 98.9834 839.457 100.471 cv
841.133 97.3281 844.521 95.3906 848.588 95.3906 cv
851.234 95.3906 853.975 96.2324 856.469 97.7891 cv
857.943 95.2129 860.725 93.6816 864.123 93.6816 cv
868.271 93.6816 872.396 95.8301 875.314 99.4102 cv
876.758 97.8047 878.875 96.918 881.396 96.918 cv
885.303 96.918 890.379 99.2676 893.359 104.367 cv
895.033 102.564 897.326 101.57 899.938 101.57 cv
904.846 101.57 910.771 105.158 913.303 112.039 cv
914.709 111.521 916.129 111.26 917.539 111.26 cv
920.531 111.26 923.258 112.449 925.428 114.701 cv
927.906 117.272 930.762 122.416 930.66 132.432 cv
933.424 132.869 935.744 134.679 937.289 137.637 cv
940.086 142.996 939.676 150.513 936.381 155.888 cv
941.867 165.923 940.299 175.688 936.918 181.575 cv
934.115 186.462 929.859 189.38 925.539 189.38 cv
924.91 189.38 924.287 189.317 923.674 189.194 cv
921.359 196.255 914.299 200.421 908.33 200.421 cv
906.258 200.421 904.42 199.925 902.922 198.972 cv
898.482 204.613 892.332 206.663 887.85 206.663 cv
884.988 206.663 882.506 205.892 880.688 204.461 cv
877.553 207.488 872.992 209.384 868.648 209.384 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
1021.1 150.565 mo
1020.95 155.785 1014.7 160.806 1010.97 162.046 cv
1008.5 162.396 1002.42 161.025 997.58 153.386 cv
992.35 162.195 997.58 167.415 1000.81 169.785 cv
1002.15 171.546 990.17 181.186 982.15 176.775 cv
971.811 171.085 970.369 169.995 959.811 164.936 cv
951.811 161.105 948.311 155.936 946.98 149.275 cv
945.439 141.575 949.629 123.676 967.811 133.885 cv
968.311 129.896 968.311 124.916 965.57 119.436 cv
975.379 119.086 978.33 110.465 977.77 103.495 cv
983.75 107.735 994.43 104.805 998.189 102.006 cv
1000.75 109.285 1004.87 112.506 1009.43 112.795 cv
1009.38 113.586 li
1010.39 118.436 1011.39 122.676 1011.14 126.905 cv
1007.15 131.885 1004.75 135.916 1008.49 140.525 cv
1012.38 145.335 1020.35 148.325 1021.1 150.565 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
1008.49 140.525 mo
1004.75 135.916 1007.15 131.885 1011.14 126.905 cv
1011.39 122.676 1010.39 118.436 1009.38 113.586 cv
1009.43 112.795 li
1007.34 112.662 1005.35 111.905 1003.55 110.434 cv
1006.17 115.558 1007.6 122.002 1007.34 126.391 cv
1004.34 132.078 1003.34 135.953 1004.09 138.328 cv
1006.34 144.641 1015.21 146.891 1021.03 151.309 cv
1021.06 151.062 1021.09 150.814 1021.1 150.565 cv
1020.35 148.325 1012.38 145.335 1008.49 140.525 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
998.713 119.453 mo
1000.71 123.391 1002.31 128.887 1003.15 128.328 cv
1003.71 127.953 1003.94 124.631 1003.84 124.328 cv
1002.96 121.703 997.656 117.371 998.713 119.453 cv
cp
f
1023.09 84.5752 mo
1036.04 70.875 1035.48 94.2256 1022.59 106.735 cv
1018.47 110.735 1013.76 113.086 1009.43 112.795 cv
1004.87 112.506 1000.75 109.285 998.189 102.006 cv
994.43 104.805 983.75 107.735 977.77 103.495 cv
978.33 110.465 975.379 119.086 965.57 119.436 cv
968.311 124.916 968.311 129.896 967.811 133.885 cv
949.629 123.676 945.439 141.575 946.98 149.275 cv
948.311 155.936 951.811 161.105 959.811 164.936 cv
944.15 165.605 930.811 167.775 929.811 156.775 cv
919.879 159.505 903.811 148.355 916.311 141.355 cv
899.561 134.355 899.709 124.075 907.41 118.855 cv
898.221 110.416 897.811 99.3555 910.391 95.0156 cv
902.561 88.6055 908.061 78.8555 921.07 79.6152 cv
918.061 69.1055 925.311 64.1055 940.449 67.4355 cv
937.061 58.1055 952.811 55.3555 960.811 64.2051 cv
961.811 55.3555 974.811 56.3555 980.189 65.2051 cv
982.561 58.8555 992.209 61.416 994.35 70.1758 cv
997.939 56.1855 1007.9 65.6455 1009.4 75.3555 cv
1016.62 59.666 1025.08 72.6152 1023.09 84.5752 cv
cp
.795712 .70428 .552972 .608392 cmyk
f
1028.09 99.6455 mo
1026.62 102.166 1024.78 104.605 1022.59 106.735 cv
1018.47 110.735 1013.76 113.086 1009.43 112.795 cv
1004.87 112.506 1000.75 109.285 998.189 102.006 cv
994.43 104.805 983.75 107.735 977.77 103.495 cv
978.33 110.465 975.379 119.086 965.57 119.436 cv
968.311 124.916 968.311 129.896 967.811 133.885 cv
949.629 123.676 945.439 141.575 946.98 149.275 cv
948.311 155.936 951.811 161.105 959.811 164.936 cv
944.15 165.605 930.811 167.775 929.811 156.775 cv
919.879 159.505 903.811 148.355 916.311 141.355 cv
899.561 134.355 899.709 124.075 907.41 118.855 cv
898.221 110.416 897.811 99.3555 910.391 95.0156 cv
899.879 100.086 909.799 112.596 918.4 110.655 cv
917.869 117.686 930.33 121.176 935.08 114.176 cv
938.58 120.676 952.07 120.575 954.74 109.075 cv
963.9 112.745 974.4 101.006 971.59 93.1055 cv
976.09 97.1055 995.99 99.0752 1002.83 90.8252 cv
1005.09 102.285 1016.56 106.325 1028.09 99.6455 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
1023.09 84.5752 mo
1025.08 72.6152 1016.62 59.666 1009.4 75.3555 cv
1007.9 65.6455 997.939 56.1855 994.35 70.1758 cv
992.209 61.416 982.561 58.8555 980.189 65.2051 cv
974.811 56.3555 961.811 55.3555 960.811 64.2051 cv
952.811 55.3555 937.061 58.1055 940.449 67.4355 cv
941.338 63.7236 950.797 58.2969 962.172 73.3906 cv
963.156 66.4121 972.004 59.7236 979.293 75.6064 cv
984.506 62.8906 992.064 74.3154 994.172 81.2236 cv
999.338 64.3906 1006.57 75.9531 1008.05 83.6113 cv
1018.5 68.2236 1020.42 83.833 1018.46 93.2656 cv
1031.21 82.46 1024.34 104.266 1014.15 108.359 cv
1011.46 109.443 1001.96 111.141 998.189 102.006 cv
1001.71 112.516 1008.56 112.74 1009.43 112.795 cv
1013.76 113.086 1018.47 110.735 1022.59 106.735 cv
1035.48 94.2256 1036.04 70.875 1023.09 84.5752 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
1021.1 150.565 mo
1021.02 153.255 1019.33 155.886 1017.2 157.976 cv
1015.63 156.695 1016.56 153.966 1015.27 152.226 cv
1013.59 149.976 1014.39 147.235 1015.19 146.005 cv
1018.09 147.876 1020.69 149.335 1021.1 150.565 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
968.98 160.436 mo
977.811 163.936 980.629 177.995 992.879 176.245 cv
993 176.546 li
989.529 178.005 985.5 178.615 982.15 176.775 cv
971.811 171.085 970.369 169.995 959.811 164.936 cv
951.811 161.105 948.311 155.936 946.98 149.275 cv
945.91 143.936 947.6 133.676 954.82 131.315 cv
946.959 138.676 954.27 154.605 968.98 160.436 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
931.141 154.854 mo
931.303 156.64 li
932.023 164.547 940.141 164.49 954.422 163.706 cv
954.504 163.702 954.584 163.698 954.666 163.693 cv
949.666 160.2 946.717 155.62 945.51 149.569 cv
944.5 144.528 945.652 135.563 951.367 131.41 cv
954.133 129.401 958.943 127.912 966.523 131.526 cv
966.695 128.445 966.395 124.441 964.229 120.106 cv
963.184 118.02 li
965.516 117.937 li
968.758 117.82 971.342 116.706 973.197 114.623 cv
975.473 112.067 976.623 107.952 976.275 103.615 cv
976.018 100.414 li
978.637 102.271 li
983.855 105.971 993.822 103.387 997.293 100.803 cv
998.928 99.585 li
999.605 101.508 li
1001.76 107.637 1005.19 111.023 1009.53 111.299 cv
1013.27 111.557 1017.54 109.547 1021.54 105.659 cv
1028.92 98.5 1031.95 87.6494 1030.79 83.3242 cv
1030.64 82.7617 1030.36 82.0625 1029.84 81.9307 cv
1029.54 81.8555 1027.89 81.6807 1024.18 85.6055 cv
1020.8 89.1777 li
1021.61 84.3291 li
1022.77 77.3428 1020.14 70.6211 1017.19 69.7129 cv
1015.21 69.1104 1012.88 71.3936 1010.76 75.9824 cv
1008.68 80.5117 li
1007.92 75.584 li
1007.08 70.1934 1003.26 64.7539 1000.2 64.6035 cv
997.736 64.4961 996.387 68.2754 995.803 70.5488 cv
994.314 76.3496 li
992.893 70.5313 li
991.768 65.9297 988.318 63.3525 985.492 63.1855 cv
984.418 63.127 982.477 63.3691 981.596 65.7305 cv
980.514 68.627 li
978.908 65.9844 li
975.773 60.8281 970.145 58.9121 966.445 59.7266 cv
964.752 60.0996 962.658 61.209 962.301 64.374 cv
961.928 67.6777 li
959.697 65.2109 li
955.084 60.1074 947.508 59.1729 943.594 61.5273 cv
941.582 62.7383 940.998 64.5537 941.859 66.9238 cv
942.791 69.4863 li
940.127 68.9004 li
932.121 67.1406 926.238 67.7412 923.559 70.5938 cv
921.773 72.4951 921.42 75.3906 922.512 79.2021 cv
923.094 81.2363 li
920.982 81.1133 li
913.588 80.6768 909.713 83.7363 908.639 86.4844 cv
907.67 88.9688 908.654 91.6553 911.34 93.8545 cv
913.42 95.5566 li
910.879 96.4336 li
906.063 98.0957 903.127 100.844 902.389 104.381 cv
901.533 108.495 903.789 113.493 908.424 117.75 cv
909.82 119.033 li
908.252 120.098 li
905.213 122.157 903.637 124.994 903.926 127.881 cv
904.375 132.373 908.979 136.666 916.889 139.972 cv
919.73 141.159 li
917.043 142.664 li
913.799 144.481 912.627 146.556 913.559 148.829 cv
915.27 152.999 923.416 156.977 929.412 155.329 cv
931.141 154.854 li
cp
960.484 163.595 mo
968.416 167.396 971.285 169.002 976.492 171.915 cv
978.248 172.897 980.281 174.034 982.873 175.462 cv
986.004 177.183 989.725 176.279 992.297 175.22 cv
995.85 173.754 998.396 171.509 999.184 170.427 cv
993.299 165.694 992.264 159.401 996.289 152.62 cv
997.539 150.517 li
998.848 152.583 li
1003.35 159.691 1008.76 160.762 1010.63 160.575 cv
1014.08 159.362 1019.18 155.017 1019.58 150.884 cv
1019.07 150.241 1017.15 149.028 1015.72 148.123 cv
1012.98 146.393 1009.56 144.239 1007.32 141.469 cv
1002.9 136.014 1005.82 131.195 1009.66 126.35 cv
1009.79 122.836 1009.04 119.257 1008.17 115.14 cv
1007.96 114.125 li
1004.5 113.499 1000.34 111.137 997.439 104.23 cv
993.135 106.511 985.205 108.381 979.322 106.026 cv
979.16 110.202 977.799 113.967 975.438 116.619 cv
973.461 118.838 970.895 120.214 967.791 120.723 cv
969.941 126.096 969.703 130.844 969.299 134.072 cv
969.021 136.285 li
967.076 135.193 li
961.158 131.871 956.467 131.415 953.129 133.838 cv
948.738 137.027 947.59 144.683 948.451 148.981 cv
949.801 155.742 953.496 160.242 960.43 163.569 cv
960.447 163.577 960.467 163.587 960.484 163.595 cv
cp
986.797 179.396 mo
984.934 179.396 983.1 179.01 981.428 178.09 cv
978.826 176.659 976.789 175.519 975.027 174.532 cv
969.943 171.688 967.109 170.103 959.5 166.45 cv
957.83 166.524 956.189 166.614 954.586 166.702 cv
941.738 167.407 930.551 168.019 928.559 158.557 cv
921.721 159.489 913.033 155.452 910.783 149.968 cv
910.16 148.447 909.344 144.903 913.256 141.624 cv
905.795 137.995 901.451 133.279 900.939 128.18 cv
900.59 124.684 902.098 121.313 905.119 118.719 cv
900.508 113.957 898.451 108.582 899.453 103.77 cv
900.053 100.886 901.998 97.0791 907.693 94.4756 cv
905.348 91.7246 904.65 88.4531 905.846 85.3936 cv
907.566 80.9834 912.688 78.2227 919.168 78.0801 cv
918.268 73.1641 919.809 70.2041 921.373 68.5391 cv
924.561 65.1445 930.457 64.1133 938.506 65.5215 cv
938.311 62.8184 939.549 60.4609 942.047 58.957 cv
946.533 56.2588 954.35 56.7588 960.012 61.3818 cv
961.035 59.0254 963.049 57.4043 965.801 56.7969 cv
970.66 55.7266 976.432 58.1113 980.066 62.4639 cv
981.41 60.8809 983.387 60.0557 985.668 60.1914 cv
988.598 60.3633 992.113 62.2451 994.277 65.9727 cv
996.219 62.0986 998.783 61.5332 1000.35 61.6074 cv
1004.42 61.8066 1008.09 66.2852 1009.9 71.3086 cv
1013.14 66.3379 1016.31 66.3047 1018.07 66.8457 cv
1022.1 68.084 1024.89 74.1836 1024.89 80.8926 cv
1027.05 79.2412 1028.96 78.6133 1030.57 79.0234 cv
1031.45 79.2432 1033.01 79.9951 1033.69 82.5508 cv
1035.25 88.3711 1031.5 100.178 1023.63 107.813 cv
1019.59 111.743 1015.18 113.997 1011.06 114.287 cv
1011.11 114.521 li
1012.02 118.846 1012.88 122.93 1012.64 126.994 cv
1012.61 127.471 li
1012.31 127.844 li
1008.21 132.96 1006.77 136.021 1009.65 139.58 cv
1011.58 141.967 1014.77 143.974 1017.32 145.587 cv
1020.04 147.302 1022 148.542 1022.52 150.089 cv
1022.61 150.342 li
1022.6 150.608 li
1022.42 156.761 1015.35 162.169 1011.44 163.469 cv
1011.18 163.53 li
1008.6 163.894 1002.77 162.743 997.779 156.286 cv
995.736 161.114 997.029 165.151 1001.7 168.575 cv
1001.87 168.704 li
1002 168.876 li
1002.54 169.577 1002.82 170.817 1001.15 172.753 cv
998.588 175.728 992.545 179.396 986.797 179.396 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
983.377 120.979 mo
986.127 119.667 994.877 118.917 995.564 119.792 cv
998.23 123.185 1000.44 128.229 1002.44 133.604 cv
1003.38 132.604 1004.06 131.354 1004.81 128.417 cv
1004.69 132.792 1003.06 135.354 1001.68 137.117 cv
999.635 132.746 994.252 125.042 983.377 120.979 cv
cp
f
997.945 134.896 mo
996.936 138.964 993.002 141.698 989.158 141.006 cv
985.316 140.313 983.021 136.455 984.033 132.387 cv
985.043 128.32 988.977 125.586 992.818 126.279 cv
996.662 126.972 998.957 130.829 997.945 134.896 cv
cp
f
980.166 140.985 mo
983.932 136.682 991.865 138.161 993.748 145.692 cv
990.521 141.119 984.469 140.582 980.166 140.985 cv
cp
f
991.857 132.861 mo
990.178 134.281 987.967 134.692 986.914 133.781 cv
985.861 132.866 986.371 130.975 988.047 129.554 cv
989.727 128.133 991.939 127.722 992.99 128.635 cv
994.045 129.549 993.533 131.44 991.857 132.861 cv
cp
0 0 0 0 cmyk
f
983.598 143.529 mo
983.598 144.114 982.871 144.588 981.975 144.588 cv
981.076 144.588 980.35 144.114 980.35 143.529 cv
980.35 142.944 981.076 142.471 981.975 142.471 cv
982.871 142.471 983.598 142.944 983.598 143.529 cv
cp
f
1018.32 150.381 mo
1018.08 150.819 1017.29 150.852 1016.56 150.45 cv
1015.83 150.049 1015.43 149.368 1015.67 148.929 cv
1015.91 148.489 1016.7 148.457 1017.43 148.858 cv
1018.16 149.259 1018.56 149.94 1018.32 150.381 cv
cp
f
975.311 81.3555 mo
978.311 77.3555 980.65 81.0957 978.061 88.8555 cv
975.061 97.8555 965.311 117.855 934.311 118.105 cv
897.289 118.405 888.98 91.8457 888.561 77.8555 cv
888.061 60.8555 898.561 35.8555 930.061 33.6055 cv
957.779 31.625 966.311 54.3555 965.561 63.8555 cv
965.629 64.3154 li
961.58 64.9551 957.18 67.5059 955.311 72.6055 cv
949.26 70.7148 944.35 71.3955 941.02 73.4756 cv
938.18 64.5654 924.629 60.5156 918.811 71.1055 cv
911.811 83.8555 924.08 99.4951 942.311 97.6055 cv
961.561 95.6055 971.76 86.0957 975.311 81.3555 cv
cp
.118532 .179629 .999206 0 cmyk
f
944.35 108.655 mo
964.41 105.735 975.25 92.4951 977.91 83.6953 cv
979.15 83.7949 li
979.061 85.1855 978.709 86.8848 978.061 88.8555 cv
975.061 97.8555 965.311 117.855 934.311 118.105 cv
897.289 118.405 888.98 91.8457 888.561 77.8555 cv
888.17 64.5156 894.549 46.2451 912.539 37.916 cv
891.359 52.3555 891.75 81.6953 900.891 93.9854 cv
912.289 109.275 931.459 110.535 944.35 108.655 cv
cp
.240848 .455299 1 .0437018 cmyk
f
955.311 72.6055 mo
949.26 70.7148 944.35 71.3955 941.02 73.4756 cv
938.18 64.5654 924.629 60.5156 918.811 71.1055 cv
913.289 81.1553 919.75 93.0059 931.67 96.6455 cv
901.221 93.7051 907.619 62.3154 923.68 57.2949 cv
942.949 51.2754 953.15 65.6855 955.311 72.6055 cv
cp
f
931.648 39.9375 mo
929.328 41.3457 930.314 50.4385 933.814 51.2715 cv
937.314 52.1045 944.814 45.2715 947.48 43.6045 cv
950.148 41.9375 936.314 37.1045 931.648 39.9375 cv
cp
0 0 0 0 cmyk
f
955.98 49.7715 mo
953.518 49.1143 947.48 53.7715 947.648 57.1045 cv
947.814 60.4375 957.48 62.4375 959.48 61.9375 cv
961.48 61.4375 958.48 50.4385 955.98 49.7715 cv
cp
f
916.648 42.1045 mo
912.814 42.9375 908.619 44.4453 907.148 48.2715 cv
906.314 50.4375 915.148 55.4375 916.648 51.4375 cv
918.891 45.457 919.113 41.5684 916.648 42.1045 cv
cp
f
974.23 87.0215 mo
972.479 88.7734 971.379 89.6582 971.73 90.2715 cv
973.98 94.1875 975.98 85.2715 974.23 87.0215 cv
cp
f
965.814 93.7295 mo
963.398 94.8545 961.314 95.7295 961.648 96.4375 cv
962.096 97.3916 965.896 97.3545 967.564 96.8545 cv
969.23 96.3545 967.207 93.0811 965.814 93.7295 cv
cp
f
953.98 98.9375 mo
952.49 99.3105 949.314 100.104 949.98 100.604 cv
950.648 101.104 954.98 101.605 955.814 101.271 cv
956.648 100.938 955.648 98.5215 953.98 98.9375 cv
cp
f
976.641 88.3809 mo
973.16 98.8223 963.031 116.373 934.303 116.604 cv
893.299 116.925 890.256 84.3457 890.064 77.8105 cv
889.658 64.0576 897.521 37.4326 930.172 35.1006 cv
940.627 34.3516 949.436 37.2656 955.645 43.5195 cv
962.33 50.2559 964.334 59.0293 964.08 63.4805 cv
962.992 63.6377 961.914 63.9219 960.881 64.3525 cv
959.248 65.0283 957.732 66.0762 956.52 67.4199 cv
955.625 68.4063 954.914 69.5625 954.441 70.791 cv
953.338 70.4189 952.184 70.1777 951.012 70.0527 cv
949.373 69.8809 947.689 69.9795 946.063 70.3418 cv
944.643 70.6504 943.268 71.1934 942.035 71.9453 cv
941.082 69.7012 939.49 67.7285 937.502 66.2354 cv
937.771 64.3887 938.516 62.4521 939.367 60.627 cv
940.367 58.5244 941.637 56.5254 943.129 54.6992 cv
944.625 52.8711 946.381 51.2539 948.355 49.8887 cv
950.342 48.5449 952.578 47.5176 954.98 46.8281 cv
952.479 46.8643 949.949 47.4727 947.609 48.5488 cv
945.25 49.5996 943.107 51.1445 941.246 52.9609 cv
939.379 54.7793 937.797 56.8945 936.568 59.2197 cv
935.719 60.876 934.992 62.6338 934.643 64.5508 cv
933.266 63.9316 931.791 63.5137 930.271 63.3564 cv
929.193 63.2461 928.146 63.2656 927.137 63.4014 cv
926.547 61.7686 926.021 60.1182 925.574 58.4404 cv
925.064 56.4531 924.658 54.4346 924.436 52.3877 cv
923.955 48.291 924.203 44.1055 925.279 39.8857 cv
924.076 41.7012 923.164 43.7461 922.59 45.8955 cv
921.996 48.043 921.73 50.2852 921.707 52.5264 cv
921.701 54.7686 921.945 57.0137 922.445 59.1992 cv
922.828 60.9199 923.381 62.6055 924.096 64.2197 cv
921.723 65.2051 919.668 66.9492 918.105 69.373 cv
916.561 68.9473 915.029 68.3613 913.574 67.627 cv
911.818 66.7168 910.141 65.6309 908.637 64.3105 cv
907.125 63.002 905.787 61.4746 904.615 59.7852 cv
904.027 58.9424 903.492 58.0508 903.02 57.1191 cv
902.506 56.2012 902.09 55.2305 901.658 54.2461 cv
901.736 55.3184 901.939 56.377 902.186 57.4375 cv
902.465 58.4854 902.82 59.5215 903.248 60.5371 cv
904.117 62.5615 905.355 64.4531 906.867 66.1123 cv
908.389 67.7617 910.166 69.1992 912.145 70.291 cv
913.563 71.083 915.068 71.7344 916.654 72.1699 cv
915.557 74.8271 915.152 77.6484 915.43 80.4443 cv
913.979 80.8857 912.469 81.2695 910.932 81.5703 cv
909.09 81.9395 907.221 82.2285 905.344 82.4121 cv
903.465 82.5898 901.576 82.6426 899.701 82.4814 cv
897.848 82.2822 895.945 81.8906 894.395 80.6758 cv
895.57 82.291 897.547 83.1904 899.453 83.75 cv
901.391 84.3271 903.4 84.5586 905.398 84.6484 cv
907.398 84.7334 909.4 84.6406 911.389 84.3936 cv
912.928 84.1816 914.467 83.9111 915.994 83.4551 cv
916.516 85.3174 917.34 87.1367 918.477 88.8516 cv
919.008 89.6514 919.6 90.4033 920.229 91.1201 cv
919.348 92.2461 918.369 93.292 917.295 94.3008 cv
915.984 95.5137 914.572 96.6484 913.068 97.6621 cv
910.057 99.7031 906.705 101.279 902.941 102.111 cv
904.854 102.389 906.846 102.291 908.777 101.889 cv
910.717 101.5 912.6 100.818 914.387 99.9414 cv
916.166 99.0508 917.857 97.9619 919.387 96.6504 cv
920.518 95.6875 921.592 94.582 922.479 93.3359 cv
924.697 95.2334 927.295 96.7217 930.156 97.7256 cv
930.207 99.0205 930.158 100.338 930.063 101.68 cv
929.943 103.137 929.768 104.6 929.484 106.042 cv
929.199 107.482 928.836 108.911 928.313 110.291 cv
927.773 111.659 927.119 113.012 926.078 114.215 cv
927.551 113.593 928.818 112.426 929.775 111.1 cv
930.742 109.768 931.469 108.28 932.016 106.746 cv
932.561 105.209 932.951 103.622 933.154 102.004 cv
933.299 100.895 933.357 99.7549 933.295 98.6084 cv
936.201 99.2432 939.297 99.4258 942.469 99.0967 cv
942.688 99.0742 942.896 99.0449 943.111 99.0205 cv
943.682 99.8672 944.137 100.721 944.545 101.666 cv
945.002 102.762 945.365 103.938 945.627 105.166 cv
946.168 107.628 946.352 110.257 946.635 112.979 cv
947.641 110.434 948.172 107.705 948.094 104.873 cv
948.043 103.461 947.836 102.016 947.363 100.617 cv
947.139 99.918 946.832 99.2188 946.461 98.5605 cv
949.535 98.0527 952.346 97.3594 954.904 96.541 cv
955.688 97.0488 956.328 97.5547 956.969 98.2051 cv
957.607 98.8662 958.201 99.625 958.725 100.471 cv
959.789 102.158 960.592 104.123 961.473 106.178 cv
961.813 103.967 961.654 101.677 960.896 99.4531 cv
960.508 98.3486 959.963 97.2559 959.195 96.2852 cv
958.936 95.9473 958.631 95.627 958.313 95.3223 cv
961.436 94.0859 964.123 92.6768 966.406 91.2383 cv
966.66 91.3887 966.949 91.5879 967.262 91.832 cv
967.734 92.2109 968.236 92.6406 968.715 93.1094 cv
969.203 93.5703 969.682 94.0645 970.158 94.5781 cv
970.623 95.1035 971.107 95.6309 971.549 96.2617 cv
971.668 95.4941 971.588 94.6914 971.406 93.9395 cv
971.23 93.1797 970.949 92.4531 970.605 91.75 cv
970.248 91.0527 969.828 90.377 969.275 89.7559 cv
969.191 89.6621 969.096 89.5664 969.002 89.4727 cv
973.037 86.5137 975.441 83.6846 976.514 82.2539 cv
976.936 81.6934 977.248 81.4355 977.428 81.3203 cv
977.742 82.0078 977.992 84.3301 976.641 88.3809 cv
cp
978.77 78.5303 mo
978.076 78.166 976.234 77.627 974.113 80.4551 cv
972.438 82.6895 963.021 93.9453 942.16 96.1123 cv
933.346 97.0293 925.236 93.6084 920.977 87.1914 cv
917.748 82.3281 917.438 76.7275 920.129 71.8262 cv
922.275 67.917 925.859 65.9121 929.963 66.3408 cv
931.77 66.5273 933.496 67.167 934.994 68.1279 cv
935.1 68.2129 935.207 68.291 935.334 68.3457 cv
937.336 69.7266 938.887 71.7002 939.6 73.959 cv
939.088 74.543 938.648 75.1787 938.314 75.8545 cv
940.766 73.8789 943.615 73.0742 946.422 72.96 cv
947.834 72.9082 949.238 73.0215 950.645 73.2129 cv
952.053 73.3867 953.449 73.6855 954.904 73.916 cv
954.904 73.917 li
955.877 74.3623 li
956.605 73.0781 li
957.32 71.8184 958.059 70.6543 958.982 69.624 cv
959.898 68.5918 960.973 67.6875 962.184 66.9248 cv
963.398 66.1641 964.752 65.5742 966.197 65.1543 cv
967.646 64.7441 969.174 64.5098 970.814 64.6045 cv
969.717 63.9082 968.416 63.543 967.084 63.4063 cv
967.344 57.4805 964.6 48.2842 957.773 41.4063 cv
953.002 36.5996 944.307 31.0879 929.957 32.1084 cv
895.037 34.6025 886.631 63.1514 887.064 77.8984 cv
887.633 97.1934 900.201 119.609 933.715 119.607 cv
933.916 119.607 934.123 119.605 934.326 119.604 cv
964.922 119.357 975.754 100.529 979.486 89.3281 cv
981.313 83.8555 981.037 79.7188 978.77 78.5303 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
827.879 172.415 mo
825.92 175.08 824.912 179.205 826.184 182.922 cv
806.792 200.608 774.792 202.357 761.147 203.593 cv
761.147 203.593 753.713 208.2 746.309 207.201 cv
738.37 198.58 745.525 178.805 751.855 176.318 cv
788.01 179.677 805.866 173.439 818.796 166.386 cv
820.135 169.16 823.098 171.749 827.879 172.415 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
827.879 172.415 mo
825.92 175.08 824.912 179.205 826.184 182.922 cv
806.792 200.608 774.792 202.357 761.147 203.593 cv
758.728 197.994 757.86 187.918 764.75 177.153 cv
766.317 177.204 767.838 177.236 769.325 177.249 cv
761.681 186.725 779.417 195.533 794.798 191.667 cv
809.865 187.886 813.553 177.583 813.792 168.935 cv
815.55 168.11 817.213 167.251 818.796 166.386 cv
820.135 169.16 823.098 171.749 827.879 172.415 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
761.147 203.593 mo
761.147 203.593 753.713 208.2 746.309 207.201 cv
738.37 198.58 745.525 178.805 751.855 176.318 cv
756.438 176.739 760.721 177.016 764.75 177.153 cv
757.86 187.918 758.728 197.994 761.147 203.593 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
751.301 182.034 mo
788.822 184.735 808.216 178.035 822.219 170.299 cv
820.628 169.202 819.49 167.822 818.796 166.386 cv
805.866 173.439 788.01 179.677 751.855 176.318 cv
747.875 177.882 743.573 186.278 742.896 194.44 cv
744.91 188.394 748.235 183.324 751.301 182.034 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
763.614 201.867 mo
762.686 201.947 761.817 202.021 761.011 202.094 cv
760.659 202.127 li
760.358 202.312 li
760.29 202.354 753.648 206.394 747.062 205.778 cv
744.3 202.414 743.562 196.858 745.043 190.419 cv
746.535 183.935 749.734 179.058 752.108 177.844 cv
786.849 181.013 804.998 175.396 818.542 168.211 cv
818.737 168.567 818.954 168.912 819.193 169.242 cv
820.155 170.61 821.473 171.733 822.945 172.53 cv
823.714 172.944 824.526 173.26 825.355 173.489 cv
824.955 174.282 824.653 175.122 824.449 175.979 cv
824.066 177.598 824.062 179.301 824.398 180.919 cv
824.484 181.342 824.598 181.758 824.735 182.166 cv
806.812 198.14 777.752 200.654 763.614 201.867 cv
cp
827.781 184.504 mo
827.248 183.236 827.008 181.915 826.996 180.613 cv
826.984 179.308 827.227 178.025 827.588 176.799 cv
827.951 175.567 828.484 174.408 829.086 173.302 cv
830.332 171.006 li
828.084 170.927 li
828.082 170.926 li
826.766 170.641 825.506 170.274 824.324 169.75 cv
823.139 169.23 822.042 168.53 821.086 167.636 cv
820.145 166.729 819.351 165.624 818.857 164.353 cv
818.382 163.091 818.134 161.638 818.661 160.209 cv
817.595 161.33 817.251 163.077 817.417 164.677 cv
817.439 164.902 817.493 165.124 817.533 165.347 cv
804.306 172.435 786.558 178.028 751.994 174.82 cv
751.638 174.787 li
751.306 174.917 li
747.568 176.386 743.791 182.483 742.12 189.747 cv
740.351 197.434 741.478 204.167 745.209 208.22 cv
745.577 208.618 li
746.114 208.689 li
753.16 209.633 760.057 205.954 761.619 205.053 cv
762.324 204.989 763.076 204.924 763.87 204.856 cv
778.189 203.628 807.457 201.094 826.156 184.907 cv
826.254 185.044 826.342 185.189 826.447 185.319 cv
827.459 186.566 828.758 187.495 830.137 188.086 cv
829.119 186.975 828.307 185.772 827.781 184.504 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
962.76 193.544 mo
962.76 193.544 973.023 191.67 978.982 194.527 cv
981.516 204.677 967.545 218.909 964.721 219.366 cv
948.85 218.767 913.074 195.155 900.883 184.748 cv
902.328 182.325 903.039 179.176 901.879 175.668 cv
904.285 175.442 908.26 173.077 909.791 169.205 cv
924.48 179.194 950.092 190.511 962.76 193.544 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
962.766 193.551 mo
962.766 193.551 973.023 191.67 978.982 194.527 cv
981.516 204.677 967.545 218.909 964.721 219.366 cv
961.188 219.23 956.648 217.952 951.598 215.927 cv
959.529 209.329 963.93 197.532 962.766 193.551 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
962.76 193.544 mo
962.766 193.551 li
963.93 197.532 959.529 209.329 951.598 215.927 cv
934.055 208.882 910.359 192.832 900.883 184.748 cv
902.328 182.325 903.039 179.176 901.879 175.668 cv
904.285 175.442 908.26 173.077 909.791 169.205 cv
911.473 170.354 913.297 171.503 915.234 172.667 cv
915.658 179.77 918.229 190.64 932.533 198.718 cv
947.945 207.433 958.719 198.574 957.43 192.032 cv
959.377 192.653 961.17 193.16 962.76 193.544 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
958.029 198.448 mo
958.029 198.448 968.393 196.645 974.441 199.587 cv
975.787 204.811 972.84 211.059 969.238 216.004 cv
974.191 211.094 980.791 201.771 978.982 194.527 cv
973.023 191.67 962.76 193.544 962.76 193.544 cv
950.092 190.511 924.48 179.194 909.791 169.205 cv
908.92 171.408 907.258 173.121 905.545 174.232 cv
920.652 184.248 945.555 195.358 958.029 198.448 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
964.566 217.857 mo
949.172 217.084 914.854 194.405 902.557 184.188 cv
903.27 182.936 903.754 181.525 903.926 180.051 cv
904.045 178.977 903.975 177.885 903.758 176.831 cv
904.852 176.494 905.799 175.947 906.688 175.325 cv
907.998 174.379 909.105 173.16 909.91 171.755 cv
910.004 171.594 910.076 171.421 910.16 171.253 cv
925.377 181.29 950.16 192.071 962.406 195.002 cv
962.713 195.075 li
963.023 195.02 li
963.117 195.001 972.125 193.394 977.672 195.592 cv
979.119 204.524 967.068 216.979 964.566 217.857 cv
cp
979.633 193.178 mo
973.846 190.397 964.67 191.706 962.807 192.012 cv
950.502 188.989 925.85 178.191 911.096 168.274 cv
911.145 167.902 911.174 167.528 911.174 167.157 cv
911.166 165.573 910.711 164.055 909.908 162.812 cv
909.99 164.29 909.883 165.683 909.51 166.943 cv
909.143 168.204 908.521 169.322 907.734 170.299 cv
906.943 171.272 905.975 172.097 904.932 172.776 cv
903.9 173.441 902.707 173.979 901.734 174.174 cv
900.014 174.52 li
900.451 176.14 li
900.783 177.365 900.957 178.591 900.928 179.831 cv
900.91 181.072 900.65 182.323 900.195 183.549 cv
899.725 184.767 899.043 185.944 898.17 187.004 cv
897.285 188.042 896.264 189.053 894.895 189.59 cv
896.395 189.609 897.863 188.909 899.115 188.037 cv
899.707 187.618 900.26 187.136 900.77 186.605 cv
913.711 197.339 948.521 220.255 964.66 220.864 cv
964.955 220.846 li
966.168 220.651 968.133 219.217 970.24 217.134 cv
972.242 215.156 974.375 212.595 976.119 209.955 cv
978.854 205.814 981.822 199.715 980.439 194.166 cv
980.27 193.482 li
979.633 193.178 li
cp
.75021 .679683 .670222 .90164 cmyk
f
951.838 82.6719 mo
952.531 83.0537 li
951.225 84.623 950.539 86.8896 950.65 89.9355 cv
947.936 89.4883 943.48 89.9473 941.117 92.2627 cv
919.16 90.582 926.206 68.2021 930.128 68.7373 cv
937.588 71.7842 946.968 78.4795 951.838 82.6719 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
944.049 90.5195 mo
942.938 90.9209 941.904 91.4873 941.117 92.2627 cv
919.57 90.6113 925.955 69.0264 929.906 68.7314 cv
928.738 71.0225 925.24 81.6768 933.824 84.8359 cv
932.289 81.8076 931.164 78.3672 931.215 74.4912 cv
937.465 77.21 942.436 84.2979 944.049 90.5195 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
929.906 68.7314 mo
932.016 69.1025 944.852 76.4121 952.531 83.0537 cv
951.045 85.0605 950.364 88.3223 950.65 89.9355 cv
948.362 83.9043 940.021 76.2041 930.461 72.0234 cv
928.588 72.9717 927.517 76.1406 926.811 80.9004 cv
925.867 75.6602 927.113 70.0967 929.906 68.7314 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
947.1 88.167 mo
946.948 88.1846 946.797 88.2148 946.646 88.2393 cv
946.254 86.7539 945.617 85.3408 944.836 84.043 cv
943.828 82.3584 942.537 80.8867 941.139 79.5771 cv
939.732 78.2725 938.189 77.1436 936.537 76.2197 cv
935.707 75.7676 934.859 75.3467 933.965 75.0371 cv
933.079 74.7363 932.151 74.4336 931.213 74.4922 cv
932.096 74.7549 932.857 75.2441 933.59 75.7598 cv
934.316 76.29 935.016 76.8418 935.674 77.4414 cv
937 78.627 938.201 79.9297 939.275 81.3008 cv
940.35 82.6719 941.265 84.1338 942.059 85.6221 cv
942.668 86.7705 943.177 87.9473 943.622 89.1494 cv
943.564 89.1768 943.504 89.1982 943.445 89.2266 cv
942.658 89.6152 941.898 90.124 941.248 90.7529 cv
931.043 89.9766 928.126 84.6953 927.498 80.3232 cv
926.777 75.3232 928.916 70.9443 929.941 70.2803 cv
937.242 73.3555 946.084 79.7529 950.55 83.5449 cv
950.008 84.3418 949.593 85.2236 949.35 86.127 cv
949.169 86.79 949.066 87.46 949.035 88.123 cv
948.387 88.0781 947.74 88.0996 947.1 88.167 cv
cp
954.702 80.5059 mo
954.012 80.7012 953.332 81.0186 952.695 81.4277 cv
948.066 77.4668 938.496 70.5283 930.693 67.3438 cv
930.328 67.2461 li
929.486 67.1299 928.237 67.373 926.943 69.1455 cv
924.816 72.0615 922.986 79.1357 925.813 85.0615 cv
927.441 88.4746 931.173 92.5645 939.596 93.5967 cv
939.473 94.1797 939.449 94.7705 939.563 95.3174 cv
940.11 94.2383 940.84 93.4668 941.682 92.9502 cv
942.527 92.4346 943.456 92.1182 944.428 91.9092 cv
946.371 91.5039 948.441 91.4668 950.403 91.418 cv
952.424 91.3662 li
952.146 89.8857 li
952.146 89.8838 li
952.294 88.8164 952.346 87.7998 952.504 86.8291 cv
952.654 85.8594 952.867 84.9189 953.326 84.0742 cv
953.766 83.2207 954.446 82.46 955.318 81.8291 cv
956.188 81.1914 957.238 80.7031 958.364 80.3037 cv
957.184 80.1357 955.938 80.1592 954.702 80.5059 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
1130.59 126.416 mo
1271.59 134.166 li
1207.34 143.916 li
1358.59 152.416 li
1271.59 178.416 li
1417.09 184.666 li
1337.34 205.166 li
1460.34 200.666 li
1403.84 227.916 li
1504.34 222.416 li
1504.34 222.416 1477.09 241.666 1462.09 251.416 cv
1606.09 228.166 1646.51 176.398 1646.51 126.334 cv
1646.51 76.2676 1606.09 24.5 1462.09 1.25 cv
1477.09 11 1504.34 30.25 1504.34 30.25 cv
1403.84 24.75 li
1460.34 52 li
1337.34 47.5 li
1417.09 68 li
1271.59 74.25 li
1358.59 100.25 li
1207.34 108.75 li
1271.59 118.5 li
1130.59 126.25 li
1130.59 126.416 li
cp
0 .419074 .980804 0 cmyk
f
1254.59 126.404 mo
1360.4 133.07 li
1312.19 141.457 li
1425.69 148.768 li
1360.4 171.129 li
1469.59 176.506 li
1409.75 194.137 li
1502.05 190.266 li
1459.65 213.703 li
1535.07 208.973 li
1535.07 208.973 1514.62 225.531 1503.36 233.916 cv
1611.43 213.92 1641.76 169.395 1641.76 126.334 cv
1641.76 83.2715 1611.43 38.748 1503.36 18.75 cv
1514.62 27.1367 1535.07 43.6934 1535.07 43.6934 cv
1459.65 38.9629 li
1502.05 62.4004 li
1409.75 58.5293 li
1469.59 76.1621 li
1360.4 81.5371 li
1425.69 103.9 li
1312.19 111.211 li
1360.4 119.596 li
1254.59 126.262 li
1254.59 126.404 li
cp
.0247501 .0310369 .9617 0 cmyk
f
1359.59 126.395 mo
1435.75 132.068 li
1401.05 139.207 li
1482.74 145.43 li
1435.75 164.467 li
1514.34 169.043 li
1471.26 184.053 li
1537.7 180.758 li
1507.18 200.709 li
1561.47 196.684 li
1561.47 196.684 1546.75 210.777 1538.65 217.916 cv
1616.43 200.893 1638.26 162.99 1638.26 126.334 cv
1638.26 89.6758 1616.43 51.7734 1538.65 34.75 cv
1546.75 41.8887 1561.47 55.9844 1561.47 55.9844 cv
1507.18 51.957 li
1537.7 71.9082 li
1471.26 68.6133 li
1514.34 83.623 li
1435.75 88.1992 li
1482.74 107.236 li
1401.05 113.459 li
1435.75 120.598 li
1359.59 126.273 li
1359.59 126.395 li
cp
.0187381 0 .613275 0 cmyk
f
1449.67 126.381 mo
1500.33 130.857 li
1477.25 136.488 li
1531.58 141.398 li
1500.33 156.418 li
1552.59 160.027 li
1523.95 171.869 li
1568.13 169.27 li
1547.83 185.01 li
1583.94 181.832 li
1583.94 181.832 1574.15 192.951 1568.76 198.584 cv
1620.49 185.154 1635.01 155.252 1635.01 126.334 cv
1635.01 97.4141 1620.49 67.5137 1568.76 54.084 cv
1574.15 59.7148 1583.94 70.834 1583.94 70.834 cv
1547.83 67.6582 li
1568.13 83.3965 li
1523.95 80.7988 li
1552.59 92.6387 li
1500.33 96.25 li
1531.58 111.268 li
1477.25 116.178 li
1500.33 121.809 li
1449.67 126.285 li
1449.67 126.381 li
cp
0 0 0 0 cmyk
f
1237.82 86.1699 mo
1232.52 84.9258 1217.83 83.6016 1218.98 86.8359 cv
1220.58 91.334 1246.35 88.1699 1237.82 86.1699 cv
cp
0 .419074 .980804 0 cmyk
f
1438.54 7.83398 mo
1435.31 6.82422 1421.75 3.49805 1423.52 7.83398 cv
1425.3 12.168 1442.8 9.16602 1438.54 7.83398 cv
cp
f
1247.3 188.334 mo
1242.53 186.957 1231.06 185.383 1230.78 188.334 cv
1230.25 193.834 1250.77 189.334 1247.3 188.334 cv
cp
f
1415.03 242.666 mo
1411.3 242.166 1398.77 238.666 1400.63 244.666 cv
1401.72 248.148 1419.28 243.236 1415.03 242.666 cv
cp
f
1587.31 82.3555 mo
1589.85 78.3555 1591.83 82.0957 1589.64 89.8555 cv
1587.1 98.8555 1578.84 118.855 1552.59 119.105 cv
1521.23 119.405 1514.2 92.8457 1513.84 78.8555 cv
1513.42 61.8555 1522.31 36.8555 1548.99 34.6055 cv
1572.46 32.625 1579.69 55.3555 1579.05 64.8555 cv
1579.11 65.3154 li
1575.68 65.9551 1571.96 68.5059 1570.37 73.6055 cv
1565.25 71.7148 1561.09 72.3955 1558.27 74.4756 cv
1555.87 65.5654 1544.39 61.5156 1539.46 72.1055 cv
1533.53 84.8555 1543.92 100.495 1559.36 98.6055 cv
1575.67 96.6055 1584.3 87.0957 1587.31 82.3555 cv
cp
.118532 .179629 .999206 0 cmyk
f
1561.09 109.655 mo
1578.08 106.735 1587.26 93.4951 1589.51 84.6953 cv
1590.56 84.7949 li
1590.49 86.1855 1590.19 87.8848 1589.64 89.8555 cv
1587.1 98.8555 1578.84 118.855 1552.59 119.105 cv
1521.23 119.405 1514.2 92.8457 1513.84 78.8555 cv
1513.51 65.5156 1518.91 47.2451 1534.15 38.916 cv
1516.21 53.3555 1516.54 82.6953 1524.29 94.9854 cv
1533.94 110.275 1550.17 111.535 1561.09 109.655 cv
cp
.240848 .455299 1 .0437018 cmyk
f
1570.37 73.6055 mo
1565.25 71.7148 1561.09 72.3955 1558.27 74.4756 cv
1555.87 65.5654 1544.39 61.5156 1539.46 72.1055 cv
1534.79 82.1553 1540.26 94.0059 1550.35 97.6455 cv
1524.56 94.7051 1529.98 63.3154 1543.58 58.2949 cv
1559.91 52.2754 1568.54 66.6855 1570.37 73.6055 cv
cp
f
1550.33 40.9375 mo
1548.37 42.3457 1549.2 51.4385 1552.17 52.2715 cv
1555.13 53.1045 1561.48 46.2715 1563.74 44.6045 cv
1566 42.9375 1554.29 38.1045 1550.33 40.9375 cv
cp
0 0 0 0 cmyk
f
1570.94 50.7715 mo
1568.86 50.1143 1563.74 54.7715 1563.88 58.1045 cv
1564.03 61.4375 1572.21 63.4375 1573.91 62.9375 cv
1575.6 62.4375 1573.06 51.4385 1570.94 50.7715 cv
cp
f
1537.63 43.1045 mo
1534.38 43.9375 1530.83 45.4453 1529.58 49.2715 cv
1528.88 51.4375 1536.36 56.4375 1537.63 52.4375 cv
1539.53 46.457 1539.72 42.5684 1537.63 43.1045 cv
cp
f
1586.4 88.0215 mo
1584.91 89.7734 1583.98 90.6582 1584.28 91.2715 cv
1586.19 95.1875 1587.88 86.2715 1586.4 88.0215 cv
cp
f
1579.27 94.7295 mo
1577.22 95.8545 1575.46 96.7295 1575.74 97.4375 cv
1576.12 98.3916 1579.34 98.3545 1580.75 97.8545 cv
1582.16 97.3545 1580.45 94.0811 1579.27 94.7295 cv
cp
f
1569.25 99.9375 mo
1567.98 100.311 1565.29 101.104 1565.86 101.604 cv
1566.43 102.104 1570.09 102.605 1570.8 102.271 cv
1571.51 101.938 1570.66 99.5215 1569.25 99.9375 cv
cp
f
1588.44 89.3809 mo
1585.49 99.8223 1576.91 117.373 1552.58 117.604 cv
1517.86 117.925 1515.28 85.3457 1515.12 78.8105 cv
1514.77 65.0576 1521.43 38.4326 1549.08 36.1006 cv
1557.94 35.3516 1565.4 38.2656 1570.66 44.5195 cv
1576.32 51.2559 1578.02 60.0293 1577.8 64.4805 cv
1576.88 64.6377 1575.97 64.9219 1575.09 65.3525 cv
1573.71 66.0283 1572.43 67.0762 1571.4 68.4199 cv
1570.64 69.4063 1570.04 70.5625 1569.64 71.791 cv
1568.7 71.4189 1567.73 71.1777 1566.73 71.0527 cv
1565.35 70.8809 1563.92 70.9795 1562.54 71.3418 cv
1561.34 71.6504 1560.18 72.1934 1559.13 72.9453 cv
1558.32 70.7012 1556.97 68.7285 1555.29 67.2354 cv
1555.52 65.3887 1556.15 63.4521 1556.87 61.627 cv
1557.72 59.5244 1558.79 57.5254 1560.06 55.6992 cv
1561.32 53.8711 1562.81 52.2539 1564.48 50.8887 cv
1566.17 49.5449 1568.06 48.5176 1570.09 47.8281 cv
1567.97 47.8643 1565.83 48.4727 1563.85 49.5488 cv
1561.85 50.5996 1560.04 52.1445 1558.46 53.9609 cv
1556.88 55.7793 1555.54 57.8945 1554.5 60.2197 cv
1553.78 61.876 1553.17 63.6338 1552.87 65.5508 cv
1551.7 64.9316 1550.46 64.5137 1549.17 64.3564 cv
1548.26 64.2461 1547.37 64.2656 1546.51 64.4014 cv
1546.01 62.7686 1545.57 61.1182 1545.19 59.4404 cv
1544.76 57.4531 1544.41 55.4346 1544.22 53.3877 cv
1543.82 49.291 1544.03 45.1055 1544.94 40.8857 cv
1543.92 42.7012 1543.15 44.7461 1542.66 46.8955 cv
1542.16 49.043 1541.93 51.2852 1541.91 53.5264 cv
1541.91 55.7686 1542.12 58.0137 1542.54 60.1992 cv
1542.86 61.9199 1543.33 63.6055 1543.94 65.2197 cv
1541.93 66.2051 1540.19 67.9492 1538.86 70.373 cv
1537.55 69.9473 1536.26 69.3613 1535.03 68.627 cv
1533.54 67.7168 1532.12 66.6309 1530.85 65.3105 cv
1529.56 64.002 1528.43 62.4746 1527.44 60.7852 cv
1526.94 59.9424 1526.49 59.0508 1526.09 58.1191 cv
1525.65 57.2012 1525.3 56.2305 1524.94 55.2461 cv
1525 56.3184 1525.17 57.377 1525.38 58.4375 cv
1525.62 59.4854 1525.92 60.5215 1526.28 61.5371 cv
1527.02 63.5615 1528.07 65.4531 1529.35 67.1123 cv
1530.63 68.7617 1532.14 70.1992 1533.82 71.291 cv
1535.02 72.083 1536.29 72.7344 1537.63 73.1699 cv
1536.71 75.8271 1536.36 78.6484 1536.6 81.4443 cv
1535.37 81.8857 1534.09 82.2695 1532.79 82.5703 cv
1531.23 82.9395 1529.64 83.2285 1528.06 83.4121 cv
1526.46 83.5898 1524.87 83.6426 1523.28 83.4814 cv
1521.71 83.2822 1520.1 82.8906 1518.78 81.6758 cv
1519.78 83.291 1521.45 84.1904 1523.07 84.75 cv
1524.71 85.3271 1526.41 85.5586 1528.1 85.6484 cv
1529.8 85.7334 1531.49 85.6406 1533.18 85.3936 cv
1534.48 85.1816 1535.78 84.9111 1537.08 84.4551 cv
1537.52 86.3174 1538.21 88.1367 1539.18 89.8516 cv
1539.63 90.6514 1540.13 91.4033 1540.66 92.1201 cv
1539.92 93.2461 1539.09 94.292 1538.18 95.3008 cv
1537.07 96.5137 1535.87 97.6484 1534.6 98.6621 cv
1532.05 100.703 1529.21 102.279 1526.02 103.111 cv
1527.64 103.389 1529.33 103.291 1530.96 102.889 cv
1532.61 102.5 1534.2 101.818 1535.71 100.941 cv
1537.22 100.051 1538.65 98.9619 1539.95 97.6504 cv
1540.91 96.6875 1541.82 95.582 1542.57 94.3359 cv
1544.45 96.2334 1546.65 97.7217 1549.07 98.7256 cv
1549.11 100.021 1549.07 101.338 1548.99 102.68 cv
1548.89 104.137 1548.74 105.6 1548.5 107.042 cv
1548.26 108.482 1547.95 109.911 1547.51 111.291 cv
1547.05 112.659 1546.5 114.012 1545.62 115.215 cv
1546.86 114.593 1547.94 113.426 1548.75 112.1 cv
1549.57 110.768 1550.18 109.28 1550.65 107.746 cv
1551.11 106.209 1551.44 104.622 1551.61 103.004 cv
1551.73 101.895 1551.78 100.755 1551.73 99.6084 cv
1554.19 100.243 1556.81 100.426 1559.5 100.097 cv
1559.68 100.074 1559.86 100.045 1560.04 100.021 cv
1560.53 100.867 1560.91 101.721 1561.26 102.666 cv
1561.64 103.762 1561.95 104.938 1562.17 106.166 cv
1562.63 108.628 1562.79 111.257 1563.03 113.979 cv
1563.88 111.434 1564.33 108.705 1564.26 105.873 cv
1564.22 104.461 1564.04 103.016 1563.64 101.617 cv
1563.45 100.918 1563.19 100.219 1562.88 99.5605 cv
1565.48 99.0527 1567.86 98.3594 1570.03 97.541 cv
1570.69 98.0488 1571.24 98.5547 1571.78 99.2051 cv
1572.32 99.8662 1572.82 100.625 1573.27 101.471 cv
1574.17 103.158 1574.85 105.123 1575.59 107.178 cv
1575.88 104.967 1575.75 102.677 1575.11 100.453 cv
1574.78 99.3486 1574.31 98.2559 1573.66 97.2852 cv
1573.44 96.9473 1573.19 96.627 1572.92 96.3223 cv
1575.56 95.0859 1577.84 93.6768 1579.77 92.2383 cv
1579.99 92.3887 1580.23 92.5879 1580.5 92.832 cv
1580.9 93.2109 1581.32 93.6406 1581.73 94.1094 cv
1582.14 94.5703 1582.54 95.0645 1582.95 95.5781 cv
1583.34 96.1035 1583.75 96.6309 1584.13 97.2617 cv
1584.23 96.4941 1584.16 95.6914 1584.01 94.9395 cv
1583.86 94.1797 1583.62 93.4531 1583.33 92.75 cv
1583.03 92.0527 1582.67 91.377 1582.2 90.7559 cv
1582.13 90.6621 1582.05 90.5664 1581.97 90.4727 cv
1585.39 87.5137 1587.42 84.6846 1588.33 83.2539 cv
1588.69 82.6934 1588.95 82.4355 1589.11 82.3203 cv
1589.37 83.0078 1589.58 85.3301 1588.44 89.3809 cv
cp
1590.24 79.5303 mo
1589.65 79.166 1588.09 78.627 1586.3 81.4551 cv
1584.88 83.6895 1576.9 94.9453 1559.24 97.1123 cv
1551.77 98.0293 1544.9 94.6084 1541.29 88.1914 cv
1538.56 83.3281 1538.3 77.7275 1540.58 72.8262 cv
1542.4 68.917 1545.43 66.9121 1548.91 67.3408 cv
1550.44 67.5273 1551.9 68.167 1553.17 69.1279 cv
1553.26 69.2129 1553.35 69.291 1553.46 69.3457 cv
1555.15 70.7266 1556.46 72.7002 1557.07 74.959 cv
1556.63 75.543 1556.26 76.1787 1555.98 76.8545 cv
1558.05 74.8789 1560.47 74.0742 1562.85 73.96 cv
1564.04 73.9082 1565.23 74.0215 1566.42 74.2129 cv
1567.62 74.3867 1568.8 74.6855 1570.03 74.916 cv
1570.03 74.917 li
1570.85 75.3623 li
1571.47 74.0781 li
1572.08 72.8184 1572.7 71.6543 1573.48 70.624 cv
1574.26 69.5918 1575.17 68.6875 1576.2 67.9248 cv
1577.22 67.1641 1578.37 66.5742 1579.59 66.1543 cv
1580.82 65.7441 1582.12 65.5098 1583.5 65.6045 cv
1582.58 64.9082 1581.47 64.543 1580.35 64.4063 cv
1580.56 58.4805 1578.24 49.2842 1572.46 42.4063 cv
1568.42 37.5996 1561.05 32.0879 1548.9 33.1084 cv
1519.33 35.6025 1512.21 64.1514 1512.57 78.8984 cv
1513.06 98.1934 1523.7 120.609 1552.08 120.607 cv
1552.26 120.607 1552.43 120.605 1552.6 120.604 cv
1578.51 120.357 1587.69 101.529 1590.85 90.3281 cv
1592.39 84.8555 1592.16 80.7188 1590.24 79.5303 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
1441.04 170.915 mo
1439.32 173.781 1438.74 178.04 1440.42 181.627 cv
1429.41 196.147 1406.71 209.231 1389.31 214.391 cv
1389.31 214.391 1381.92 220.596 1374.98 219.665 cv
1366.23 211.113 1371.33 191.255 1377.39 188.159 cv
1407.41 188.463 1422.93 172.729 1430.77 164.563 cv
1432.04 167.665 1435.45 170.695 1441.04 170.915 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
1389.31 214.391 mo
1389.31 214.391 1381.92 220.596 1374.98 219.665 cv
1366.23 211.113 1371.33 191.255 1377.39 188.159 cv
1382.14 188.205 1386.53 187.85 1390.58 187.193 cv
1384.45 198.804 1386.31 208.976 1389.31 214.391 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
1388.89 212.947 mo
1388.59 213.035 li
1388.35 213.236 li
1388.28 213.293 1381.75 218.708 1375.67 218.229 cv
1371.02 213.26 1371.64 205.202 1372.14 201.91 cv
1373.1 195.594 1375.7 191.003 1377.78 189.657 cv
1406.83 189.814 1422.64 175.095 1430.78 166.726 cv
1431.14 167.396 1431.57 168.035 1432.08 168.61 cv
1433.17 169.877 1434.59 170.865 1436.13 171.515 cv
1436.94 171.85 1437.78 172.085 1438.63 172.231 cv
1438.31 173.061 1438.09 173.926 1437.97 174.798 cv
1437.75 176.446 1437.91 178.142 1438.4 179.72 cv
1438.55 180.188 1438.73 180.639 1438.94 181.08 cv
1427.82 195.452 1405.13 208.137 1388.89 212.947 cv
cp
1442.12 182.955 mo
1441.47 181.746 1441.1 180.455 1440.96 179.16 cv
1440.82 177.862 1440.94 176.562 1441.18 175.306 cv
1441.42 174.045 1441.83 172.84 1442.32 171.679 cv
1443.34 169.272 li
1441.09 169.414 li
1441.09 169.413 li
1439.75 169.258 1438.46 169.018 1437.23 168.612 cv
1436 168.211 1434.85 167.622 1433.8 166.825 cv
1432.78 166.016 1431.88 164.994 1431.27 163.776 cv
1430.67 162.567 1430.28 161.146 1430.66 159.673 cv
1429.87 160.696 1429.62 162.11 1429.75 163.469 cv
1422.24 171.277 1406.84 186.953 1377.4 186.654 cv
1377.04 186.65 li
1376.71 186.818 li
1373.27 188.577 1370.24 194.462 1369.18 201.46 cv
1367.95 209.556 1369.68 216.582 1373.93 220.735 cv
1374.29 221.083 li
1374.78 221.149 li
1381.63 222.065 1388.61 216.865 1390.03 215.737 cv
1406.81 210.701 1428.98 198.286 1440.7 183.688 cv
1440.76 183.756 1440.81 183.832 1440.88 183.897 cv
1442.01 185.039 1443.39 185.836 1444.82 186.289 cv
1443.7 185.283 1442.77 184.166 1442.12 182.955 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
1567.21 170.223 mo
1567.21 170.223 1576.09 167.497 1581.86 170.088 cv
1584.89 180.578 1573.2 195.331 1570.4 195.922 cv
1554.2 196.078 1521.34 183.771 1501.9 171.699 cv
1503.12 169.248 1503.61 166.164 1502.32 162.835 cv
1504.75 162.494 1508.66 159.875 1509.96 155.852 cv
1536.4 166.429 1551.74 168.764 1567.21 170.223 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
1567.21 170.223 mo
1567.21 170.223 1576.09 167.497 1581.86 170.088 cv
1584.89 180.578 1573.2 195.331 1570.4 195.922 cv
1566.55 195.962 1561.74 195.291 1556.41 194.084 cv
1556.51 193.669 li
1564.54 186.788 1568.62 174.233 1567.21 170.223 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
1581.86 170.088 mo
1576.09 167.497 1567.21 170.223 1567.21 170.223 cv
1551.74 168.764 1536.4 166.429 1509.96 155.852 cv
1509.27 157.985 1507.85 159.724 1506.3 160.937 cv
1506.45 161.225 1506.82 161.457 1506.82 161.457 cv
1532.69 171.922 1547.67 174.287 1562.78 175.8 cv
1562.78 175.8 1571.43 173.194 1577.07 175.753 cv
1578.94 182.093 1575.31 189.988 1571.63 195.221 cv
1575.62 192.106 1584.55 179.416 1581.86 170.088 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
1570.17 194.423 mo
1553.79 194.477 1522.2 182.284 1503.58 170.966 cv
1504.13 169.771 1504.48 168.463 1504.58 167.115 cv
1504.64 166.036 1504.52 164.949 1504.26 163.906 cv
1505.33 163.518 1506.25 162.927 1507.11 162.264 cv
1508.38 161.255 1509.42 159.984 1510.16 158.543 cv
1510.3 158.268 1510.42 157.98 1510.53 157.692 cv
1537.09 168.203 1552.45 170.338 1567.07 171.716 cv
1567.36 171.743 li
1567.65 171.657 li
1567.73 171.632 1575.38 169.324 1580.59 171.192 cv
1582.62 180.54 1572.43 193.442 1570.17 194.423 cv
cp
1582.47 168.719 mo
1576.81 166.174 1568.73 168.23 1567.06 168.702 cv
1552.67 167.337 1537.48 165.177 1511.19 154.724 cv
1511.2 154.445 1511.22 154.166 1511.2 153.891 cv
1511.12 152.309 1510.59 150.813 1509.73 149.61 cv
1509.88 151.083 1509.84 152.479 1509.53 153.757 cv
1509.22 155.033 1508.66 156.18 1507.92 157.192 cv
1507.17 158.203 1506.24 159.072 1505.23 159.801 cv
1504.24 160.514 1503.07 161.107 1502.11 161.349 cv
1500.41 161.776 li
1500.92 163.374 li
1501.31 164.583 1501.54 165.798 1501.57 167.038 cv
1501.62 168.279 1501.41 169.541 1501.02 170.786 cv
1500.61 172.025 1499.98 173.234 1499.16 174.334 cv
1498.33 175.414 1497.35 176.472 1496.01 177.074 cv
1497.51 177.021 1498.95 176.253 1500.15 175.322 cv
1500.83 174.796 1501.44 174.183 1501.99 173.51 cv
1521.07 185.1 1553.61 197.589 1570.41 197.422 cv
1570.71 197.389 li
1571.76 197.169 1573.14 196.058 1574.56 194.507 cv
1576.15 192.778 1577.8 190.506 1579.12 188.316 cv
1581.53 184.302 1585.29 176.541 1583.3 169.671 cv
1583.11 169.003 li
1582.47 168.719 li
cp
.75021 .679683 .670222 .90164 cmyk
f
1407.07 128.636 mo
1409.39 122.667 1407.94 107.31 1399.32 94.6592 cv
1394.31 87.3008 1388.85 91.5674 1389.95 101.84 cv
1382.27 90.0918 1374.52 84.6816 1366.5 86.2861 cv
1356.67 88.252 1359.21 104.141 1367.65 112.268 cv
1360.63 112.264 1356.04 115.773 1359.55 120.208 cv
1364.61 126.587 1376.72 125.452 1380.21 125.702 cv
1374.48 128.799 1372.66 135.52 1380.64 136.093 cv
1386.21 136.494 1404.61 134.977 1407.07 128.636 cv
cp
.795712 .70428 .552972 .608392 cmyk
f
1403.48 102.08 mo
1408.36 112.809 1408.95 123.799 1407.07 128.637 cv
1404.61 134.977 1386.21 136.492 1380.64 136.091 cv
1372.66 135.518 1374.47 128.8 1380.21 125.703 cv
1376.72 125.452 1364.61 126.587 1359.55 120.208 cv
1356.04 115.774 1360.62 112.265 1367.64 112.269 cv
1359.89 104.803 1357.12 90.7891 1364.34 87.0361 cv
1361.13 91.166 1364.89 102.615 1379.12 109.724 cv
1369.8 109.826 1373.42 117.074 1381.05 118.916 cv
1386.11 120.142 1392.46 119.334 1396.69 117.193 cv
1400.43 115.296 1402.8 110.825 1403.48 102.08 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
1399.32 94.6592 mo
1394.31 87.3008 1388.85 91.5674 1389.95 101.84 cv
1382.27 90.0918 1374.52 84.6816 1366.5 86.2861 cv
1358.51 87.8838 1358.69 98.6836 1363.57 107.033 cv
1361.94 101.586 1361.99 94.8555 1366.57 93.7842 cv
1373.7 92.1162 1386.74 102.229 1393.45 113.907 cv
1392.56 103.649 1395.28 96.8477 1399.67 104.16 cv
1404.84 112.786 1406.65 122.395 1406.6 129.51 cv
1406.79 129.228 1406.96 128.939 1407.07 128.636 cv
1409.39 122.667 1407.94 107.31 1399.32 94.6592 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
1380.32 124.206 mo
1385.46 124.576 li
1380.93 127.023 li
1377.95 128.631 1376.5 131.112 1376.81 132.585 cv
1377.14 134.113 1379.42 134.501 1380.75 134.597 cv
1387.22 135.063 1403.76 133.032 1405.67 128.094 cv
1407.84 122.512 1406.38 107.693 1398.08 95.5039 cv
1396.82 93.6543 1395.47 92.5459 1394.38 92.4678 cv
1393.87 92.4307 1393.42 92.6299 1392.99 93.0732 cv
1391.91 94.1836 1390.94 97.0293 1391.44 101.68 cv
1392.11 107.879 li
1388.7 102.66 li
1382.42 93.0615 1376.18 87.9746 1370.13 87.541 cv
1369.03 87.4619 1367.91 87.5332 1366.8 87.7559 cv
1364.39 88.2383 1362.8 89.7363 1362.08 92.2119 cv
1360.49 97.6377 1363.46 106.149 1368.69 111.187 cv
1371.37 113.769 li
1367.65 113.767 li
1363.32 113.766 1360.66 115.18 1360.02 116.496 cv
1359.65 117.272 1359.88 118.209 1360.73 119.275 cv
1362.9 122.018 1366.92 123.563 1373 124 cv
1374.84 124.133 1376.57 124.144 1377.95 124.153 cv
1378.94 124.159 1379.71 124.163 1380.32 124.206 cv
cp
1380.53 137.589 mo
1375.48 137.226 1374.2 134.693 1373.88 133.216 cv
1373.46 131.241 1374.27 129.027 1375.96 127.131 cv
1374.98 127.111 1373.91 127.074 1372.78 126.993 cv
1365.82 126.491 1361.11 124.578 1358.38 121.14 cv
1356.25 118.456 1356.8 116.259 1357.32 115.189 cv
1358.35 113.063 1360.98 111.563 1364.48 111.006 cv
1359.82 105.165 1357.54 97.0566 1359.2 91.3691 cv
1360.23 87.8408 1362.72 85.5117 1366.21 84.8135 cv
1367.59 84.5391 1368.98 84.4502 1370.35 84.5488 cv
1376.52 84.9922 1382.46 89.0898 1388.43 97.0439 cv
1388.72 94.4307 1389.54 92.3232 1390.83 90.9883 cv
1391.88 89.8975 1393.19 89.374 1394.6 89.4756 cv
1396.04 89.5791 1398.25 90.417 1400.56 93.8145 cv
1409.55 107.02 1410.93 122.836 1408.47 129.179 cv
1405.52 136.78 1385.61 137.954 1380.53 137.589 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
1436.82 103.831 mo
1430.84 98.6045 1419.18 99.6045 1420.07 108.081 cv
1412.32 105.831 1396.18 114.271 1403.32 127.081 cv
1391.51 129.604 1384.51 143.271 1395.07 155.831 cv
1388.51 158.604 1389.18 170.271 1399.57 174.331 cv
1396.84 183.938 1405.84 189.604 1416.07 189.331 cv
1413.18 196.271 1423.57 202.831 1433.07 200.331 cv
1433.18 209.271 1452.07 207.581 1456.82 203.081 cv
1458.84 211.271 1471.51 210.271 1477.32 203.331 cv
1481.51 208.271 1493.18 206.938 1499.32 197.831 cv
1504.51 202.938 1517.18 198.271 1519.32 188.331 cv
1529.51 192.271 1541.51 174.271 1531.32 156.831 cv
1537.07 148.581 1534.18 134.604 1525.82 134.831 cv
1526.51 116.271 1517.18 110.938 1509.07 115.081 cv
1506.18 104.271 1493.84 100.271 1489.82 108.331 cv
1486.18 98.9375 1474.84 96.6045 1472.07 103.081 cv
1466.84 94.6045 1455.84 93.9375 1453.82 101.081 cv
1446.84 95.6045 1438.51 97.6045 1436.82 103.831 cv
cp
.795712 .70428 .552972 .608392 cmyk
f
1516.57 114.065 mo
1521.97 115.476 1526.29 121.985 1525.82 134.836 cv
1534.18 134.605 1537.07 148.585 1531.32 156.835 cv
1541.51 174.275 1529.51 192.275 1519.32 188.335 cv
1517.18 198.275 1504.51 202.936 1499.32 197.835 cv
1493.18 206.936 1481.51 208.275 1477.32 203.335 cv
1471.51 210.275 1458.85 211.275 1456.82 203.085 cv
1452.07 207.585 1433.18 209.275 1433.07 200.335 cv
1423.57 202.835 1413.18 196.275 1416.07 189.335 cv
1405.85 189.605 1396.85 183.936 1399.57 174.335 cv
1389.18 170.275 1388.51 158.605 1395.07 155.835 cv
1384.51 143.275 1391.51 129.605 1403.32 127.086 cv
1398.95 119.226 1403.31 113.016 1409.14 109.916 cv
1404.82 115.135 1403.18 123.855 1413.32 130.586 cv
1404.09 135.995 1412.6 149.405 1425.46 147.515 cv
1418.79 153.275 1431.32 158.835 1438.72 155.436 cv
1437.88 162.565 1452.82 162.585 1457.23 157.415 cv
1456.71 164.886 1470.57 162.835 1473.22 157.595 cv
1476.31 165.146 1492.32 159.085 1493.07 151.835 cv
1498.24 158.695 1512.82 148.835 1509.82 138.836 cv
1522.74 143.735 1527.82 120.836 1516.57 114.086 cv
1516.57 114.065 li
cp
.78027 .700557 .606195 .759976 cmyk
f
1531.32 156.831 mo
1537.07 148.581 1534.18 134.604 1525.82 134.831 cv
1526.51 116.271 1517.18 110.938 1509.07 115.081 cv
1506.18 104.271 1493.84 100.271 1489.82 108.331 cv
1486.18 98.9375 1474.84 96.6045 1472.07 103.081 cv
1466.84 94.6045 1455.84 93.9375 1453.82 101.081 cv
1446.84 95.6045 1438.51 97.6045 1436.82 103.831 cv
1430.84 98.6045 1419.18 99.6045 1420.07 108.081 cv
1412.32 105.831 1396.18 114.271 1403.32 127.081 cv
1401.37 114.891 1414.59 112.88 1421.99 114.977 cv
1421.14 107.079 1432.28 106.147 1437.99 111.017 cv
1439.6 105.216 1447.55 103.353 1454.22 108.455 cv
1456.15 101.8 1466.65 102.422 1471.64 110.318 cv
1474.29 104.284 1485.11 106.458 1488.59 115.209 cv
1492.43 107.701 1504.2 111.427 1506.97 121.497 cv
1514.71 117.637 1523.62 122.606 1522.96 139.896 cv
1530.94 139.686 1532.88 149.672 1531.32 156.831 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
1457.66 200.22 mo
1458.28 202.722 li
1459.32 206.929 1463.56 207.384 1465.34 207.384 cv
1469.37 207.384 1473.62 205.415 1476.17 202.368 cv
1477.31 201.003 li
1478.47 202.361 li
1479.71 203.824 1481.92 204.663 1484.54 204.663 cv
1488.58 204.663 1494.26 202.647 1498.08 196.992 cv
1499.09 195.496 li
1500.38 196.763 li
1501.77 198.134 1503.67 198.421 1505.03 198.421 cv
1510.12 198.421 1516.47 194.442 1517.86 188.015 cv
1518.23 186.299 li
1519.86 186.933 li
1523.71 188.422 1528.19 186.009 1531.01 181.082 cv
1534.06 175.765 1535.41 166.8 1530.03 157.588 cv
1529.54 156.76 li
1530.09 155.974 li
1533.64 150.88 1533.38 143.955 1531.32 140.025 cv
1530.45 138.339 1528.81 136.328 1526.02 136.328 cv
1524.26 136.374 li
1524.32 134.775 li
1524.61 127.033 1523.06 120.998 1519.96 117.782 cv
1517.29 115.008 1513.46 114.521 1509.75 116.416 cv
1508.1 117.262 li
1507.62 115.469 li
1505.9 109.039 1500.68 105.57 1496.63 105.57 cv
1494.92 105.57 1492.58 106.165 1491.16 109 cv
1489.65 112.035 li
1488.42 108.874 li
1486.3 103.408 1481.58 100.918 1478.09 100.918 cv
1476.8 100.918 1474.48 101.275 1473.45 103.671 cv
1472.31 106.33 li
1470.79 103.869 li
1468.48 100.109 1464.56 97.6816 1460.82 97.6816 cv
1459.47 97.6816 1456.24 98.0527 1455.27 101.489 cv
1454.66 103.643 li
1452.9 102.262 li
1450.54 100.41 1447.83 99.3906 1445.28 99.3906 cv
1441.77 99.3906 1439.08 101.242 1438.27 104.224 cv
1437.64 106.54 li
1435.83 104.961 li
1433.81 103.187 1430.88 102.128 1428.01 102.128 cv
1425.7 102.128 1423.73 102.834 1422.63 104.064 cv
1421.75 105.034 1421.4 106.332 1421.56 107.924 cv
1421.8 110.145 li
1419.65 109.521 li
1418.96 109.32 1418.16 109.219 1417.29 109.219 cv
1412.95 109.219 1406.9 111.856 1404.31 116.271 cv
1402.51 119.344 1402.62 122.734 1404.63 126.351 cv
1405.62 128.123 li
1403.63 128.548 li
1398.24 129.701 1393.84 133.473 1392.15 138.394 cv
1390.32 143.721 1391.77 149.571 1396.22 154.866 cv
1397.53 156.421 li
1395.66 157.213 li
1393.53 158.112 1392.28 160.272 1392.31 162.989 cv
1392.36 166.188 1394.43 170.712 1400.12 172.934 cv
1401.39 173.43 li
1401.02 174.741 li
1400.15 177.78 1400.56 180.442 1402.23 182.653 cv
1404.74 185.978 1410.08 187.98 1416.03 187.831 cv
1418.35 187.77 li
1417.46 189.909 li
1416.81 191.462 1416.99 193.017 1418 194.528 cv
1419.9 197.382 1424.35 199.374 1428.83 199.374 cv
1430.15 199.374 1431.45 199.208 1432.69 198.88 cv
1434.55 198.392 li
1434.57 200.313 li
1434.63 204.897 1441.68 205.254 1443.85 205.254 cv
1448.69 205.254 1453.83 203.852 1455.79 201.992 cv
1457.66 200.22 li
cp
1465.34 210.384 mo
1461.02 210.384 1457.71 208.572 1456.11 205.44 cv
1453.15 207.146 1448.48 208.254 1443.85 208.254 cv
1437.19 208.254 1432.84 206 1431.81 202.132 cv
1430.83 202.293 1429.83 202.374 1428.83 202.374 cv
1423.32 202.374 1417.97 199.89 1415.5 196.192 cv
1414.38 194.501 1413.91 192.646 1414.14 190.813 cv
1407.96 190.54 1402.67 188.21 1399.84 184.462 cv
1397.85 181.827 1397.16 178.651 1397.82 175.209 cv
1391.65 172.286 1389.37 166.917 1389.31 163.03 cv
1389.27 159.835 1390.58 157.061 1392.82 155.4 cv
1388.54 149.632 1387.29 143.305 1389.31 137.42 cv
1391.14 132.084 1395.6 127.879 1401.17 126.102 cv
1399.07 121.168 1400.25 117.257 1401.72 114.752 cv
1404.98 109.209 1412.17 106.219 1417.29 106.219 cv
1417.73 106.219 1418.15 106.238 1418.57 106.279 cv
1418.73 104.652 1419.35 103.217 1420.39 102.058 cv
1422.1 100.168 1424.8 99.1279 1428.01 99.1279 cv
1430.87 99.1279 1433.79 99.9834 1436.15 101.471 cv
1437.83 98.3281 1441.22 96.3906 1445.28 96.3906 cv
1447.93 96.3906 1450.67 97.2324 1453.16 98.7891 cv
1454.64 96.2129 1457.42 94.6816 1460.82 94.6816 cv
1464.97 94.6816 1469.09 96.8301 1472.01 100.41 cv
1473.45 98.8047 1475.57 97.918 1478.09 97.918 cv
1482 97.918 1487.07 100.268 1490.05 105.367 cv
1491.73 103.564 1494.02 102.57 1496.63 102.57 cv
1501.54 102.57 1507.47 106.158 1510 113.039 cv
1511.4 112.521 1512.82 112.26 1514.23 112.26 cv
1517.23 112.26 1519.95 113.449 1522.12 115.701 cv
1524.6 118.272 1527.46 123.416 1527.36 133.432 cv
1530.12 133.869 1532.44 135.679 1533.98 138.637 cv
1536.78 143.996 1536.37 151.513 1533.08 156.888 cv
1538.56 166.923 1536.99 176.688 1533.61 182.575 cv
1530.81 187.462 1526.55 190.38 1522.23 190.38 cv
1521.61 190.38 1520.98 190.317 1520.37 190.194 cv
1518.05 197.255 1510.99 201.421 1505.03 201.421 cv
1502.95 201.421 1501.12 200.925 1499.62 199.972 cv
1495.18 205.613 1489.03 207.663 1484.54 207.663 cv
1481.68 207.663 1479.2 206.892 1477.38 205.461 cv
1474.25 208.488 1469.69 210.384 1465.34 210.384 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
1617.79 151.565 mo
1617.64 156.785 1611.39 161.806 1607.67 163.046 cv
1605.2 163.396 1599.12 162.025 1594.28 154.386 cv
1589.04 163.195 1594.28 168.415 1597.51 170.785 cv
1598.85 172.546 1586.87 182.186 1578.85 177.775 cv
1568.51 172.085 1567.06 170.995 1556.51 165.936 cv
1548.51 162.105 1545.01 156.936 1543.68 150.275 cv
1542.13 142.575 1546.32 124.676 1564.51 134.885 cv
1565.01 130.896 1565.01 125.916 1562.27 120.436 cv
1572.07 120.086 1575.03 111.465 1574.46 104.495 cv
1580.45 108.735 1591.13 105.805 1594.88 103.006 cv
1597.45 110.285 1601.56 113.506 1606.13 113.795 cv
1606.07 114.586 li
1607.09 119.436 1608.09 123.676 1607.84 127.905 cv
1603.85 132.885 1601.45 136.916 1605.19 141.525 cv
1609.07 146.335 1617.04 149.325 1617.79 151.565 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
1605.19 141.525 mo
1601.45 136.916 1603.85 132.885 1607.84 127.905 cv
1608.09 123.676 1607.09 119.436 1606.07 114.586 cv
1606.13 113.795 li
1604.04 113.662 1602.04 112.905 1600.24 111.434 cv
1602.87 116.558 1604.29 123.002 1604.03 127.391 cv
1601.03 133.078 1600.03 136.953 1600.78 139.328 cv
1603.03 145.641 1611.91 147.891 1617.72 152.309 cv
1617.75 152.062 1617.79 151.814 1617.79 151.565 cv
1617.04 149.325 1609.07 146.335 1605.19 141.525 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
1595.41 120.453 mo
1597.41 124.391 1599.01 129.887 1599.85 129.328 cv
1600.41 128.953 1600.63 125.631 1600.53 125.328 cv
1599.66 122.703 1594.35 118.371 1595.41 120.453 cv
cp
f
1619.79 85.5752 mo
1632.73 71.875 1632.18 95.2256 1619.29 107.735 cv
1615.17 111.735 1610.46 114.086 1606.13 113.795 cv
1601.56 113.506 1597.45 110.285 1594.88 103.006 cv
1591.13 105.805 1580.45 108.735 1574.46 104.495 cv
1575.03 111.465 1572.07 120.086 1562.27 120.436 cv
1565.01 125.916 1565.01 130.896 1564.51 134.885 cv
1546.32 124.676 1542.13 142.575 1543.68 150.275 cv
1545.01 156.936 1548.51 162.105 1556.51 165.936 cv
1540.85 166.605 1527.51 168.775 1526.51 157.775 cv
1516.57 160.505 1500.51 149.355 1513.01 142.355 cv
1496.26 135.355 1496.4 125.075 1504.11 119.855 cv
1494.92 111.416 1494.51 100.355 1507.09 96.0156 cv
1499.26 89.6055 1504.76 79.8555 1517.77 80.6152 cv
1514.76 70.1055 1522.01 65.1055 1537.14 68.4355 cv
1533.76 59.1055 1549.51 56.3555 1557.51 65.2051 cv
1558.51 56.3555 1571.51 57.3555 1576.88 66.2051 cv
1579.26 59.8555 1588.9 62.416 1591.04 71.1758 cv
1594.63 57.1855 1604.6 66.6455 1606.1 76.3555 cv
1613.31 60.666 1621.78 73.6152 1619.79 85.5752 cv
cp
.795712 .70428 .552972 .608392 cmyk
f
1624.79 100.646 mo
1623.31 103.166 1621.47 105.605 1619.29 107.735 cv
1615.17 111.735 1610.46 114.086 1606.13 113.795 cv
1601.56 113.506 1597.45 110.285 1594.88 103.006 cv
1591.13 105.805 1580.45 108.735 1574.46 104.495 cv
1575.03 111.465 1572.07 120.086 1562.27 120.436 cv
1565.01 125.916 1565.01 130.896 1564.51 134.885 cv
1546.32 124.676 1542.13 142.575 1543.68 150.275 cv
1545.01 156.936 1548.51 162.105 1556.51 165.936 cv
1540.85 166.605 1527.51 168.775 1526.51 157.775 cv
1516.57 160.505 1500.51 149.355 1513.01 142.355 cv
1496.26 135.355 1496.4 125.075 1504.11 119.855 cv
1494.92 111.416 1494.51 100.355 1507.09 96.0156 cv
1496.57 101.086 1506.49 113.596 1515.1 111.655 cv
1514.56 118.686 1527.03 122.176 1531.78 115.176 cv
1535.28 121.676 1548.77 121.575 1551.44 110.075 cv
1560.6 113.745 1571.1 102.006 1568.29 94.1055 cv
1572.79 98.1055 1592.69 100.075 1599.53 91.8252 cv
1601.79 103.285 1613.26 107.325 1624.79 100.646 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
1619.79 85.5752 mo
1621.78 73.6152 1613.31 60.666 1606.1 76.3555 cv
1604.6 66.6455 1594.63 57.1855 1591.04 71.1758 cv
1588.9 62.416 1579.26 59.8555 1576.88 66.2051 cv
1571.51 57.3555 1558.51 56.3555 1557.51 65.2051 cv
1549.51 56.3555 1533.76 59.1055 1537.14 68.4355 cv
1538.03 64.7236 1547.49 59.2969 1558.87 74.3906 cv
1559.85 67.4121 1568.7 60.7236 1575.99 76.6064 cv
1581.2 63.8906 1588.76 75.3154 1590.87 82.2236 cv
1596.03 65.3906 1603.27 76.9531 1604.75 84.6113 cv
1615.2 69.2236 1617.12 84.833 1615.16 94.2656 cv
1627.91 83.46 1621.03 105.266 1610.85 109.359 cv
1608.15 110.443 1598.66 112.141 1594.88 103.006 cv
1598.41 113.516 1605.26 113.74 1606.13 113.795 cv
1610.46 114.086 1615.17 111.735 1619.29 107.735 cv
1632.18 95.2256 1632.73 71.875 1619.79 85.5752 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
1617.79 151.565 mo
1617.71 154.255 1616.03 156.886 1613.89 158.976 cv
1612.32 157.695 1613.26 154.966 1611.96 153.226 cv
1610.29 150.976 1611.09 148.235 1611.88 147.005 cv
1614.79 148.876 1617.38 150.335 1617.79 151.565 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
1565.68 161.436 mo
1574.51 164.936 1577.32 178.995 1589.57 177.245 cv
1589.7 177.546 li
1586.22 179.005 1582.2 179.615 1578.85 177.775 cv
1568.51 172.085 1567.06 170.995 1556.51 165.936 cv
1548.51 162.105 1545.01 156.936 1543.68 150.275 cv
1542.61 144.936 1544.29 134.676 1551.52 132.315 cv
1543.65 139.676 1550.96 155.605 1565.68 161.436 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
1527.84 155.854 mo
1528 157.64 li
1528.72 165.547 1536.84 165.49 1551.12 164.706 cv
1551.2 164.702 1551.28 164.698 1551.36 164.693 cv
1546.36 161.2 1543.41 156.62 1542.21 150.569 cv
1541.2 145.528 1542.35 136.563 1548.06 132.41 cv
1550.83 130.401 1555.64 128.912 1563.22 132.526 cv
1563.39 129.445 1563.09 125.441 1560.92 121.106 cv
1559.88 119.02 li
1562.21 118.937 li
1565.45 118.82 1568.04 117.706 1569.89 115.623 cv
1572.17 113.067 1573.32 108.952 1572.97 104.615 cv
1572.71 101.414 li
1575.33 103.271 li
1580.55 106.971 1590.52 104.387 1593.99 101.803 cv
1595.62 100.585 li
1596.3 102.508 li
1598.46 108.637 1601.89 112.023 1606.22 112.299 cv
1609.97 112.557 1614.24 110.547 1618.24 106.659 cv
1625.62 99.5 1628.64 88.6494 1627.49 84.3242 cv
1627.34 83.7617 1627.05 83.0625 1626.53 82.9307 cv
1626.24 82.8555 1624.59 82.6807 1620.88 86.6055 cv
1617.5 90.1777 li
1618.3 85.3291 li
1619.47 78.3428 1616.84 71.6211 1613.88 70.7129 cv
1611.91 70.1104 1609.57 72.3936 1607.46 76.9824 cv
1605.37 81.5117 li
1604.61 76.584 li
1603.78 71.1934 1599.96 65.7539 1596.9 65.6035 cv
1594.43 65.4961 1593.08 69.2754 1592.5 71.5488 cv
1591.01 77.3496 li
1589.59 71.5313 li
1588.46 66.9297 1585.01 64.3525 1582.19 64.1855 cv
1581.11 64.127 1579.17 64.3691 1578.29 66.7305 cv
1577.21 69.627 li
1575.6 66.9844 li
1572.47 61.8281 1566.84 59.9121 1563.14 60.7266 cv
1561.45 61.0996 1559.35 62.209 1559 65.374 cv
1558.62 68.6777 li
1556.39 66.2109 li
1551.78 61.1074 1544.2 60.1729 1540.29 62.5273 cv
1538.28 63.7383 1537.69 65.5537 1538.55 67.9238 cv
1539.49 70.4863 li
1536.82 69.9004 li
1528.82 68.1406 1522.93 68.7412 1520.25 71.5938 cv
1518.47 73.4951 1518.12 76.3906 1519.21 80.2021 cv
1519.79 82.2363 li
1517.68 82.1133 li
1510.28 81.6768 1506.41 84.7363 1505.33 87.4844 cv
1504.37 89.9688 1505.35 92.6553 1508.04 94.8545 cv
1510.12 96.5566 li
1507.57 97.4336 li
1502.76 99.0957 1499.82 101.844 1499.08 105.381 cv
1498.23 109.495 1500.48 114.493 1505.12 118.75 cv
1506.52 120.033 li
1504.95 121.098 li
1501.91 123.157 1500.33 125.994 1500.62 128.881 cv
1501.07 133.373 1505.67 137.666 1513.58 140.972 cv
1516.43 142.159 li
1513.74 143.664 li
1510.49 145.481 1509.32 147.556 1510.25 149.829 cv
1511.96 153.999 1520.11 157.977 1526.11 156.329 cv
1527.84 155.854 li
cp
1557.18 164.595 mo
1565.11 168.396 1567.98 170.002 1573.19 172.915 cv
1574.94 173.897 1576.98 175.034 1579.57 176.462 cv
1582.7 178.183 1586.42 177.279 1588.99 176.22 cv
1592.54 174.754 1595.09 172.509 1595.88 171.427 cv
1589.99 166.694 1588.96 160.401 1592.98 153.62 cv
1594.23 151.517 li
1595.54 153.583 li
1600.04 160.691 1605.45 161.762 1607.33 161.575 cv
1610.77 160.362 1615.88 156.017 1616.27 151.884 cv
1615.77 151.241 1613.85 150.028 1612.41 149.123 cv
1609.67 147.393 1606.26 145.239 1604.02 142.469 cv
1599.59 137.014 1602.52 132.195 1606.36 127.35 cv
1606.49 123.836 1605.73 120.257 1604.87 116.14 cv
1604.66 115.125 li
1601.2 114.499 1597.04 112.137 1594.13 105.23 cv
1589.83 107.511 1581.9 109.381 1576.02 107.026 cv
1575.86 111.202 1574.49 114.967 1572.13 117.619 cv
1570.16 119.838 1567.59 121.214 1564.49 121.723 cv
1566.64 127.096 1566.4 131.844 1565.99 135.072 cv
1565.72 137.285 li
1563.77 136.193 li
1557.85 132.871 1553.16 132.415 1549.82 134.838 cv
1545.43 138.027 1544.29 145.683 1545.15 149.981 cv
1546.5 156.742 1550.19 161.242 1557.13 164.569 cv
1557.14 164.577 1557.16 164.587 1557.18 164.595 cv
cp
1583.49 180.396 mo
1581.63 180.396 1579.79 180.01 1578.12 179.09 cv
1575.52 177.659 1573.48 176.519 1571.72 175.532 cv
1566.64 172.688 1563.8 171.103 1556.2 167.45 cv
1554.53 167.524 1552.88 167.614 1551.28 167.702 cv
1538.43 168.407 1527.25 169.019 1525.25 159.557 cv
1518.42 160.489 1509.73 156.452 1507.48 150.968 cv
1506.86 149.447 1506.04 145.903 1509.95 142.624 cv
1502.49 138.995 1498.15 134.279 1497.63 129.18 cv
1497.29 125.684 1498.79 122.313 1501.81 119.719 cv
1497.2 114.957 1495.15 109.582 1496.15 104.77 cv
1496.75 101.886 1498.69 98.0791 1504.39 95.4756 cv
1502.04 92.7246 1501.35 89.4531 1502.54 86.3936 cv
1504.26 81.9834 1509.38 79.2227 1515.86 79.0801 cv
1514.96 74.1641 1516.5 71.2041 1518.07 69.5391 cv
1521.26 66.1445 1527.15 65.1133 1535.2 66.5215 cv
1535.01 63.8184 1536.24 61.4609 1538.74 59.957 cv
1543.23 57.2588 1551.04 57.7588 1556.71 62.3818 cv
1557.73 60.0254 1559.74 58.4043 1562.5 57.7969 cv
1567.36 56.7266 1573.13 59.1113 1576.76 63.4639 cv
1578.11 61.8809 1580.08 61.0557 1582.36 61.1914 cv
1585.29 61.3633 1588.81 63.2451 1590.97 66.9727 cv
1592.91 63.0986 1595.48 62.5332 1597.04 62.6074 cv
1601.12 62.8066 1604.79 67.2852 1606.59 72.3086 cv
1609.84 67.3379 1613 67.3047 1614.76 67.8457 cv
1618.79 69.084 1621.58 75.1836 1621.59 81.8926 cv
1623.75 80.2412 1625.65 79.6133 1627.27 80.0234 cv
1628.14 80.2432 1629.71 80.9951 1630.39 83.5508 cv
1631.94 89.3711 1628.2 101.178 1620.33 108.813 cv
1616.28 112.743 1611.88 114.997 1607.75 115.287 cv
1607.8 115.521 li
1608.71 119.846 1609.57 123.93 1609.33 127.994 cv
1609.3 128.471 li
1609.01 128.844 li
1604.91 133.96 1603.46 137.021 1606.35 140.58 cv
1608.28 142.967 1611.46 144.974 1614.02 146.587 cv
1616.73 148.302 1618.7 149.542 1619.22 151.089 cv
1619.3 151.342 li
1619.29 151.608 li
1619.12 157.761 1612.05 163.169 1608.14 164.469 cv
1607.88 164.53 li
1605.29 164.894 1599.47 163.743 1594.47 157.286 cv
1592.43 162.114 1593.72 166.151 1598.39 169.575 cv
1598.57 169.704 li
1598.7 169.876 li
1599.23 170.577 1599.52 171.817 1597.85 173.753 cv
1595.28 176.728 1589.24 180.396 1583.49 180.396 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
1580.07 121.979 mo
1582.82 120.667 1591.57 119.917 1592.26 120.792 cv
1594.93 124.185 1597.13 129.229 1599.13 134.604 cv
1600.07 133.604 1600.76 132.354 1601.51 129.417 cv
1601.38 133.792 1599.76 136.354 1598.37 138.117 cv
1596.33 133.746 1590.95 126.042 1580.07 121.979 cv
cp
f
1594.64 135.896 mo
1593.63 139.964 1589.7 142.698 1585.85 142.006 cv
1582.01 141.313 1579.72 137.455 1580.73 133.387 cv
1581.74 129.32 1585.67 126.586 1589.51 127.279 cv
1593.36 127.972 1595.65 131.829 1594.64 135.896 cv
cp
f
1576.86 141.985 mo
1580.63 137.682 1588.56 139.161 1590.44 146.692 cv
1587.22 142.119 1581.16 141.582 1576.86 141.985 cv
cp
f
1588.55 133.861 mo
1586.87 135.281 1584.66 135.692 1583.61 134.781 cv
1582.56 133.866 1583.07 131.975 1584.74 130.554 cv
1586.42 129.133 1588.63 128.722 1589.69 129.635 cv
1590.74 130.549 1590.23 132.44 1588.55 133.861 cv
cp
0 0 0 0 cmyk
f
1580.29 144.529 mo
1580.29 145.114 1579.57 145.588 1578.67 145.588 cv
1577.77 145.588 1577.04 145.114 1577.04 144.529 cv
1577.04 143.944 1577.77 143.471 1578.67 143.471 cv
1579.57 143.471 1580.29 143.944 1580.29 144.529 cv
cp
f
1615.02 151.381 mo
1614.78 151.819 1613.99 151.852 1613.26 151.45 cv
1612.52 151.049 1612.12 150.368 1612.36 149.929 cv
1612.6 149.489 1613.39 149.457 1614.13 149.858 cv
1614.86 150.259 1615.26 150.94 1615.02 151.381 cv
cp
f
1572.01 82.3555 mo
1575.01 78.3555 1577.35 82.0957 1574.76 89.8555 cv
1571.76 98.8555 1562.01 118.855 1531.01 119.105 cv
1493.98 119.405 1485.68 92.8457 1485.26 78.8555 cv
1484.76 61.8555 1495.26 36.8555 1526.76 34.6055 cv
1554.47 32.625 1563.01 55.3555 1562.26 64.8555 cv
1562.32 65.3154 li
1558.28 65.9551 1553.88 68.5059 1552.01 73.6055 cv
1545.96 71.7148 1541.04 72.3955 1537.71 74.4756 cv
1534.88 65.5654 1521.32 61.5156 1515.51 72.1055 cv
1508.51 84.8555 1520.78 100.495 1539.01 98.6055 cv
1558.26 96.6055 1568.46 87.0957 1572.01 82.3555 cv
cp
.118532 .179629 .999206 0 cmyk
f
1541.04 109.655 mo
1561.11 106.735 1571.95 93.4951 1574.61 84.6953 cv
1575.85 84.7949 li
1575.76 86.1855 1575.4 87.8848 1574.76 89.8555 cv
1571.76 98.8555 1562.01 118.855 1531.01 119.105 cv
1493.98 119.405 1485.68 92.8457 1485.26 78.8555 cv
1484.87 65.5156 1491.24 47.2451 1509.23 38.916 cv
1488.05 53.3555 1488.45 82.6953 1497.59 94.9854 cv
1508.98 110.275 1528.15 111.535 1541.04 109.655 cv
cp
.240848 .455299 1 .0437018 cmyk
f
1552.01 73.6055 mo
1545.96 71.7148 1541.04 72.3955 1537.71 74.4756 cv
1534.88 65.5654 1521.32 61.5156 1515.51 72.1055 cv
1509.98 82.1553 1516.45 94.0059 1528.37 97.6455 cv
1497.92 94.7051 1504.31 63.3154 1520.38 58.2949 cv
1539.64 52.2754 1549.85 66.6855 1552.01 73.6055 cv
cp
f
1528.34 40.9375 mo
1526.02 42.3457 1527.01 51.4385 1530.51 52.2715 cv
1534.01 53.1045 1541.51 46.2715 1544.18 44.6045 cv
1546.84 42.9375 1533.01 38.1045 1528.34 40.9375 cv
cp
0 0 0 0 cmyk
f
1552.68 50.7715 mo
1550.21 50.1143 1544.18 54.7715 1544.34 58.1045 cv
1544.51 61.4375 1554.18 63.4375 1556.18 62.9375 cv
1558.18 62.4375 1555.18 51.4385 1552.68 50.7715 cv
cp
f
1513.34 43.1045 mo
1509.51 43.9375 1505.31 45.4453 1503.84 49.2715 cv
1503.01 51.4375 1511.84 56.4375 1513.34 52.4375 cv
1515.59 46.457 1515.81 42.5684 1513.34 43.1045 cv
cp
f
1570.93 88.0215 mo
1569.17 89.7734 1568.07 90.6582 1568.43 91.2715 cv
1570.68 95.1875 1572.68 86.2715 1570.93 88.0215 cv
cp
f
1562.51 94.7295 mo
1560.09 95.8545 1558.01 96.7295 1558.34 97.4375 cv
1558.79 98.3916 1562.59 98.3545 1564.26 97.8545 cv
1565.93 97.3545 1563.9 94.0811 1562.51 94.7295 cv
cp
f
1550.68 99.9375 mo
1549.19 100.311 1546.01 101.104 1546.68 101.604 cv
1547.34 102.104 1551.68 102.605 1552.51 102.271 cv
1553.34 101.938 1552.34 99.5215 1550.68 99.9375 cv
cp
f
1573.34 89.3809 mo
1569.86 99.8223 1559.73 117.373 1531 117.604 cv
1489.99 117.925 1486.95 85.3457 1486.76 78.8105 cv
1486.35 65.0576 1494.22 38.4326 1526.87 36.1006 cv
1537.32 35.3516 1546.13 38.2656 1552.34 44.5195 cv
1559.03 51.2559 1561.03 60.0293 1560.78 64.4805 cv
1559.69 64.6377 1558.61 64.9219 1557.58 65.3525 cv
1555.94 66.0283 1554.43 67.0762 1553.21 68.4199 cv
1552.32 69.4063 1551.61 70.5625 1551.14 71.791 cv
1550.03 71.4189 1548.88 71.1777 1547.71 71.0527 cv
1546.07 70.8809 1544.38 70.9795 1542.76 71.3418 cv
1541.34 71.6504 1539.96 72.1934 1538.73 72.9453 cv
1537.78 70.7012 1536.19 68.7285 1534.2 67.2354 cv
1534.47 65.3887 1535.21 63.4521 1536.06 61.627 cv
1537.06 59.5244 1538.33 57.5254 1539.82 55.6992 cv
1541.32 53.8711 1543.08 52.2539 1545.05 50.8887 cv
1547.04 49.5449 1549.27 48.5176 1551.68 47.8281 cv
1549.17 47.8643 1546.64 48.4727 1544.3 49.5488 cv
1541.95 50.5996 1539.8 52.1445 1537.94 53.9609 cv
1536.07 55.7793 1534.49 57.8945 1533.26 60.2197 cv
1532.41 61.876 1531.69 63.6338 1531.34 65.5508 cv
1529.96 64.9316 1528.49 64.5137 1526.97 64.3564 cv
1525.89 64.2461 1524.84 64.2656 1523.83 64.4014 cv
1523.24 62.7686 1522.72 61.1182 1522.27 59.4404 cv
1521.76 57.4531 1521.35 55.4346 1521.13 53.3877 cv
1520.65 49.291 1520.9 45.1055 1521.97 40.8857 cv
1520.77 42.7012 1519.86 44.7461 1519.29 46.8955 cv
1518.69 49.043 1518.43 51.2852 1518.4 53.5264 cv
1518.4 55.7686 1518.64 58.0137 1519.14 60.1992 cv
1519.52 61.9199 1520.08 63.6055 1520.79 65.2197 cv
1518.42 66.2051 1516.36 67.9492 1514.8 70.373 cv
1513.26 69.9473 1511.72 69.3613 1510.27 68.627 cv
1508.51 67.7168 1506.84 66.6309 1505.33 65.3105 cv
1503.82 64.002 1502.48 62.4746 1501.31 60.7852 cv
1500.72 59.9424 1500.19 59.0508 1499.71 58.1191 cv
1499.2 57.2012 1498.79 56.2305 1498.35 55.2461 cv
1498.43 56.3184 1498.63 57.377 1498.88 58.4375 cv
1499.16 59.4854 1499.52 60.5215 1499.94 61.5371 cv
1500.81 63.5615 1502.05 65.4531 1503.56 67.1123 cv
1505.08 68.7617 1506.86 70.1992 1508.84 71.291 cv
1510.26 72.083 1511.76 72.7344 1513.35 73.1699 cv
1512.25 75.8271 1511.85 78.6484 1512.13 81.4443 cv
1510.67 81.8857 1509.16 82.2695 1507.63 82.5703 cv
1505.79 82.9395 1503.92 83.2285 1502.04 83.4121 cv
1500.16 83.5898 1498.27 83.6426 1496.4 83.4814 cv
1494.54 83.2822 1492.64 82.8906 1491.09 81.6758 cv
1492.27 83.291 1494.24 84.1904 1496.15 84.75 cv
1498.09 85.3271 1500.1 85.5586 1502.09 85.6484 cv
1504.09 85.7334 1506.1 85.6406 1508.08 85.3936 cv
1509.62 85.1816 1511.16 84.9111 1512.69 84.4551 cv
1513.21 86.3174 1514.04 88.1367 1515.17 89.8516 cv
1515.7 90.6514 1516.29 91.4033 1516.92 92.1201 cv
1516.04 93.2461 1515.06 94.292 1513.99 95.3008 cv
1512.68 96.5137 1511.27 97.6484 1509.76 98.6621 cv
1506.75 100.703 1503.4 102.279 1499.64 103.111 cv
1501.55 103.389 1503.54 103.291 1505.47 102.889 cv
1507.41 102.5 1509.29 101.818 1511.08 100.941 cv
1512.86 100.051 1514.55 98.9619 1516.08 97.6504 cv
1517.21 96.6875 1518.29 95.582 1519.17 94.3359 cv
1521.39 96.2334 1523.99 97.7217 1526.85 98.7256 cv
1526.9 100.021 1526.85 101.338 1526.76 102.68 cv
1526.64 104.137 1526.46 105.6 1526.18 107.042 cv
1525.89 108.482 1525.53 109.911 1525.01 111.291 cv
1524.47 112.659 1523.81 114.012 1522.77 115.215 cv
1524.25 114.593 1525.51 113.426 1526.47 112.1 cv
1527.44 110.768 1528.16 109.28 1528.71 107.746 cv
1529.26 106.209 1529.65 104.622 1529.85 103.004 cv
1529.99 101.895 1530.05 100.755 1529.99 99.6084 cv
1532.9 100.243 1535.99 100.426 1539.16 100.097 cv
1539.38 100.074 1539.59 100.045 1539.81 100.021 cv
1540.38 100.867 1540.83 101.721 1541.24 102.666 cv
1541.7 103.762 1542.06 104.938 1542.32 106.166 cv
1542.86 108.628 1543.05 111.257 1543.33 113.979 cv
1544.34 111.434 1544.87 108.705 1544.79 105.873 cv
1544.74 104.461 1544.53 103.016 1544.06 101.617 cv
1543.83 100.918 1543.53 100.219 1543.16 99.5605 cv
1546.23 99.0527 1549.04 98.3594 1551.6 97.541 cv
1552.38 98.0488 1553.02 98.5547 1553.66 99.2051 cv
1554.3 99.8662 1554.9 100.625 1555.42 101.471 cv
1556.48 103.158 1557.29 105.123 1558.17 107.178 cv
1558.51 104.967 1558.35 102.677 1557.59 100.453 cv
1557.2 99.3486 1556.66 98.2559 1555.89 97.2852 cv
1555.63 96.9473 1555.33 96.627 1555.01 96.3223 cv
1558.13 95.0859 1560.82 93.6768 1563.1 92.2383 cv
1563.36 92.3887 1563.64 92.5879 1563.96 92.832 cv
1564.43 93.2109 1564.93 93.6406 1565.41 94.1094 cv
1565.9 94.5703 1566.38 95.0645 1566.85 95.5781 cv
1567.32 96.1035 1567.8 96.6309 1568.24 97.2617 cv
1568.36 96.4941 1568.28 95.6914 1568.1 94.9395 cv
1567.93 94.1797 1567.64 93.4531 1567.3 92.75 cv
1566.94 92.0527 1566.52 91.377 1565.97 90.7559 cv
1565.89 90.6621 1565.79 90.5664 1565.7 90.4727 cv
1569.73 87.5137 1572.14 84.6846 1573.21 83.2539 cv
1573.63 82.6934 1573.94 82.4355 1574.12 82.3203 cv
1574.44 83.0078 1574.69 85.3301 1573.34 89.3809 cv
cp
1575.46 79.5303 mo
1574.77 79.166 1572.93 78.627 1570.81 81.4551 cv
1569.13 83.6895 1559.72 94.9453 1538.86 97.1123 cv
1530.04 98.0293 1521.93 94.6084 1517.67 88.1914 cv
1514.44 83.3281 1514.13 77.7275 1516.82 72.8262 cv
1518.97 68.917 1522.55 66.9121 1526.66 67.3408 cv
1528.46 67.5273 1530.19 68.167 1531.69 69.1279 cv
1531.79 69.2129 1531.9 69.291 1532.03 69.3457 cv
1534.03 70.7266 1535.58 72.7002 1536.29 74.959 cv
1535.78 75.543 1535.34 76.1787 1535.01 76.8545 cv
1537.46 74.8789 1540.31 74.0742 1543.12 73.96 cv
1544.53 73.9082 1545.93 74.0215 1547.34 74.2129 cv
1548.75 74.3867 1550.14 74.6855 1551.6 74.916 cv
1551.6 74.917 li
1552.57 75.3623 li
1553.3 74.0781 li
1554.02 72.8184 1554.75 71.6543 1555.68 70.624 cv
1556.59 69.5918 1557.67 68.6875 1558.88 67.9248 cv
1560.09 67.1641 1561.45 66.5742 1562.89 66.1543 cv
1564.34 65.7441 1565.87 65.5098 1567.51 65.6045 cv
1566.41 64.9082 1565.11 64.543 1563.78 64.4063 cv
1564.04 58.4805 1561.29 49.2842 1554.47 42.4063 cv
1549.7 37.5996 1541 32.0879 1526.65 33.1084 cv
1491.73 35.6025 1483.33 64.1514 1483.76 78.8984 cv
1484.33 98.1934 1496.9 120.609 1530.41 120.607 cv
1530.61 120.607 1530.82 120.605 1531.02 120.604 cv
1561.62 120.357 1572.45 101.529 1576.18 90.3281 cv
1578.01 84.8555 1577.73 80.7188 1575.46 79.5303 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
1424.57 173.415 mo
1422.62 176.08 1421.61 180.205 1422.88 183.922 cv
1403.49 201.608 1371.49 203.357 1357.84 204.593 cv
1357.84 204.593 1350.41 209.2 1343 208.201 cv
1335.06 199.58 1342.22 179.805 1348.55 177.318 cv
1384.71 180.677 1402.56 174.439 1415.49 167.386 cv
1416.83 170.16 1419.79 172.749 1424.57 173.415 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
1424.57 173.415 mo
1422.62 176.08 1421.61 180.205 1422.88 183.922 cv
1403.49 201.608 1371.49 203.357 1357.84 204.593 cv
1355.42 198.994 1354.55 188.918 1361.45 178.153 cv
1363.01 178.204 1364.53 178.236 1366.02 178.249 cv
1358.38 187.725 1376.11 196.533 1391.49 192.667 cv
1406.56 188.886 1410.25 178.583 1410.49 169.935 cv
1412.25 169.11 1413.91 168.251 1415.49 167.386 cv
1416.83 170.16 1419.79 172.749 1424.57 173.415 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
1357.84 204.593 mo
1357.84 204.593 1350.41 209.2 1343 208.201 cv
1335.06 199.58 1342.22 179.805 1348.55 177.318 cv
1353.13 177.739 1357.42 178.016 1361.45 178.153 cv
1354.55 188.918 1355.42 198.994 1357.84 204.593 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
1348 183.034 mo
1385.52 185.735 1404.91 179.035 1418.91 171.299 cv
1417.32 170.202 1416.19 168.822 1415.49 167.386 cv
1402.56 174.439 1384.71 180.677 1348.55 177.318 cv
1344.57 178.882 1340.27 187.278 1339.59 195.44 cv
1341.61 189.394 1344.93 184.324 1348 183.034 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
1360.31 202.867 mo
1359.38 202.947 1358.51 203.021 1357.71 203.094 cv
1357.35 203.127 li
1357.05 203.312 li
1356.98 203.354 1350.34 207.394 1343.76 206.778 cv
1341 203.414 1340.26 197.858 1341.74 191.419 cv
1343.23 184.935 1346.43 180.058 1348.8 178.844 cv
1383.54 182.013 1401.69 176.396 1415.24 169.211 cv
1415.43 169.567 1415.65 169.912 1415.89 170.242 cv
1416.85 171.61 1418.17 172.733 1419.64 173.53 cv
1420.41 173.944 1421.22 174.26 1422.05 174.489 cv
1421.65 175.282 1421.35 176.122 1421.14 176.979 cv
1420.76 178.598 1420.76 180.301 1421.09 181.919 cv
1421.18 182.342 1421.29 182.758 1421.43 183.166 cv
1403.51 199.14 1374.45 201.654 1360.31 202.867 cv
cp
1424.48 185.504 mo
1423.94 184.236 1423.7 182.915 1423.69 181.613 cv
1423.68 180.308 1423.92 179.025 1424.28 177.799 cv
1424.65 176.567 1425.18 175.408 1425.78 174.302 cv
1427.03 172.006 li
1424.78 171.927 li
1424.78 171.926 li
1423.46 171.641 1422.2 171.274 1421.02 170.75 cv
1419.83 170.23 1418.74 169.53 1417.78 168.636 cv
1416.84 167.729 1416.05 166.624 1415.55 165.353 cv
1415.08 164.091 1414.83 162.638 1415.36 161.209 cv
1414.29 162.33 1413.95 164.077 1414.11 165.677 cv
1414.13 165.902 1414.19 166.124 1414.23 166.347 cv
1401 173.435 1383.25 179.028 1348.69 175.82 cv
1348.33 175.787 li
1348 175.917 li
1344.26 177.386 1340.49 183.483 1338.81 190.747 cv
1337.05 198.434 1338.17 205.167 1341.9 209.22 cv
1342.27 209.618 li
1342.81 209.689 li
1349.86 210.633 1356.75 206.954 1358.31 206.053 cv
1359.02 205.989 1359.77 205.924 1360.56 205.856 cv
1374.88 204.628 1404.15 202.094 1422.85 185.907 cv
1422.95 186.044 1423.04 186.189 1423.14 186.319 cv
1424.15 187.566 1425.45 188.495 1426.83 189.086 cv
1425.81 187.975 1425 186.772 1424.48 185.504 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
1559.46 194.544 mo
1559.46 194.544 1569.72 192.67 1575.68 195.527 cv
1578.21 205.677 1564.24 219.909 1561.42 220.366 cv
1545.54 219.767 1509.77 196.155 1497.58 185.748 cv
1499.02 183.325 1499.73 180.176 1498.57 176.668 cv
1500.98 176.442 1504.96 174.077 1506.49 170.205 cv
1521.18 180.194 1546.79 191.511 1559.46 194.544 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
1559.46 194.551 mo
1559.46 194.551 1569.72 192.67 1575.68 195.527 cv
1578.21 205.677 1564.24 219.909 1561.42 220.366 cv
1557.88 220.23 1553.34 218.952 1548.29 216.927 cv
1556.22 210.329 1560.63 198.532 1559.46 194.551 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
1559.46 194.544 mo
1559.46 194.551 li
1560.63 198.532 1556.22 210.329 1548.29 216.927 cv
1530.75 209.882 1507.05 193.832 1497.58 185.748 cv
1499.02 183.325 1499.73 180.176 1498.57 176.668 cv
1500.98 176.442 1504.96 174.077 1506.49 170.205 cv
1508.17 171.354 1509.99 172.503 1511.93 173.667 cv
1512.35 180.77 1514.92 191.64 1529.23 199.718 cv
1544.64 208.433 1555.41 199.574 1554.13 193.032 cv
1556.07 193.653 1557.87 194.16 1559.46 194.544 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
1554.72 199.448 mo
1554.72 199.448 1565.09 197.645 1571.14 200.587 cv
1572.48 205.811 1569.54 212.059 1565.93 217.004 cv
1570.89 212.094 1577.49 202.771 1575.68 195.527 cv
1569.72 192.67 1559.46 194.544 1559.46 194.544 cv
1546.79 191.511 1521.18 180.194 1506.49 170.205 cv
1505.62 172.408 1503.95 174.121 1502.24 175.232 cv
1517.35 185.248 1542.25 196.358 1554.72 199.448 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
1561.26 218.857 mo
1545.87 218.084 1511.55 195.405 1499.25 185.188 cv
1499.96 183.936 1500.45 182.525 1500.62 181.051 cv
1500.74 179.977 1500.67 178.885 1500.45 177.831 cv
1501.55 177.494 1502.49 176.947 1503.38 176.325 cv
1504.69 175.379 1505.8 174.16 1506.61 172.755 cv
1506.7 172.594 1506.77 172.421 1506.86 172.253 cv
1522.07 182.29 1546.86 193.071 1559.1 196.002 cv
1559.41 196.075 li
1559.72 196.02 li
1559.81 196.001 1568.82 194.394 1574.37 196.592 cv
1575.81 205.524 1563.76 217.979 1561.26 218.857 cv
cp
1576.33 194.178 mo
1570.54 191.397 1561.37 192.706 1559.5 193.012 cv
1547.2 189.989 1522.54 179.191 1507.79 169.274 cv
1507.84 168.902 1507.87 168.528 1507.87 168.157 cv
1507.86 166.573 1507.41 165.055 1506.6 163.812 cv
1506.69 165.29 1506.58 166.683 1506.21 167.943 cv
1505.84 169.204 1505.22 170.322 1504.43 171.299 cv
1503.64 172.272 1502.67 173.097 1501.63 173.776 cv
1500.6 174.441 1499.4 174.979 1498.43 175.174 cv
1496.71 175.52 li
1497.15 177.14 li
1497.48 178.365 1497.65 179.591 1497.62 180.831 cv
1497.61 182.072 1497.35 183.323 1496.89 184.549 cv
1496.42 185.767 1495.74 186.944 1494.87 188.004 cv
1493.98 189.042 1492.96 190.053 1491.59 190.59 cv
1493.09 190.609 1494.56 189.909 1495.81 189.037 cv
1496.4 188.618 1496.96 188.136 1497.46 187.605 cv
1510.41 198.339 1545.22 221.255 1561.36 221.864 cv
1561.65 221.846 li
1562.86 221.651 1564.83 220.217 1566.94 218.134 cv
1568.94 216.156 1571.07 213.595 1572.81 210.955 cv
1575.55 206.814 1578.52 200.715 1577.13 195.166 cv
1576.96 194.482 li
1576.33 194.178 li
cp
.75021 .679683 .670222 .90164 cmyk
f
1548.73 83.708 mo
1549.42 84.1084 li
1548.07 85.6416 1547.32 87.8877 1547.35 90.9355 cv
1544.64 90.4131 1540.18 90.748 1537.75 92.9971 cv
1515.85 90.71 1523.51 68.5342 1527.42 69.1777 cv
1534.79 72.4297 1543.98 79.3818 1548.73 83.708 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
1540.73 91.3369 mo
1539.61 91.707 1538.56 92.2451 1537.75 92.9971 cv
1516.26 90.751 1523.24 69.3506 1527.2 69.1641 cv
1525.97 71.4229 1522.17 81.9766 1530.67 85.3721 cv
1529.22 82.3018 1528.19 78.8311 1528.35 74.958 cv
1534.52 77.8486 1539.29 85.0713 1540.73 91.3369 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
1527.2 69.1641 mo
1529.29 69.5938 1541.92 77.2578 1549.42 84.1084 cv
1547.88 86.0732 1547.1 89.3154 1547.35 90.9355 cv
1545.22 84.8438 1537.1 76.915 1527.66 72.4717 cv
1525.76 73.3672 1524.6 76.5049 1523.77 81.2432 cv
1522.97 75.9795 1524.37 70.4531 1527.2 69.1641 cv
cp
.0247501 .0310369 .9617 0 cmyk
f
1543.85 89.0703 mo
1543.69 89.083 1543.54 89.1094 1543.39 89.1299 cv
1543.04 87.6338 1542.44 86.2021 1541.7 84.8838 cv
1540.74 83.1729 1539.49 81.665 1538.13 80.3174 cv
1536.76 78.9746 1535.24 77.8037 1533.62 76.834 cv
1532.8 76.3594 1531.96 75.916 1531.08 75.5801 cv
1530.2 75.2549 1529.28 74.9277 1528.34 74.96 cv
1529.22 75.2471 1529.97 75.7568 1530.69 76.293 cv
1531.39 76.8428 1532.08 77.4141 1532.72 78.0313 cv
1534.01 79.2529 1535.18 80.5889 1536.21 81.9883 cv
1537.25 83.3896 1538.12 84.876 1538.88 86.3857 cv
1539.45 87.5508 1539.93 88.7412 1540.34 89.9551 cv
1540.28 89.9814 1540.22 90.001 1540.16 90.0273 cv
1539.37 90.3936 1538.59 90.8809 1537.92 91.4932 cv
1527.74 90.4336 1524.97 85.0742 1524.47 80.6855 cv
1523.89 75.667 1526.15 71.3496 1527.19 70.7139 cv
1534.4 73.9902 1543.06 80.6299 1547.42 84.5439 cv
1546.86 85.3271 1546.42 86.1963 1546.15 87.0928 cv
1545.95 87.751 1545.83 88.416 1545.78 89.0781 cv
1545.13 89.0166 1544.49 89.0195 1543.85 89.0703 cv
cp
1551.66 81.6221 mo
1550.96 81.7979 1550.27 82.0957 1549.63 82.4883 cv
1545.11 78.3994 1535.73 71.2002 1528.02 67.7998 cv
1527.66 67.6924 li
1526.82 67.5527 1525.57 67.7607 1524.22 69.4961 cv
1522.02 72.3525 1519.99 79.373 1522.65 85.375 cv
1524.19 88.833 1527.8 93.0244 1536.19 94.2881 cv
1536.05 94.8691 1536.01 95.457 1536.11 96.0088 cv
1536.69 94.9443 1537.44 94.1934 1538.3 93.7002 cv
1539.16 93.208 1540.09 92.9189 1541.07 92.7354 cv
1543.03 92.3848 1545.09 92.4053 1547.06 92.4102 cv
1549.08 92.415 li
1548.84 90.9268 li
1548.84 90.9248 li
1549.02 89.8623 1549.1 88.8467 1549.28 87.8809 cv
1549.46 86.917 1549.7 85.9814 1550.18 85.1514 cv
1550.65 84.3105 1551.35 83.5674 1552.24 82.9619 cv
1553.12 82.3486 1554.19 81.8896 1555.32 81.5215 cv
1554.15 81.3193 1552.9 81.3086 1551.66 81.6221 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.2
%%For: (WINDOWS) ()
%%Title: (Black_Sheep_Dash.eps)
%%CreationDate: 1/25/2017 10:00 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6qfCONQ72[CX8G3S0<%S;>PA[/#nkA2Xm5*9h!7'PcKs]Ees8spg9EQAj=<leao(hhH/RUHZ<Pg/lIN1J[Cag3#TOhS2\*Rs
%@X`<FIWBc6bP^Ag?VbDuH)9h=U2"Q';u-"'(LR+;l&V=[XfJ>AkQW]BVaXm+]O"BNWU]\&=r*+;4-pc(f,ls7=$Kqr*,e#j?<j"+
%>^lZuZM=C^I.H[P0C[04jSs,Cc7XR8bg2<0It`5]J#V;-:X:rbMp%/O<tdYIW7&>TS,`=&mXbZ4Z`jDPq=3/2alWi<Irk1IO7<$Z
%qPAX6?f#V%Y+XP=</!J=I/AEn:YM;A-cNHq$E`69><CRVqG:k-iI`YF/LOp)f8lD.:-W)k*aP=CSH&=bfZrh:Q@&79oBD'\J1&0#
%TR7&1:6qCD8(VBTgso!/$9hdE28LX=^WH5BYi[atAL@Z;$m"kl^SrPZ89q'$?bEK;#s[a4R?[W>++@>O1GiHHMb.'fce@9L3Y0#p
%0<(-@i1DnL5Fig#D.r';;+rKbI"hTs?fY[`3kEZRH>8B@*3!ZQUn&pqlD]L&M5CW06U[']hbH,FI6IE#c-aYqdUU/\o'4Ka5@DK2
%;\TmD'YaRela+jt?dDNO!-m:^j6?@4iad,MF7&F'T,lnWV]`j#\`0N^b?m//JD_5Vf/O^V:R^d;n#emh55K\Kq,nVXDnl=Z3WJ@'
%5H(K`.Y+`hbc/aA.^Xgo>FD_Li/!SRPX_n]]O+jFEK5JJ9`=t]oU"%uY:CIRX0O3;'*%duoH`F8XX=Rmd7C-/o&o)[G81=2FgX5r
%^+9/*nSN(KVXE1trY[qK\Gl9kr9+gq#HM#EP6O*+#HU-s*aKe74XhDEbeJ)q5+2G"7I.")QSJ7F;[P2@n9qR'>%@&OA+3Pb",H@C
%lZu:7o53(<A_,j"C[j/qnM4n3CMD9Y]Z)tE`kdRNG7H9I%PP^qpl:[m(3nMAJ[[6Iprd,tf<!U!l[!D"h7d4U"m\&'`1?$CF-$*a
%r%$VR^Dd9aj*u:kNXOb71)uX>Q@He<iB(@uK>MgN]7>NP`c9s!I`"J14#Y'nihg]lpeG>>%p4hO_P]._\Hd?s%Lq=cRe7TbA<s1c
%$u(GBK*pN3<ZXC7J@j.@j6'A(AZFf(Ic4it7XW7RGTqFor0s<<r.(-m(hKQ^1jh*>&`<*t%Zp2\hgO[m$K(A/*$`2hA2:_ME4H5K
%9Ygnt]O6mr*I!WSO-_Tj"?&Ag*WU>S]>dY/[Un1f&p`Fn3'b;W*$F(_,Nk\=N;/F"0s9OR)(p:m^>h(15e(+(>ZMJiO.X7U0'FiW
%,Bu_LB9Zi#O@:@7bL#GO1$n_X$p<gf9T4pk]8r<#o=9-aJ:HaKmlW7&`b_5n"qW_uVAH"J>lB$\gb,WdXtp)Z>R-5PZ3DL"dd7X9
%AECkb(0JW1^ci&al1PAql)o,2T$.Z8X\'?#_Z)cu<;r^OrtPLr='>+gpclOOp8[,PpclOYR_QoCq:.>"]kP@4)ulAOpo!mO^ZKV:
%*rkC>gqI$6<W&IrWtg,Fs7<8s02LbN%e6+QQbU^&rZB1Zb=,R9Q`:,^3@\eEn5@TkHNV7'kBagRTYmtX@YMRt).T#N01AGseVaM.
%']%n)TjR,]Brod&SR"'o41)0\ZGeA?"u]EOZW6%(DWlL;T*i'1B5i2\YDRWiX.^-e4/_:C<L7Yr=jPlLZ%?<jHA$oXQ1#gcI_'1s
%QW89m_Brm"-i>5>G%'@0\QdDF\gh?34l/pmc2<9aJOT$]>?.\0b\Xu>[SkJ-,rE240#GGW%\AHHU1_8<(-!/DV(Qa:"6c[:gaDsJ
%ck''Un3CHMgDSotr`*\;bs2BXfgPuP/GpJ=BlGTd-ThlWLRT'%3La#+QMJaFQi5Dos4kUYT]YP@>*["Nj%TnO\)>T\eX:NeFh=Kb
%"l<MD`+c91EeYfm0#OSi+UnQrBm?rAHfZ2t5I[ZU1i_6PS'Z[P/0G3Ks4iDar4aEu6Qal0*4r?9orOZl'CbWS2ZWocn2.s?76R;.
%J.>s,pOGP2j6Rm\^bFp:7`2%<?X5*t$#+ZJ1k8sa\)OZr="pID]R>W]LH"Kbdqn'(3!=L&$?,82&.f1FH,WQL12d2g(;:r>1,MrE
%g]M5g,V[5h&/*SGfP8@2faO/N0-7d="t2/R&Zc.bL@GWA0G&5d1X`F<IbLe'f%Gutcl<r*Ur@U.k;Y-IbdtV\/ODgL43qlRp6^n"
%i)=8'ouK(FrISH\lk;;\"!aV\DTq3Sk[Hn(-6+/ldgT&Kk&lM:j(:!YC'I)L;k%;kN"l$l:BKP4BrIOX)8TX(S-Q0C\_ra\%"sJ:
%%T=EN;`GGU!\uKsajhg98o$8l)Oo/4c1#P32cP$4-%&3ZC7KMGY:/BPIcnJ7Qgg.Dp<&#3m>7Z,b(O8+Tln*iX$U4KheY;s%NAaO
%M8M&P^W'hj`@bBP0GL#nhf+:/,1_IV2>n%J'3^,*LIg-DHCK(=OAa)D=_0J"8cK1D6W;82)k5*6E3*`9ld3sCBmI]#,s`F\\lcqK
%AaIc.^l"RL+?t1u#(=ZFhn^KS4fn3WKubOQ77QWJ(J'lX9b8aam!c(KFBo/a,218P;hP=PB;#or0QP3ES+uKscP&.W@ukm&M-sW_
%2lZ,=ajuVHB3fk5kJ>h?,A`>$h6+:OQtnih`R4P^B44OB!?_BG_"Aja;alq(l%#0ki6;u.Af8*_Cf&KWpA@)<=I%l)!tT"si])d;
%Pj=9:dF0<Mk<7d4_<oF;F[7F7l@%XCHc6\POTPQ55V@'0Q9^r?)\<OG`&<9snUa3tJM\+_@23].nuQNTQUkn##`/.JkB>i(9hgin
%60D;jUF**lUe!nPWWkt#1]OF2Z&-$nVW[G,+S6Q0g_rb\7aPSan]BJeDhX5r;E5s2Xdl4H,Ls]$Z-dk`M\Vh_9Us&?X?tSEfalB8
%?,pLiDD)RlJ--8*F2FfaJ(T&+Xk6'G&e0l0SD,pXN+*D-/.*^5Lh9T24YI#-6l/7*)/VVu:b^``1+4:39BrU964-tmDuqmACuoZ.
%OM@Sq*D@&%K""WJi>rPsB)L-rY",/S0[VH1/-tQVjIaN2QR%C'F(Pjs,U"s$K8*dpcnO6KOoS$PF.?&@)"Hi9P/;oIV#a.=@M]$.
%n:3q>*"[:^"[l?El?[RQgCJ<c8^%H,A/MY)qGTkOIb*T'Qpi7_`Hquo^S-q#j<;mH%@*3V`g3f\jUBbWm6R11U7bXe#3js"K&E8U
%^gb:$XFic(iW6;l7o*Cnaa'jebc6:r6WXsX5NXV"k9jqYo,ebb+42S73S<;>\@af5pr37O^X-n;2HSM&]QoVhhL9YL2k6J7XmbA0
%n+aBSm13j]nDg,o0<RP<jo#(rb84O2:+kC?-9kcW*Q+/+n)+)ik4n5Bad9^cIX6'`HF9.^SUUG#L8NO78!f\OrsH6a=8;eYr]fKC
%jlZN\ji?!Rf<3F![Q1tpPVa@pNm:EIs*8_^Bh78KS/n.B>u'U=d.ZeS^VMQn!3Fh!X;f[Uk48*k!$'f_f<cU(j+??i6'"(<qCn>0
%D9bp@LXu9:X7KRVUrbR1IscH[G5D#EBJ?OpT*P)XC3+\"rAf)no(qs5a\N]hB+Y]&Jc@/oo&UVDZSrC$(\^&mIb`i#(Ir+NVnZIX
%IJRo/gt.#$n)6Q:mN$sL`ru(L-g!XILNW(<O67XYhk-L4^b%tI,31@?IR5FGjNWIT:KWTXY*1AG]@C+.dO>cWokHF2<c0ZW:G;P8
%jjD1!0S$?XL)ulcM8#@Y:4Cm#RhQpl=$%iXAhlSrq;T.q^*ol0JaQ@`-P1Fu-e!S[N1XkFWlj9JASPLJS^OOD>c4V85*V6ahTdbr
%\?ViN'5;>.X\GUrM6o.&VC'$RM4R\c6kom6LE<P+&(KD4o7Q\:HI.[P&([ohm2#G2^5U\s#eL7s^Y<"`:OY^`j5`F"IlZE%P!gkh
%X%%#A*V$WlC1B)QTQ"QWLJK5[*JB**Z)T'+6edcu%jd%J>Qt'XF@<flK.`M^C2W4Zgs'L'ja9MnW*,@CMJTu4`>h>'A[0`XZRhHn
%ZA-dYB1o`Oc/-Y:W`\MN=d?%&AQR66<P<-J1FUTe'Y))N_Ufq"'i5SZm>HOImj3B3IB!-+r;Z=VW%F46N%^Y!dXnU];c%=_5I&.*
%:R9W\kTfe;:48X0ER8>L2&-LqU/JkLY\5El9!Kj2_o8o*ZTeEp+n>+,5f<\.)M4$(;?=-sJ=-GZBb7`]/.9t1<d5:gK'!'j)2Zp\
%afV5#:s?ehHpL51ckkk\.*th9%,<P/_`Z1O[[K4FjXeV^"`nA>)@B14s5I05TI;;\^ZI')9"pV[.Hu=LD3WOR8`)#oB)V`p^uSF=
%0>ge;:[-brIgS;`[eB1Z#=)V4q[s*lT)`?,)18%#*;qb$Rf9<i8UlKoe?$GM[fTiLjd'col2muspfBOZ['"GGe'>`N.!\Ru![_mn
%Ig](ik4$tZ2&+f0:">V#2amh[)beX!!'[HWJ\&!9=T_@"d+Dm\3-h.sc0XfY$gVVG.ju\^,HV$#KSbCsRT7]Wr.$G!BsO)/E5GKJ
%0B$na+Wui2/l`5#1a!B(lcU(EChI@W0t"!>25S^?(hF%>YVdQG6I0%[S8R6qc.Aep0]n1('d-EU<4HUlN,i]cb_dtl";g5>*#:f[
%&p+[K>RH#,)GuaK4TP6"(Snt>bPHg]7nDl6&ZjOd06T6-`#Q></=JVm!*'0CJ_CTF"V=m@<ZhElfEHe4D(S$bL2.Ng_A9A_(ljD?
%%*R?lZQscFd+$YI;.pOW`&rZe)m1\nA;J/[%p+F#8[/R-f/5g:koi,UW4mXFO@@e?nhh1NO?bb$L#R((ME7C=OEu-Pd@u>UMlN-f
%(^hJ'A8<il^fi>:89)h>bUQHs__cu/_icDM;h^+-JL2jsl[MCi^;BP3X(b=Ea22T=J-i_PJC)cV0JF'.m<R`""X*Lh+Dj5r2<-dW
%qAeXrJJfX?LO$]rEG-8$]S8EHX9JA\JA)2s)h<;:E*iZ11V>;*>C0I*!.SW&HNA<k^5=&Gndl#$<A4Z.#Ut^j!96Lu1;XnP9aKcf
%%?L3OLSD#g*2osoqZSS.kq8Q-(fr879A0"g\cl7g#YP&,[A>F$$Q4+rI#CafD^i"E`ME`AN8L'UV;>*d?\&un/Z%6#ba.7n`NN:t
%`h/jN1TLL!K\m-T$bSmT//l<5`+9<u",WmR8=J^lmBEAemnq^di'Mf/=:n*QaYBb6TLFn)dN$i_!iXV+7&#:["uuc:2rYJdel`*F
%"*qp,3=2cOUjQqp1-?Tr`CnAe3&Rd8$Zm#\V.3^f:s^N:dZQ/`crCNjgAiD9Q\Di-o[b7-J[N68b.Ob*1]b`#`.0T[BGC98-$nDJ
%bs;+h-VD,VRLdmi-;fmu`=QCTi'Idc+HA0$Nk59d!ohbR(MNA/:]Zn;`,R9d4Z2^P?sgjakJ3jY,a>D;TbR$B"8o5EhH&Zj_!P`!
%o0A`EmKWe18d^6=$@tfI":iV<FO?2O0a!lT!6VjBXhq11I&\le4HhDAi[W0F$+&71bfs_MB[1kB?k1&$nSBep9PL(E5=7Ot4?Mj_
%1M)pg-St>aKqAqlk/)juR*-KE)))*f9n5@CSRKeTLHYoecN:3"!R;,83^@p%@&j?6)6-FS$M):GANc26NRo[qY?B)#GCaol?^#r4
%]nTrUSqOHZ2!(o3dnlcS!,o6?D)fs&(.$hSWQ"reik2^NR`:e.2:ZYJ$BCoum>DeZ#oC+530*"+NrsF@>u<5n@_%R?<`4d[QtCW&
%UfEQ!<eQT.P0<"?'Zjr]ONglg"5+En<s.6CQdAbY_kN)J-Q*\<C.ON,2,[uu)A:OWbUlJ$F5lV,+fmA[d#==<$Bf7-,ho&,cdGs[
%87riP1QZRNCc6o@Z=F07:1U\_AM_-V"\E<d,dSDn](-Jc+rOf`ZIqRq)::Wn+mE!#)qE(I%PF/r3R#kXXD'8Li2B7TR-Fb!Vb]X^
%Ol*8CO2Ir'&<E9,N\giG7F$Pd_>gX(j[dN"r'kp&HtU`&6FS1(0c:5DJT&L$.$kX!Vo8TW9.j()n'hH.M1Ya*)muGS'IAaR-MYdj
%DTfZ=7$upR<:MRt&[6-X<P/]6KU&fp.c,k+!^51%'mJ-FT\1J/noW"&WDmZbUnb8Vc$FS&/QlhjVA?]RWL8BN7of\:/Z:4K=]%Jc
%_E%sO]_"`#=VtL<.MW\#s/afIW3aJKeo>-8ko\s'>fefheda7lp%(gTE<5?"MAb)<$s?4qZ7o]1-(Jd#Ci='E$ZKN`c%GPIi>>7%
%Oc;J>Til^cR#-apL$^lg^:]F1\VQN=5V#i<[L(`_W86RsMjALc?-EbSCmUGNN3-XFMnPeaqg]IJ*MqFl>[N$tj1!\NAY,5Hrt\ec
%6S7$aU+8[?.0e--TIKh=KBYit3J;RO&lmDDAq>D]/B'HA/'[5ICg3W6A=#"r#?7[-$PJ"8M.,i:%*Q(0Z@oIsVS%kgK+u0X8L8D7
%QWdMZF_#E#l$)RWS1+,f,a;6#5_jr]S9(t/qdXZPN/M7.>$@g+\((e7(4IhT]Z\tsVdrF&CSP3*J/29o@*(\k?Ijp8?P\KN[.)F"
%f'cc9(V,6q(m%o>P%nT8`aMck,Zoj;fqcu8U-hI68l%JIp=<W["l!Di<l*Y(+A%m$X4H$*[?j`l?8A'sM]kWeJ9<,uOr\]4V,3IC
%=o,54jJ`ck;e40%Dj%KLZ6ndq$SQ:5P;I>@ZRo\L&uHuR2O,sf^*MI*o<tU?>GIq[:FoC<YXt84.L#DeFt&ptgTaAU9hOc$QD?l8
%dU'-c,T_T\o9ST!&Dr'0-CK#G+KW3l@2\hWF0un]'4ugU28QUAh?E6@Ui9$A4:PKhC[a;k!NP<CnM5>2(4fuA]H9I,ZQ&@qn=cW6
%1JrFS^rluDU!VXhTn3;Z*W-YQ+E8sFkCR%sn%isr\Qh[_!K=JDlVMlqK(p]eOG$T_k>G#LAtmOEDWF!pr%$f<]D:>:cAAC8EM:@a
%AiKbXnGcO?70"q-Os"qk+5<TWq!A7lW%BaskheEl^Qk-f=TY1?flSYUWL$"qO?Y76,nN-=8=>!P,%%Lc`Lu^$"!&Z/.`dZFYTM)A
%Ups%X6Wf\ZIT+?BaFrChaIY]\RH-JT2T<;=$m*DGq]#ok7HW\G=\i[N?!"b()6_Ka`HRIie(G.N6Vrgb:@W/G]Jn;c0;^)=KCjmH
%bS"FpJrb-u$47_@=qLWBk^CBLbWLV>9VT]T,t1HDH`N7JU=KQ+QaArP_'RK=eG>7jZeZ8%5.4RZ,fd0dE^i4sS@TH?@[,g'3f1;e
%R?ua\j?:rJ(0Pu7jFRX]b%o(D$umHAo[r_j4DG1C)Hod16:3A;aY2:k0B%MrL*VrthOfT:)>b8ApGmi6#4G4Y7^?Y>rf$SPZKJOe
%SkS<1RgYCh:r6C\s6#:<TdX'gf&WfADlNHe;t6XB8gsiWP]&I]U=*h-r&rio4o1m)EiYp#WYQ$QZnt<u[s_t/5@>A/:2C1a(Tk>e
%<@)gAb1dNjhN#D&ENtL-D]*2gpjs?OfFdTVj!0LlS=1%*&5.8*<<9;9rL7p3Q08FgndYH2N7a-A&%p_&Oh\112K'D9%EloK]N)0g
%7#SNI0TWUE<hiWk,Da+bmmQf%FbHUC&B&WoP%5p9!F$ZP,H6K"TY)"k$Ol=GZ[0N)E/T-NQ0<E(cV01BQokRUDhi)?`GQ`u;/LXo
%>GV,^;.PY10<a$&(k^HNANfIS<f%_@l][Vk8]$]WI;4j9&M$mUF$Q&!UaOHEg+]A&rB.8kDNV6S+=kcPrY/1kb#=?Ib`2o(@#6W]
%4i#,E6W"T>$YRB[Oo+Agp;UsUMYG?[2BPuSf@>V(;P;"-+*Gab5?tDLNdZ6#@b8r8bqJ:hPg&"j/]M_`I$J!@-C8%G-rHrBZH_=6
%%G:X`qF(4gc2X:.L_EG>12(R3i.%ula""d+6':JUm6(m;?c]ng-$dZj8&]"fL"*0Mp*lr5gZ:U&f'l5N"6q4Q+/8"V?\*>_dIp]"
%'9,fbaH,,k5aicki&q"VCOe!$KBRlf$&Yp;F[=CZ=Wc]aRi2#p=Y"$r:c(Pj%7N?hrD5==d1IZcK_7ake.f_A0at-8MS:JWULrDs
%f,C!p,-`W#82ct7=L1sZ;aE0COC[KEf<\]@67?.KA71E6j6.&7'&s8&4'Dae:O6jZGIIig5,cCHE-I3?aG@MfJ\,+hHn8+7-Eu5K
%OD-\8&<M`IL?^>ob'>pV9gLrh/cUDhiahR4aA@]Y=knmjpPQh;ed\8p9UYJQ?G+Jk06<Md'a8g'Us25F=65(HG_q@ME(sdP)KfSq
%cU4($':-9^qNAcE?MHPaI][=IK`ir__9PRSF#;tfm7Xg;(pqCNRiigl3:D5g8-4<@ObJi.,"7@E8C@4:46$F\<ZVtU<<s<V&U9/=
%=XZ39(""EDgccpP2oP!&AmY]ff*99Q,M#)W"cpkLl&Hp23)5c4!cO"T$o^RJ9!>`_8I4aI6Z9XoK9]?<7XDs<WdK,ZJ:Fc9M-g\i
%?)'PdQh[+64OE)N5BTTQ:;A0jVWU]h1&X8$D2+WG6V_*j+a6H2pl_Z37MP4G^e5$H7/!+[qKXA>I1R_eqq9p]9Ncs&0f74&ELu"d
%bc"5AAC]`V:_^.u=h"E8&IFJI9-<L-J$d@bjCF?:<c.ZY&]pW,U="X5!rfMl#iIoWPm&X,MM``q6%Q@+fKb+B-)idB8381R\0:.b
%O;_)PYZ`,N>Jn#pO=r%NF@jsa<N:ej%kUWe*PuVQcur1#Ln"nVBn6bf[OYV_Yf[Q6Q3%^m*tZ#\p!1CH%C,o\PY&*UYZ3TGjrrFL
%?jNmV#a-uG[%,?m0a(Kp6fot4Y)<jM=V4S$._VX>bSeZQ8Q;)[PU//s+p]]Nl%1%6ArDNpY9J;)#Q^A/Z,qS?ZQORNF;!i5(s<^=
%9ToQ9OWaf!,8]&rYX;4\!n@t##D(WAJr&cQ&&0M;'*Qmoc:m72XsnpL<="uU$aRC*8solc5!Z&I$q_Y)nGtta@Sd-aqh'Q:`Lm?9
%P7J;+'n[,!Iifq8.gBb))B0NnPlt+\.;1fnZ$t4R;8BUi>(eh[WNp!>6K/OGrn<,Oji(eBQBc`r/7Kd#dkWGS<llo`/c@gS*kah'
%NA$K\1+QA*fW<T-ODs!^MT^nO5UV,IX"ZW0p^4qC[WMk>FTG*m&1kF#UP2qNQqRdTX[4,+0-!))iNl2J[W)ST"OUsB*7ATbcqNa7
%L_<P-Ajd-/ou9Co!>8Qd_6n)]Zm#&AW<-tuRftV.Jkalg,=8W:+u")RXV`*2EAS0;Q,)-7ahpanm("<K9MCS;Je\^a8.NP&5hm\'
%-KcNlG8\Vg*5V\poRXP^W'm(!iOKSoMq"X<Hnj!H2oOcFmW]h&D%c#Y^N!tG8LZA=Fb@ugT_-`![+eR0Tf8rBW6`-:*K>rcR!I4g
%*&$ofR7t&OQ/3+S]^&WWNod9)9(uQ?rEa&B<;j8"cYEH<69_,#U;@\GRGU-W-]_B5c5.bbbul568IeaFQJbeMJT#4;<9[EW(#gf4
%`c#UT/PRbLd"IjQ,q/q_,R$(;AR!R)(R#2]HK+W;6dc0:&<\q"]Q6g<#0Rto5Hcl3CQUfL7/gRFi_O7gV]g,f8]!j%a'+aUP-C+*
%of#Df2p*ZkZa&f0Q8b&IXqLF`hGe)G'IO&fFB_@YA#]>4m0TnY]p2_,*lSAC)b%UOAFoo_7Zg@G)1B<1;&%AbM=(r&">]5u$.?rU
%h?eXW(&XKTLKP[8k5,d7:k8CFF`pX+]K^,`MDEXE[]K%^AaQ$&'M$0Js'DWtN?4@G;/J?8s5d:B5FFiE^@8"]R27m&j%jZjD)Tr#
%3ONoeeF&l&n.)L!G!35N93U&]RCZ'B0XP@<;n?&0$n@Fn_)QcZD78JAX.&*4R`^!%&^M?<=5IG)fNSjL1F#-[b'V6'O4,oUB<cBF
%EJJu%1\$0G*3$SpCW>#]M0TleU8(hP/UNh!;0@&5p]uo(pa$LkJFGtCAjl=O%eO0.H2t-^c5'mU@Eq2;#%PMda-acm1FW'04TcAT
%V^$-3gdgGO4mSk&6Sq&+N1og$Z6J=>j#s+b<%f\h0FH:MFt7M"DFj#aP6$3o2(2WQAQ'U)h+uagZBI".M]>-+;n7`Z"bm45DI[fN
%).jMidji^Rr76,s>Mu&=/%<,f5c;@qB]XCr$3iKI-+%^))[0c`*B*Ls>N9,/^@VVh%j_YK%9gj_QC[(@9aCug":)pOXqX(\:H!$s
%*Mq.`l8QgT4"V!sZ-i8`a"i+0Gb4K.=>TF>P*?$hG1fKV3_hK_Bs0F[Dn+cF^%0A":lmA'_/.G$q;<+M6`le^8:l,$Mb0n@,bgG-
%9-Q!nrp!$bC2FMN(L([=k]WM>&TuYGNKpp&dTaQUUplN<.N0gketAn/Lg_-(Z_I3q70+5[Zj$[WS@:A0@OR[J&UJEIEW-c[Bb^&G
%73#W4QpsYVNq:+)1UD\$=f2/:m2PGp(s1otb`C1(hIcj@[PpP6^5f?\A\69APYu17\$%*k2gSG$^ImokBdaZRoq^4Oi7dmt`,Nbq
%-*K*Pprmf5W$<[9Z4E/]?q'7r'Ff?FOhN@p:iRP.Q0U\@JAI@EOf(m?&O!B:*@VV<[3V5<j$Ut.h5l#a=\5;QQIZDGP>qlae?gtB
%0kV1I2!4kX$<E6!;UgBmQ@ai0U==5k*Ej$I(+eX171!/!Lt4M<km^Mi3T3&T0J^X<-(s`NNJ],\8_>]TNT/2kmnWNK1nNm708TQn
%o>F_;8:3s$$&nM+\bBeQ4]@Mk-1P84&>f01A<TYX['gHqCncHii%sCF0+1RVQ`3=2rtL/m5&?TjNs.$?LoQ%1W_'9bI[aj`R)YUX
%)PZ/r[RUD;016iN8-g5;=_O6;24*O8nJE+[e%GDU.5Oe2i:YBNa0#a7$rL.;;e$tX&IkkTLqb(_<=urE3s9pHn!BUq7e(q&$%1;f
%CmC1eM;M_*rRt,YY;k]`fH`Fp"`C@P[U$0Jm!jkSj8jmEW!<hO/;'EU+#[5Ur-f.p/47)J6%`ai,;:fR-8Ff0HuN(hg0TIo/%J.o
%o2a3Fb5E3gYG;'=4XIX>^%R"_ialhN?ul:k+tINf:?)#!(2#56:tobbB-m:3jk_Cp6dT<7<oq&sh$IY5[qjtf,7j51A2+H`',-=$
%0h/)JiIEi)$CMG<fSUL1Ntqd\fo6f25f%<B64u'+)^tosOCO!O5;XLB(KuuG-B/mX6IGoSP"K^RTarP&;8-@lYX/[J%#LidLaA5R
%64#>&KSU=Q(r?\-"Vj:d]N)6]RLjM\GV8bBQlE0gX+5io?nEb=o"I]3*5N3&#+>59j+jb%@E4]#>*.QF[4f2U96Pm.p+oSG7"6T;
%'3\Z<h"\1q9IK_dj$%UVlrMI4k?m>#frq9?"UH>Dp8j)pb)Bbklr7c5!,:UNgDsk[o=N@;)&5Ti#.KL;jcdT7I#qYI*[^^X.N\nU
%clkBqb1"l;P!n&Zf]Rhf_NnU`]qYI#aSK]Y%r4LT7c*O>+D//nG<GdP^E[(^58/_=pfA*?X[kSKT<l<)>85m^J2b2R(??2nGK'G"
%ToZM6;>)0X_@FVr].qX%R"f$@[M9+">XZ)Jp8\8ljXbU;R'.lPY%;-8o;*u?$gqTCjS2o(i\\QlZ,>3LUE"G+':(aqo8lPG$J>D>
%PFA8:)OB/jaDa-fa*AJh-9LrWlqTub+pB.`k*AYo,'GAt3#%m>Y*3"k-A\G_OJ.VaCGE"t6gd;.o-n]\3R"/+U?mAD::Z`h%^Z!`
%I@(X6!Js?5\IiHgX@;1DH/p6/SE,c9Gt0%@k=Yn3QTik+7Ap6<'!#c9q5_IBgTN008-4\pZma,[jmB%QA#Tf$7M9;Y#+B5";'?3R
%HS2LEQHQ>qj>[_>ermt_BVanZBC^L(nT6(F]TO:0=j@-'V4Hf>lL&D%6BH_!6aQ8&EM05G+8t.?r;e$4#RElQa,h)P?u;(rQ+er6
%XaqTK#JIqr@5d[aOPXr<4<Odh5XIe`K0h?B=pPHQo8VQi[n^g+,q;^D?ASk@I8@`rek+Kq;fh'bGT'*jJelEl(5"%d$8H+\^$n$P
%KjJO$Vp#i%;3qW^]ld'frF2XT!IG.TXVTqtbl*AJCCEDO"$X@X4G9<Or$HtEg!R&3k&+3s",BS";jS?.9+(B0/#Tc\q7nYCc]Qtc
%RYh@meC2@2F>)rRcYFV+%(aggK`ak"!/N\j+u\m,XU2l5Q?^Ykd@)i!!D.FFUgaS6T^?5%Is+c?lci8-6aE6LOfqsk.t!_:"?K)P
%6Q5;&''P"1LCj)#.<@he/rZZ%;g$(KLH6^DP-eJP,Rd!@+c;rTKO>(Q[jjt^-+cMih,]gIJX(hYd"n1E9Zgn5`P`4l<R+cufrR;O
%M2[/AMVs=F'X:?/!=7(2\b%j)(_K+Hel`91,HEY>M:Ub,Z"\/EJpZKilGl(s<6VARGfP.P;S7oi`uZL$$.+@-f1V_?5jY7g^p4\l
%n<Ne649-SZ8B!nF>CC4hcT_`X]WXo9D9rGOD_pY70cq#s8_qO^]-B`%k3)+c+9PfU\b,S\JX_Y?^oKc\hebpPBX#n++5HdnUH`Xd
%8KDj)M$CeV;l"%Ei1V#[INZ`@,WUEb!'ltXaChU\=^5Gb!'m&0S[g:qCCCOuK*=Pp?.=:#-G,)erNu9Y@H3c-7)'$A&-eekbT58Q
%pM7'NN!iD]6M-`Yr]h)'DkCJc+H/Q5(+k+bY_?cT15RS6>/sOA=V3tP@W&&C?p=dBasJGQ,M>g><]_0pC>&3e^*pV%o'aN`NKUhL
%E],P6/3IGX$<F->QSOefa(1L4EiT@9rbTV%Q2Eq+dH79W?#&bJE36dTCa%JO]KN8=CK*a_;??NSi@ZMhd>[YX+JtJ^:RYmZU$Ff]
%WdHuG`/lh)$3l)]P\H.6>q@G[>l/1ea6l;:]2__XQLic\,f<@lZ<>D"T#@#D,-p@a!0(n_.?B?cN2(b:H*2)-ZdY6Wd?1b]B65]8
%SJU?dQAAKPjCGr$2Nn]05n;`lmbPU:#Ei#]$6_<ecdfMK_JC\WS2WW4DA<9tlgoi^]PEh,bS`cK"C6[4]471l;^UQ46*8i'-aMh(
%?e?)"*h4U272ns19p9)oZ$u%TEbe`%7edrH?@8]nC<j)Jb&86-I&<VDpjF#H_DY,.gk6XWl,ar/)&uo(/#$&L(a0b:KOY;6BV41E
%k&4?+-Y,;;F@gY?R(kp,P)J2`%499TYR8ZIEDMbKm9T'Mp4f5ikIDPsTS4c]b,rs`IWnZ0@H<W!"c&5tH9(_CV*:eSYM6#A3"i\4
%\Q&H28%m3C/afBN%]"Oi;W^@[f3k=>NEIKt3,:p&/D*@ZRn.<.Bl)e`RRg?jBka:hFZ$R\W[>-A!\)aCd:a'F/t^sC^G`-%daV3g
%^uiJER5?@jb5i-]GfErj'Ql2\\4gb7!AiYdj3ur]en1q^;J517h;NO+10e5W$Bu(Db26:DflO;mcJf[G;Z[aC%D]!EPNUhuOh6S0
%9m'a+G94N6rLn2J_&^+4:u(P75#;b1>j)/M&(j6`P'VrR/V,b<"Q91[<`:#Y)4VD&$k*!<jQYS<e.fj/A.n@]$:Cfn9!,AE``=o[
%DF)V[BXsur()p8iBA\<4C/q1I\PFaMJ;9`I5i_;@&)YMs@?-a*&4mrXF*s/^e\cEBWht6l*r74oLK+Fc"l69L#^Mj@<!>*B!k>j?
%%AHHl2%;\_k!H],&4dllC-=glpV:n/N?B\*(Xmd_pP4d"U.k8Gd.*)Y"BK5M$R@WHZVe]ZOj/']&%)Jo'L^g`>l`[>/Phc4iUm'"
%acGrakR:7Q9tsF;1b8mS7ch4.(lXMqDT+O>j$Z_5AUd=.C^(JS@[e)Y!bN`^Z7STc@*YksV@&0"?@$[Hno=B%??;:FG`9O$ln^AF
%B1Y5&JJ5DnK@Si^J!1j@2Wk&E*t+WXV+nGHk*p$EY.\?fKK!'o;LJC;P2K20I7\9?&t9AP&!@q*dd\@**[h>cRq3Y:GnN6+*p1m7
%aJJ5daJJ;baJF<X90CWk%X!U5]-PG/K[fS[/Lu8F2V%NL1%[l?:/"Si(4D$Ke!PMS(E7s'69Z7JK2FTBV=JX&N`7osemJ2+PSGWh
%iZ3r.)"F7D#sFCk=`Y[,6CtLpT#%pTHm3Abek%ph)(D'`;E\(q"r6lIkn$n45p^XZ.%,e^Ysc!c9R6jk\gA]I7KjX\924]UA/@g]
%C%^R%C%'6.r@1G^`JZf^eipZHp19Yr1WrZinBC?(R>9kD/&+_mm1XFTEjRBd!,2+3j]>`YUdIlj,0Li)rY,LM.rRj<(1Qfbf!GrV
%q)iDsPeEpI?Gm5LGdl:nG#']':R%XQ:R6/dnIDH@ltkChB-Fdp?G6\?Y-sfMGBB[aY2JY=p+HPm(XS$&ng^uZP,mN"RWnHsp?e%8
%.:js]\R_oXpJbphA<KtO-C4&P--9:;@CFWPld@n9Mo!g&=a[d+7hT=UA!D8_9$)?-fpEXec.T%0_DVM)Ihff<\IR$M*.KRqkRrY'
%Z08M*OmYP@\eOElX[@qE:J9TGgg7kC_elp9`Pt"V9ob4LiL1cmDR8\S7C&DlNK;K_)Y_^*pFEeddK@YH(b+n#m7E=B3(\J5L@!^G
%!@te&-t[]qiFiO8#-'Ko2fn=:.>jgQTue@32MS(gg4uMXVgs[cY-tT8-$^hXN(pQ8_-Fdp'S!`>4R9uN:<?1ts$[ha'h(PeN1,?W
%A1"-?iRaqfoZlbj>6h%L.L"%Wdj<fNM?_FIKs`7b`i:FB%K1HohGU*IlhUA(a3D`e(LK$s-s65n_F'=(fDe=0VHWMZ8b=?Hq[9,o
%bSMG^:+K=F\?c//.f<:<+A#?W74XHDKOr(Q<jRnY8(.*mgGR?Or-4^&4K=s)h!1FrWr6A+X!F^D9UqD)Ejt/XB0(r7A#ElVHR=*]
%[mlr$LItj<H1]c>3Ja'!LH;4t$-*R3$#31)a@F44X6_186dh$M6MPuoO-%+m6&sn-V5.7K5\g\7:'7Y/Sha%L_SOh:J8N@J@DdFd
%#Ecu%m"V=oH'45,iDYPC)>VA4OlYL0UZI#QRuGiDT55^Xb>-bJZWmFDc&N9iLPFss\#.3O@BI_%XaOLMeK<jQLVN3]OiLurZ-FEq
%(REQ<DC.fGMb^LjabP&?PLqub\sEXROG,IVmKkt%_AQt/,]]WkUIWTZ9DA'l+#1&OQDb`se/(alU5:;t.nq:P`tJ&8'=D;+!blGB
%S(2Qq<g$OX5F5SJ2Nt#<l,gEcRlr@#h2*,b$jED/9IMrd\9Bgul&=::@d!Z'W@]G\<C#&kL5^M_-9F._P+lF'?\??]1gW0b`Ftrc
%A<(24RP<]I[GkJ"b1&9d_,P7ZrW&0bYnr=:+FaV8+<<A>\-\BJ<+^T.JB#5p%/@5>T9eMG_=B*kC<-+s6jkSdTcP*5Ia-YP@+ca/
%JB1VVObG5h(@iG@#u(MnUX:Q_95Ht7](>eH]r?l5rV?Se>9V=`FSNCLC;-&?VUL2T%-oHb8lFiN@$l%HTNV)`AiZ'6,GmGb=jA-o
%V<J^C[7?ZhJ^5<?Ggg+nArdh%nW]UFPa`2<.1l=Kl(/@66+I0<+=[lc-L1"Wl?jh!B.J+\=FIDq<h.[0$p+uabUSU@T[*D0!@B7p
%g226@[j4@X>Em(/.g;5;YUqH5PDrN,dPbl=</TsCBLbC:c',G,MJrRKKcif3`CCES'ZD;GbHOK&8t?[:a8L<beo)F6]7B8X_WL@.
%RK=S+cEO*Pa!P?Fa@.3(Q;iV+UC4g[algO=:!gN^ajN`c"`;VW;(`b+ZJ[CReh'8bn!CCq$hMS7k'PlUC2'/<6!HonPjc>^bl=3p
%^8<.73</?.EmN=D&Z_R0Za4K6/=k[\034^M-CsT^Ps_#=0g,au9m4!>$D5'WAY,,#+'hdm<um0XKm"o`;C3\q'5<&X2#0N`4A0]E
%+AlV>OKqR&+t<,F-2QMDUZUC<mItNtKU%#LD#=1c'S06?3ST#_Xs9P\B5k<X*a8pTg,(Zi.:CLNG-I6`71]/i!u+_LJ`E'*MFGKf
%"cu5g_e>^YrjG_AE@eXBkq9$6\E>Mlkj@i)kCOrbo1!blZGu]%/++_)5RK_uAB<N^G]0k.\:1sol<D!Nn5%0@*Hj,u*K?VQ#e/%]
%Q<`EXQMoUXJA.ZE4oWn%O!!Z9nOMbIF;7;YZ-/rJD;3@aNFrGk2"tOU9/L[POV8/PfmG-B6;neiF:6ebfn*g&(>SWWYT4u5gYaOD
%G=Fo]ObuCTU6-kKZCE7#93M:3[NFWN&A:KW\O]%N,2I8eVp`-Kq`:1M.FBHiH>kOdNf^bF;'bm9gptknYSCefRP_.g&uJ57IMu+G
%j2g!tNfiI-(rfmj1)O,im9L;aHSI\M-"en`(.0kP/;+t<\J%jlC?J;n"\_O@%S1+6[N;\fma$Gi"[TMR;fsU9hE5UIoXKV6#[r(\
%9#Sh,__UN]a/4Q+ZNT<9+\a+5bIlU;-fXBn68;B,O\lS'M+BR'N0*rJ]*+.#Ob<?KZn\:,DKH&B[`B%V#i:OSq=`8ad$Gl.A9bp)
%7^=A:VW`;hkB.Tm\!HCK8T+:6K,mVR8o#puJfe8,W=h=M\<:5.*A\j`PN0q^Yi^eg+b#4_qi3Z#%naql*guEM'X)."G-V]AVYQ4n
%+XMMNSnu4)^o>>/KWKgV6I&52di$_QZY5t6]V)XBhHiJt$9C-,`8Usf_;Z,dPOj[L:8B1IW7$p"Wk/Y\/5("Dod(I=U_ajf=tq]K
%,\=g'jketPpA6T+pU51*\(_#F;\$s4ENXG'VM]`<8":E9@`4*8-[+Lf%^he5i[MZe\)'e[pn7)UTX]?,jqTdg@+p#=^:0rR>N5$)
%2EQoe^AZ=N<nOH)$9Qb8St&Yd*u4KH@366X;.1O]p/,6?(%tL5*sM133?)sI`/,'RSk<G3UCZ(XkX8birFI#OGi]28.5@4!%L4b>
%e.pE[`?^!qkZ1-</20j9-p*MoklU+RJTeoG,+^%sFs@<*#]9ok#^umbU#]i=$fEYT^7uY;U^pE%rZDO,?;YfDR`a@Z.&i"E.<ad^
%6"uB.OZ6i?(G?t5Uc>V0jjB6eWHiMJG>-5a,mf&,6#>d3*PEcJCD)I]c<]J,>hb^`d`]^pp9?cEl!2Aka2[F\addr.T'n=*G<Ns6
%Q1^c@$Frc@2bCs]njSHPjD!9C-peuXh\35TLFheZoj%m-H>.t,37ac1)-pq95eqtj5_DmgRGWi5cY5&M+V!C4L4Bs)\Xk*N9+7Fc
%24UW>6sV5!!(BcM2#V'=#:gm]fuA\kb<A:N"pCI;G8glIo^.1R:C1<]SV7[j9]<dO%9Z#K\)TlFE]r6sdH)(h@Z+G!`JUdSd-)/g
%8OJhR`AYl#dY<hpc/Zb?FuYUT$%6N?=[)%2m\HX7+d(Ae8"C4Q_8B#!i/"7?AJQug2'"Nh;6#Y.RLO@X"`rgPj&6BqE6X.E:o4Rm
%0^%Ik(-Y?unl-F!bS6BS4ON-/'8.j<[!6Zm_=H]GD,`EGj=G7WJRjFF4:"Bb%M+&::&NCB9^EJLga0:eX_R?6)g(;hSYK<a@TWXY
%mLdFl(W-T%iZ:surJ,6+O((gY+@m#c^YoTQQS3M'm!dt4"E^Y'+6C5p6eju2.-T_t6`9<T3a((^fsqJOq0"p\`/#'O:5h.e#Uf0O
%WjhKX(/n5C]/kNAc!02@D)!W%gR^5F\`D>elf)eFIXh]Fg[mS/TtV7MmSECWhTe-gF\s_P8(aUF.nqD"I:4`&@/B3qS$q'smLSK@
%bH((KS$(N!pd:CKA?f\p"VQ$#knfj@3L:aWZf8=Ffr[q<dHGa7Z,Ddkh8b('.O'n,GF(_<M1!e20.i?>,0rSa0Mb,!F%)6-+Pg3S
%S+:(cK00Hl3+cc58siO(G=hCk-:I@F&<M^cT-Q]nc_-Jck^<4/8q>:`":11g?q+l=TCdmQVP%4jL!Qa#al-`W[dE\q\q[JU'I,Vd
%NmF>]F6@X)FfnL1IAd-e(<"s&X7e*C7#3cc;b2"HC!%P27K)k917>+`:.h]8Lq6D/V8Oo/iNpdXX'4,AiI@82`e<uJcX;q/^a+,h
%4\r"[^PbFrh['pKCHB;\'UFIQ/F#PF#?KX7I[jT&BtO")Cn;*ej-MD?_LA"YO6Nb@HeXT[RfFIH3P^(`FSB@fOu?+a+N2b7+j5g?
%2j#DVBVh4!]cZBV&X#o]*@.+$Sd<BYqW"^,`"O<e"@s`mj:gAA'A6ePl#AVP";I44X*pYcN[&CELY=#og'$^XqsU;^/%&;g8)"/B
%$ldr68TCHB/Za(mCaZD^P1p4F/:ED74AA:`U5U\'16uXS%%h`70On4jN1K2gTZ'sSN1gP6[\V-/UPkH^h8pj4H4j/Kb^.]P=PZe3
%LSB;6V>,[W-9be%V.:H=;H0JQfsA%(pLqOhM+/qPaY'qM/#@W:@:5.]V5+dYkFc[l/bugBgqnK98)59SW%$@RPoYM:;ML:%<1XFg
%RYD%:d90@q6%!I?[^A>50+HZ/KD&n@3F5D:RYU4*+a[AM?4>X_!n)0eik"BS(0a,Q3WY6@Z^sE=L(@4=XT<-9Da9aa15D[ABPhrg
%-Q"Fo:ehZrK<<QE]JNc0Pcgd//V/.qr+Mg#!j6"\#/h#gJik7\P$k?9kQq;S)+.*<cjdV0!j3eF:IZ2<i+>P=3&t`9'>pt>?4ooQ
%?h(4k'd\1No9.J*MKD`pHJVIIk7&$Ipq3;g5B!Le4`>!7\oU.bR,PSe1C>F6dV2'rekiB<UN4Y[Gt0S"F*R.P>B6tO.-`G$AAFTb
%D4q)CrrHc@FIh,@_M9.=#u#cfp]d<_PE-=FCs]^Lm4j>UI"8PIdS[je+5lLVFGqojJS4H4A*c)OR"C;@%;(!^PQus6/2T5c:!R50
%R;B]bmdWY<I*c>e&(7%Fl#2->@O?cVl,llgI5F\Y8g.3O/5=2(Ua`9B.J^@O_!o.B)"A0>h3X],F7Tkt&$"BoF(*k70^`0_G:nh9
%(WN!Rj3E?ukJF`M@>m_uUXVf((ia$'M*F&O^hpq83];QDgpeXkA7mO1#>i[SkiSEuJ3u3qn.pPJ)ZU(rOO')(\hR0/?i]cE(;8mU
%8/)]U+:X<&g\Vb-D\bf!OL_;<Cs=%OZ6VlZ:\Oqr52j>CY"G6gpM]E_Z=]E99;Uu4A#Wcj<]!h;_1s=*W,)c(KXH$1JV&:VgVOJ*
%Yu39nI0Znl3I6hC-/B-N*C5MF!>p"@8f!5MLE`V3Lq*8Xg_Q!=RC+:c;1]E,67R6J]]i$eKG8t!7[6hn^8XlTRAraF4r1&EQHtlG
%H<S]Qm=Sk_[TiJI'b_de]TH\iFD]EL>R](EMNB#.&SP^(=A4$O9UQq;6Y`D+nP[XSRE/T^(>dgRgjo>QiOG73Ah$8Dg#VY@);,N:
%Uk8Ha.0>jS9n@md8nk\CSmmqF`;JiMguNHj-N',c:JnN[TCSD-Yt$N@.?.AkkU:i!GtO.1iQq&8S)fs+:)$qq`^]*XAfFptO1@hH
%jbMd(:mW8Z'+_hI8(iQ*E,<`'hRY3jq60#p3<T@$Faic.-qWm:,b8U2CC8EkdVLL%]MOP!P,P$'S1#Mb5<ddKM=4SFUfZGF@SLd*
%QVO<g3l_S)N"*lch1LEm7gl;e#7JddC_t'\Vm0O`_hBAA/&lb?Nu#mt\nDoNQFO(L]8o<Q=1\,c7Wcb$`GD-s0q9]t.OE.'`gDl-
%j1RLO\FmjgD2IuO4VS37ITNW&U*n7PL*MhR`IWdgm>UL+,.moB[N:=527b<L*T@)@iK+;=92KrA`PU-cA^qn6Bm0A3Ra4<PWhq%1
%:u&-Hib!$VO8!DPBlqIs=$Ee@o'prUi-6e\,"mm8!fk;&NlM4he$4H#Eq%nucLOVTEj'*Cb8"kI=0uiAlGs]1XuLI@OXlGsEDO.)
%^@7lqiQq8WMKLRRXN-F\0dLuP#p)Hca,o46,^9_(*^bP"OPkU@#NZg%3T@u5'-g9=*DZMGK`q,tDJL:AbgCUN*5-S;<:eiK3Nbcc
%*Y?mMJ).?CDEsiojHE<GKDK%$XgT+ZA]c&.`[7=i@;O@BeIhr40Xaq7bQHSQ6#9+PgLGnRq4u5"mI!F/#)+MF'LqIDV07sK>)\M+
%m8,l8.@Lt*5tW_=mZW=c$jb#?0ih>@Z4I_]F@]KSaCs8H.+rs9\u6OQ0pYhuRQc%?Y@aA\HF[AIj_dAt\f"thMU]m:g9V:flH^'s
%QR.qk"I)(p2]T4\`SNr/mF&YA6hs[l`CoDh'$Ql$aen^79#>$NLDGT$[bZ8/95c0,kRWRr]k8ZW&AN)o^31-oS&e]eOMuIf,cfd`
%GfpRO]-45Hlgmo[#[^@)qT*'2*;0uaH#Kjs0!XaUc2K8;6:u)j#m@Y//4%j'fFqb`#2L=gi2gI'BdCjH=U_t/UQ]n=i=@)os*8^o
%\O<I=+/"07+bZ(tg!XCiIe%..MSaP$(!\%@.T1_*OWh(=8E!.'pchXe8G%BW<_@;(/F1Xai]<2e-A%MlP+nMSTj1\j"=^f5XpcM,
%9F0ZbN`7uq&c6#\F,<`)a=UqZ(tA+!mo"dAMGQ:IA@EJc6OE(KR,kniADpf;CS+%"Oa#DR0("h7^6ZuP%AiD(j4JrG`gg*L$]#)L
%>;kPV0&qg9I`<<g`%4H>Z=)shqh/OL>\%Xf'F3:u'f>A#isFbJ7>iis5q:3>O;p`p9Yr/6A^'8O$0ImsOC\>.h/e-s!n,:j,Q!*4
%I6DdJcHRL2R%T?J?:`a73rLK/6ki17nIuT!BUPNUP>3/WpGKFd*Sf4dcpk^e,O'M:8N19*>U;QZ^m&@WQYlO((4Jd*b4"Unaf_dq
%^EgK@94R7T9X6Kq;Uru=fpA[8]TV,)$+$%F-X1[=<P\J2=2"Xs$Cp0mNZ">@MHa;!C[VkYG8A^tgt*5"I8Hl2q0c`DO?o@oO*gAC
%CtD9cId7cKkb*`qW65@C>?J`T8#:X2D+3@Bh,8/XA<dJ'ZMMm-\LZP*l^oDR[60X/G5$D<PAaIe=8E+QngEaIYfSP@ps/muIZJFg
%G.MP$5&6:P&=3>`Anjfa(bjCm)TQ_dU^&s&]hDpaM=gYhV'/l2ig!uEAWBuPqf1c7Qg9$5I&UWDjd.W`>ritW'JhIbHrGuD8olb+
%4_'Sj$foi%A['9O)6<ps&<]n&B+=^d#&-/5EoLJ_#4'8Z[A0&AYtOHiVJL`T'$[4V7C>aMQB!YjAi=PqJ8+J)l/k%PpVaF^`^#I8
%%[f4JfqE8$ZPDmjO(H\(kWD,*0<@'OaS0B&-t;nBb9DKUSM1Kpk!O\`04/fgI@c..HM^?Hn+koTg.P>3[:,tMZtl:1M.K_#G):UA
%F[Z>N@YI@^ji6fLkWEbb"*GJ#bucF%-pbnZom.4Y?V?gaU_PTqGpsn-@9J<r8ReVe_MS_$4GHT(^cbL71Wh1%/EEZBQ^IuNdU2]a
%?r_;V:hq"cO'uUcKq[Xpimt@<5cAfN`#6tI[^L@>01ZU-LuH-':G?FPD6@)[d/@#/bhTMC\3a#E(2n=D^fHA8#RH/#Da"r05:Cd"
%YlFc4f+&8XRWAJR8i"#CPlhJ[UKO-VG8ltP.WVl7S@<3iO_3=s[S.)kpMYsWFrO@[Pl'(j_(=63/j\&4P>Pc1(J)"c<Ei':N1#7-
%Tt6grYSPY^h7k[o5QJ$b"p\-bNMRo:7:U-[jsu3)MeRBL>sR`*5c*FJ[8).=GAi.]!MD"ZG90q^'+]VgqEX,i22*1mR]7pM*i;2]
%S&3q,.Q%BMO\XO22"i=e3N.6#h8T1#Q`'"JVrth-HBfE7dU-=pq!JgoB)&hWNioNCQfh^O^0I6NICqO(R4PMuD*F^X0<^bqBa)^u
%U=9mmY:!%%22,cl[@:3IZIn\_m_(j*@Ij$Yr;D,_kPp+eh^7IGgW=sDG;2+'M=j+5LqgEfrKu+1VC/RPY4]H?;XT"idj!>5pGML2
%<_X"je2\':H_6J"Y+.d*Qa38Id:!ia-e45U'$1Fr26?9SIfs0i"NJR07sK5\9c_7#=*BK!ME>VoFNUQhr)dE]5<VqL7/9l[dF/:8
%Cq0Fd?^k$j55iHb;]n5Gr\UaT[=R:L:Wk6LBla+:^,G$#Cc+ZO2RGbGX5((\!*U8uV2_Phei</ESTgd`B(p!@TBp:A\[nub;CPDb
%^tW`_5-589HCAlYr_%SoU+%lug'iN,qnAKESs9c%5:`f+cak!\1(5=JDetFW[[ATM"?L<CWtYu)gL']_fpsp6_j'teh2Kf<B3?&)
%D8rKq;U3ish+[.?(c(QfL6Z)SqUKJiqm:1AajY.IBmEmjXP.N7T9d`k4Dd0-Uf*eM9i8OI/k/GP)+J52n/.SDH&TBRS)/LPg_aS:
%J:jL=UNccl[%b6."_dKSMG<S)+(Bn3;+Pht`X_J)E#Q@%^Gi>sRCM34G5HS+:5@oQ,(EAV2-h+WS9#+:jkDf9E3;0jQ>brD.FjZV
%'s/cCOGLB7l9$:1:sgIJ",V6ZP0.a[iMg.\a`/J.`5?;5]?Rs,MW(ph+K*Su35ojjh+J%Zaq?J?_eJjg=^nn2,ZbcWF*b%SY2S=Z
%WE3PPC>.=goO#/",MgR\ZShsXj_;D0p8h[el4!CjL)E#]kC;kWn%rpgHRr[m]s7n;'=FXE69B4b5*4$tRYoGdlcU*FQ`N#qU?P[t
%QZptB)ua]'H2[P+BIh$N;=t(W^Ns$Vn;uMKcbI/@EK)&<`NijQA>SisXb"WFi_=[jW`FYL(;RpiY?P!qKkd":HG6Y^MJkVTSks(6
%8)$@-JAP)P**I,lgU1f8=)krW=3E4/\;6l`'q5;%n0fVJdU$]jo8[Wk=.2>jN+,:Od("sl/pP`AKf.gs6q%Rb4JUr,-GR6InS!]A
%CU*JS>1ANR3p<"pPZ[ss?/J=Aj/b@JP'4:aa*-=IRPG5g1$q*Qj"40dDG%g@:ke4WBj6#6cF^Ls"bGAhXu79*`j^)&)]\_5#+^;k
%i[/#]2>R&4mtV^_cjpP#Z6jCACD7^;&7tMKDCgutO36Rke4q69R]1:$l0FI=3egj>hec_t13nNS@Y!%0p/FY4)bR-H>mGN=P(A1.
%lT=KPT?<`p3h=A2hhH((i33Z.\t#M<%8k!Y;G44^%dMkuVcs6*.1>7ke#d&I8k_e3RViRFgf@/*m^@#%WRaeoWUI9Fe+1Ugqb\7j
%VQAK*f>,rER+4*r[WZ7ekMpWi\a/M+K>9T`2T>7j<Z.KI++@SkHJ8t[Z9,01[mT(Jb&$Lb/)$dF-e1dO#R$,!dUK4jV60&7WGXd.
%0eGQEBQl,-I+q^"J8WD9^=r_g)cgCGcQK*%%1maF%Rb2%m/GJfo?_[Do1gY*=XSPXhdUK*cQphf%%'\/_kk";=geJs248k2-LN;p
%pDP/)Q:SI*I&YUBhb9"T7g9q$fiF`fI"h$R4O=*a(Riag(b5`bWF7um8a9Zll<u"HX$rP7m;/h!g,Y4uGn>Q=_&%G'<89Li)3)It
%B'Y:$m6tTMY&S#_9U/Qub;`+pb1=OOcq1QX-2$6,$_aR)*@P](^m=XZ.ZXZbiXVk&V\9]3mD&a+GlJ%/?[%d)gZ(DP.>9?lL\'Jr
%D=op7bG1N*.uU]km;],dfH-A[Nn'hoD=rAa[`@7dfUgY![&hZ-B3GRG:Z3MR`V*nI)PoMg6O')5U0*gmHO?HsQD)tOJUJVDfH*)D
%?CXb]BXS"u8&Fu^mb$C"d-J\F<LM4tXNKa@jfM6c'm-Ks7"5aV1Xj@4>"u_ZaeGT2)P'"gUX1gO.&h.-b0r.KK>%sshFJqT$nDc0
%5[?g9W%2MjhC0:tDq7l5=G*':$ED$..+@r`e6S)'bcP,YI(b)^EM[GQ3.bbE<&l<hBXH^.;]taKc1OM&Q2Y7WJOXAuNOGLq3;1>G
%5KtgaQD_c)V\eMdQbQ>1`k!g1.DX6'G4quYTAEgYSt>s;q/SZk*?SX<r:/e3#VZ0lnum<&2u"_P;?",Q8J2om&,1Tr0jKLsZ/l7A
%f;PQ?-FW'16@I860X6KX?%E,ZL.]Xp@"mPq.\0[R58M6AD99^7?\tK2@:GWu5\8V*ai$*Fe6>q,M(P9:f(X`m[T;/gJ4Pr!D;fkt
%[0[MIA\b1E-G<6#S;B,;/**T&6`*m'ArfAp>roBYe=0?kjk9FO;AGnR>0hG_VQSCI29tO$5ZYbO$F-e:$<(0Y;H]>t3jke3iH8)"
%0XW)08KVV\a\DkbE(8T(C2Mum>ZH@\<]fK"<],GGjD]@.aUQR=f^h=:E_CkU-`kGNC<qbpmPU?QXaDG_HO,h9CM*$#=A:ie>[''\
%6sL.Yj%9Pm+\Zb;\Q1JdMQ;i9ehVf!,<D`P36eJE(.;)b=k.t'^ffZuehX,B"O,!hn2Ra(_cGF]a.?:mNDsIOf-52]W\1^P9[Zt]
%GaV.TcLX1!>,[)n\[''U&d0XdZ6`2<G+p.I_D+b?BY*\].%8Rc\h[,FaS&!oA\gof&mh>]A`s4q\l/B$l%EloP(aCt9`3jY+WCUj
%.5G??%M(b6p^$n)kTom"O-j15Z.64$Kh<^o97>X+0Y,d+5*F#uE`l#C+N+EiL*fuIj^0O+>/+\7+MZ:Q<rP.\S4]\[9>(XP\uVAY
%.QtSH<OM9]c*UHIep+?6MF(L.5#bH^kV0D)'HUh#[E&e7pA>Ghg0.0K.Z27H:?t$;,\ec,X*nR4'VQ-aDlJn1juBb[j40UHP]:^o
%dHsU](]`TYb-J+4afS]aJGQ8UC0]"o!h)QT.uUrP\<=pP1:^$L/KGNkX+c0.\-%?EE-RnpQ05`5@gF-"Em[=S4e5#sMG.oA3e/$/
%@?t%2#/Srs9;#b?U9AB8RtH&;'D,e5YF3VN1Q5ZuGY-jE9:0Luh%mTqEcYB`Yjt(6/h2qIA`_=W@YQGK(kKt)$`%'J+.T[B"UF8T
%AU82]_hMa_.<Vbp1u!W"_bVmIU+3g;>^=*QUJJ%8*nlul1S%c&p"G<t34U4nRmMhO`crZ;Y(QF7P:Q4.Y%kMW.RbDe<GB>2QC]4$
%gJmFuC:Uit167E9^,#<]-WaG(W9['RPA?u3V:X^GEihhB=0\FTKu9ZZDCI-9_4EmfjFWb-N5oe^Ap#r?i7Y6HhKf9X!L^iNk"8V>
%<G%#k9QQ8IIDuP#<P`]*2QI24Tj/fo!)`ESPu</aQ_<1C/lgWSE6peNnk)X?"'!jJoH?L2W,JbZfG2\=9SoTjBWdTB(*"BEEo@UZ
%lo%6]4OW<Y1?71:KLZdTj.$)DoD8(fRX4eh:Z4*QpeO,(qtdp_P7;rca0Oa'D^JijrSuQkr:gU[G^9/Rq?hG<^o.5YQUgFYN^'&*
%SQp&Wgj8Oh^RSZM+7\a`pJ2b)n]TpM"Dm<KIlf^'p=K4jb9^iJUatr^gm`^4_X@S]nGCZD5nu`kn_<<MeV=/-n^m1&?p8C%J,+%@
%?o2o_;[mC5Qaa<-:EPVRWga69H88knGgTG!k2P4sClY^](Y@gtd)Yt$[\]ORkrmFs^Rh'(I3()Pm-9'@2O&WbM-&;qn#jtpkJs']
%Tu2*1#aWj4P7?a<Tj2J!?_7d1O`KDZ%7f;<QLjF'h]H2GrG==nB@Dd2N/<+oEq?Nl*IZeG0/rq")N]"G95@i5<.d9IG]S"RFhE]X
%,m4'=fDTf;2JD*UWs99,D'Mlh7W:/Gh#)7-d7?=4HQMmJ7%Bie>C.6?_lK@9fA9b;?QO.bI!PAK_s-]Q&IfZ*duA!U#EqGYI+hgH
%?!U\F(eVI5M:]r1io?qpc_jj^QHLNGJqTDY47K00k5FA1;3fmo+cNGV^('5o<4R$Kjo.8>\bDF\+PEB8GB*J)<9AK3o@1q<J>IL@
%b1lu$dAY6J]%j7-NOiA1&>Lj:l>ePlI&3Hd2E,F`ql\81cUj`J1mgYYkN88KD9h!c3'+VFm@bPBLT'[S41j?=!tS6h?ibe"p1M2?
%#H0\UY>1CQ^Rb5"PlX3mHMJ4I!Im;ErquTak^:)b#PVG?*\]f+6b([g'=+Y^@i-CJS33M#E:Nr+kKVNe1ce$&2N0EKL5%kQ>5t1k
%kTEt&)9OKIc$+PTG&d?ND]cFR/K&!rrG7:,csQNH=SDR>k4ni>D%e_.RjT/pJDcI6f9breN]1m:O+q(HG57>9'ZGTR!E*6r*F5iI
%rorEiF$9`m]!jfT!/HVREH2!RlKD:/Mmj\)_XXWUM?,-0n!4;A46PO='sI86@JjWN0`LV'1<'h@Vrq-bLRB@cp$oW``\5lo?>__n
%U$%`!o\Op!StDN/GXQm3lAT&0IA?iFfYXiHN!JThi'gFq=[U359jZ#_T_;Q\r7)2nKA#]J$t1<o*WcR,!,d%)HM,2'kuPd`&D?#`
%F8[1dSmHj?\@EM5R"&l5G_eu]D%,!N@c@9/F8<u`+aK0tc>\[94Qka%HSJ"c4IG[*Mo.KE%14Q;F2ODDA!#$FdHj/\cf3sDCjrqJ
%r*t8PDVV_k*;44XYYlO$.Po$&]'i1jV?8a4j2oKr6SMIlHs5Y&\V-6=S=U`1$"5e][IW(1b>034c7XP`+@,:e)Y0CVC(8io16Snj
%@k8kp)N!(:27mK4&,U6pYMsLln8h,d2J?mc@G'WN3"#?sDN''(KXW&I;BIT[rEnhWkgdC?-j(Z;%kp;c!;%0C'T<>**bUA=`ODXa
%1GfI<BuAg5Om2fT+F,nR7Lk2r%N*F23rb"%r&DL(\bL,cI_IghZT6b[&(C!Z[li49Acj$F[i\uOQ7(fQbL=e0cAmoD+#i@ah]@2,
%8=&l;#au^jC-)\q7o$!9-Bl_FQ$p;j_";W&r$*"A)+>NQN]J.$oc,^u%UudM@`hj3B&ITO&W-I`Dsmn/WJ@f@"q5,D=3$CK^@)]i
%OPR*i5g#7<>A`g6"s^fG4ZaSuZ#fV\F*r*'gX5KE,_2D4>TI)[U`Y!GP6jb^L@Yo$Bc:I3ip6;_"hqaapc&E"kd%*)7l=[H:51#(
%iiAYe(^!`nM]iGG`RBh*m.>[H1gmB$n^6%[[hhCUcBCnnC/>#b:boEInF($%2ib(arDO0rE^P`ZJFT2#S6hccD:$YHV,&tKo8E2`
%6c'N8Y'39lA:mK,IT"GMkkt)5TJ$91A+eat,\DDR4G-1hj6%,511W*9YG"*$o>MQ'Z;:2Ij6%,511W(c^XNM9X1^I3$o$id?ms0B
%nDP4BnoX52J7s3NYpb51p&<"+*'^?'PTbYsRHGEFErYZhYp]jpEh7J+MY\]V76,flYp_sDZi<.&N()D=qKDe,@SqjgB)brQ(lQg$
%RV-tpc6:3W$sI<L6GX0oH/>4`]5]/-0>k]d9Z3_"i[K6DXR[1Qrpk5(q)dFsYaOegq:?1aje64NH#D<%a"0"k?+UbUZQi`p!.p?9
%NHB$5CBm/W<gQW=MJJus[a/K$K1J%$[?7KFNiJ)Ug*j%^<,JFGc\8Bq*hg%Rm%cj6i\gc>s&9KDE>dS]):db&)?>A/)3)h<]o7D"
%rVPaDLU3c5h`ch/IoS5&#"0a-/H.UW-o&:+WCAb:/MmGuQ^a$P>Be)Ja]ldG/J#C%ms/G,;%rV^/gdTMpL42RhnWn"ru:`Anr2S>
%:X;fpmn_9=+(LeBW)&nXX6$"r9<N]CTmconBjYa!ej1U1\VWJ1)..]F2J.>^6k/38).3)31jV+E#j[,"h&ePF^"68Uf5ZM>q-h$P
%^ocEFqnJp(io?qpcQL_cIm)^Tpub-&p737@mGNQm`"mrI#>#('fZ&Brk)W*3"#"sU6c+@.CpR\b@o,t"Gn1b0[SWi;$td8p0SG;\
%qLgulQ87)Yn\f(*R.+.hId`]bdH0WCLQ@q*+d1JB23U-j8&R"2i4.6Sh!)9arnln#&9@FCAg8;o^V,^HrP,--GP(o]C5F!>?$nGi
%EfN?@Vt^!NbC_uJTC;"8PsLBnhpLV62m:<:lR/IRGP(_1Oa.)d^V:h1r5QR7J\`SbHV3d$gq3^tS:8a!([%HBSe&ZCc5h6o3aND:
%#+d-&?2[`tqL*F.G4F>36T[C.jhhg<nELiHf+&X'qh?KICBs@*lc]#FN";Jgr:5DdC#@RZBH\<HA:G<PHm\$n19(36QcmY9r#9%s
%Rr;'J:JQDMpuZLm(MB5<D_<srhcsD-ST"0mNMa&0FS>K^)Si7@qcWC77f1kP5O7K?blD\'d6CAj?=.P2#;2JZ\al`hbRPK8jp\s5
%[+$AQ5-^MfGtM9"CSZPX)On$C[IppT`s7IpT0I1QJTP.W1%fm,C]S8A)/JX)%oD$TG@5mUXoA;+"G/p?ZL0;?2S]@+7=':g1LTsC
%dI8n0?63NGUZ&%f,Yr0"nR`Op]Qbq8fj@4db@l,<%54L8AMh&YL6mNH]U\An9,pjF_Iu1A9BNK?o#<1B#AlbQDHgkJVa]rQUY:(4
%fU-Ja+">$I82`1Jahb\=Ri!mkqjqV5a;FV6fu3C<ec"ZgB;\fq*1^t)iuTC;Hu91QN(G?ck4nRYfQZI;An'I)k'0OQjBrhcF3;?V
%SEZ*Yn[U?o6hIkF@dT0.QcAAb:PG[P^V#!diTT@^[qB^QcBtD@!0Ef*Y5IIjSUEa)ZuJ2)'/#jW#=Y3m32r,pH7BmR159Y11E46h
%T9.L9J,ae8KkPS=3>o@%%u-lCI&Qg=Y5.O#Wr<lYJ@crgU!2fhP_"7PR7FWj+3p[@)VQ?JBWkD.`Q]5\KO6qe],ikd+bJ/Vb"\le
%"q9M#e!!'`Jc<5.)iPXiQk,Zp!GUN0V]&=;@m#M\d\@gmZst)a*Q*n\N4g!WRqH-L(c$inN\T6B7Q\V'`u+1\cZ`8V42rGr0i16L
%3Z8_!1?rMu5sK^GH$"FVFS=P0l&^.2^@+P,K]\n;8B1gk$O7oI%2mCHYJfH+Nj%0kgbn9H+2<TmoX@+X,gqUCC/Dlk5g#dE8"Va+
%bK^(!hOGYu;)__25LnE30A]s)?6*r?o4CH%]^D]HZU+2K?%&AVInV\@'@hTl6pj>mjnm5ZO$b7L/pjU\4HhTh`H8m5-<D!NKVOI'
%)o\1'kcjU^%H4s0g7[;rNG4"ddJ.dPZpBaaq"a1No%isV/;uqS$9k*K-\E,`IFn#/oH94)@\8pZF@]Z^SqhY%)8a)mHPOjUfPAiA
%%Op$\ZKSdPG/bVe)09mJ$in`+9k)eL\J&pIccDe6+<K\GXk:U+`r74,fV:(n:SGr@,C-%B2emE/2E,AlUGhjBVp,[4[RP-%3G<K[
%0Ke]il#Qst6l_j`2dfU[3]F'[UH1?6F/(cTWcKacH)7*`68r]lql\@IcUjrP1mgX.l2L;6ioHHLUEPkEeE<EU553:L0aujL]^Mfr
%g^]PcTY6>1--#kM@t)YbS6+]Z=!iYhU<[8#N'/=gn'=7(jWg#)IWosWr9H9TY.FCMFF8E-qq$JeL7bYu59"(.p=DGBedX_jqI%C\
%_"$37)Ed+:=sN#Ij=7`FSs[2ME^"8FqO+W9/foHJm56?FG;X"i8FIdO)glnm_6!Xpa+<[Ub("Y5qIpAS"*@>1Zc0mD*>q(0&T-F1
%a.qZ0n`KU[O<gB&rD]QgmDGT&mq6<tLC7GU@T)IKg,D.Ep]cC^ID3FCIrr=@3c4]S"*r>/E<BbV!9WJeV]W)IH(`$>:GpCMDU0IR
%PT>i\BlaL9#$QhHCS+^V>+Q?-Im)!bpofb3&`P4B4bYpfC$o$"]cN,#pIsY@Of.'*Vs\CO4'?g/^ONgSh[GZU]=7.3#V2IZKnS<r
%AJC$q7jo9eU/<8K\Kc%j)Eqi.kd^jF5>NHk<hnAq=`6-?mis+q^bC5njqCOg"#&A<@I;Z`f48Af:H+"Oo<9eM:,W<_hd[M?8q)1T
%:,:U)ZN"2"m.BRuUXQ?6aW[t.k8*9-FEr3*iT"OsGo7iJgdct)n'#dm)"sL\%Unl(c5_Uu@GdL5/JXG2614?+7c*oFGiKrNON56C
%pJpF&*"$^GoC8cm3(T!QL,jX!9JCLC]`38J/cI;^9,mKHOrc>)-@2+0qKN.f%EN=(&2[Wd$=EWnKpnK$9-8psU0RIm,Q9LSrHUo+
%clk0HgMl.>&NFKse[N0Ag4#6BB=\E;H-&QdNf<pC7'?ecH@)80j4/4lP4AKlhV%cg9kXd%AE#5oFo]5hZrZ4[IX5>RO)H1>n%D+C
%7bI)Q4\-C7J:2VHZZ9qR&GCSCW$)DCNrntf0;P5tD_BY>Qd<bRnjjba&=p[>8+21_i?54cH8<9c5m.+IU#sD^l6iGUlg+0&*tONn
%4=;DDersS6gsPK7,FUbQR]5IGbiV\>*'u+bDL)6Go'$#Cq]R=9llj[33]d9`X<'L(B-qcX:70mbm;4\.lm"ZdOLNorg#K0'6e$'m
%92?&:?@QW3QB0OJ>98Cg`U#7XGe6"$$&9[$?%l9s^UlK*!Eu0R2QqN,I.PPGH2>_-(Z0Y(G3Ht*^OLWTEJAq9UX-\mY.f3b9P,qb
%'U,/=Hhl[tjbnW!`\B*Nk'M?BelAD0\=;4+fuDBo6>OqRVlik)oJ&0e+5mYA>P%ITq!ERKVuM=Zh^7IGgW=sDG;2+/BDqbgb87?s
%U["g-PaOAt2H9o;oMOmRX\5b9-b+JSQ.8jgg-TB0VFp*-.a>?)FdZ2]YQ\m5WA>m7pbg[XBl-P3254qJD02PYa'iOb'KYKJDqRgD
%0!X84e&p@4>;iJ^TN"Xp^,&6WIug7*;L>gBQ??-Bn%,)K[B18MBg%EO[MCr)=&WeI`_+8f@q>t]o9I&\Qs1u:W\UGoZ0?&T[/7XK
%NV*;L#.ilhR+)5&TN@?DEA15#3:!&5qS%Z7U_he"Ao5-jM_/mX\AD#NTMOZk#Gaq>*.%eT1f]r2WMucG?^ZJP!DG5=Mp&hHbB=sC
%dXn[K6(6<DZ,am2:l9\E5oKuk?<m4^>IXL6fE/M^;?mqJd<%XBeAng]V6[PPU#bRipa\.^3`mu6ZE9&.^1PQ3+1U(14pPe"+3,EE
%QU!"n/I,u08:#:3f50:2_dX#/"Jho.VNo`'KqHqOZ'tgLWHACkX=X:7.7d0AV[DX0lf+qJfrEk`"h,'.1Q\L,@I2+r,*\8)AKX\O
%P$Zr92;>M8Yh0"9#3io#<Ue+6K>cP%e$=S)p6b,q[$O=T8j0Sb2DV'pQ;\)hXb9JPWMW+$W3X?2<3$YJ@%7WSem"gF't4aDXf&U(
%C*J)Qe;%XNW[_C1n.+Qac_[+7dqIVth,C/$M%jYe<r+.Y"3`cQYPEBs)H@X[rMtW.E>8Jq2$EF$[&Nj^l%49nlch7\S^b^Q<])2T
%K:l';oqibS(-JPrC,Y=IUP06tRh!\a_IhLMBA0$*Y*]u$-*8"'lV1Z>7r!K`!=["Pl!3>K;G@1qb0C9pl3shIQ/l2<!=()1#l=!B
%D2P?(.UFK&@CD>rj-8\F@-@`eN%q2OKh"t9JAQ\u3RD?>\/UEeEs&o]8C-rtj*5Gu/mQl*<7=`&/nn`;P#G3ia0m[u+9IBf<='*(
%$<>H7P0/*N@I[+`(1:HV9aE+"!(CXM@]_ps1=G>(f2[N7"F6bUGR<=TAR2bp6*ep,Vko)9)bLn,6!"@L*/Kc;ja(LUifm&#A45on
%3%m&O%H+6\=n3QMHlACX/`]^m)72iS%kU*Hbc7Zl!'Tg>WAQr?4bJS#lD\h>G<%kC<uq_bPbg7>MlUQkC"]B.`lbq!Ys.DgCc3/1
%#6Mqs*5fNEhL\dRQ0Z\%]G9fM'GC!>BVCp=F%k_@H1d@L;.$sf-@_Ik>b'mlSYJ4?ce#'B?=j)pD:NLg8'l3=?X8gZ4_[aG8_He1
%QOWGG#r!)q!mNu1j\J*YNm9Tq)_]DRF)T?!3KYZP;1H;B4o%=3hgL-UR_=.F_G.cBC@^tGVL"]_Y'Lhcla*qBe`>7kIWYMRDb$-A
%D;FM]['$O"PUa8E<'cJK&K(WeNF`9NeKbc1!JLq<>lO/X$%K!*;-<%OD]ii=o(S#+qSc\12nro%,Q+s<Uk76bs'>jTNI11Vq%igo
%ZpeK_-`JF`./XPBS\IP]E1)2@)YrK%cV]ZcRJ_)NFE4qnoWV]]c[`_pTho#p;ld=V*lRt?#;oWd#Ho*Gr^soOMT!f6+q,+Xr1g.j
%o/T`\W-?T.1d!W<%[:9CLAk8YB])73s.]W)'WM0W"?#9@4J<WHi2RsCCRKu>#%"9r5k4RK4I6)p1%;,mX=`NXn6?/[-PDMjKYQ*"
%Z5VKghZL0O$s?9Ta.t:*K1?]@+U^kJlc@8Z2Mf*_J+N%0m.`YF!:V5aa;9C3J($^HVJjUaaA&TooLIGGIoO:'_M-^pYmLFVE5FYe
%!.XU2Os[iAmDlWU7eo*ANjQAn?G<X16Af/mdFn(D-f;WP1^&@3j<uCG"scdk&Z))\FPq<W1N@2'RN"\3$q)/g(]g,O-Bl/0/!Y0^
%!iM++D]L3(B*/d?#$Gn:_BW=o9Kd17Ih0=CP-2G5IGP_jMhNeL`kY)KAV80WYi,33\*!"[E!`84$5^%D7;m"q?1b<sO=\c2o*U.4
%=+KZ1WjIsll\Ufo_%J$GT0L>Bi)3iU6*.'^mf=0[iI[F=hu5Y-><E/ACM?)6R3*f`.;'gF2@t]`RV&4q$;g\2<+/mE:h#OUb,/sU
%8ZUplf@p>0%7/hPYu;_9`RJTE^7*u?Pnh@ZU`$os)[00>BdON$b"/2CTYi-"`eCQf0<*L0@J\%C_\jmBOQDQHnL_?Pk.1T-%q93m
%1P4tr&"X;\0L-.L#alse#D]kT(R-\9_rOVN?!R?<3PN!c!H<B/BcB#n1<j;%QTt?bqW[stj[\!K`hEm_4=:s62K*5XEGqNmDt$T?
%\+/GVZ7fPcJZB/TmLnjYHp0VU^Adof`Dqk)%)NU"&1JUYMS:C>[+?`/.aUdV&l[]r@Zn$Zd)n;40o#TF?[9A&!`U@t<^3,RI<5,"
%k48K5pkf6dIm5tY3SWU^^6d?ML.T';FGoV_2+XaV&<c\hE"r:#rH+e(o&@.M;(V\K`+&BSdON_1Pr&2,=.n_7,TeOJi6gp<=J?_6
%C6jqB$]>AC0o/)6e3u5%aeOsqoKmSd$H]_Ml:"7H[gU=&9gWmrJ3n:e;b1e(+h8oNZ]JElg#-lnlkYa]=u!#XiDIPSZ<!jZ.ON&#
%9o6;`]1%+tCt`]`aVKlnDMskj_^Sf!o$HR,`T1=Nd6OTZTQ!9:A?p[Ki&`4<-3clmq,WB,^+`Jk\14IEj0NgdFH+!>Zu">'=_kpO
%o$j/JlafqIl,A<%-:JCq*6B]NMunria_tRcYEXcqB0b,m!s]`8;:H5'-%J?Y[B@3D",'t>8gV`W6:'2QNEg@JmjmoQ0.A`A*8g"#
%o>-JTpc58<pp^QjVRM3HOX+[+ZJpE]l9=hW"mRHHW7;#a.?[X&F9;.3ic6k5O/D&:MB8VXdF::IRf>'?1X0TFC=Y8(BV*RYC8S%P
%;fd-B4\X*EblN,=N&\q\c*'0/hd3oHi/Xs<].H_a>CH#r@eK-FChm+'**_Z!DY1X.KBGTD9P_&8*l6LA'qh>8Gnc;Me_^4Mo=bk>
%5K_!@]m5j,7nJ!52im[p5K;PR@DQCLO8no7IL?2%:%t,H9<qJ_4>`Nudr5ek;eE%0iR03)`#VOrY@P5/eI(A4Ue>$1$KA!CrW\R'
%"IdA1;kQ.`TrFe/CZlcqW1gqAb&)@^(KeqAJn]<AX:PO'*?I;Wh.%=S'Qa6RdW@\R+%M9=,Un&H1%1/7rT#m!+6h#:;2QEkkY[3Y
%V<Cd6*i8(uOJ7#m?s%CqOeVYUga:\PQ:]J;WMWdWe5C-E;RD@C\:YL/IC;P$m1Dc)>>s38\ZM;Y(0J]0gPV0-)>Td3IbO^C:V2=n
%HtsmJ'IBAe\ADT;NH4).7uhWN-qF8FEhorF'":^!>or+K8!5)G<CDXjiVYNHN,JX>a>XOlF_M$IjY+!=N@$8C$klZ&^XS!VGDc?I
%`I#EXk$10><S7H&h,Nl;RR%SWRUgVG,07`rg'/idkEe!LU9^dIO<k`n7pV?BpGS!tdT09DR^^\mN8EO(o34>DJI0);,5`RG%Qe(o
%3$qfS%LO'CBVHO/l3EZVYHBM'1$&P8+RD_OG8%-]RYo<o:2>tdC6[d=6QO]d<@o"*`N`cQAVm+`5*]#DlTcE=,Tt&Q/*i[`cfQ]h
%R2SIq904f:Q8)A?7k9ESaR-4)jhge[Znh>'WK!HERZp)bcfV5r08t'Np4e9@='!HJ<X`IC5.2\lYV[IdPgCi_TIVTbVuAX'%LOeY
%ZAruMV-FmVYGW0-,ON3L.:B1$<UIlEgHL"6Q\Q@qPATDLSJ@$fZF-B3f<qRlm1fXn[\/j;e#I?r"k_A5Y"Ha&.\0S6=291a0l-nl
%Hk]hb)WKX'Y1/.Nii8PlX\+]%"TMr5!TBh.b2WgkXlb1VE2Dj=Pq$/p,!X-_-Fk-5M>$6a4=7%$HBd!8c6l?C\=V-FPc,hK6EB.p
%:E$4=!J!5_KNbHlUfS:=]IciaR15f\`i;^2:U2;LNG1&Q2F.VlO(Uj\2I!j;5Lb.ILW:[*fd)@,f_M=7).WtA*>0YPg7de:VqR/E
%o83mME=2;.K[Zipj49T?/(W]f5RB3QnHorXT`E5Kgh=-dU.mnLk`&&KWipe"2lmEedj__B-^BQn#fO([FB=X0`<?n*>apha(J$mL
%qlmVborRVi(.aRl*$#k.#Y7uKp?NZQ>"Z-$.;FEl/d4a2/[M8",7k;g5Cqt-Z7$AoGNNX+F5JqFIn_nM_OhDqJ7u"cC,].q'#TMp
%Csllm&![?08k[:L5a/JW:KX]/XQGpBC?oTor%s'r.g)Mh8ZO'/5Us;JKo$G3._iK4;ckA@hJ?)XoH;^3SW/UU_s5*H0mmUDnd*j/
%$<#F"n!V,TGIkt1iB`^/P'?-b08uLBP\aS*--kb11Nt.lePh-i0IFRPcE\ei%'h?Jf4m3p-']q0$FKliVIg3<CfI11UBeB]6^Nq/
%XKB`##&7iSL.S_V1@7A*)`nuX9nq2P_'8&+.0_+Q!pq&9B9gt&@`r7#=MAT-8Li11RUe*AZ*?2F8m?L$0PXK&!C0Ye>^eEi.h//<
%An,C19<gBu2E%!4WsaR!(>.E`@590^:&#EVF_/^OIALdiDdUNm%7hdV8@b5GHa=T"?kiSj"i=G[0]pSQX-dUVj0FmZS[7Nr.Pi4a
%VZ9ZpQ8dX%d#tB\;g%t-cL:<p"C>S'@-nPD)^&&_3n16F9$4MYOjqd6\lL@62qh6`[M!$NfMt:c6;7;n)!'h.-BV\QR7YTgXZ_kb
%g!?RB<)'S*#U07i$aKt-8R%c2p\%\EPWA:e4$pO6oqC)_I2naD-U'nr@;V`.+FNe_A>j_n.mOg!6)8LK(#bIlZ)J/Ud!89RaurE<
%qS@"gR^FKJ.n0Vr;;P!gdU2%\"#(k*<]7-4Q,oAuWaW?*2--u<(nMQA!6U-H>,;uD>;pR=9(@e"*f*OgQ')n@<lM3gNNj?Z4tl];
%1+;L^lAiOa\ooEh0VFK=_Alm51f9A['Y;<3\!\,L8=)WlWZ*(6/\cm7>^b)g9b!.4X1!rF[SNOQmHN?!S65LtHFU%G=+tOl`YgEV
%.^i=k-jVnac3DrX4Cuj#,+("JdaT^DfROY]7-BhuI5t=/;H+rTbDqPk7LH>V<L$4DL'^Mj2k<o?(Xf>1eYKGj9-^NqKL$ogZ!s,W
%pY*P:iCU:fI*r6r7!)S?.TNjSaI)VLJT<cm)UgV5X1"R1XDMF%W7g,QHFM*dBKE,O1D[#X=-LZ%Z;.+?Td9=9Z1+s`:@6OYXN`iL
%%+?BAZHjGmN0(d<!:m#YNN_+VLA!T%Jl4DI-m1GGTphqN&,-.,O8a<BM+<5ARH)$bmeB=#rLiK1n9H[piaYT.5R2Vo.JLO*@jS&m
%L6NOV2"BKBcJ&Yj`p^rtKoW+21)73U`0>Bk9W?oK*/-1kN@B9%&8eTi;'i]5e:Y34[CFtr&P_FL(c3HT+6Pm)AZ"]diK"+=dK2m9
%W)=+2!51sF83jhTN`i<+)bOe0cXN!Vo?Gu74lnPR[jjF$,7Y)'dTEN.!2)\7>[=h4Ku\+2HsT\R/KWh9#+'EE0L!?73l"'3)-X3%
%"#7)!F!VL$##kDgWiU6>=O=.sMnAHgF%Kr8>hgHW+GCt-KFZSoQ@S`l^a$[qV?!$=.&>A-UAV'`r)n-T;cSP:'bO/&%EccV;/AYI
%$r-9::Q76os(CdphqH/:rUJe2o/uV/3'17s/Tj_B*C>@_JWPtH"L>5N(iWr#@[icAkJd16s4+#>lGYZ9A<Js`pWf=VAeJ7KV,Y'!
%<E[p9;#q[gS*YT'A@"$7BD'D[07_M1\c\XGP9:n39K907a>HF>:+39B.Zl\H>"b#I)j0Veb-_J2`1nboNDZI6#Y['Y_'kdd0@$@"
%`at=jhH!X@3(I\Y?+_+ZJe=W$#j6OiNqNU>.$*CC??C7$nL@b;!2GMq<f.-T,Xb+J]EUmU[QpiN;>q9.SLirO>Cn.HqBYng#69!>
%OI1,0>%m)f0h'Gu_,fmmM+p:=qC+sZVC_\2MBEa@j`).@qJTJm8?p]M%=od'r3m'1qsEf>XQPT6[E$T+8RO`ek6Dd`G2tB2h335)
%RDbgo'D"a/F7RtKnrQ)E4;6Z,)=CRfC)BU2@Q"?]eQI1=l/r_tO@4`Li_<HEm(oKd2hH^!WlcQb7+/NN4B$IQ.2!1q<h-?BaA^ap
%W@o$Qm72WM2dI7ELJV\KqUO%k^:6L>^5XQqDYZU`7($_O8]KSY*;C++`6+d*bY3DG>F\6<^-',(73;@5EF(O-PVB-DB`W?j#dDF$
%ph+#!#QDNj?6ZM@e..4ThM;.4)jtLFmBYmD=:Y8^FOg^F.]pf>fnsY+_&rNlO4K$TqFqc\a<=NO:D<&8+sUH"TeYHE'H"<:V6U`>
%nuS4;0ms^]-(\/(9!KLk15^rB4VA,-XUAFCI[>VPg:kt*#^4&4Y1PacjKUJAF_4nZ.Lt;-?"@dVe?BiZS8-jkQOTb9'g^Ok?\DoI
%Q<7Bs.]V.Y@>7of+V^=O"'9r.N9mY@%uJ;.\[,kOcF[8"'"(?CK+dj-)M?C4a!Hf%m`;OiXGRoEA:jh0d,R0&GS*:J*u>OI)r:=f
%Zr`fa4"$i1"Th@LV(P2>8n>?^Z;%VsKX<,Og#T-'M^cac-)l%HPbSUZNO3&(!l'X[HVu0Rqrt2/(iH[!(L!q>Yot\1E8]Y>pqq%r
%h9@9e`aOUk\8AZ\4&c5r)K5nu5NTV?6n.7+eOUW>#s+Y+EpBo,W@q32MK+@R,i$GI]N.M3l`,7KPPAmA3g.dsWm+WZ0tLUg.CG?P
%Q"OMOSO)P99scG:h;-eU>O:[jd<qY2*(J:$dY_UIbRQG-].03s:8X:02bCT>X1:[]KBIN-FY7mb+S1n#DA18DV$P":lnY9O[TBV,
%<T)#``MBNG<*M&_&eB3G2V+bnOP,mANB.B:'.-Q874:!iEj44&XrU]O<IVM=9&6mgR(D:E'0IV*!2q`?8GP!qGJmXgD'ZRkH+VP?
%7D.Pn/TTL02kla>WcPQ:m0(?UnMMWKYSpii9SIV)n;Rq!GR;AIfF"/_.tq8%_\O.`CFHRQ$dOMZDJ]Fb/KYl".k-KV4c<:Y^V=C3
%rVk2tgZ%ZN;65cMD[3c`Rds#7]ST$*8S4L&&p@OAcpr^aDmH0f-#&Yd>59A^e2:6/BF?#uLfsPa_o0"h^&fXd$QZ(sirmIE/N:J!
%-A5F\$a=5h'7ZBTi/p33Zs6KEkEl=3c#Pi)JCQ=kh5M(!d'T3"Kjg[3'S5LCV%;\d`KV]YE("]6Z*$K/8o9qY_?qW9`FHeI`CPBH
%hS%&-MEep%#D.e"20Kt:o&5h1_M>mbht-#9jF%,KJ[d!n)@7L*mh$`4.'QsO:YGAYk;Q0@];OF0W_2[2YoNF2C]r%Qd+MJ=moGIg
%g4MdmOa2DD#+l#:9l@ORefN56GT[*.*G1n'I#(+aT?gY%GrquhU%9gH,N8_oSE,n1^H8EeXfKgPYd8/a.GJ^1017<!YNK>S:k]O+
%,GkoL>WbZ4B/coRed&HPX203.o*m:'Bg)_8K%T>F*4Y@dObVsgXm^TVEmAh+P\21=*e+ki3pe(]$)Fn7Ie\81_==MNUA.DZ/^3MX
%=fmj']"X`+fCI(S[3GW1/oO,];A`OH.C42UN3@9"Q4Fr3YY]>NfK;-c&2Hi1#g3#=]VNNO$B:m=$gma>$\RU=.I[/(iJ,KI9RhTf
%5E5jl6S=Ufi/pXka_PlS2V\CsH2e\Y+J`gX'&g+k;aTN./8-FUEJQl)=Klcrmsj7M$=$9;]2_<?&@#5ZRI%bYV&g!V,T6JKJQ!iT
%9PQkVLi4YZoK]O*TXo;ILa>;I+-V3ll7u33n'2rFOO+d3:Y$'O@1nVpDT"kOC&1/C^=L0*IS9L6b?#&!*p:&8@ucXmeZa+u120C<
%Eu&>H@k5[T21bo3>:GO;^O6D"mdKh=f<XgGka/X+I)JA3fK!L0q-"0DMM^Q+>;'jm9S`>+MdbQ^q9rSH^^L&bH^n<j''g"-3"K=D
%Zj1Ut,?A&[g#JkaHP3=FdSQt-\].;m'%;oaSJ@*3f"1E\MiDT`/Uppdg>UA6,@)`-Mg?Mg4nd4Qi#=JYdk*QJ>hE4DlkDFL;a.3p
%"ufWMO(%/oJ+RO$GAG5k$K.G;_E#^SM33.Y=9?$o`nQKkKo>Os.ClF:WY)n:m]K2\WVa]Z:X)`jjj&^]''3Qn`jcRj?>M:Uo#ZWo
%GV,B&jYchQbZX6I>jRu!XYB)E*.GgD_=&G"`l41S^\IJ6)`D^3Qt/3C*'%(8440).gQb0oaY![^dO#_/U"nTqTb"$``XJen8QY0c
%XqS%O]J+/q0e,0RMX?^c8DN>&Yjg>BW@b<i2eL+i(0p3rDlk_["<;m/Z/CWRDt>9]L&4NO?9d+f5n<F'77M1/2-Iq%P\8j5e.9j6
%R?4-f\$?3%6g$WYe\tC>CWq1E<\Aq2SV_?^M,-U(\P0>!^P9rsle>.2RchTBQlmCrjYchQm%2'G\C`h!EadT,3;eSBU%,8UeDgMf
%euOE_Rr+[p'ie?*cl+L>-^6aL3#Z]G,b'>Zk^l'?ZFCH&Bs`H+/Eb%>OHeg^.X"SGKo3p*bo>IWnmfu!M]R($X<qdVbeh48>[uos
%oF!9n/oEZgFoi.<7-kJ.U+3;O*qpJc?EO-Ai<8PD1%';Abs[e/Gq$*J'%Jnd[n#j0#"OSES55SG*,FEpfEnOmBiOMZ\;VipQX]cp
%`C@<@2aZ)UaFmA;Q-unHN7%4O-!u:Cb\ea*F-K#SChrjN;rI.T,Rp^i-M3Hjr_eK=S*^WD!.dt,Bh+J2Lt(=HkO#d-EL.0d<]S9P
%9,T't,3m$uVU1_#QdDV0gc<@>^VlFnbo?U"*0ddQK.H<8#8=XVfo;CgQ+8dI`g2Z7E=4C@cF6gkFqP9LKR=1?X^cA=c_]0$/l[u`
%SW_Xhdhj)QY[ajgCJ)mJ94SIAa"^^FRhd>CHSg9bXk!!";hu4OPDdLj""og]%W@M"s6Q"IgmK"8K6"f::31AnNoeQ>'g5<n-O]MV
%Y(LOm0FhsTbnlG+;3\KB@>hb&`'pqnH[S=Ij/Pjng]_l[NE`3bM]m\0'Ola(+(UKHU"oV+SPu82WGbZE?-a)PF`jm*\[4Yi/s$L'
%.A!dJOqgH2o[L3\SK9hqN4arRd[9WAbsTi$`$sfLHDu$I:r(365A2=5e<"74C-!\OE>ti]Wg=8OG#kXC"C,&&+k%5.!rl!ViX,CO
%34;1$PH/J/&l&^3iBLI5I8#**'7_+LOV1$-?=;59:\DSb5njV4OOr\9o1H;)g/%j!7WDCqT)'a'-A3"3/DXCQ]k3+!N&W9fNof?B
%V"+Gm_te"(,ib7e,Pk9Z@qMIq),<R*OD'S)+[jkjpQfW&AT=/i;*HphbH69r;.ASEW^OBO#i\["]hr8bQeHRHEgSPSUYTL8UIH&J
%6B)to,`V.#PX^r&?c7M#(^,42ThmsdE=/8-aj6.5?-l@1G%&Ja.,5Pq91L3>a=?Ac@+_aI3D#b?TR@4]^SoA/>t@)u>Zd!>H":WJ
%,(Fh!QjOb66i`tonQg:@1.AH-/Y1LmUfqNI8F^X94,`Q=91W,n;oX+:2?0!P4t&>-h<F!6g'I1E!DSESP-"(PS4*"'AYu)#&D;fZ
%P^/XI3qa."W=%E0RP8j*W%;(7@`$H,im<5n.$F`YG]"&/-WZ8sLFA0gm4BNJ#hg+5Q(5VXI$6@]+VQ+jkqhZK7H2d1hpPY0P;q`#
%MN!EChm.4aZSCm>,u+#m.6$`ZVtJMrHK!CuXFCt.'pmTRWjD=]#\aUNRgu_bA*];?=<j/F\@YEYG>[c7*H?iI?5XV8212nk0cPt&
%16NDJ)H-qHMd5BR))b;22\SU`X+H"p`;I]i]R)dQ`"HG'c5IK8LL%jt2&?.l]ZqP09FMo[@N9<mOaP23N&<Aga[q@N'^(+TU#gD_
%,mc6A5TV2\7TZ!'5e8o?)Zu*H%g,Z`SMj%B)-H(@(&W8J.e>P=H'd!EZhOppb2?0CSqCi]7KY(1#X+*_MD9?5J,jp2a%0QmgdLL]
%+DG;Yg2]l8W0pUP:AfsHq/TZG$`VoU8o>QZRb9,F7?I(/>tbsl,mS83nZN69Tp6GQa@N,,)Ng_dGbk'?!SnHm"[1u%.5Q&@Cg6"a
%-IeY7Nm]?u+p+-rTiaEpW&VM3rZt2o^P!S*-W[3r%#auE'Dbl);SiG,H[cJ/V'ahn,3_TgI'W1'<RqSDb9ea.MHF/XB"JNC0[eC*
%&D06S!g6MZ@=]sCT+oJ(V-5*=,tY<SVcfe-!]!TjI=)(b,*k2VKK(E;HD?/tU:_Y\fqn[=6c=:1(LA.*a_tN3oGS6Wr1-QPq>K:$
%N'-"YTNj46Oh7=KRB2QA+q^sc:$=Vg?W;m?i5u6HI+/D0R`M?dRs+KF!e61[FA&8^r)=+dTote`ag:bk,;0AVE\MkGir87I$2$l(
%%>ha\6^>Zs5?=UgV&M"0<eQD>o11,E>CP"/PR@skYUW/G)o<"Gqd<E](_$h,&ujpa'mROTa&,B2Unm`14[K(cC(s7.J4mgan/[0d
%S82T=p"42!nHnHt=T+J&q8H@ldR0D;]tHVURcsg;&&'=R8_@g.N2?9N-hPm;-N]735HL=&?f=a([sdu=;"Ae?&BU__]NUPEhk1<c
%B.68XllUC+2'IOL=FU&T\?aDbUJ0["1Eq*uJ0ud8q5!6PqMZ@$Oj^&T+;]T-C0ZG([6F4H$F4+\G^n\04%/(_b+e6ZjI&RcP1isd
%Et^!88LF#Z5@j=p/kJ5%bt3(9AeY2"d\J45S[iR)]R[AoFuZN).rRb-+ZbYtn2lfR77`j,",W4p/P/']1QcmYN?,rEd$5f,'J`K/
%Jd-E\kR6E>e%$BJpH/H`O"@"NF#p-o?hq)4NJ>eo]Xq"MfG4-)Ei$kjiI\o+6HLpO+D`(?Cik>LB\:!3?dgX$G*<gO_BTO2WQaTp
%<cqRPiHE$SkF#Bg&Z;O*r;;P9E8$Xt,mHP8T((Cq-9fb5j_!#"psi:%mDnE^hf_%FM%:1MVM(2KKU*kbg?7WDKLcc?Rr)1I>iRi.
%1&d;Q@XQBW.hD7LbX@BD-O'U*EW23DK^:K\H`FA1.1%AMM"?:DG`\XGC+V!HY1]U0W@-]D>qRB"9KQ6%9#K<9E^K3HKaCaF064HA
%XhWu8/co+l^uZIH2lH8i;e)1!r_5`uHCop!-)sBPq,NP6\pM:NoFFI=#iT+af4mT^je3\Hh5.oB"VSCEj*ZnFodp)o?5+5&2?@]I
%ks(\'02>qb7L<D<ZT":Z>Teu3mNaY-5TtKALf$uE(sYb72SgXshR[7<O?!8<mHc_n)hK6*L1D7.TfVl<Li56bVbF0_ag2qc6qQYL
%ErN>%M(P1fbqAZ;_`5Xl0_R5PYttB8WN%5T!cOHj\)5KAFH/TnZkO.8)?W2n6i+g/qDk(&ZTRNgr!JBsMLR)6<0HU7%4$J`aKlbM
%mjt7o0;@V7!?W#l9["!t.cc=X49%k-CE&ehRbMtHB%9'*E@G4Fb(DG"=!W?W<gd;`G`iH<iDagf_B')KB6FUu)HdnJ..KG-5uYea
%pO&c:=n+/aN`dPS<*Yk)W\)d&>Re\!fWb1BY'$q*7<]1%NfBZP=I4H%9n0]F$KB_"Bk:SRmVes_>(rmG3>3!lXlIW$n&hk/SAej^
%R8TiGKjbO4lFr(Tcml!'A=\f:K]fCHQE)inWdq,ZFtga>L;\jXjH:*Y5qQ1Z#m1HC#s:Y&T."lfUguNC1RqQ$9RTho#m`"(=AOC)
%GQ">8iq]2nHWi\[mNnr2nI:o&"/#20bA8NB>@:`fD_n),VgO?5*TF]TT_S)o3Mt*,?oAr;0cM?tI/Y9H*PUieI[5=07GR\LX7bs`
%pf$-KbHug"fY,oPLJFFW2/ehoK^L`Od4T>fS\5D:0Dms@Xl7I%@R'?,pX[TM=(q/'B-rm^:W+PX)AM`=2CrBQE.?2?calO\q@toV
%NAtM41H7`QnJs5t^Qo+\aB0RIpE=#'8MJ3E.jHrICmtf6QdbbGbH^kJ>Y?GS"fRPV_B_uel$4mD`>@YT)23$VGj=H[b';8d@5VQZ
%r4d7BQ#E6Vn\.&?LEE7.S-Qu^f/oL:KK4l)B2IX[EI[Gakkk"re2#qSlL!9up@r^<+FihQZX2;$^VQ$P/:f$N9cf;%/*kYPEN53N
%E]-T&,bYlLCd$m>N_pWHn;Ej$.Dt;-ILXtIRr@Io31jEslOh7'2>G28Ci]t:F=qAi+*J8,66W8R`iDV!cSlb1(NZ_(TLCi?5@1NE
%o!?C;LeBsuEE2FS>bjJ$HWeW/jK=Rm/Dn2+gPI*K-!?)-J2.spmTqV%=hn&&EZ1](?uG_%V@^a"6ni#,9Y@]0&e"PA&8HCl7T)EI
%,?Z[&L8q<qao'8`nnUV"=6'HBe't;[M%[NS,eYjijOMK8Y3VuNA(.>&5d[!f-NV3!:PTU66><o*oZ]e\AihMH!]]\L+Gp%T3Q+Uo
%2b]g^.r-LEPbqU&4TtL/l\$9MpX!9k-Ba]NPR)o@CTa;8Qd&kl]`;mPl)8!`OP%R&&UqdF7cI;Fc54:NmH1'a3'E>lcVBd^1k.e8
%adC/8MA-!k8+W"7F+-Vg^n<D?i[+nYLsZJq09U>e0`Fa8N^UK&irW,>>G@1]-W@0X+>5<ur0^LE)i](.BISB]RGW/\2E8*Il?a4c
%Ltp)0(/`/qRRS`m`92C(8.u<io6eORlUtd3eN"-M1GXYi81'.o=_693OK0B1=a5!)A;uF%J1WC`fuN3;iO)F3F8&oc3Mub(jl8r+
%0?+L#-g/M\1/CY*GQ5in3I)ZUlIj?6J*lk_`q8kh?iCrJn-Z)QJGeuiYi$5*oB7`PT?Df.Bj^[<3:H<"AT2'0F_;:VA$]+rQs0M>
%d$GRc(nt\fi!M!'=G?_jm,)AD6AZ4))<+G[kDWdA--&B]6-b0==6oO+Pp?hpC[pR8MbQ`,LcBF3CbUkZaoWR\9pj(uL9.2Hi^Rci
%5./JP(WCc'iY-Y_0sb<E"kS9u4I%YPkIa.+$m!@5h.3k)-oqi3/kt@_FFc);\ViE6j!dfg;XX-e(OVY/)sdLJ"2A7sG=EKI=$mc1
%Q2H7V(N?BoG8Q"D)a9M\ntGcn>5V:C8f]-%?cuqM?(Nbrn;O^/BS[\hKN$GEs-h;Fi+k4N]TEo)SNMi$Hg1HPCZM68YI?nL2MH<?
%@j?9%/AdoDIq@VLD'O$qe\-R4j^@V98gtid8_hYD[0X*0!D_#f)6lk9C^V%&ETFO57%R&LLsqI0MFQ$%$2>0jP/04E)e>p_NPD\-
%h*$T7+?sfY-$/(QIA=Enc3!;=ST,D2npR4iTmM'95RQPg!-P6H=?3+(5n2na$]OhA\Kn:HbOpd<?MtfP\C\&\GgIk(Ig_`O]5+C:
%`6go!%3`[N?IROtKT"T=c"d'J4jGMia+Y=aTb1M$aOJ>._U20=8c9A$ffW%B&5YWjFSb$UJGcm^ZGn>-k#%'EO>4&HVRWRU+OfKA
%Y8Fi6C(="BV,=<cpC5Y0`#V@Bh&s5RQSKohjGL1"%D(fm9-*%Z@4CMXBSV!8@!q&V4<DVG_&tK#SUMETUm)1C80kSaB>K(_0b[i0
%G4SQP3_k)akL*6n'1qD&_AAMEhW<l[+,I3!QE7e'DR30Y>"N-X;W[7USe-&V7/gnmqhq[5^2S(hH")8.@C#5W*O/;aiXpg*H9c(6
%s/B-kZ$Uhc+Ik-<4.N=RSMlt69`lneOa/hoU)`SZPsf$bY56?d7TP_ol*3MgR(Rnu-kJk9-6t]'8i]jJ#82+Fc3\D"+t:8LT$cQn
%+^%,i"9L]e$-0YEEAdjhn^>e^c9nkZ>?V@qWAT`8=unktF78:M>D8h10p8QD"<**9=Jlh*9Y"P<3W]'kms]nGP:E-fk%#AE)bT7T
%,<r/kkbp7h6BH)ImZA^._f>QnP*A=O2Edc*SZkM'`F4TgnN8,kAOJdcb/TWNj)fZJWBsmZRhNmkiP[Lp4.>$u9m+mWKdA'b(L.ql
%ET@Wjd#!ATLT"d>+3=[5WlChm_`-W!7rf)<\Z8C(Ok=5<&)@t6S0](C,A+#iG;66S-[GnV#=T:&2l%FPRo--1(kYm^=j=.gpcR!G
%%ZY53%/kT4p/E5A2SIB(d\`)uO-,/[SJ[tQaN*3Sf>ACcY1dK-rIC7E7+"?nDBU[k393#2hTS5hTLDGO3TU+sU<5;?&e'im<oQ.u
%`_//D-mpFG)t=psU@8g54F@d=TG=f\JZG0&Pq.Nq\j@Lf5##;D"u8/8>#\'%gNUrSEo'r=UDj#b(b&dKQ0r!SeV8Z\KaB62rm>`c
%UpjDC*]B)6Q)"?8=;&KWY:b:B/8&=>r'2:j]@<aLk%XVn^I)e"@O%HPqtjB)ZLjj=A@#OVCb3.[jnLp;$)O?V&U,!911*\s#\k!H
%15H6p[Jrki4m/TO^Uo>6'Q2?qA]Wb(UIE)-M#+07cE>,cC4jW4l=-<']JVs)\`2ggDJ"5cdeH)9V;XgRF84_12Q(u!Pd;4I$_!]'
%VXZG(ZXuND%d?i#jE<;%#fbc%o2.5t2d%:nW(2DDN:X!NL^0Ecg"un2.3nCK>CTUlFuV*m;]89L1e%p#0L)\(-Vc%.`-?\8oiS?H
%ri=D17s0<*'0@0_/oS)CPjNukQ+LI]N\8/EIO8\tC2oGEZC3U5*Lf#g,N9;T>#G+&,#O)(_uPc3RDZ(1c2g*$,8eJ#HVFF@'<QZ*
%7(<4)a!:9&^+l5)G5*2u&"9g@C%=:J3Ec:BGe9+!B-&(V*$%Wg;pQ%:e-.*1e-g?IKC\3:A4%.Ph)ZNjUKs,[.=C;[k)X(ecX;ou
%`!f3,7.tJic5T-`'W?sF*g_(LO0M)Nc_bfC;%1(\#%nIXEfNF3\XH:B#ujo7fjuLleQ8+W7o`.L<YU/bABG03%eMaHq9*;Qr]+!@
%_QZAr-9gtoVb8@ZkHrC4J"+.cNmVpD-Ks,+As&[%pp9W6]ZWj.ArnG[\i3^2S3bRXSf=:kIT;d6@rr`1XSXHb%>T0`:>fb\Z#\\M
%fHs9_rL'D<Yb3Y*('dYTk`R9SkB(9d&s!>52b?l>8:I:r5UknP\ia`1%Un@KL@c9.aPW"t)*Ip2*iB8SQ[6*]D-Z('Q[mUB'q6A/
%P58FQj6\2:0o(ugM32$sjhj!u`*o,\=-[%l55m#g-L6g(?#7G?@UBgG][P_GmFQfaP64\]WRHM\m<UH(DcePsN-qu<LfT>b_TRP:
%`gPem6#"&ib0-6CUGG-T99[^Lj6H0DcG&jtZf>*iYa9=.Ht4P`9+JC<I(@jucM2G5dR"[=q;2c7*bDFl;/sG$/5:jnPoki[V,?(+
%[4%FH4Q>JuU)0s]gOY;%A32?[j\4_#)_k+E,KcF@cc`6J_blC4?Qg'OUo/SS)oQenfO!a0B\`BO3>&FTe@=CPR^VK3L]!pQSu&_Z
%:`sH+rd:9ei9qa0pNp+s:2`Nfbg3nE<b73(r:[>7a8B-c^MS*hkhf0Z5LVeeg#_Geb0&XQGZ]7@lno=-K?BCo?@-YiX</t`CVAEg
%G)20=%m)ApFbbLU:skQg;75uUpEoiaZ7F<A`[H:DApuG1X,O=7D2up>+QO')_%Bo>.q;9K,!PCPahDXGb"R7N#l:>eB7<r$H_oE]
%[0ODVUP)iADbBKP@*nqk[F@2rH:Ut8h4YH*P`PGaTZ8K##8S"4c%"nsi:R%8+TLK:\I7HNX8^BZjEN$CC]%Zm,S0h.lDMlINc.+W
%J,Ik*s88,'"nFp.RG1]"f9Xn#A*+clQs&s\o43Z2!d"$u-BH2U*n*@2%.bQ8,1?f<b7dd?Ke??;hB@<U^ps;,/28W5X"%%-roQp7
%iA>[%;n12R];e9Hq-&L<c1iKNg);UuKG[sfkJ#F[r@FV<nsb+o2>liK$P.U_5C35dkT,AedY5`K>_qs))JLP5\$J7+Fa"S1f'*g7
%q6Tp+ZdYsG(MOYCGJWsg0ItCVVcEL]cADq$;XY,%]guR/jcAO^]%n$[bj#_=m=1=E=V*hpQaU8Zgt3GO4.T5MQ9Oo>RX9]gR=k3\
%,21ISKtjUKp-M\8#9t:%b)Wr$c.85"h!t)Od/VOcrK66WFIrtHk;.=e+<B;.<5-2Lk7.*<7XMnU=J6b]'ul[CNq%PJqn9\,cKMVe
%c2JQl4Tg^#pRg7Y59I=8IrG(Qm-X>k)2pca.bR@j_drH^=1W68d(cg,"WlVaG#R$^5/bZ^co8$*DRWBF)#9;LR)1<WKBAekqu&hD
%5Q0Gpkigi-$mk&loq0#^rh7,W..FE:TEq$X6*iMgj5TMA1kkDE.qCEnN;U.[3tZb5]F5^A%GcL'ENRog(!'0:0_Q`ZmB(PM2"fJt
%V-gQ3#OVIBBah1mWtT`6`bp9BZk!@Xk9c"T^YtQ%Wd_ua1,_R0FlP9jSiXbFP,qBeea0c?rpSL`BK.nHZa\ONlMO/t37c(:pTs:e
%>A*EcW89c,[)WC0Kl2'[m9/HHrrd]*JAPVqmuk*e46I]Wr!uU&-$aNkVisfb1$B]\[L\jSrBI=,cLH"R>TD\7>hOAaZJ.M[GZMk4
%j^@`DnMEd"ae&qhrb(s%\L@MXirD2TFWE-;`n>t?a3E1XL[r*Nh/70"s#Mf[6F,RC?!1nAhX:AMYY<<f[S20!TUtN=&)/>=1_(nL
%<;?!*&h]15%H]_caQMDN-oT@aBR`#48r_:C\t,U7+JQW-q[-,u)H<;h\2oVT>d4`>l6`raYJ[@;;75Pio:'eTm%;Nt`a^3B-p*j%
%NIQ&/+%PsQ-ZOMi\t>;Z8M[Pb/k3&6bU^K"39pC2QAY&_&rs39[?LXgkKh;Gk4$Q<$BVYRnO.p&]Ne<FB%F:EAB.J3Ndi=k08B+a
%J0.U,ACk@W_s]nas6G,0Yt+euVuMm%5?JNqTuQ3gbH-<CrLF^LBnUO8/e=uBAnQ'$OK.#&U```]@Zf:iM*bms!WMfSY<m'hc#Jr(
%d(ST"9?B9B)@j\HT1@hFmrm>*r'tSs6K@P%JVY:Most&0mY7\f^H._'rt#-H%sCN'W!upc[*&9:K>T>?mhb\:r\lggm.cbN\iutN
%kqkU"6'9[3=h^[Lc..+F%T=.oTBq#U7S%L1;@F2<S@,h[@]T]qDn>%)'4W5Z:nRrR[E+FEi0C+*i(A^.7`'Nf):Vr><BH2\J2)T`
%`i).n/c2hDf%>/@I8%"'I+"M^kujML:,or9041T\LT/lHNnpu02_UVP:7cSUj#;r-*?l`UX`F2:T!bKD)'4!kJ')+kMt%lb/9Pbh
%jgk?Ag!?RDmRJp[rEo,C+q_Wj@W)EH^M6W<3C"KI,iRe.,#8VVbu'6fa'?OeDo%Y$Vr7Tch4"B8XjMDoeN_8#rJ/.;"+Mt=f)MLj
%\Gh8=J"+%f=h+GH*r\CNi;>2lPG]bg9Uf5X,##1u`h\j$84q)/$5HmOU&a(Hn[AF)]Li-MZN$7]J>n=,Xr!Jl%sB],hlpkQ;LA#2
%4*k6jA%+Nia5,O04k3F%m'lSarB40[:#3)FIZc;BAY[Z`31bN*[o\A45<CEEX4_?N7W$huf'`@c4nlCPV"=P-L;9ki!-70CIf%_t
%CDrH"?648ZD?'2d,Y=l.-BgY9(MQI&f.DL/^qH>AY>h+$pTb),X+^#JFfD)\UQ2GQlZO(A/,fq)[V_7@UR&Ko&)-DWf$gQ7<@oo5
%dO%Z:Cp2Lsofnpks!.n&ZLLn(Rk!_75:H5l1_Hn*[[cfG4sWr-@CD[ms$t<9UASWs$#3#1<)P0@0`[[-=A&ro)b9f2jI^"uSatGb
%Q!A@QW(STL/*fi:>$5!c9Ff-o^?2`]WJ\3mDi/)YmY,s*nP9u4$W^f9#8%=dgme2'OZn)>8LH?8BF@<JVd/Ee8!LsY=i@(65m+Cf
%""rXcM_,H2D<jijf+s/&HUZ-.LkEK`50l&?(<`%9/6CbtG.5db@[0Is7q2bB0t$#jTMZ=J(d*XT(`4,(5#D/j$#`c?W'_<>@5b"!
%1:a@:P"G7"8NqoI<Fc.XOW,k!>Tkd1nUHL(%+oAM%5<MFa"TaT,b_=HnA:FG-o;F/%8m6_'TqR=S[DrP.R"\KIP$Rn!epQ?(m-b0
%_[jUP:u4TlS?[jD1KZdU70.S%@Z`Pj&gaY*B.o5Z#<n8KMNP:.C>DF*kg2g-1u47JcNRGdQJs<j.N9^N-`bn84Qc<k[.@7_)1-!R
%XcE11)iGLKiAbY&*4-k9ShQ+b?l/m&)1/_"XHA^,,kEOFFjO!"]E%FW3R,K1Maj!uBH8I@(<W7a[S>r:P**U0gSIf%YnC$Y5pG),
%iO'hq[rF(uFY&Ho>Qo:kE>A\Z9UmoM1hKo;FETMYOTbk1A2Xj(JS/*omKSOOMm51BF)jo_'/H):[ZSZK>;_:'"P>.cGc%hf'k00p
%OompK@3A7Z7(e<uPXN61F<:YP!CQr.??AftO7VE)la&Ei`#F^6nsJ1\$#3u]"dU(OK.?5L+mNbcPX.H,0M-f"W$!MH0.2ZhL8#Zq
%V1QZ)H1G[u3CBY)$*WkU&V+ibJ?ZccBVX&o?3u15J:PHACk:qXTtYQ0=*ZuCS2\NQ>O7cdMK3_^?A/u:GGP!iDQ"[TbfMHB$aP4e
%V;mJd$sui^BRL1k:CHLm<Lj;\;9Jmj+@otd8.muWOFpG3RB[Rq@@7<g&KZ"6!BQGfnq<1L&7N^dU=Q9K#RU</[)th67a;8N3>[1b
%=f.=;rRg.hKp6#$=t]&;`oi"(UB!/\k7J@S%3#X`dtS]B/CuPq+Pb,@,m#FT7q!N)Oe`I$*#H,!-q?kU@Pr[d0-j)904fm1#s0d@
%_NM,JIK3f36V\!K`a[]MGc87bDdlBk&]:<l!KWT;5^,Cq\@3D9_1J)TXXSdbF7WlrS9>q5>#E^E'2fQJ^Vq[J7U8,-E.<ImYtRPG
%T+.&OG'tKr8qc5[Buk(frMKZ<Oon,u$j_3QJTC9i60a=R<hf2JXU^%G:pq,!,Z0(if"<*o^g(i4?=l:0;\E=d[gL>79Y$s?JF]fC
%6\@WCEFtJtW)r(_!3,&k9oY\b:mY14JuV.-(@pWF]RZEK68Z+VWRtA6a@*,)==!^f_41Q@!ot?@;&fu8N(KC>U!d$th--P&#-%;H
%<hALViRi$UL2k:ng67u34kH-LmE/2=ZFYgA@+NQJ0Kl=^Oq0S8cZn4l47*oR/]5_hc9\YY.1OQ>J(ciX28<s>2X660Ut;RrgZnFF
%<;8UNpWT=gI:Y\;b4Q@)I'S[>0u_K#T=9NZhH,^b55>]+8H^Y*AjMAi,6VeaAI_DB;6$"\ak0E6*u0YE:&_tM@N^F1eeL"BRmt8P
%j?g`sbq`E@14:"Uo)F!3%P!/5mkHga[jI&:TGSq':IUAbbfOP7]Y)UpCA\T[gmEp-3db1?Ppp`I@lS#C`]=N#,dTNJE1SnKht"OF
%eAf8>`H#9PnipUW%5sB<iZEd)3;N"Z2uX%H[Up#k-5$2<Vd=4--<_VM7+`T<%3nc;<0,['+BoIk,'Zd@0$_Q1@pZ040nG;t@L5M_
%NS#n#r""8'=C`[m(3.W,8@2K*Tn7.to,gZibi'iET1>1i@LW>(Rf8is5Y5M=>Tu6mAGdZ@)o]Jm_.6]rp`D7s+CI8:W3(uD)C\Hk
%7;='agA_1@3::/QDeAjNU(ZF`l/+KbIae7cA"I,+FmFXbB;E6sG;huOUVb49fF*-[K4\d@$5AE^\=c-Y5A6VT7Pi#fXdo:F]f6AI
%+>/AeV%?q,*!*jY8MP1:7+dRiVkOqS/('<TE=QVUFDi"qF=b:4.2uKhaGD`rQrPoF<KcM.V>PRB/%I;ao6>[fDMHE]E)^ick)kGZ
%%q:!WI-gU^bidZcJnQM0HEr_&bW&JF8rB>A5FVP"rs0fhmXDcp/D3IH?eW/-?f;Spqfc4*Mc-O*9AN@S"O"qM$!UPIhU:Wfd47(j
%[eIs.Sfa<u\jC/I+3hW.WH#%)n81r*H*V\e(l_)-O#Q8h9/4'V=Rt"Ib!"daYT-VS5hP$bUYe*mCA12Wk(q43/bk&LKpdF3eS$'!
%pY)PC]NCU!pJJCi*Tiidd@dgm1<OWl/I;4NNPk[e=UP+2LRmkiT^?Miq>5F:1]B8SPGuf4m0u;ZhAcq?$[8Pg^:uUHHEK&Q(nT.f
%QQn[#>/g6KotLf4]md/5*[l1.XY9(TF+MGW^%G$7E4=<NUBR^iCm&aL]01Ja]/do$Mqrk.;Z([1W7aEr+"00@-?q/c36t1rf+Hur
%RDS@Kcd*BRpX_ZTm'Cgi*;,AA!VZ7d;=sRdM+^ji:nkl!A*Vr;2mf5bD*@p289q`Fa"Mu#rrY7V&:%R]f:5!=f>5Me,1K@Pp@B=#
%0>b*Z;+-P)A"L*35L6a@5C\fD.3"s!>^H*hrR'<YLto?2k'I">qpQr'D!dY&4)DNA/SB"JGPri]QbDH@F_A=7ZC[+bU-BN;aKRhZ
%*[a2KAX!PaQJ;A%6*%\N+OFI_WutjF9<@0P4_jDI](H.@PQ'[_>hX6_PB5\fTsoFKp/-1?F)k6*efOOs-S?)b)lU3=<$cV.OS3d:
%bYd&g2V`@XK/R$J'ML`&;)lcIHM8N4S%[^K_el"PNJetfX'"VpgO#TD(POGDA&>mUF]rJh7_AW]@'A#DGPd#MWpJkrUI%2S0J*.d
%8[I.hrE7g<"?YDhkQhgmZse)sfJAjJa@uJ?JO``1i2qCkOo=0%)-%.NrKH9pI6.T.k,:u^BX<ulJXO:-`#9])LPM.-c/GTakkp3G
%!t0lB`lQN!oCEt]$.i@1dOI;)Q!o+CB*'=8?l5,on`45&9\VU<+_Qgb_!up;KQaW,.`%3DE:A4dZIAgIW3X"d))ZV"3-sID8!$;9
%hJDlq:7;FTb#\Oeg)6`Pj5r)Tq64p^dOeLH=/R\%oB@^#7qL0p:7WPYbp;FkF)M,NL<'8?GT.g6QNXQXlFl4QFc7/N-%h`KCE&Pm
%af(i&fQ8=mkoU^UYl#`XVi*d/,jV\b*Xn+ar&b_e&jC?neUNX#*]'QI8AEZ`Ge-1P5@ZRkrg`l#[g0rm-;Q,r;>d0=m2U20f5CKC
%KZsaD)ZGp\AZA$r(\ldPg;_i<\*NSE"YGr7e$!CX63Q04o\,QR5G/lh+nKE]7tdrB(j!>CFWKs[c2ZWiI`ffNZeOiSg8?+GQr^HI
%mbVlBBJ5kR<jN2%4QI"$Fbm+X/YbJ]BU&?/J)>eXNN&hMa9jFR,olHiYBTlNJS4B1PO:-&TgemLLTlhVCEg^1F9ZHUf?Z1Fdcj=\
%h]Zl=c7@LgKa;1c/1[57GHM%Cl40S\Pq]4_N8.KjD;g2=hb*/28pjpUYPX([c/,%%o]$q!`.mA(U]j2=HiAm?i5A].DRm?d4_kjt
%SY%m#h(IZ1EOXA7eooB7@UP._B2J_uo`&Nja_0c:g0'f1?"-i@[W`NoFS=GeKh$QS472%I(38ejJN,E*b0lYg"Cihq3t=d:lCJF0
%\D?iuB_o7&meR[j]GZ-YpJC(bgH5EbNq^g=<W&qDcOB$VNlT1mC?LDKD7,:kb]EFsot=<_WMtVuG4.`5A5"1I:!`#Vp=HC2[*\W0
%5!P>rZes_d^Bq,nmdCcjLRj'(F,J7$hNQ9.f3)H:a5iijrD'hMSrV(SDJ+(@4?fODF;g+e`jG09m\&;!pQ-L#>0F#/U2.cYG9tu1
%oZi*&C4?4%Dk=?<lFB]L/PB?cib*!b()*OlVOT"\VH%f/a48*!G5Qd.qMl)H^/WilQYJE=ECZ_#_KjGj91LkV,A'/#hY^-dHLrMH
%"ue3HN_WmH0i:K>\)0ENhk9I>l)_V#+n%;o_jT#8T"@fJLn;oS'rBbI^GnaH,.fg)pCas>VtN>i%_`@l<dp(cq9%%2\[_3OF>'bD
%)S7Y@oOQT$D3'sn=d6SV)ccXDa+O>>D^NFF&$&OPLli+l5`oK?fI'YVm,ba@i"KDrI9[ddE$j-JVKG$](DER(Ne\A!o4cRo4,VTR
%A'DdG?oUXLC>*rQ5HjtqLGL8q*EBd%e2mGI-M,H.p*JbYl&[:W,s5fUP#*O(':_]B(V.b+BjC6%cB2j14DM(*qe)`[+?OR^MFrRU
%$Ymloq-@TVVb-?#R2nu<'><%r16X.SFI&7N<<bbt4&`?l%aH5GW0<Q1Kb=aQh7/D/2VOQ>B?;pnFkgj43=AWn;l_jI#u^%Fl?%*.
%f;XpCR(Z.ad>9m9R5/H;ES>-m(9U\%SZ/07-bJ'g_WfjW>Auc$V5POd=YMUC1W<\tJ<Of>`FDICm%)P'X2'U^ft+)V!>t?8F0@_T
%(>PG6D2_W<dr[3OQY#p1BfrfXRAH'EO8a-7Q9)lGL9i#<4n_XrB:"X,GQpkM#=%I\AhjVZea2raceaUuB/4",n-(qFHX>O2_B(#X
%^,[D:q/1*Ijccfjf.4W%du70qLn`QVbn?^F0J>MULMej<]Ya>>o0"U8cVRr?20ZVI/%,5%IC"9$'gH(B`@Qce]1Jk]0nRlcm7`E;
%XNUBDkO;X!0Z:QYR:sAV;;2hZd5)=7rJ"Z?a(.s<An_D32^"\K(q0<H/G=I,oFC;qjdtpD>juG8JOcN(\a.C/oq9(36)M\:-rkFb
%9g,Y$*1)\T]o3d)U5Fpfk@oM[eNY+3-`lYZUnq%^aA56SeA=huT6Y:c^9Nff#+bW4-b6`"h0X28mEI^GQ`_nu?ep#>?@=TDZ925R
%3kTmf]C94q_QC@aohMhS]PO4t?aZ5<00`gYq^B%"Hh6($8'?OK<kPl@+!juf'O;&t@H2Fhi)XfBH1=8p`q#[)a2@#t6bPb6/2(mI
%)#.DJ7On`<T5H:=M;$_WcI1NLUKY?S0JV2AhJ8Q6DQI-S*PY`!2*Sc^M;HJ6WZCakLUE-/dG`?^p<q&d,J*enj`C/7WZ3tkK*T"e
%8%Tb=qsfTBDr9)glI?]KcW][Zqu-)V05L$CD\&m=2]K6/S?0u;n*SR\%'R'7+.o&[p><WD=1ZT2=1@p*%S-30pl-ahjO;XK95T,`
%^2rbs9,WO$4fj,mps>p'?2`L0f\<p?17rs.>hbjbe<<>6C@7Y>2!O26S#t5,Grf"kN'8lNWEfh6hHY>RldO,?qR,L%p%HLe].Y41
%3a?L/RU>Q^cHXo<bsRn&"UiS"d(0)=G3?bq]p8#NHe7Bb2rC1U2Rfl=`<NIu00V?(Bc=VYir*o"f=H-IF6V*36@AECW>!;[_u6et
%BPj];?Z)o\aB%?;n-)*1^=J<OL;Da6:48g-LTDOKc->-\YB8g,,MC!#bq%!1NB<J5Y22b[ZBI+'hV(VHj*LaCbr[TPhVQhqQeq>D
%GC*D)96]c_9/r6Hp8*2k"/tXjI(=.X*J2#XgC2U/990u!br]"Y0&1h1^bcfkI,Il3$V_<$?JLA30/r@&h/RqUo5aMtoWR.Ur?S0&
%f6W''pf2;)mbQDt\oI1HaURl_l-A;FkJn\>1p[qGGY_A!T8%Zo4NNiX5$ro1>C)$1m>0N@KpBYJ#'Zh*]GK6[p2d:Ce+e<sZ+oet
%lY<bOmIH.jIK&larPlmi[@P4dW4$iZor,<o6_H[rIfK6WIC/`\p!ose-Q/-OGtZfdiCc@<d]F#Iqa5_dDsVDGmP.7Hgue:!G:tP^
%PZ,H?1sP;UFn<REo]j9HnmHG34M(LTjZPf(`,l3L:@Q9*Rk+I0_`0Kr>;(TbK1ZUi6d[`K2j[;%ef%i%&j.kWl!NaB7g?P?GPfRA
%4/7_ASHkpR8SF-TAc_Q'oNr%[TPXorm;'+.)[Fp8Za@D(GP1`WrQm`TZaq+2\^>($#.K3Xf$\$9&qNRXNm77N`s7KAm`ta.23@1B
%C1H:FgiQdd:,U`(HM"H8jMT-8[JKlT,Z#"qpX\VV8$A>E:-"+&Q*+D=R1F1*RnI[#mdFCa)I!>=6gJDMBrlfpd\aRHh>sqhKDjOX
%qig=dn(49uh&<C;?eeB)Ru>\S0pjM0%/]qpcELfHFj@bXdap-hgs>`&fY2e,LhQY<FWfA4RnF:K4RfZu]Ha!`d]Z_1Dlf!`mN'id
%5<W[2FJ=\o1;NmsqmNs)W.2&L@V;IH[[K=,7FU%@FAj!q^c<5bC7_Q0ICt$fd!Zs_$<C$XT"4!S>HdLtfA[;WL:,t-8Y#NZh-G8P
%\[HYHhHO,,fJH=?S@[?]^AI->X\53d[@Nkh[gLPS"hQ._f6UY>Za2['\bb=9I4nuG>]&iZ_KJ3VAA80L>_gkI`e2*e:QqF.H>d.k
%+3'<=SUkW?\Gg5irQ=th-s1i**9,R6$+#8J[9Dn`5#M15=6fA;2;uoq_QVV:mFnn)gp/i)g?Yg2\+ZT:b+l"Y)8j%2HXX.)+b'-6
%0-sk0?D`5&=7IpTfilZ#.E8Ra]4bD$[B8E4>j3KtRXJ>BB4(5%[eQWao;phQp94<2rq-^"CA9E$.atK$QKI15Kn4K;`oJ!4o(+N#
%)La]PVE0dtVHM#aH8f'Z[VqAWlIe!u;kR)OD:UcW*="D0=he&7Hl3rjd'f1";9M!RB7PA5!ePspEAgFkYaaWdbrXbR+3)r)\7tNO
%=O5o*ce@f!TIN;sp6GZ#-/7qCfHT*-fn#1NjrDFYho_SBb-Ml_.aq']O0`h9Za?nU?R@I.VE#At!qVZi6jgQ_4q4Z+nuT#0&:.f`
%rZh5;2TFBif#CP`DL#8(DqU[U%["0@UD<:KZW4.4dn*"oO3a+Ig(<%E/"hEOHZ!ep'58<KGMP)[fgj`[(I$RH?[`5812>Eu-rA6%
%J!0bE451#os0:c8pC;s++p^].)c)b)UFXZ*gF$&TQK:W/eGS9qI<2cA"Efg5UB_0^r@9dNYkka;c@;V:Wn3;&,@C75ZFFBOeqZl>
%qKTMZYE8m1rFnPrfm.OWZR>p6rLQ@sCc9O[1TIBB/\NS=^!&TJBuC2WXMnBha5>Z$D(3!%r8QEMQq_(o]D6oX@G^4QC#[)jRqjmf
%]^WRRJ$+!pp@.`uYOlW%SK0i+^V,#-5/,ZoE:]5A)22UO6LPgkDTQuO_IdBRT[CKY\lma&5m+Yhp<(\4g=F::GE#l`<2U-I2DT's
%1l\RG(7,p4Sumh"3BF<,]m9'8o;br6PNH4LF'7gNRP%(a-Cs3hIC/i_n&g4\FQZst1^g8:G<XhcCOE&BcI6=HH\SK33N)2CqsPHJ
%hYKkn]O05j'cDqa2V!BD?Oc#495O`g[5TkKC#&49TkG?'g88.Y]<h@:RcuWYf`p)SXY1(tdkpUdp[*`qrMRR#L!J9('h:C=Gc3:0
%SS_;sbFj7Y)4%YIN9=9V3-RgEK"-*=ph=S_s'`;Ngt?tJY@%9Ja(p8q:c/aFYMU!EGoD/!f,hYRFd^>7-KEH&G#LAUfeu?/-"Isr
%eJdh6cC_W\@?A3.Ra:4@rR--sB4gaKn)i?%O*B'mb3&"C;jIbHk2>X\or[X+PB$""\G\\=c]*pRRiAo?iQS5(2fUEo]=O?94p2D1
%2"0a+M`8*6CN+XhW#H<6<"G@Qc(_D4G^8i<l\f<F*+$]_!9&S"J39fJYO?ld9NrG!jl[FX+d?2t(Z$dhS`hsL?s!*aLCEA!P#f'S
%l=np,*&j)uK6rNKGadKIHEa$m2k65njRnelPN.r*/()I2TPcn7B#OS\8kemELK_:aE'F/-`uD4+5K30<NHXgLrl%;-GkL4Ymd7oZ
%VhREQb3V?=C)1S?]>Mj4LQ$]Rj\l'Hh1aTBn#h0<=;njKE959<S!S'Mh:g1HnMUm9_o`e/F<U[8VTG>R]$\7]o^PP_]qXe_$ZE3\
%K3`cV#VI4M<a/qF?KDhl57c2M[1E/8f@F\42i-@p58?7.d'e,Jn`j0d<ldne9c"j6HWS,+@ECSjM)R<R]7(6fN-7rO^5n3bR8c;$
%P1/i&J,_WA>[3+AnM*c#%8cB`LY_JD\*eHI'Idp.V,KU+>:5<;O$69u45.j!pu^Damr/!-$2!&W8&P`E/hDLcf4t2h]QR1GG)m06
%lMc]G5_^;Ho<0,1eI+i3](BAa$oZtFhoQ#PlKni$h5[^.]Cp50F7%bq^[s/,AI#KSs6a'-VuC5=;15l3^O5qKQVK0MEpOGem+)!Z
%?GU`4]6^OXkbOLsFDp5-3O^/*r4+2g*Hn<mRK#[,C\KguhU8qsG?n;HKI,C3VoHW0rPeW20.RY!)"pO2UNQ/W[I#B?+1V,beIN/A
%k"0EZ]9mCf*ktk6>mLq5EpPEkl.g`8Yh3+7h7<BiXPR(LXR09+]Y4%/da_uG+1Gu034X720E9tQ(HTJ+,!;asBtRHPdZ'mU"Gb:1
%*g'7lcJ7tu5!>l.^!YJ>RD7QA*h2i28hN54]Dd+l6qW`ubC8*V\b,C]?=WFP]p2Af4.McBVQJCO^*Ia5':"$YG.;MDrp\$jd4Y>h
%B=NDAaE-gfo%+Va8=V-AZoW]1C<&9"o`GOtf=SNdCC_MYg'_1Em+6q[4jg+<I:_g+(F%#([h%>t[dIEYNJAGh[aV?/T@]Ba%lQY!
%c`L\8PIOT\>eFkn4l0MA7B@Kd)Fk?_`NaBlr*o^%$BFqlW&D5\E&R%Nj6I(1F8u2.=abFjT6+,&Wuopbo@h[4QWFM$Z9--LY45o0
%eKZ9Ieb(HYmlo<Kld)&9GLk;L5*XOFhE'GmmOb>lmqQ,PkJj:NZ^p3]7CCpQD1V?5bo=(ch-tg.p<0Y1pgk;NCHJs'"QF.ejm.f7
%DP9GLHM;?*?+[Go)AZ03mZJ%8\ENB]:]B[l&usaAR#WKddR@>-qdA+N0>fl]o(5Q3cM)5DA89[n=PJ+@n&t9m]>otJcPIYZ=l$c'
%:@7V(jMLR5KOZUo9Ru:(95F4SqZH]Hr($P2)I&9pj;>d=bPh7-qa<Q)LZ@H8l<^e)L#OM!)t,K*SQ59K^jYr25Bu27%sR;oB!g)j
%piLmnjn%]7;]P_s;FCTHfl6WH%D,ush!&2;`ueAH/AJ\W)W_>/$7n@<FHUN)Gk8YRB<^Id9'aR\i6GTtS'6=sgS;6K`r=Nch8B^;
%?h/?b@f+'oi=r'gVEpqn&Gs"XFfiB@hLH+1Qk[9g@(#gpm9K0\>K\CRK1kZ>PAN),>&DsYGA=tM#=i8LYh4E->E&lKT"cJhH@MM_
%qs?Fp<hcDEm(O4bX7bcJ5-93\6sAcS:Q5TPTjI]eAG:L^J#?Ama2Lcq4Z5Ps0&1p6ma&t9aLS.VDeQLRC$eL,FdtWR+!8k7oU_0X
%]"1gudq8nsUAQRr&cLrJe%7<LV(]5qFJD][epGnKh;/+@1j'`%(!WRN8@AXs='I>EPAt%>L:?$l2pZ@u8\M\.C7;rB(Y9^6`?E_M
%%kd2RVbL[XS3/f[N4[E2eXF%X^UZ8sE'5e?<\m:t@=L2[/-<ojp2A[XcI0CZ02.7i?LnuIA=[Y#=tuOcChu?e>$1#Ig35_c"LHd-
%qW9L]9.Q'\@PFo)OiHn]ZElCCV<49$p?qIbgaVKap.Abs"^csdH=QF#IU[=ZIfe(+U7;G&F\piG\am%FdO[QCLZb:<RGKoS5tUjW
%r-<ANj64p?Y!A7),]e7Kdh&t%qa@(65:3c;\h]t1lth.p:dp_-$bcGCp7_LG?/;'TSZW^[]>o8+S[>ea9/@<BmJE6Ah+^EHgq,VR
%h[\jI_6M?k-S;Zn:[M"%T07Vn1407Y?HX&TZ-hFj"?=+s#akJKeaueBJ,&*Ec+CkPBu\W;9M+oW?=0.JHN!NZe#h`P$_9r"n)U?-
%G?Ogq?*L-Ig$WnYl<q#cX:Ih29qPd^HSGJoY+?^Eo1Q1Ee>1TOM-JPHSRs[Tgho.^pM'4_SSp_pgcoK`gdQP/SGP5`$\^5hZ>dF\
%p8^fpadh3o>?a9nmLlDaloE_N-SKLn\imfXB971@[^-haEkunM^=78UG95;CD_7/VEH%[SRKb]cf2c*'(I-K6q<Gr=K=U;kltl*k
%GC/_Bkf_hSII[76M^6#<^CR]]kkO-!rVM8pn)r;;cRoVc0VEg2*a\;h[&g3/1U$]#Du)R%DpWf*Sj%KiL\CY3n>!j[*d(n;.6>%@
%Dt!)$G,/n5$K'XLp%m-qQ0u<==b$D?pf!TEGp\jIY=uA3bB!"h3KA5?$Er7r<^)#t?,e]3)\67l0:0>.>ArMl:TJP\DOnH+fXkL/
%/?ZFQ?=,1m1qCg.Kseol%G.&@T9@'<D8*9\H1saF7VuGE\Q!ormJZ=_NCiOB2_Hkh8=lC%+46_K>p^l!kL>ggO@2_ph_uT?GlO$h
%ABl(KTUcU9R*>&?XH1*`m7qa?locqOn)6kj\[A]l3!ejEF2OH_9\XCMXknI'oI?9'[Cse\bOBgHikNKQ2@%6.ABqY(?T`X[qpE[X
%/T+TBS,rTTJ:,S]du19/fBp&*c'SCTNJ5p/=4UE9B<ilQ;M>XS<I=<+IZmK"U7:>7Pa+=%A+*t(7BKqO[tQtakH.DNKpN@o=-B,t
%4ZbR3n%?5%e%h^X]_:l5m4B;PldHj2Nq52a2eWfDcLG+,JZ#=?4^,J+IV"Mg;c)#8k5KfKT(]P(Rr"`WH.q-s'BQ'Ak2.`I\[QUb
%G($U"?<D;-!"n'#nY>O&.Nun2l\V\2S/$-`\!J]fAK\Kg1q'$j]0m@?Oqd;\#Q"aAWso`GfNWYVT6bLl]7*"g=T(*ZkJNYTDnG.q
%Xj87-lYjfh>+eY\QPpB9<\LY*pnA7b#:F<=)Jd$IY8Zj?h?Va!Y43oalKRUZZEr`VA2hHif_/Qp[Bh!NJT]mM5<%;3iEZ2uiUu26
%oBN)5<bh$eqW@=mg8,14]!2i2dZ)FgD[5Y;>>+*FrIuLJrVgd'`q<OJZ/&Kces>d[g?Yl$Y&5dVjM-b1;?,0MA+\o(m9-'?c7a8-
%5@"d!hq^EmY8hE2huk"Z_114ahqO2e\tdPj[p9p\9`1Ji9S='s2:arTlM(.W_a4=$NPql\;=.ei\+f9p_LBEc)heD4(8;&3^=i&6
%8SQI-=pjZcO8e(\b$!&7r0KS`6EN-/ml!\*bs0t9;lai+EbG)]Uf5$T<d6tdrT2<UGYbuirO0g,o*8@E\Rr#-c]SW**DLrO<;\da
%nHRj4eopr*Qej0`qJdPEhe)4VlY-ClVgLW^[ls'3l2*X*&]"3@IEY%"nTeDHQ?,?-IF.n5#-\G1_T18VY"U9#@9oIOnsIbuo[FmW
%I3J+iW?4m'pmcU_cLLT"KGLJ5W0n,58WZ'/2qjGX"CQ@VrGH91$R,P`6P2GZ"2%7`S]YARc$YO3?13bZX*aDCPL=dOp_E>=*_kME
%mpsi<F)O"K1al\KdchK]+TA4E!95WE0F)XTd(o>:Z"1T5S98QY#4aE0B11usEt\%^b^Kkg099$D4DL#bacfhtaV%ZI:P)C0lQkaj
%+g99R^3\?o^j7c/bS3_)-bBp>rSH`Upr9DUGQ*dmp60R!AnTIN.P5:&hs@bm\X-0X^U)V!n0aBhkNFKh\iTZAP#L5)O72UMqlCUb
%V&=<MA(l:@imR()8kGW"*kS'abiIU<J^%&=kO@PG\(Btgc\7\'Y@"_^?Zb"OS6$n0eM5A_.T8R#-1o5';;j$Bc;YR&Ld.1][[kQ8
%T+B[MpcHHmS?ob>UHKm"eN=r:j"Ii2c/'L6)9c@3);1=iM7&r`<e0]WW+PFkYj[b!R0?pVGK7`AVk2X',S<irp/`+P[O^c7G(mHW
%L^Q->ES0\ZL<\V\b@[pZ6#iI1o-+KmYL4EMa8?sB:IS?ecs^BkqY*h#.h2Dhs.j[/$;#qNWjW0S?A8l7JF_WhSpXTgaJ`;XRQ)7Z
%7g)s4oeB:D?0Q>-VIl[ZPjeT>dQH5<5t=n`iCW>H$f8\D?0@lI%jj*Eq2##GB\!([HpO<3jeVVSAVmIc)f,FX>(b+?iRhf;G85H(
%/8)Yo?c:NrB6&Fu:#^C![-_1cLaA&pT+,hX(bVK5RE:<B"i4n+5)G&=LSH?dFarn'#3raJXo?G\Zd4WfQO<#)'HcKi:0C&[T(6!K
%O"7.BJk(+$'l'kTYppJ8MabG@["=01ROa+2Zu5=2p9-LE>uB3(Rlpr^ag#OtR\+LT#Xm,<,P@?c"<XU)rH(20kXX.YiB#DjrqPkf
%-iX-oH"p=Y$Y$)`)fV?F0$%O"jjKHqH$r%+C1@[p"XTFZ11dJ*UikdtfW)j!)PH(s7"5KMe^S,nC9"Y@KMbh\Znd?4eo1SG!_n0a
%Vie.I0T%@9hu9I9K[q7'lc<+j3(.6nV,`4a=S#]dW"kP;=,lc[-:Ou/O!;Pk<Dj9#)UUUpZl5Ya)RV&YEWK1I7eA&Ao*E?:iuh=N
%C;Xd!=Gp4PXZGA'AuR<Jc_=N=H.[XjS_/1'$+*,8$SAKH`XckuPrBK!"G4FR6"$Fe7?Pu8!E_1R2Y*sTC8e0;<C>.c"28]t:WQ#U
%a<jJib":06qq""Jd*`NX*2AJt>ecO8-$K'IAu2&>r%UZ@'rmmd+bajRE<U'D<$H+g!\cLZNuI,i6TQ9HdY`;`O92q";a0K".q\?Y
%D,<q0VeBF7/-cmn1cgN+c>+.qFlX-"HaHUH#1P?SW%E_pf@<-4!Z@3CTJ<,r%79:s-<2'*S=WaQHcgEo+Jh<'0rueq%;@c:Re!tq
%Xs=>%nd9'/-jla?@VGuomp+Q^+bE1<g(FN>Tj/0#6ohJ\_@?V_pWVQ1!r3Qo1\gjer/_3W_DJK^.>O>M"T^$9K!CVTK8U3q:1Q4r
%$TJa;>h*m(-aHdC<=32p&kd2"6fB&u.%kL;3j*`AE.[$40L]Ca/#Z3N1aoItR%f7C)'jbeR!DD6oOJQR&ZWr^g]4E"jV*IV4&]*H
%Vt7CJ&;B,2Y-b*K3jC)qfkBWA/(c!1X4,RjF:g%o^6(a)l==^9iX[KR<F1;5<A((J>&Oa[&Xi4@W%iG]/r)cF;LqFG,6M$\d]*r+
%)$I=b#IMn\Ja<Yi@t%1+OMX70cdSRVTa[e_H5\)(a(7ZqRO4!SL7"ea1;JI0C8-M%7PU3qQpMH]Sou"QYNagV;\/=,FWpiA*JCA*
%.XR1Sf;__X-R:icf;T\hXTW9&SJWaa\kt:9f)as-OE/3O-,uupC#tmR(r=/@1lR,[UtAUJ55.BFilrgUl.E5/,arknk"F&h&#n,i
%bGB9f[-"Wq.9Np:pbOV"1!)$QRg`[S!'\=F4>PhAL/Zu.>CHdZX`-r:<oUG_A]f;@d6IZu?YO*>HKE[MVg3ZJd\2;h)Q0k#H%6\S
%#uDj4?KHI,//9\bXs@7HkTJkEVO!<s(L])58Kf'Ni0u!+KNaW3`7(J(d1s_A2fpN::JTL#*RO:$h!cno$Junu&V#fHUi[)<8iTAC
%cHR;3PT145"Tp**%pKUu`7mWZ1GUAeW@K.6*]LfV/JBq_8lXkqTeMm=$FC3DFc);9J/hP2U=_I#1U2:G*O(L-:B;4Gq:<L/Ul9J<
%1X*@CE`uV,-<3V5l6sa)"9$9J&o;eh*JSG7*P+Q,#QLpO"sk-fALu74SHPZVdfHA"V_Ua\'5C:1[P`VO@sI2/?;r=3+dW\";p3.P
%;kg3uXI*[%Zs&1Y5K6.=92$l>85H0o8a/6%.qt#0lDTMC8\boe"@bGHU3?dS!n?`eZ@j3p?B/S7"$oY_>$</lnW^RQjI7^-O=68=
%UYN=%$L%VOd$c@,LPWHm2(VDaYZ^WfP>5Ug03(3>ekh\Bdu;K_.U%2#6tbQr6^hQhCc4#7Rcb1pA32#nSL;*)#RQM'&W_P5!Sd)_
%+<dM6LsT&?GLU;)+\AC:b:JaBM2DAR\k<<PMr>o?Hpjc]PP`;D&tM)BVVGj<j`(9J-dIVGTO<l"66gA=!eqRc0TgiV6BVu==_)YR
%N\QW55ar0*P;N`_<($J?@!"ZWVP,bI'7pi744W/<-R9]ROAH)(1r/CMaslJ'FIG52%+Y\p:oUfk,kGMF3bH\)n7)O/15nEG$D]n'
%1d5*F5Fu<ik.1**bcUP-SQ`MO*0Ld0W'*3.n!2/:'!ip.'I6p(4u/qKV9Glplc!*E2g4;&%;N\!&QmHXR9HmP+n^T^&qU+^"e%a`
%DG:H@SNb=!>?A)YC'9^<i)/E;i2rYgf-,iUFLX,WEjR:FQUW-j%&"N-&(#$cfEo>Mqupdf[BV,SJoYD7&3qhJldfJDU_;=1<.]D$
%.RI)Q#52fQ?3k0&_*Vnd6G/KWN"Ia4+dBKeG7R]Ei61mgaNF>]*JI3)nR7#'qU-0//;u"_-7CiFK1GqV)C/>uWRrq*/2&3*3*$qJ
%-?7'q4n_<*"mCbAWPCKJ&Oq@4";<PsBX,pT_Gh3fk!rNB&:nIAJZ.FA9Fu-O==f\!L)W_V+Q..:ZW<uDW,Eqdoj\;P;V;7ViWP/b
%aVdDc^_%2h:GaJR'`+1OQ?^,$.CI)R'8nYG<D0&g+@+)3J;"IU+cQ_oBV9)"nC%XG!G_bmaAAfJ0>uc[+'Lj]p0_jD^]H&3ZG9P3
%WX[`['2*IM#b-O51Q78A(^l1B#W/c"%IUq$Bh9?p^Q:,V69\M8/VMUc?qCug9a8]a`'jsj>!dH,M94<LAf`YT+Mm<RC$8m'!4%H8
%\daa<7&FA1S*,JF$"YG,gco=k$UdO\d0\Q6Z"U[5<^BI.KX*BV4c'jdj6#G6@10?h..Jm<`n7DZl%k-GM<(TJ@TcAo`.,b19AqOl
%>cQOF8lMr!6_X@h3s-[)@:*EG$76Mk*3ECl)Piim,4\(O+K6gE"H@%=0loo=^sa']JJ*^]K`[<-'=3"D80!+f\di4Q%[j<gR246h
%("2>7,%qWj6nigqWD'n!1aRk92(2,Cg`qOpb*/X6*]3D+Un$Wk2U]N"n6Qff0K4i19VD>RM;qA<AC9J,4d2]a!a[)XLl=`1E\^po
%2-(%Y%>\"EA'e)FJb,%O73uD982a&?lU^;q$+S):>pOudBO.h.?sjDq0ToJQb65C4].Z"*5UNUi29TTLSA=%<JGp+L5dPH#5YRul
%H_@b^?/%j*UYHP\DWOD[>S:g0?G34WGHD&aoRJ-'(XtiN:G[mHL2hn5;)[67%PpId[86m5p*59WLP'tbncI!,fi4\u1HKK(,WH!;
%-V,GKnr\deW_MSZ>!8ZNi"(HZPCBj0_udp8P$DT@'I_*W&4Qg'C>_1M,FGCJZV)70)U]uAqe[JOYr.t-8YEa.2MIt$0UE8$<"3Rc
%'hl>o&IM,3c@s7lkJi"F8e]CuXNCf!VkHZe;^.6Q<]FccY9m;-()#M.>0&P[QBX(j>?FYM70\R*_@EXQDHl.;K+uH6r%u@@N!?<`
%;8\f!([iQ99B(h"#qbtj=FjpQm5#'.M3]Om;b^160`EbLL'<"(P8Hrh]kUZ(n77V/,E*m1,lHX;@Q->Xp1Z&jR[s?gMt9?N'20`V
%M':9FKu)+KiX93Ah;X[m!JK&/g)qsjPQ&KX'%s#2eB3b?*'OoACaW+j9WF:p9XXOTTKd7MO_$l@&-Hf0#T4i"Qkc@26I&Gd#[@Eq
%SX+(+*^%F2d*2-`2KIT#M#m$V%=]$VG/u&&>8#escN5#2U9/[);[+^N*Mtd(ij@&;Qs^>;V+,%c+j_\K]\<UI3&Fn`7$7gW!c6dm
%kKQjW3=OPdR[7D&66oCeJ0NL+W6!&8d/Fc<EAGLB?E!?$LrGSp8pj!7bClD`SNFe9#258q_9R#N<#LgSZm+0"9Ml#8C`r2J:bes2
%E<>tn=FL6u)bNG1H!SE$YsXoi6I24T%HUQ:g4pI#@09%gd^#,=<8m6ik$XTBM3tA_1=l&f=K/7GMP_XRTl9L6M+NqMEZC]OC0#H8
%5IU?QOA3"U!m`%"(p#,hW3_5G3ON7!JaY!eY].uXqG/Y)Q,UchLMf-@D?C,3J/7sYTYW(\*2F0rU:"71#RfdT+]LT>b'$+;]2=Z.
%8&q@ZTb7&,s#90kW@Uq(<ZO2r@iGdWZ6bNOXT]@_gg7g)'./U;&Me(ra9DG86f>\bZ.MVP_l"\p'-k"siGTM]LnTZbV)loOL)>jd
%\eo-CMK+j4%^8qpiPB^rZ,:;6DdB;;";LeQ&.`Cl-1m=c0FSZEZ&)q(M/<fN8k8,G-7q!I%HG/nqZP+jMKl,%2Pmnm8sG\.6#)+a
%1PINd9)80G"*m:++PmlkAHr64(\L06+9V/'"EG)rV%T(nTj15Z\-u)b,t0^'\HDm>6RH:[8AY.Ib^9^<'ZafEpk1jFs)LL8od^Yb
%Oq?G)YIC3g<=)6"Q51Z_=HY`h&]aCW5V1kX'_6uX9\H]YfqsUFd31E<KaYc>1KoDD0W.YOM1gLQ!'Z.26=Gk9kT(.G<"(uF\.AP^
%$R;VUeJtkSPf4T98QO(N>i1!k]MsKPNhIH4E)2"a+eM:60sK)&&5-M1:9UuB:,9Tord,UgE@lPC<bdeLU.6dR1gYCK,XVWm0j@9T
%LLRfJmiM:H!iR_6\5OZ0[AcDb*9!P+8-@nE(2AdD>G$/SiQVpV47a?R%FiA*EHTN&k+cO&W5Sb4OUP.q8UB'a`MEVD(F%oco#ck'
%ef2+''!3?J;WDj33ajpRR<V!3U_\gP!nj<51NBhX*=t5"_K8*4b]G!<9`uJpW)SEFZ[`2?o1c_.;ZnSd)JY4uj2.CDX`OqQk91Hq
%)Y+=ro8l20:ni3&&6EOA]APiV@"Ig!0NWq?6A8"<&2IqhpL&pW+[IGeN:>PhJLQKmerSH@8U@BmTQTPL27P0s==cM,$WK$=E!H<a
%Q8P2m0tX-r^j02oKE/e]o0k4#W?k4Y2V8_(,IFZU8.26ulTZZ/'[,/;A=t$K5n,W1cN8dG=#X6>,7@[EaBhh,q[e,_/THr`ZWH#Z
%.b\bk85j^g-D@@eQG#CXlHIH$h/>S8QbcTPU8RDfF&=JG<+a%FZr<dY(<:!-'Z"4>MDjQf+)YL6!ubNtSg$'i@dsq^i-#Z;U<:D`
%^U<.b:/i)]_&Kn&FZM^NI2m]L7@8\S"3CD.FcM.YlO9Fd&AZsh&'$\40K%3[MAM37;YCp45+XO8EJt2$@5/^LF>u131)0k'fTQpU
%"ZWto`3^C0EZ^5UZ9/8.iriBd[3SH+&3&I+VAY#RWCOcUOd1[&KgB]iPrjY5`&&OXrJoVVM%%Aq7+;u.BT/83"<j!`EV;t%Yh#I*
%Uk'MQ_JM1QKh+7[>B%"6=<nJWNcQZ_f@;EP8:f<3oFVHUgeMPG$k\*qhLS)]VMJcRjdQUq?'r^D?P98n"GY_\(;UmB=f"TGLnZoK
%m06'-'5/Xm^l^JD,pnC_6u6'4Okb8nIG,reQ=Uo,,9[`FkaF%135,o6rKEZ_fSo5pL]p8rb.\<)\eaB6.tq.@l:f0KqnO)V+eT`W
%2b+3XW$,U%]0K(/Q^gm>FXReDq++W)?L&<FD<a=h`sVX>0pZNFc*BG`S[-`28C<OJU%S4q&Q\r\LQKKV7oL)Y!V1+s(Ch&Y]V@3e
%]UU'878Oh?I42ZT3_!4,6!:Q%$qE3Gin`]FS"F@O#sa3Vg<e^W&ISp@FA8^i2V@3N&0m0%\!e-W[QkrS/*F\lo.af?A4'D^E?tWc
%PNO7+i&k9jC"^:p-;eeC4@gp=IKSQX\@a[[EUsglNg5n,#E`FOM(f%ATAfj0#"sLsbq=t-l"J_*(3a'DUgsT]I:Bl/SWPr'aGelU
%fHD!N/FWiJC&UGlef*R28hB['Le2T`^q`Qr&.f#4apj;L3`cTVMePP*Cr$RaQA[Yb.mXcM.(%472p?Y^+r1r0s1DkJjhNH#N4a?=
%&j=WOOtbLHTTucl8$aUB%/21.\2OVB(YaN4]^T2J)qBa7MaQYA8oYpWGni;`=pab=&stXX,#G_,OJHD8n]!kDUnXCkRrBl$)('PS
%BOuYsY?30WlR6pV.+)4=@EU9(3;4&`9#7lo"B*eo+#U#s3[RUq6b&!cQR8G!,\BBm,5)J_I_oYYR\BeR#[@uK*UmoqjK=Y$c:Y4W
%;#"6uN<KE=#%a0l_<)L$(P75>MF^;jW,/OKdV'&.)?t@f,\&.%E[8-rjIpP1*[feN('k_-\W']@\`_ta5N6)S6g12QVpn=^`MsHL
%S3b]95nf+<6&W8&a<$&#+0m16=Cu.b7I">\Tm"TC6scimd(8&t&-Q!%3\ffPcN$.`\gY/@4&@Ms#]+",%=fe^/&GZtD"&qXcJ`Ep
%a\Fu7Z_%GJRkgs5lqf]24gkO<WQVb".l19Ka!AM=+jo8ILEl]K5#J!u]E"O)B+-2Y$0.5*>,[1,:gWLY`R%@_:B3@Kp8rMi$93tE
%/k@mG,%dQ7*Z22==-:Hfha*WG?$pm*(`DSY_3J\S]E7)L'g=IR`1<WWIcpWYQ7Xp"WcCRBPY+=Y%.6rHo,GSaTo&]1SZDl#5u8kr
%Cm6n5Z_&=G8+ACQ2%E6\Ms8En)]IBNL&i&N9Yk!9S3WLC&0*!US@&eZK:='`HLEpIgpM+Z$7pWHq?^9_D2Ij<N]e$=QlQ4]\a$C(
%(UZP<??65N2'iOSG?tHX/=B6(]a^3Ff!]P+*+I*8@$(FL(!F?E4qMpV"!h98#I3U1Nu!9:i6&8F[B2M2R!><FgE<UTiN"n'`PB)a
%+C"d"MY6g"D'DPMkI;>I*JQu#Zjd5a<s)9b@pTB0h&%1][p8*j=,?-_4r_qiS@FgVVZ%&j_1o;a;hX6&JlUmM(*!We,'1+<?i:hU
%X[Y98j;9B$+YM2o,PKIsa4A?>d7L"J-F*m9Tl:aXlQsqkdE;;.]2AaAI"8hc4`lLUMVRk/a,7=Dk8HuuK1[Bj'_cT.8:4ADRk!dF
%dB8<n6J:`EHArT\6,8N;d+O(c$?57G(OfCaS65F3Q@(4*'fH,EKU*a@**>V$B1jdt9pt:5AmBj2e3H/G@\R#/:n][/E(.TlEAT*p
%&UOqd>`F?4_G-c%.(Hf3b>",m.Mt63lJf!@,$'eWeEK;U?AKmo*srCW1Uur-,%[V%3]W9gdEJ=>p`>YfEf`=^5D_?\-#kbl3$6(A
%f&b(Ca)4"?%8oBT9_D,sb+sO;?+)ng(@-^5aY;WiI,aVA/_CFZ;*&[sG?H*K1/s'RUHd+[EBApP33k4Mm`Ju-@""`%4d)rn?7Y:I
%GFtk-M1dm@Wrr3O#d/cg$3E"O<\kcI,m%D#*#a'8#_bTVSKh'#5%DWD92q<'&0T'APB@"(/#V6=34ohY7H1.9G(YtQ5r(BAjTTd[
%G:\=5NfZV\2\-f=*?:)pE,l>#XPq'*X[kf*LN\:B.>S3B95>0(;&)F@O\8[+K=J)oEC$cSjr9P`=?qS9#Y,McK8U)<-B+Ud=pI;&
%c^=j`3ZmAR:m&;6l>BO`:PDkG.kA#.lf@84^Jm8J`IN>/e4K-sU/(L[G42nifi!dt'>FA*87R>%"?:1%KimR<5Y:YN##GQ3]HTo\
%*%LSgKprnhrggiXUV@*K1ill+etJ@?X/>KT\-_O)Wt>Ca7#Dd&m$-XN]qURs#+Co.InKpA"j98d6;>Girsg6Oo]I>`*X1KKiS:+,
%+hJ([pB6+96]ZmDV)es;WNbBB-4/ZV9g``9-8E4;`%qC'j`(9(70`mTd^X`pPIS7::X7641c]a[3'?HWrnBh7CEG9l"_nVL\>."N
%,m1h2nW1\/M[cfhf;7[F&60$6rh^*;7"`?6$o*sYPr0t-<ROL0e-TlK5\:*i=6F=",/S#6R'[Ke#kt-9MNPIYaVbCX@W_c(8_fHP
%V-qd1Bpb2o<2_mPkZ/ikZX^Z_2b[&0_;W>%Nu(V)1]agIVa`!E#3,JJX5ZAHKtnX*l%k=r,fJ>SJm04'H/)'J(^\CfV*m_IhB`>r
%0;)1h'M)%1oLG@,Ru$-M#$fpk#DN6;cnE@!$_[P;\u9]nck,IHdlReSTS`-c6*p(!1100ER/<B$.S`17Z:eV)iqHs@/MhtmMM?jq
%2<C0a&0Z!8B_JMoOjMIZ>pt<E'o_X:&=*Bb<t%GkSuX0s5gThpN+l^?b2#m.I\-^@$*EQqjOHZdT[6;I<n7O58-3Cdn8O++<Wea:
%Ku\dGrVs4ujueeIg!ZNW_#+G["8%67MteIGPT+9rJ<=.>UU9OirENQe7q>('g"!0=QLI-@9K;L#]=B"JM]K.;m:5+tQfle,';Wq^
%X3!s7[d>DgL*4FX/e^fQ#d!:e!*E_>(bnX$N'iP90gmsfbH@/6U!"IK>%?4qA4]^:7T_aQd:fDRG)V<a$%j0*>q<AK\u;`tV/rgg
%WU\b1Qk_6jq"'26\c#?_b9Aq&o!NYnVq)THHtY>k'8KHYoC4%KjeuGc34ROL<(K$.?;p*W%qnjM,ZW29G"p(oM?$XO#7E!>W[Jb^
%gD,%T04$k``PCuinKP-?Cg7@*6f-RZYAj4MB!nqCnBFl%-+YGr2;^$io,=(CJmOB7RSEaj9gUC?oNE,rDUUIcM@=2h,7<6RKr\l)
%E,#cUS]0_bcpsS41TI+a7e(%uW)n]_R+Q\DYYj$;U`mCRMgtg$/N$!Y]5!YL$ML#R[#lEh\PZ"N\^kZTAsb[r"6dQQjKZ=Okah:9
%g$2CEr7NETU#$W,!+Wsj?IQCmD^F!dbdoA)B#9<d9JCAofVi6I\R.NGLDE0jf[[9cU:_A`0Gl*<P+ME20`ufKC^sJ@ii!573F'rS
%3LcK^=j':\d1qi'f;b%_0BV\`ogsU5U]TJjo`dPk#(!=6']O>]"l_5J_E]JV&76VXs1;]k"JFeo12(8@JUsZ/86MItk%A>%10V*e
%c%lLo/E&HY";f3"6B'>$'#C$CnO8g8"9@@bo^bg<&R"LHNHeT<Dh,5>*fJF;G!rhY$5jc9PnW`sfOGeb?T6mg#nfE0Bq?i:DZnL$
%,1j79;lE[c8T9elM04?&8R>eMAt_6!][Yi0%;\&]Fo2XQFoCTfb$R.25nT3glfR<g"`h!BKQ+(KS4L,&#d-oOd>XdK4[p)72"/SR
%mbR7'>ViC[m6Q#D!$mu+pk@kNr&OAdPN."H%UOPCDbPoK=83;k'>CWg(G#4PdRK+X"V<R8T^[th*1`&4^/H<&F*I:!55)Bq.`9Qo
%.qU;n#"D73j2N.c3-ti.U!d/*4])cu54+;JG3j)p;fum[J)4>q[>K#S,8FVf?,f5%Ch,+&oE4M"IJF)`.9aH%k-YX+n!;UY_E!X.
%7AP&4#6^Ydcckt]&tc2`_,XZa[0Y[h$uR))Gh*P;qTdoN:^0S^0]]0.&d(!2N"L+cOksC32p_!<\0ecJ2pIQ>H=j"!=6<o<5)7W@
%4RpGD'ehat<S#mOj^$]QX54Es9pWVn*FTu-Ua^h,4!9`?M0$%tlF2#2SLMA#$IZrXTAYVp.0kpORBqIQC-#*<MJL;(FHc4eamJ>u
%CqdGBKP*P!F:ke#:'VKK\;encbiPo\k-.bY7'IqJ`&"(?]I\pb/3RKTCZtg1Z[ar&k$F`9G"#KFOo8-7Kl@_W0l4k0]HTZgmPZ;>
%&4%fs'6r5!`7EA^bEs)(o*PYTYJMnTQ^dn/augnHKmGO(HM5^&#epr&8VM)JV$/76F7rSqKOGah=ik30J]/fA#r'7:j*!0K)GRjq
%4BWj>_'?fB4'QS&CI&*"/3`"Zbn+o+S!UW\VG\':kQ\p(kd+#`r/dae%qB2[=Yt3Q[!kINnjuB&.kq'(!;[(j.V%"`OcBH)aJl:(
%_d,_p##?1-V1U`4Y='taG`(l[&,2@J!i!F^GTsdKdYDYS%GaM?mI0m%[SE(?']5Zs#F-:HmgH`71"rl]ZH6n21PV5d6nogWN1Eh+
%aZXUYH8P+h>bCp+p']&T.[+G*)"Ip<(bZ+.r)/+RrNNY5mc6c^MB<e6&iGfEoJ:\$7/c)M@$pZeasat'aN[k<D_+B?H'n7)<;XSc
%9hmR+U3RUFTgA0%m(&ecE-*TZ$]kW)LU]Al_=Q?$Y3pAH.UYji.lmu\6Nid7J[kpmC9_bacEoo#^d/;,6fCQ^D'6$WZN+Q!-1cXJ
%,CYr5,SEdaZ\,[MK.]93-F+*&`,$@K1g0%gbH3%o/Q^R[BFRJ_esb+JE0Jtf]ZY'e7C3+Ck>^U1Z7#!Z^_C,0k@W@1UPsNB4]6W0
%fE=.&@@@`>!gCqnLcr=$gr4'"7485Y!F<DWQj@l&o_[i5UT+O%\t#LbT`&8&7aj;sZH\u)M7X'7>*O[C:g_2;/VGc@:S8fp6GA77
%&XmiQ8Dre9AW-J+6$##5rWPOj9(+dhkKbC394"JeBkb*&K-eF,eY_hE#-UJt#U'$6_(2CD[_K,u<!Pl'mtgI7gh2BL_N_rm3WhKe
%e-[hsb=,m7.?G25Fc6,OhaIFN24E?r=+nCP_u^tD`H%!MGE3M+KD29bdEnNgX*ZNs6&D:\^[=)5XmYL(BEhBW-i2fl??)4u)(8%b
%F;0BDIY5W&Y&f^Hf>TZCH-#g-37*YG86YgpJS7XD.X`>SFg!C827j^-X=NW"r,=='Y>U&Rr"1YmA[^7dP.=gmKbL6T7\Fjc's#36
%9tr^Nb'@JJYP1,bKUtH(L48GKR?6TQZI!].)DU;phj73R?i=7&cgaA9.%TLDIBcSCqQ:_d*o[<!,L\XHXI56t9W=I05*tl?`l->f
%T8XG%L+<N."n:iNH%6nE5T&_:d)k2M:XGrG3-0;K+q1ki'R#H,CG<flga5m,Y_thh,%'g+k8GX,!T'@FZ=\&3?IR&7`l^rE$O*(s
%\gEW(oeHP.5#*Vs!L;;?g@9@d3;)j2gpr?]4FWBU7o*<`JFYOhhS,>$+HN.c=S^h+q1Y77paaT7J/lIdm-O.qR?VJmfDs[I:ZNA$
%P+YT,%NRcbS%>Kl2+trg@j0F7,!R\!GHW0o1)(>0G?GabJ2X,=9I?UgM7Q'e<uK6eFL&E.N&Tk4p+kYn+TH2l9X3VZ@$l(S*(>3P
%%knV2&kq!6>q=jiFp2ro7FrL%Z:/rR=TVE(3uURb)U,,&YFEGj[<_^,gZKBmVuPqPh\WgfmM/mL$Qh-Bl;K^<.'hr&Vl=Un5%-$s
%/g/]6gYFQP$iRn*`43ppS`Xf['T'r?%_<QY@oK5_,*er<*8QmXWn`:?XDi38[;d:u$0Q7FnV9E_^o@kHf&%+;m>TnEZnn@.an%Tn
%jP5i1\P?`!oob0CAp3?nrE0i,L:.Uh6jd4\U*VKIR,3N*;Oif`-Xfl?fr'iD-IRj2.0kh4?q%l6+C#*_M?"]<S[DpG)f^hNY+$sR
%_QTd$jr,b:5m(u9I.a")8Xk'klK/N6P8N&W'k=TeSbdr.SA:jRjR(C-auL"b4t@S4<fIYf\c#]EX/[\,cju7-J;s[VHJ#%Z4?u9@
%?,1Q)U&<YpR8<tH(fM`SrW^Fk.^jE%^oRQKa%]#$_D/tLjP&H\E,t_=DI?I/GC;Q@J]g11d*-)P0EW(f>UZ`\9*DU)U^?Q!N`pdT
%C:5bU*R09LM4bGr9?7oErj.o^(S17O-JfeK5BJR2`J420!#;9t>/!=9&qds!lJ^4]%kKZ*VHLndp9/\Z=Vu-jLT*r>qr?1j32tRV
%aAoqV0@AD#rQ!8Z<Eg8H@MItSW>SqW'FB"KC4=4?A9m>bj(XS\/0J+!iS#0T$]I.C&)f#!&i`omEquEFX&=lu?)ZH8gT-$l(sB+H
%Ud%Nc34"05omnR-+=me'eqg]0UYC"XR&usMN`:XC'gpRc1qK*'[=t$,CqP.09!f3h-27kq:tI/bG1!5b'\FK%Y3DU>>?V&<BF)@L
%*Vl/X?e9*&fe//'mbpDf[.RN:fT]bYWp.AMS+q5CEap2bVR4=td'qg?,W+bplMJG.&,nmP+=h)2WcE#s&8I+EKUI8/idDrjI44bm
%e5SA;<S9?`GCTaUHR(l>]C`Z]^s^JD_A,-g/MJWa1>-$<eQKoV`M#GeE\PMt#m#\hGpFH``Ft"k:X=>rm=SO6gFj:9c9p=lS)JU=
%aqD2VAWu\82o]Y1SrZB1O!R9J)T`.2QPTNsA_Hc0@p->:d7T=jV0Zn/K,9:&m1CE:g.-PkVu;IZ5T9r8J,P(!h1q($p/m3cSVku2
%R>t0SBHQClM'<3U"A!e;imKL2FSsrUlk=rb5t@VQ.F&)Ml'Ds.T?%m5mII/Y>^-#ODmEh9E90(RgbW\E3YuWke&B+*j1=3C&_@+l
%)<T43q)iTiFURKgEGgUm*r4>@(D%kB(BIsV?9p)]0$'.6gigt3RZZcnHk+s&0^=I47/lq*=!J"N!-Zf.Xa#8%&,4H?HcEVZ])-qa
%1/V%4[rPc@Y5emu3&dE&bflm./_pY<;^]jbH41FJkZfBjj4kRC$qabcYb+_*LPLE(e(g>fIbf1iD:>X(gZH/>RA^SNHCiH2hTr>&
%+ml&f4njo.</j-<oVGi"@(^-J;e+gJGZQ6p<T6/om,r22p\0&"2`l/gg'ItlkLDUZf]2^sO&:N>*;p;6ENLE&G5>^o\c$u[dp,:I
%3l"EDoX+>LIU(#$0A,nPClH(:mt\Jo>@l3@IH0N@!*$$I]+?h\Y$J^-Ai"m7CTI%j60kO7eeF;L\0oQCSVu/7QkN6$*+`I)+kF`j
%E&)HiZoKRID4JeKP%/h0^`5?Z/HS%(3p0t[`4;k;F12Y/ilaeEn`RDSI;V:$eT05lVS:!CQVYXjYG!@ddlM<;97i`LAjh0RF";&S
%`4<*E5-!DA$hIBY(\o=3E]K'uc\47+;6Ydp/j'Qu@!4<-&h9<1EMYn0@rAN"VfQFPF-u8^-Z$e8><./8SPQuFHe(*k"0kSi##kAe
%fAj$/\^@iHVr!ZDEhT\1O+V^OCer>'#XOF4<fI<#'kYX`YH&a5ZB&.DPFTS^!Z;SVT!&KIlF8;f)3mM7r!M^k*156B5#':*RC^jg
%D'8nikMXIMT:>AXpM#[,?o%j<PCt0EQQo=bi"sK?iQN`M%T]<LZAaFY-:_an.Y,CA@FT,na!C>U%#>]&+@Q3[Z4EA93LdWf.<#8X
%!k+=8DOE9sb9]>iHWW]-TenC)fQ(kTqJfZIf+:b,@5M^*6jdh'UqM`W2%(t5n\nW+'>6).n)'\5lp$'Rpq'BdcTCF4s6cicW?(Xb
%o;2OTpmbotBFbmW,e)E[/hm>>=JUYJ%VjkU"+Y5(@fh)kR.cgj>VFJ*f4MCRJg8&*>Ym`Ya<-HE83=*jgY$EVJ`/I*gk5TR1Jh'A
%<Y_O2J\AojbK5DG"@#l&_A/4L;7k2f7#(dj($bG<Y#&T-TQfj^)(VuYc*\F4b1""r\m&H''Yt>9FKG>FA_T(aB;,uK!Wkk"!LAcd
%jDSQW_!^I6'7IGd$mEp^JGCW3["bU&k-KY+Nf8q!\A*P2V3UU1SDc]#4GN4FFR4N)+-lFEi&L'bn6cF5&tc<\gPNopOQs+bUJ.M2
%psk60JVD;tf^l$b69#:A*-@UCeKK=,F;ds.rkkJarBQ&5j;s(5&eu$/3R,0Us+]q`Z=0bAT\4k/2+0fN#Y69l(G2WLGR.Bi'<2r1
%**B)klei-cJ1n-1G*c7Q3nUQlSf$H6#bO\5;<Y3-F(fdN'*Pd\%\RE4EMk+OS]U+b8.F<JF0l.P>n9<dfQ$5<>B6,%RVlaC&r!t]
%E35@//EH3OK6^=`TREHl8>;Lu"R/HBXdB8jU7I.@?I[T)/Xi+"*ndiu<$aeCgu-jIaAYA*^a=Y4,2Ec:,HYrpE`"f(4u]@"-gB_J
%M,VT@1SIDGqiLd8&h`%&kd%/DBG)+\#!emi$TE_t7,fKZ(&j^T.GB[Acl4hh#5V=%m8`@LO$Fs$27^%E/bU1ZaEW'9^qL#32D+S]
%VIi9:)q-1<RNE'0;'*a`3q-SOP:9CqE,kU6Z@"6cFc<*uK*iZYH(E]B8M3XLN9d@T0f'\u?\=DCd1[.G%ckc$$Uk`P8IXF^I[m#m
%#I_E4OVE*(_%r9/nklVCfSM0A\k,MfZN!`*4^0oN/PhQ>*G5Z0"X/aO6-k+T2,Q:@i'o<?-QT3VJP@KFV$9BU9TVuS>PP"0G%Yk0
%#`gGq!e]*Z6T8dTQ-qi:\>#B'c6GC#Z+I@tr'm[3oHm;=X_)hO`M+^cE*[t:,^,.ScW5:b(rCCrD)2Dh*4Ses8p@1+,u2C]QiqL(
%(0a^<V%.eXUe*gibVWgf\.m<1-F@3,T\CYm;^L0X&GF8se7FZ!]]8/,h.>.p'S05'A,JX]%LZO[2N@*,</k""ckqMs,.]E&nZX#r
%![,9%PRXs"bp.@F_o8Sd3`,(.9OXUcKZjo`<NqesrsWqYm)$]@L5sl&=<^A(9GKJf**gs#9.PBokp@N:i*Lhq'5Y6!ODQ=b:N`uL
%!u&=u]57t@M_/6Ac:2hcF-XUq!X"1LZSt>7%V3VAVe.P'G'blPrig_YFnon-GW_G)r!MI`cj)=(htpjGVBh&Q+n*GtOk+T,`*KS`
%77bZI^cF\2+=YG%;ITR?d_\(XZY.rX.C,=f7W.MdBk3EQ3%c'MJ0D5R,-Y^o+.Hr7k2?;\ZEj:o#4Ms`iJCjPTDaDc?`J5",YrE7
%]Qtj1F$C3UM/"[m>In*2TLarjI`W/4PWiMjp0ST.pN9BEjjD1qnqA,WHLu`p_%ossIV;\$_+9ZLr9@Po=V],Jl9V14SQ03W)#82,
%O3fRh-gpTbYQZ+HQ^s#J@;a"U7#tmhgSLSa)]p3lZ^'N$,n:(^,Y*%YL)HK-6-][`j"at+64EB//?:b#;4&NWa70Y,,".g$:.J!\
%QJ<.8K#t.!eC;DMT([/uT\tn7?d@>$2l_[C\[/N:>>.i!1Hit-IAUHn#E,RIH^5HKg'h$E68\rn-86j371D,^\RYH6c%=d'?sUcc
%XX<]caThW4&4jll72dU*IGNh3X,V+g4pS4riN/[d"U,P(V5"qh?cZTa]d@,t[Tbh^7)c`,JRNf4_:)-]'bQcUBkbMlK;JklL'AhS
%7MHuPV,5]*;`'B3HoM#`<YB3koa)<k>\A0ZoOTHOP2WNuOZ0rgEStmpq?J](;Lq"8"FIV?=7s.A2ba9t,W[/PBRo!NB*dpU:A_/>
%EMMF1iZ&r,/.-I9,-Y!bT>F'hPL1C$=R@9Z+lH-R5L@#3PP:cm<r@/Q-NrjL@#V356hN]>epQ=pkC(NJc1K?n#F9=o8LDFs<sm7X
%=$V$%-8e`>[D6&42X?5i#4_FeYVq1&-8O`,iUfHQ=%Vd/OB$`&7dAeK6$#h?mF-VO+tDf:Ub_n>iFk:!qN^t`H5+g(]IQQZ/Eu,q
%(SebeenVcInj(%`V(D7AHLfNokU&B+q#<>cBn9PqSgU9G4M_7<Y\dJ<)N?eli@45Q:MZ#m6@A_=IcXktK;St+<1MCtoD7Ia`m@F3
%s+Wn4!tg+6C::OtPPV40R%b518\ho8>aAj7G7e.`G7R.M3uCJ'Zsk37^72V[Jul%:qtKLGhZK+DZM=C6.[G-A)AjN^5QUtt0HJAF
%ZAH'n;/sK[JK=B5:++^+i.`q9+tJ8n7QG&s<co52"gNu\cYE9@GD/13e*.+E!-D*GRC8I%QWVEU2jIX=Y`H\`]fQ^>!@\]QldM6(
%FU,&3*9&YCB6D2NJVc7"/ttW(kHV\W%8TB*0+9*+0\%-jBEh=l5"\MAa*LggIRVpbq2:)].F*J7OL#<l\U[GJCG^SmEDd/%Og#%O
%5i>kL-9rCpGcQo/S.&>n+_IleMruJ:Vskr5qF6Bp9agY-fWCY!Db2]n>fR^GVXTer2^]nJ[i"N>homZ5^#A&3l)aK\#p[ZQ\bh?"
%XkEhnR=_4CdRZWl]k^U.&"0.&>Lnl&<g2oJ$,(\V&\kjE8=G0**M6<u;+M6,[56bT$;67nq/W&RO^O>!_</uHQ-/H4<2i[-(-Ygb
%-:u=#HFcQs_EL_F<]jR(NWbRugis6ab7r&@-:O>,l7Gn'<=OU`(>NWR_8Xs(THE5f:YDfHOM0AnP26^c&cgJ/!6muML9co`Bo2_T
%,SR03T;"s-]1;>R"=1$WPdUU!+5'Csp[!lLWI@G)`=NL>1(31A5U=oPQ:D1egTHkY.D5-e?T?m1IftQ&k7]9+qG^CVh:E^^=NS90
%Puoq9Uecb36co\@^GhC\X&(R9GR!eC<G;Se/mi,<SQ^!P5j$]:/$!rR`;'5=SdEV^;\fCgf4/r&R:VFFr0&O-Z3!D,h!EZ"MW4kr
%X>@1)Z<PF&>nh7m+%M0H$F/i89&(b"a&USLX@^KFU=]VXB1WS(V)u4_?(!4f52eWSf3f=j>F&JOS!699^B8r'D#bjCok:s9qn&h:
%\eGW\@=)&('jmO?Or"l_L')%,m7-&XZK7cCFD\5rW<TVS=%SYe^r$`97@6CAr9X&26sWd77EP%-ZYDPL?kEC1+B9HdP9#h`jI+&2
%#+98e=1flFE*k$J:iIE"@13#h$9n%PN,rkK4(r8"X_Z8L]'OsElIRXIQh$i?:JlY?o=K^dlhPYS7?\(U@gig\]M:_dC<rP!YsrH1
%#;Fm-8iq&a]">]Lni2QX"N(EZIBnl"TC)k[0Ts?pPg,Z'Gi+cZj_7G[>/h*>_g$0Z=Lt]-jnXI7^R41#pu3kiI?+(nT0M/DhK7L?
%Y9N-som-07;bquS%%0a.bZm5e:u4H!FrsfYLo+@'%VO<XRg)js?9t][D'+d%]E=3]qu^1E\4@$rAuoc$AB?s+-kFr&J\qog*@4hH
%:Z9E6%REr]IYh;!heYt$P]8]i^VV.jRSi;Sn^?afnS0,YQu+LSjd._?QJg3i2O!obBF2\WkmUuWS%M.NEBubtmn)e\lu4r4;`i:$
%Ar,?9j;_QHaA.Ygg]uTrVfQq1Fh?l#@FSA9'I^5u0CJZ0!7L`<Oe3Z)1LWhI7K=rsQN="8[0UsCi6;lJPG<I.ka8LY@*8/?_8Gje
%[aM=6/i9"_1]Z^+rNrOW('O$FPKeG_(r'KFT1nV[KD[=ErFFiY2hBSm`N*k;`THc,PBu*/?>XqjGK(G'kjq:@]Hb/t!G>oO6Hd!t
%4bg%D?au,4@L<Tn#/VK;OK5;kHluaW,b7T`h67AKo7&nkiHiSHV]Hj-!"eXFJVIX0gr`oJSbWuEW9X#)3c>_(.Y$i'MmMXhST^O$
%[mZ8bYa1$,07quOj*6ZIQ.ht4Y6.'dO=`2j7p@-9KXs$(_4C##!o^_tQuY/L!A]<:NE!IKV*k81HQnLGornPt"0c)V,K,,arPTG3
%\`/aeKZ9@jRbeo`#V@H-ZL&Dc>:HLfD=1cUi%mtP_E5_7jiCckF7s'R*)kA^FbK\B.2mM`0+?%5GPQ/$WI>S*XH%[[Sd+Rf>mfT)
%#!NT4)8-52\M>1'g^3nnB(CGrjKEJKcRkoD`%MEP/N&%0+d-Ri<=3?Rr4Vb1WAWXXGi>"A.d;+Y=;k.Ih3^CDoUt]IaL*mTf6)D_
%X1p1X9*/tbCdXl\@=7Ea+niH*p)Ac`1abAZ<\HOL&GRO`]TS4Ui+N?]V0p;BMnnj]C)2.bFU3u,PY^[Q@oThdqqZEfT+/coGCr?=
%YL_2%%578)k'u2%?LAi[>Kl[soO>.QhU5_HH`qY6VbQf/UOBZp5B#<&>Pi1H?ogn`DGI+J&8PmVSg7.,!Q<:iDVs^-.=ae;++t&e
%b,/u(3*fVY:G!4K/kSbM=nj?7-##k$1SWiN'e'-WrnqmO@n)dD*D*,W^K8B;64[U5^sPg`+VY2Q=T+,((iO8(r>_Rh+YWm]CDdEY
%1qklO6g@M-<.IYBp7ut<g,^6W,$-`A@2ttJe-<p7Q=0t5W?V/-#8aIo.#9<,.fIBd2^=?WQCL)Z1Fg521rf3l\)$6Gq8FucHFnY=
%5!?qg^Z.(t@0$.j0qQ.D^m(o;#okH:V;#Ysg4K5K.YCK1Re!'mr=7FT6K(.r6-'/Q`ftugcd8(VPmtY>oW(:$lLGbbFu8#pbB/>"
%*2K44dp2"e<?V5`W/A^*FPn^4D>H_:ksmH"p@'fP,`21aP/O]EJt\)d`k@9XALC"B^!UDDhb_l-[9dErpJt%TZtJ3BJioU\"1`Qn
%<F03MJ$D[a0ql[UpZ(&Qea9bM>PV<6#GopZ<scX.",%6+`QYRhrSl)Z^3`MT5Aa'lVh*IWWt7R6q52kF;'FjbXEW[i5,6VH@Vm,Q
%e.#X2a>qNX9/!T37l@P^\N9MX_RcG#]hk('$kpf1[bZnA5R4[<cF`U]o8"l($`8/2lL-?2ON5shT@M4"!XYhrQWV(']J!0aP>j#d
%Z<R@69s-q+#WC"&Fj(F<rKN$RdeK>))a^0CZk[g+93P.[Mr^$_@$7I8;X^'.2@Y55n'GrEPo]g''\u*4NdSZ6-!"b['"gW&""6X=
%l%W%pDVa,;>#-R;aoUqJ/=1(BC2aphkY4g\bo]i8i14SH"^#YgS0a#*]/\."(3#c\D$\cP+WH+EgbE3FAn*mW*E2&l?dgKW-'VR^
%-FuR4NI`(KJV9qD4/SY#H9gD?'V-j,eD/'L`NO;1+@@aQk`=lAKu):^KUAim@bsJg)cXYhB%8+c)cZ9c/j-9EHn5TBJ`5luhV^7=
%.l0'rr$79cZofo#rhqroXQb_q(qL&V0gH^&m'*+hKL'Q.ik3RHlY\3::>0*u+>9(E_21-&T*tm<8rKC=:1<j,q@F9\b-)N9%fF('
%Z94r1?,g/I#Z2DU.\Nee[e:VY2=MB"_0`+rAT2XNdrX&WB69&j\F?n)<2>m+FK/Jr9&s4!DS8e:1H-_,_!6`?#0a@,.\llsbQGb:
%QNrk?AT$!>Z&QSr]XCa1)-8>M+ehjV"F,aNO>A6[?Pk6-]o]L\K23AsDU0qsUhCsb<f%elY*l\m/f%t,qk:;\Z<l%e8N8gfI1e!L
%@"ae(VXnc-+C44E`dtTGLB5s1r<8b'N`8fG:gI0AOcP+)S<?%f)H7GbmKHXb")=UeN;N6i8r#DWdc&0sc?`6=_*[?3Me7-G+:A@9
%]MW/eK\SQe_i_$0X[0]RCBM?n)W=VkAdD0fBK,u18Q-/SXij#-5$f#MQ:36rldB):13@Dk$JWP'1=S';%sS=*R*/-<c9ubT]m!9R
%6_FM%%NK&';CEK\ia5)IPmj'h97_T_c4c"WP]oQT<J8=&<b8Y"&*C'bW>An<;RA+XC0<EgKdf`TdAcC:T5tB["Fju;DQ*Y!!UOW<
%_83sP2FXL)."-H]@RT.)D$iX3XAXO(F7ciK\cS<*4\m8?2(%4f8Nt\"L<%YMXNb\37H-ZU03f?j8+"WQ36rJ7,[,GtbH2iS8un7!
%.I8e<)$9_g7u6%c*SNdds%"`TZNZ@PF`7DeET9;CaO$l'"C(6gb1`R79Yj0!>RT]K/4CrkAj%PJl*bq\"F3#hLNn^]18#-0Fd\[$
%Q5q/M^F<Z0+PnG\Q;ZP)/ikW6ZZ#M[LNC?[>In!c8Wl-%/L\*dN1`<Erj4,PMe2=UcDg^-;STR(j[H^3#R!dO5r\RA`6Q3c>#^p>
%6ckLL`G^Rl.3s`S,\fpdB%s'\:qd+Vr32b"%'<pk`(L,;KD/lc-\*6Uad!o?I&i+OZ%j84!!js74Y@o+)`UfR?i#(bEC[l3Zq`QW
%KKDBM(t"Y`Bfc=V/u%iZ<B!XMKq&]t(/3(_l#2aBKh]%,k,S.n"TjD,E],(c"q+I#<]l^6<A\GW9>eRp3jW<+g$=i=7PH>)!N>Sk
%H\HSh/OumS,5E4SR_4)7c6oTgDk8$^^EIa>_Rb!47cT)B.G$[KZq5PLT"fDQDhdVo9M+7]20nEZ(a6+X>;t&khT<PbcEb<)2;1>R
%lW(abj\K:6^cq*8^gOll0-+5A86i&ABTT&0R3c9)]1+Or8XF17AMd\.qZ(I9YbDgOL^dq<MZ=$qRUtl,dM:.1+IHF[+N5-ajEkP0
%PjgstYS-JW]f-cP4U1TmYs6Q%mT2hi`Zd]!-?@;\lqmVS[TlKc\24k97SPNWqZmBgje2[gXJ1X2;Z1@d*es>T4SAQ6/E48]\*JY6
%3\&d/)gbm/-1iMa(A,0[=\An8754+*#8(iBd"*=Mja^6JjnIfd6]cTH&YnW9G2#juVO4+9bmT7S@i.)dXJkA4N$_'F5`&@N&6_<S
%1)^%YML71817.&mfHhe(O<jhPW,R]+G%a5)Thceh_@2t_h5UuLI?A>AnU9bJ_"ZZ]b<8ugR[PJ@B(#7!RSoFRni0!^7"m$Y6/Tpb
%!\b8908t&^<?os!JgWE^&%WLpM2$sCX9&l:P)Dg'(QBPsgr.BoGZenmG9\4Tcloc_#`p&rP;+mc7E!,^SNa:GGns%rP44Vi(LVX_
%>fZi$T*#Cs@/jmZM+fR#`00D??u'bs_PFQ5Th&-NH.SX"m;J4s!3YIU-G2G%$_(+@9\TmMigPo:pF,+pA%MuWa_6I1982GS_iR=(
%ck@+iF7?)eAN%boLSP'1r4lbSYBOQ\;pm=(pG$AuG'F)hIW$/T$Ra;^O%9@\ltp`e;O4t2eESaOH.:i-40`k8"_6F3N3h$NfPCTO
%*&cE!C1J@O2^9'1Q;R9?N[BP/nf+uMZ6T)l2[%ICr!Qg/*n5BF<_lD2Y<\/CO:/`hKF(C(+A%*d/=t%?D]7/$=V3P$`rli1Lau`U
%Y#FSmMK03%^)IV?UNV4:<5^Lf1P`#&beBg3IFtg`pMP,+P(:-e1Ijg4&jk)h<f74\=1)+@E&$oH%"m`i6q0-VgB(gP#n"-d8(8C0
%h2&49_i[;f6C`mc:14Lb#RV/J`;J9U<nWLtY&CP^m7m4%Om1Sr"Mh1eL61&[Kn=.hB<?-?cnh>b6%Z979cf>mi8n:Q:.?-kKdKNG
%YH4&nc66&81)_JUaS*pYY0BqgM)_`>%1c(`f<$PcAWVRYqc_^-3='Y80^VM?'3q0aH.i^a?Uj<o*ptM0WA@g*DjBS'8N\kA$GE>j
%,l7&l&2pHoX=-!FL+(g]Ll8AVU/+Bic68H#LY(X*eiMJC=HsNf.dY\\`E<>cQlm]^(&,%q*[=CIN@E(4:"jUm(:0X%Dq+ZY<FRCQ
%9ak!eiYO`j2a',]QjmKqm<4+!Oq$&XSSD,&"0#7.khC2#CbbUrIo@RFS=t@7=YM3%c]'KN">76gZ)MSmaCC4^rsCp:SQ(2U<8M6,
%+fh(5*GluC@"Y;-#;h;-F[Haq)+>g[Qj273N!CT\(aY=STsM[`&bf_0"0K;jaG4&lH=PB]rG4RT-59[NEh;\]9R%4F8jap[#,2_$
%_7@3YJrdW@6)`9OJ]o6f!,/+5Dok\(1RG!]'5.JOc=j^<U,CanZuWNUH^-u%o\n4As!`-NfL?eX;'@+/'J.^Pb_@IR+?T6jpQr0Z
%/bG`%"5T;"]'Q@S@YLq?]GWOMPTZ#XrA:C_C'dI,BT1k1F%oS[2Q7N?\*Yr)&bh+:<hZ!L8;jmI/e>D4-VRFHWn-27JG""ZUVBT@
%qP-X@Rie*oI^]TZktMpn9"DKbfl^k4UR,XeZBs%V:gD)3f`cjRgS"urlP3AO(6(oF"TmsX].9o@eQ`.$T&T3_CHU0)e%[36bqu:(
%5+2ao586n?cB&pP(Rf*FI=bV"GUTLpOiPpKABf?&CKo\-.8QoC#p(@(5MJ%X1lo'M,@+TN>:kL6C0^s"YMl1'#ile>j\<"K/"%M4
%^tmr3inWX:O`qB\_,.I1\3Ng^ocXBcDF:#.YdVb[4M@ddM#<nF05uHj:+rT'5-tbGM&E"]K64D6QIXYFH0%SM86fpIHZN++9C:&m
%aJs&a2c?Xa'JF8h7PSQ[_)*/qTBh?ih%GO%j?rH(=?Z3iQ[@#3lR[lk+tNNZ\:3q!K)*,pWkWf6gE4MTQ>9O(mgrC:>9t+TOi];R
%jbNfjV-[ss[c106cA&>s+'U%$':,CSE(#OPYcA2<hs(rfNu3R1<e?pHqtRF[f21To.RgK_k/.#u<PXAB(**@YYGa*>E67),dTs7d
%UQq;XhRc9YlWOD0^PKltML6-TJEoNZ$,7gtF"edJ$W8_V24Xd9rmL&45nYbg*]=bh$Dg=3Ekeo-?MkjCK0(uGDI2lMch^/hI\h.S
%Sq$Ff2jPSPHgNa)*Zq"EVc'S<#8Y@OJ6KdS'+*/+\uC-'eB\$&&QuO=O55S=eXL1/IIqRV/E^'HJ=1P0]W-a)\maLP3UZFRr*rOK
%WgAQOMj`Uf!66/U@1\3Mce7^%AGh;M0SFU7_+>pI=B/sV]HAX[jOsE0RU!*>i#eW/?q)fuYsA-gg`&1\Q.&9$n(gouQ.=1lWd1/C
%P9=-]="G@Gh5VMt"S-'.N&8MmO,>]ie;K+\UFC=[eS>Kh$mF<p/YKuh$H[dPV*ZA6JZB;pQjoSjYQes3Q)'redk:/B:](4uo<R9-
%L'&,#c]T]e%tfR!RdS7>(QYPP$9)M'#O)I_WQmVN'KrKZGFj`"(a?dc%!AU,OVau#MlXotpVDo@bo9*Ob1^9I/NU%m;1nb7YE@g(
%,kZmh^cEg`LMqo4&G=i['d2iid(M5C]JBdnES`F^1Vcu5(d4c7RJ[%ILV"g:5t:+s$mrK,`9Z(9K^D<`2<*)`PugPWD%L9"?).Yl
%CQEh5^GZ$R!hi1jF)ZaC#S'*1&h1D"]>*ZZ0LKQolUaSB+s00B]UaX\aU`<+T"^0!<s-+",8]>'nMIYf+8M+M!qU0;ifJmaX+jBM
%:#,*C$,IP]CWbdhqrKO=?m\8n(X)V"a;ZjSqG?*$4EoJ0^sBi6O<Z6.>UL%K\<^C?=[BF=:Z070`q$[sgPXS=G!s:^_=bS"g/Bpc
%BoC'.SP8c>N1$Hj/eO9lhmo(NVC,[#m$]+8EC0h6^M6#o;=@F)&a/V?q[I.So(Z>2%YY*F(Hd+$9u?'^q!j\%_As-fX3+NaE#DHC
%@5L*6D%sm?9r1A'^l4Q[oW%((.$,S,>m?,o@_+:A%maWd@SmJR#%r5mR2Pc/S8k`Ke9A(OoOHM@$dZ:W1N<kf'skW*e1.?K2,c5@
%g!IO5D-B;d4@pH*LK0#WEZ2<0gKiB<"?gc9C?712J64n?_S\]Z+DfJ%+k./+o@H'`=U7aoU3k'aRq$`"q0-QVQMti/.&+_PkQdG-
%_)hs+#=:"^-R2@hUdua/4q`&@KC6PkLUFX$]X4S@ocq92MoQ@E,`6I)%?-sBDOR$8CTq?4K._K,"n+uYGQ1]'%u*c5XVcm&c?Ai@
%Y\I\nOL-:S%V91fS^;%,a8#&t:Ak=>NC_2F$&q9X%XR;K$_%qtE"i5^;I>^r_iQb;F1jdBcla)/"SRJ0Jp;^JlC(GnfC]RRT40N?
%U][/,JK@PoqJ%AAnD,WVK>KRRHR!-kdW=r0!EBQq5>m4mZFPjC.Odl=_Q!,VW8=#C#=[4Rc$_g\p),cGXQ.Y$*)ldJ$d]4".RdqB
%o^,J'LW7qNgbi-j39R_G$SLN9RLd'T<R?)8HR.Y,:jH1)UHG'IR>D.D6gZH,ZKHSc_Z22\'[$0H\lprOU$McXO*thGWDcjt+m+S`
%<KZoOI3=q7)>+W>?#H+#?.<HLrS%2;4%eJa,e:eGE]"qqggZsu&C_$V#llD)qGb:7#*9JP`&+hV2EBSJKk0FOhO?q\a1uIP;@oRX
%*+E"r)o=V[]PkuY7R.QQ%*!b?Hp+He;3jHP7n2WsJZ/]Rimk>,/M%.b!E_HSU)jV-oV\rB[*=-E%65AMNA=19>p4R;@K[%0(hk7!
%JsLL;9+,oo"dIhdB`qgA6OMe5YTXJk9)^dM]d=k?h1Q/T?m&<:E^5NZJb_b$V<qSt3a)/7$tt:_4;a2`![246[V?sXii9V/,O!"u
%li*;,'#R>taX;*QF/a7uj28htp?Ic<F1XWZ*CjsCo=k7&NZnLq0c9[L&%W)Olp$\tkYqW/a+Gl$ne$V>gEUZ`Ql#tk%Wj$d7:d$F
%%[WCPPUbIsE=bU!()j^,au7C:1p'#k'-kK=O"grL/<N"?%%6c?c7\_oiiOEL&2gIO,eZYd8;T\Z<]X%C`pLRP"7CMj;Y=3@K1s2j
%.BEO)j4?8P1a"Y8,A'n3&PRuV4->:m0&!&\qFmJffGUYh5H:bX^anB^S(rZj*QoTe,W[K9>j(2&*hoE0qQsbU;d)SB`#*"'$pHTu
%BT(TjL_@@jlmn/7[R?Ga.G",s"6ft$*L((R$a@UgNsR?P=J-Grj,hX(#WgD$qdG`]\H4$q-pj+Xcd0Q?PbSWtiSr6"@TdQ^<9:7o
%2iT:C<XqJ%11mBa3FOQ0-RuZjR.Rj(#$U/\V%)E2<#j$UAA\\b&:#Bj0WE4sM`n^jf8/oUWl;Gh=.HtApR3E[\>5TjFf<S9cl,bJ
%TQm1k$^"b,\t4u5(V>?c<$!SXW.A$0JfTeK3Y>C^9V1HA7\UC4U9d#`ps/N#Qa&e:Yfu,fE/ajU2qXRW^4X.YJB*S?:)dSA0,L][
%E:a3qFA5c<;Pfhe5Y/Ko-b;c)GpHb#)i]+p/gC6Jq:B@bb1EP+_JL_+98@AUG>IpY_Vn?'Kt/+-eR)a9i/d=Npj(`NZ;UJN-'Q*J
%,JubRUpCNP#)Gg0!,0<VfIl&h0gJ%Wr*EY9g/W86=DlYX2ke0E/P0gn7^"&;%2r7+#sdk'AOY8om5`tFhc'_[rY8WN'e[kr5UQmr
%QYN,WdCk7>+jYM(\:iN[lA]J9.K$n`D,:ik8d^E4l37REd576H*/$X@5sSheAc"h&^`6N`PAi=*7"1%S%(5Ce^5\3^cjcZ0"GVJ-
%ggc+Tf-o*=Lj%=X?sOi9]CbdSl>bO;e*B(&hB;&R))B&!@AQ5N*PDmjR0ZsYDqgOFV?R#$YWUBhid&,1$alZnC^I.b%WQgO[+d)D
%^f(p,MjN4bRQbI9M?65G]?10QP1"`TiI6e&mYdE-C)0%or#cVJD@*s63XK%R=MAa5RNW7^BN<'_qTQaJ1fFH3aqHI?TY?5:/1GWk
%GP$LK\$-4b*:MIS+Vb0Q#8kW-5_LV;5]8p(\WQKiCOWKO_^f=</r39-aU#8K`0!m5$FM*,dk&;rOS3[87&+_En?.P;*r%(NU\V^`
%_FuOp#_Q1h8PAK'h5c.7cWHM&'_oc9lHMpjOfcJABkF(>))?*UBM)e1&[i0W;NB+<"=h"ZQ#]\%WEp"S6J)jTP(:Fe0u+"+mIRj'
%XFU@i%\q#.I.ap`QAT3*7J*jOH+9smjdMqpSqmI9?uUA3`_V6krN2frkKT-7:uG;rb!Cc5Wa9Xi;*?.g5i(Gq^@%C-G-_W>RW>(<
%O<:JLn<P5J:%@YiOFGpD&`Puq5?2#u\HbifY06`t7T\[8Pu:3E%GJ1d7X].qBfkWMSl;C";K0\ZI*>C4N]_]&#4G34k1VNPeGOOQ
%9F*@\+R"WYFltHGb?,KVoYN2<0H+$:E,@;fWH-)2LTF]]lj/b/ep[prmPUStn<&Fuh5s.4=[-;0eVXTeB?O_C?k&bF!_QkY!?kG:
%j3XC;R>"Uui*ClTm9Lp>W4$rZ&p&*VBV7+J/uFDC5eBZ]QZE?6#Ai:%d\jp;,\n6]G".6Id)lVdHfu)MZ>A_$eZDB=kT(M<8bCDh
%!d]/,]'-&;*X7N-ejs^W/8OIG\^;)'",Iij;0Ib:UXKRY&PeQXCGSMFLSYr8\H83/#ia^\<";`hPO$uJ?/8Hgkj3!=c^!&noe9AU
%:Yk#GOi>OtSR>ql?(K(5GK4Rb0G+qTBcL#PGo].O8oA$g.,0BbfuHC"F_Q?1&X8iS_:$.%$!fpH8N8!>o[D@$K..gb5j1P.>*8d/
%R^#_V&5OXL?9OUmpgd3A8XlFqaB2>%66i,>MOHqWB/AT`\ccQDoSkQ#!!blL%D-2E"-MaJ)\L>jrLo'JgD<aOed%h_g@.Rb^.#Aq
%>r+T3*S-V*p/oBW)r0PFa5iZGAcO34,N$s0`7\.\IRm+8mhsHM/n&;5M_e,aU`0#C.>c$UgXecqRl+G[VIU%>QkB8k5#=3Mm_(H.
%NJ[W!Tq&!A\KkZfao1'?1IF4`X`/q/'+)"PSCOXh-DB/V)Y"$E?\?p7BQ$QU#1Pp$WHAP0!Dt9l*%\i!,KpGJa9I@BI,:MPiQiZo
%+NMEPnCW5jCF0nckEa;[5*/!1W]EFGZ)rJK.@RM-C*X*/E0a&#X[c#-[UZmh5Z+R:!^/0lLeW+^,0$:K#^.-e_j=OWMjFGujU)sm
%K3>;gLBCP[/q#]Tk#lGe:Q'Je2t^OD]=<IHi[[&HZE>VN'*NI9C66ggYj96bqE^BP"7&$*L/d1oo]kA`B(#r;H'4J8G@a%V>sJgG
%42Q1l]>aPo&UH1p[\HWZ6n9RU,baFsO<p_^$ag>f-OONtBjLL4(Zc)DD;:!Eh&ZrB\^<>_90]#VSW*[(!\&5=:6R][S<3Ps%\X%;
%0X7\,A&5)3M=[U=euI9$[Qo2=;.=@PI@`"VC`1q(d[3d#\iL0P0!6%k:S'<l*DGXQqkK*[5Ne?rJnOO,jt's^[=D`SYUu]ANaCAK
%0nV]#MPrGC@1a4(;GEF[RN?EdXU"+FEdpStJ[,B?b&Hk7=^3M&MkS>>B"``ud%M,.To`[X#i+@(Cl.Ae3AU/>I2HQUl<QO>(h=VF
%aQoEn-Hj^u9pc)s4itV:\EUbmGV?)H@=Yj&K_d]aFp!0KS+;<?LTm`8BRn+qOLl';K<9Ma\lJk<"hkZoM.-?bZ5Fmg)kbmj-!C7G
%[g[ZTePE6\FU!_MhaXimb8P*U5!O\RPq?-%hUCiDcUT7iR6+n*L%W=ApGB`)7N2tM,E0c^7k'W1nheaq$]JSfYX_[e_]_qK\MH5D
%mQ,)M[u@>]1qH5f48NZ+ar]'PKfU;#BFG3YL0UR^]]?;^8=<f-b^a_crK6uYl:#=*5F`?cl]`/1V46.#OBh20<i!0U7&naSn-kOS
%RqH*DI^GWu"1e7R\dMc[kl*h)Y4U(m;kO3,?NeU+W\JnT)-A]i#6]JXlVj.*f^-b,TAS._=*i?+`Ymf&YU*^+?<+HrO1Q(P)F3i^
%rU;'6L'"-q"bb7N,t16DBQYkPGHeH/jPiV9-oB@R_2tB[pfgfj5K("JS1o]KM?_7@aUmCqkmX8B;r.o8:5\fp/mB(9YVcF-s683-
%3(=[uV#.")CFn&4)IdZ9q>g-aVK8p`.I15"#HKl:+kIO4IF$TsgEZ@g/)osBC'$Y(1"`#-H9OQh-#*GmMOHh!O908n:$=E&3(RaL
%MP)2Jq$*+Ai^?HhAd0ZVXRf7i^A>ET6ke,9><91a@%O6a4$nkRKDC*sWX*A>IN@(0Gb?/]6#M>W4?Hd'E-nA^/P,'*]*o-Bf$l95
%e85QoiE]nA_CG`*Jltg1<&LVLo]F@)FYP;iM@TL+Lc$Ya(9s)KN9jJHQ![k]gE5B%0/#8nT7EP-qe*^`rZq6j0/_e"8P3JGX5O4L
%Tid]D%?q_eqd_R7*"1%<.T2^K8OP`GrS1r^it/e`$ETR.Lb[CZ*Q?:EW)J][Cd\I!(b>qYR$Y08&<'W`$RL%1\";oikS.o2K(VZQ
%8/)W5+MUe<C'9/X7@*JgdbBP=MN*MAq.9:X=ViOcq[64"5>Qe,4;0pX6agVAK*029#O7"0V:X][7jmsKZgG`=Ho61V9_,s>p8jlo
%HbPj3[=B6jlh,E5Q[EHW:e,\;eu21^X"r?n&ir9(U#f9WRK1kDb%4l^;j+E?]o*G,13@/APs2sfJ=\]gkM>>@1T)I&)-aS*#mO'+
%ZT$6O*1%nl+h?G@V$nAc9[4?lJuPrjNYP0g7XOiefC\c7OSuer51"eB%UWYfHH@r9iA0@-BI>7hen$ne7Dg:OaOEUCFjm>4A7;af
%%%1Q%RNt,fm8/MSO;^NlL<LJ<e)YJ?h,\sN=q0T4TLqc*_$]+XaD&YDM#jT="'T4omL"<mmg6^Y;8h1$Yae!.C8%b9,Yb4W_YqO;
%-L*M5Y-B+s#0p>uX.Z2$(R[0^D60+EPnIFSK&,hj4Ogn#Y!E=9684kp9lCc3M`N-p(48e[L_:+V2>0jkXq]NhB%B4_0h+j4Jkg)l
%eM+r<$/$dpQsIf`*nTK'@`V8kpb=IH:eY0q#f&oqjhhR\$i1#^f2>W5K9T*Ah\po>TM1)5qe!CH5.qc;XB&0q+e2"8@q^.!d0D7#
%8A*&:9I0\3A."L(pTP[e`s02SoHOdU]sP'6e5_L-]0Ob?)VV*q'\%/)dA*@^S>9S_Pi'!pRF?tGD:/usVs"I*=!\!Z@i7pl(k**T
%NP(Te0H<Tla>:&a8J(T!"R15,fOL/]V24U04s@2iV5T;6bjtDD.!>&4MdoF%LT4T&X0aHm'&p`.YS2*0Tdh;6T9?b&4A&L_<7[8u
%F]f0G(i;id=6T(*VAb1ko.IuYA(!\gOi/o;ZRtd9!l<W"!u^Q9onalg:`>0Sj)ESMW*J<sh3k.)CgL7,;dUJ.QDkPmCqFRLes1eD
%`B0[fLe)t>;>6cFZ)TX4]<WK3kniaS?#V\1L&Nfn[D([?M3!998&/e6gLjkLGfH]Op@=EN=+][XQZMk\;4VgK:gV&?-COc3kE6U7
%]93[uC-0>ObuB[uQlma)9f%!Lno`)8/JO<5G+o9(_-.TGJ=E.AM[OKC&p(d1Ka&]ALa>Z[O&TY'J;%8I>?3^6"nO()[KPsPfc'pk
%0k"=D]#7-V@ZN*M,I/UQGrI:a*+uA/(="SmH.Zk5b<UPRf?m!.VJ!Nk&>oGq.].hcI1,q'\PV3(K_?q%SoR,o$?FWI(%p1U@T:m=
%.GFo9&S+hN3g//Pnb*Tar\[Xq;5#h"&QRBN2QOS&J$=*W:>N(k\7"8,@.?/A6s)#d,-b#4Ocn.nT^#1;+bMSD$=D$P+1n\);Q9kU
%/bO3_nZnJ`I*7^,Ma?&0R@$Mq-k?fPmb``2;pg\anP&=MBAZ@gr$KjUNX#QNYm)]+b__mo(qkr6Wmq][J8eAV1.Y\BX.2S3j.HJ-
%o]APA#D*2(0Q9t=!gV2$l('FgT]05a_SB`bE?sd:41)\\PAu2DT,_;V83)=.=7\re+A!O^L-RS3cS+p7_\L=L?!lr26n@jV6n<aF
%:t>I%T#CB0s'tX0gi0>h?rXq(djS$rY[tXf@_[#aAF\*IW/*-&Kq8h]$7Km\GQ`0nZ?/;qfan&N5CamVoicjVD:4T\GeE4+nFC,k
%nXK<1:aHjHV6^I.(LTPf='F/M^>i4;^9D%,PoVW%U9ajmFd52<.lXkS@oT*[7(Qq$7S-o'LB>1?4:[7U@qf]YA,)0Md]Qbg@!\7;
%co]QCYE*E0%OI"%=bY5V6ip`.:b!o8EgQ,9k-9@]6Ss7CZjC'BG]N>#YE5q.:0DUe(#gNs>.-Jk.LR]kXtN;gK;`lR874+""OBYK
%Fq&R8'EHfU[>Pe'/+'F#,aWXG<SW*oHUh0,e^Q#@AFJA])oh(0q@A-l^[=KCp8`*_!W4d"4ja;R^':g>VJZ(1ZPseQh;[jQhq$5<
%dZWo#YBOA#Z\C(75QYZoJ:)Y:5:@>#f/=Es#n(nMrBtlM3p<C:`MOb4A^p"dWe`U5n-H'F]5.b4!1)68+&:Jj7&"^%d)O&1+ZQjY
%Ce)4M1;]DHDB^U\a,h0I_$rZ6qkkU#<8DZ!iB;!`ajNYgN/gIggTWCi<<elP9oko:-tHb=gk6CORonf@aBa\Gm>t$FVDO>9b9I^(
%@0QJ3>*.AZgVCgar2:QQg-rjr"jm@LI8LuX"B>a>LB)`60-rFtBVLh*[eXTi0la^WZP4#g1Q4N4:n3Zk$:6Fe/N-*148:[qF\C"7
%p7OO%ls=P3<6WHI"a/V^Zm4kCgl9BR!]*Soq3rLS8\mY*)(g;R=jdHm'YY,N2JkMD(k?[<9ScU)mRGM<+U58WLr@9VP+nQinbPQ5
%TL3)031CbBOs9f]2U8%eN8TIbUkQT?/&VTSC!"c!K,eBe597HM\L+4qV_+RB6r'aWPEh$AP;SgI";`>1)t)1mclog<KRb^Yd+P:(
%s.WaOkZ&acBI5%U:hh+tT@V8L+:$:+o.H+kA_A-"_@fW'kbh]FatKF-c88#.h3I2kXNWbWH[28GKLfSE-ko;7;,"5C8V.(\Zs"[H
%7mnG>!Rs)HD"?c-!>Gm!@Kk'p%!4mmA.^KKmt[!:mk:fkq[`?'fs=)hqdo6(TH7cm"*Fh,btp(pDT_(C7hRs@XBL>Y_eaP'A&@'m
%_f/qGirRktb%3GSK,jSI/=0sV5>$BF_kAYJ(:p#P$C'F,j^1%dltQPmi[JGU[W*3GLU?"MHjm4hJeioYYm.5@SMUZDSPuhMK#r*"
%U+8X,kmRc)D)^3C8Hh@V-conVG\NAW2#haNTn.Uo_*-hoCo0,'&fKHlj1(4F@.)&jX9>"8EUn&=[Dh@Nd:FqG[e7)odBI9);\#-h
%Y;]PHE"mKNE3?#g:rXuj(H^hMSD9WPk<\DCPIm1nC05eR3Bu"Nr)pQ;,d0p#o>p+"6N8/TmCRO]3G1`RPH+n98!8tTer7XGW9)M6
%C!kjYiVlm.0Ot3FCh;.?mKIYWg:'ZbWXm=Mi7hCfU8"]Il_cXJPXUa]&=&$/6dhe2*L\sb`6cs@Gl(geNmrPEp]OHag:U#C=Xj,@
%%MO7nd$ZM8Luj-uLoX:E[;UL#^%P6/63Q=VOeO?+GF[XBFu.L7J@lpCAkp;m'Jg8C5Z5nW1Eg-^/RuhM/b@[)kH@,UX`tSp"m(,g
%JBmEk5B@=&MJAjcWY")c98XVRl2(%@^An*1,jEa,;n)Dp'7:&t/acOK1,JptkqHVF5lNsLH[G3)ag6pPmWUc7J=:odhR]Ug'9Hur
%<heV=9j^uSp[/Cb2P4="RG\0jK/C@+ed!e>.#LH2G!X/@S$AG.[tOg^5/c!UkhMhd^<cIuUAinH'd14e(k?K>?pdXZ,>n[<q[bO?
%;6L:/,s;>VJCSd0c*n]9kE%8)L#Eea@b=<Yi5[^b>/:0lM];P^iIfn_/+4BMCrY.+=MpV4d1F::#8Wb*J.X5q\T*7%RaFK"e"1jl
%ah1#(--fJP!ps/IFNJ92Z;A%KXs9/l`0uOuN$]Vpf4<6C!$Es_UjNA;W>lug9k.3-fkcH(">h.pc3iMK#>X*P]J_=j4sh_^B;i.S
%pY,[9mnOcZKPhAoW,J;A>cekoqEZ06j;D'C+f!sCjXE='HpMdA'.]%Z=DZQm][[Su)K;O;5Z"`-a>"u?b=>hTAj8abIcb<,a4@Di
%=A6*<5&<(jjj;Y1(Y$]t_rdJYc4+7]XUZ!Vbjad4BTW_`oFaukW6Lu4B]d)PDVlGu*8'(fM=,[CcmB1g9pg*jh675'*$B09AMM+^
%n/Y#<23Dic3\Eo9HdW@(X#>PID$2j_AJ/<#aP-eS!>RaTGCZh<b&H.Pr7V"8eC9S=&DZG*e</"=,Y%jLHdetZ#=I:W/A5Jt!kd5r
%9!oOI"j?!dp9=G(kkW6j<$)+s)0fK@;(b3#o[$V@MNpJh&HYrN#U`cS/D)78DF"lM$:DG4-+CnBoPaE/.(b+V!?JchOl[p\X;Pn)
%GCmsc\/;^hJ-)4[Aik]JK@YrbZ(muX.$<@AO\jS_c/Lld09FM[A:1i5DSbFlp)1tBV4`B-1>J$$fgKa1*DT(^A_sfohku1^)&YLP
%:Ihbf[D:%^6J5)(d7+78Bc*r-VBt+u[!9$)pb0'bEZ5WaqW&b"7I,p9.63BN)KbmcaGDcYFQ3dQoZBtd+pp$S0igF=Ff>7t30e1"
%Y[?Z2bOs/8&1nJgLj3WUQQ9+?mJ&eEjNLYu@*=j4/KfCY&@SRgW=S":c+=/F^\MR<Cu!qLWp4hQRk4/0@]%r?88[G9"9ad#2ZF6"
%%mWiH"0+C&R"DHF3]Ko?k&cXagQ[i%#76]a5aIhI+]hY0:9ld#F+n_^cN-\J<!A#b(2o7m+>U=[m:]m_;3d]IR)\2V(d;oeO?M?a
%gIkrR\,QBi_nY-'D3o<-iSn.7*dp14I`M24E;VK&CT%V5,4KBK,@pXZ(cd0O<gr>+'eq??NQ=>#M]9lI)M/*WZS<EgAW71\DM2:6
%C@:<^TE"fg>/4YF(UjnPn*>&uN>eprlafQhM0DGD);Wqi24F!Sc8"A3SBgT+*kq]'g_cUGACbEV!_+Ki7CM^_Z(ngekPhdD595Ye
%&%Y=ss"7uG4o0+.jl+j5^L2]gi;M'=`tdd0[fGET3:a_dnSmQ7[tnbYaR^:REQ-l3>h(e0n6%pFpM3OZ^OQ![5L(>:($M*625<ok
%oL]qrh[EYn3a?C"5L8+@%$I$(Ke:A%9+L<W4&aCpRrq@>%Jr>76nl#UShRK^TVT5jghWN5io%=AmK/=G&)MRIJVWfkaD^VI!`:h6
%;?A6ZK?3FkQ9e?h6N$nZ"#8&@dB`$7Kp:tDY)\C_3"iokEk.iZHbEQ%#ln1A4"NG35hCTbFP#oTdK\S?e#UI[HCVDSa+>`DhW<qX
%/T-=CHja$X^oK]V/[kO35<[ODYL!4Gr8?#@qtp#_+LI^;V!"Qu`KGN2L\D<I)%uE<rTQ\c7m[F>r^E:[UblfGe"_tdG3iXlTNDE=
%p=3^MQR;+]_-Qq#D!pDs&oOBLHNdGBYrtk7D!pRA'D=U`EpIL:"h=u=GZYJnnggp<Y[PkiBAAo[:`7rVL_+Q\j*s'=K*%@_RO@#[
%0Oo6!da"gNCYrC)%t?/F#tK-GJkK;9)]degH!5NJS/8+)3EOr9"/%esXN@H`QVVs-e363]=<_0n/FL6<:mdW?#-7,FW"8LmiQtWE
%J+WPL_1mTloB0=3](FIr_D/iBrpjGF-\7$3dp#pIgY_01"sc#Ph1,=8,*eXp%Z6S`j\>N8s8D14%JP66Hr!H01LJIpT0ojG`sI@;
%720EAc)#nu^-9s@AiO_jeXSb>F)0lEGIBqQWd5SN)6PnfA4Z;c4*)$s=V`c6ME0W6gB)o+2ZRQNs5Am(PQg/b@o"mf(R5-R9Jk(b
%^9%@!6Dpgo^p*$^>MmXk^dV00BM&ll!@sb"%0rjgR$&F^1e*uh<tqSMD0/>cngCm0"=74.]jJ5I_ONe0Mt!Cl5IpeH-kbH6J%5l/
%)"]I?%,qM2#(:bXi!+3ao_i%qEJ_=&o&`hs0UM<u!Gg"9.F0C#Ul.fn4s!lu_9;ZDR5(W.;`,m)8D-7Gq)E<.;ZMI>C5RFdWdaJQ
%A(lBe7m"/U;Q1`<p5EcR&!3t@E[Zq)Y/#nA27;"c(:oHp3g`>tWE/>9g*U8VB"RQVA"-('%N0clq-*@D(RuX><<!D)-I0<m@8`X"
%hZ0a;d.j+FSjkX@daOSlF#ajn-f/fOdWbI*d\(i7.iIgP2_)U`jQdP'-_ht"U/Gj<q,R\''7Z4]2DRu/JE('4%g:f-?rt8E4M6ke
%/oHPOnM6k"F)*3U%R")r2`%/k=pUf47iCcLjV2-GplfYu8>O0EX_Gj^2(Uo2:JMO"YW17GP,/g#L7)6f?3Ijp?X39tKR.n]:&Ps;
%O)#WLb'@'nfEYJ_frcuIo\.>@8qiC$5`(GT&S4@g+4U>ga^1n@5)N,(Au^q2Yf>>:+m%0n#k5$g%PBf+iN;;q+W_Jj>--%XCV^R'
%9!g*gm1!&[pnOM4nl>/b9q8.'+nKY[VE9d\p8i<*hk9^t]ib!(Lc]FEa'b/P"tES:38/]lO_i*f^fcm_-L$Hi*oJp@DITVWb3-'Z
%)ncS&qi)fU2/6#4EcVtcg.ZRB&aBkQ=O&1@iQrV'%Sh<cP1meN?dFY90A5QXPR"A;]!SofoQ=J+2CkX;6%2s%5%M"4Yb1!f`fcLn
%BjT((luJ6--Brd:17bO,.hU7mbETVeDcs+=;Bd4ohZhhGW.9,R,O,Xf4H85"4<T!?#/dX.a>0Ujer^$E<a6iq5TdmA+C&tu]k$\h
%=s+e(AN@G^UusDB1s,[4M2>BF&UXU\#.KhS+P.%'im7B='^A@IN>RU[..B)S@5&mtPY/N3A(SCoV5[]A;*LA^=@o2d>sG5WbA^)M
%^SoMnqLk<&0,Ecl?ar@,;ihS4I-tC"&Nbl/$Ar&'RpR],6*=;=4JT&d-^E%9A7^*cKU0+eV@O7/L-it(gFb^CpsSUCnbO^Zh+a>p
%YH6E$Y3hi6&u+!q]kk'N5JX4S+V]/g'u"(R+Egc%&qf'U'mCM*foLm'2<p&BVC;$KS.D\.;==\odR@cQ#Efe;rHsT2h?S.UO#"`J
%F"s"ONh:[0kEqkU7`=;A^M(HFlUMa#!JjAt)"MY9l09(?C8&^=54TL0-$o2SIrO;n$3VHPLVf`gj4k0SJ5iX0'*f:-O$C:pVd#0o
%!>Ql#<-T.O*5X!qC.HX[q?<!E';cK]WNPp/4`)Xq*Zp,M#jf(m4A7XD+6dH%'\AoS:j[3lP'IXHd)c`QC37n,G9uW`giGRd+uJAH
%BU(qQ"<*c<HE),MTj=tc+9A3qLiuP@Lun@"5\R5I/g(gbG7=Q\]V8N':]#P01LHH,&rhF,7'=q2dNiVR<$JilRNMeYm_baPj#N$<
%8Ir!3`7KF*VMiif/i9L%#,cn_`QQ6s2s$uIb+WR=nt?K@e[J/-Z>5B1g=*_W,JB=?1'_8>Bt3A3K;9$rgSEqCbPtiuKM.ENSe_]Z
%=ICGI1o$fUh-pX7c'k1C+DpE7EVE7_e84Flp;@+kAPWusOWO5Hc/8MK^kTK&IA1NS%<2u*"?T+F'fciN*'[-&ME#5YWU`L?AC.BS
%D&t<po+<rrC<IsFW`k/@?^\`F(::J+RtXrl&9Ur!ALP##B9T^b)GBU?E]trt8g8)L`-?>CMVH@<)<'8u&HLN3F@O&i5__RF*Z(Y$
%RgAT+Q41r'9.t@p;^dXPk%]rQlET8W0OILfOi\[I/N,NjE5G^o7&.API[MW!%[#%p6gt+:6s4Dj1g=oeRgGXYI52c"Jn/g%^`SXL
%f?fV@207F$*8r<BUG5B=P3:,T<S;!"bFt5-faQOG\gn,*^^P`--$Od7+L.Q&Idrj@QVY)j,sSInU.o,M/"gDk0N-'2W8V"-FPuLV
%CHmmT#ZiI%Bim$"Jqi"r^Fli)iEEI&L<j'JL%fjlS_dP3r4_J&OD$YO<W"CG+Q:m@s,(lpE"W6C:g)68b$T*YRlQX=(*VWX3&Y'V
%.W\2\AUM]IbM4PK[5_H,XJB?@WE2IEZ-UMgCq3M%J'<2"rRk'o[%F/Ar>Y&+4;TV:%t?>j*%6DWOIJ>Pf,Y@OW'dO;1m7E#ig%h"
%Gpg?Z=K!fB_?9$^K&dhr%_Q9h)=4e9GFZ?P0K%P[q7)=';4n&K.6Sp#1R,?,)JJqHWfi=98qQhg`)TY"Ub'VWcUhmr]r*F'VD*"u
%YmX\IN3ZhEf#Ycm(A02,<?sa7]AmpDV8m(o*+NQH3efZ'`[iifU*M)H1`"h8T-qT]o`VY/bgMWq=8!.eN%89FTh`HmbGl0JS_T./
%nhA2>L7XD&!t'jN@igoP-Pe,(%Hj$%7T=KpaG.kYJ][uP5Wr320&?)DXpm647WhFhGuOO$Tc]@&$N2N<T[;"9n//"lLO]VS%2_XY
%!eURhrJ[6JqA+K$OV6@nL2Y`?qtC"@cN[.^UhT%Q5N!Z=9F2LWoCilb?sH)dP:j"`mm;GKn&C$i<f,Z?G<7Lb1tG`b_k?57'(HlA
%4M0F:pG$FlX[6Xm*U4n@:24LiOk<6W-+rCU4%UidkXcW",E[[;,RXiQPOMUt59+,EK>FHS95$,&1Lcb/'3onfa&$2bnM-L.Crlct
%h%D_:1?qTN,mk.Y'Oa*C!Nr,t>U:'RZ+aMCUToI[aA%9u3=L3'Z,^G_YTB`Y`Q'C!F/)*ZKDQIsRu$4.MR]+db4+sg_1\Sq]2GkC
%;q&13+9h/cr3\#dg5hO#0?YtW1A%@-JbR4X!,d;[XmdbZ\*P>LU;u@IK336DmUJV+4:$tkLIqh5Oj)q3]oQ!,=A0'ia??A186/LK
%_7N+HeSl]Qa-XXgXJ38nF=bW>=?Uq4IQCaW>hH-K&1M^(h\u*#)AL1-6Kf1+.KiK<nebDh/<l'hR\1`A!L"?/<GBd`UdEO`UKmcA
%_le1\,`A%c(f=Q>4')sU-[QVMR;p3`%AT7X/_M+p3Lqen2)X-*PQtm2Q_b_*TclT6%`qlSpd+M1'lS(*N])k,M0NuqX<@k&=k\'c
%Ci\Zk]EngG.&J]:TERbR8#`U:-704BIP?[kKbKI^)6)X1JgkFgA%grlaAms0*:9\p-o4M/$:Ma74hr0kg;]sKPs[!8^S,a9T:!8X
%Iq'XU4$Q<q6N_Kf.>B!/`Ah<S)Jp8CLc9I(OK<tj6_5e##bLO'.Po,l)MQ`%&;u@7(]!-^3Mk<#J'qm5F_bf"PkllPVUJL!ACp9K
%Qn3U_&.;4Q[]2QN8H?A?^-%Tpb'WLG?n@ZY+2U-O/j2TLSKg_\^X<_bRb#kM;+AFZ'mmNpOm-]nl&ir!!ItG+T'`JKE)6iR0^F=a
%JG"ERI@!dt*9k\pY'^p[31:UG6o-_Vm7.XAWhNJ(DeLN;dmFkh)CQTdVF\fB\\cHB)QEro`]Jt`Bbi,e'6XSHmEI.k=5S!t/Z)"5
%Mi>Ep69@dfHs6!]6Wtmc;(NIof:XDn+%,#9@pDU`>g[cV^8C@o4k)9K)'l)V.Apa9Ys*E9_JZZBVqb,-%QC2?UAW;YkS9g?S5PcH
%.+#e\bjo"?71`.:-&75PP(IE6U@?;t2+gf#\ONC/Q%9.h@rfJ@C.='?65kOg4bd0.\.ggPQJ5Vup<@8D&^]-X&"6%g(u;>g9erQ[
%@f&oE/=#8NNMDQOC7:``(IGAILk8s6YK\oH-FI*7[oaba'1X(Y(>HE2_$)9LCq:-J:S\mgr>lOt>[Li`8L0#965E.Q0it9P,GuOM
%`%ich5thRj[GL,4!#8]>a\G`#^2c4eprQ?)iRcb?R$X%8pq>]2QS]o]]bO6S^MC(g)5,i7:K1!G]H[>UWK,!&2d;V7<?(8#d*=?p
%W:XIF:'IaC@sO#(@HB]f-a;KF`RVGF/s^1`0-YbA!Y7.dBUs*4\[t$Z__oZ#B-;E5N;N;><MX%LT;g[VWY8;CdgbQ^'p(PdB5f:=
%T3AhK./]<h=+PgU`DcOd?,cs5W;O:B@3NWQNrTU;U__qL5/s'E42IMAK&T--Kn6'j^e[/f&/>ZY'gB0LU8?T+OpF7`njs9*]j<!7
%q(dt3O90F;c_:Q-]=ZSZZh`2B[etU;d8?#2YuFfZ&lPDZPGFP,-)@96.8A\r.&gmiX$U"o/+B7VU0UPd/JXVhQ&ZhS9L[ob=k:1R
%g]Za$e=esO8[]'a:]tj;oi1:5WL0!Z^4f-_bCqpZQ80XM=s*-P!SaKI:kfkojKqqL8<KakHM6!416R[:Z^j4$I.Y!@!3Bs/%:q4.
%W/"6m'iBUk<Tn-DR3"&Y&gsbq+mfRufL=S*:&Y^n<\:Ml;8+Qp+bAW,`Y9V*Wg0R'8j3GToq6>ej#]So,+NEVI;89\"q<\4kf\_!
%$6AP3*8+8"L&QF=;HXM>:j.g\F%EAd+:q;!F%+c[]![DXokTT'+]OOiAOS&b;65GhAkPTb>Xj)VlE"qu),X-dMkr*mdDc?@Bl2c[
%a&HJJ[QF,G,=4PRqq8s-Qcr\Ck;;2'6Ged5i%KlHg0s].g584%jg<E<fU+dZPRW,i7FG53BFi)f$a+/Fbo4QMSarGR9]P05Q4)[*
%'bV[U>i@hkl\!SNq3PTd-GO_h6-)t_/12(1.h('i[O^M9@$p/Gc[lN\>UMa.8X1(%JrYH.ai?n_+qjWQ?^,ho+t'%JUV=V(fr(q[
%j]@fm<G%E21<.WS'p(Ek!\?s5VWrBT<UK'^ehn)++g?i\auE6=1*T,*<iFeRKZ-qkC=No.XQp+<1Me@:=EKrNW]$)MiU+j,afic!
%<@M-CRcV'@h$P&?Fs)@53Gfcc.OaN"pO9`8&dtnV6XYS-R?C?%G%';&G+f$NMPXE7b/pII9^RI_c4:G&V,=i^=9Z]X@?3o&&$u!0
%b]u6IHpV(@Xq,VRR4Vl4WV'AX?oF6[apI0s9)j:+WK^qMI1Vn&ML=QjrhR//ZVa"c#!=WiE%e?TE43OTW:kA?krs3bC1u*EgJL7R
%TmdZl/0$"t;icV1NFR'5pc9C"N"W1_6m(B/Nak"5eY,u$MUFe4]GqS.'e-%)g<n38]DHG$3F-QQ#VIG"I5R="/2UOtXsH>7m9B.o
%L2U3g'q6?lW/Sb,T7"S3JfI$qK3;4n%_CkI\%?td32VCmq@RK$W%&GHJ^$YRX2$=mI+@+\jI'r$/(O3'W?4%0O_-?$?F=gn-?E;)
%YW8sB`7hfUm*RDLXZfBE-8&:d-)?[_JXE$:WEdLE$0hh<Hqge%6?Nfu3<\6STecjdL[%>6\.+@EFD=>JcFad@]TDqf]1d(aEA,HX
%;p(c4]lJ[7TZlU2F4]IshI9[[J6bJ\FUf._&YgO%[#of.h1T*]Ao;OVSp)qi(N3oL)'cWuM48h]7c42qMY?UH/mIr]R/cH4&Sq35
%7[QE`8,?[=I/IV(_T7Med5kqK&<oK.%A<].bh(f#7tq":Su2c1)u@.K@lI2S<05!3YCNL`T&P7I4SUYJ),Kk^Ni2A_pm48])[Xe5
%cL%=epE==Jl8VA/@7@ZD3)/tc"9=0If-"6pGcNco.t<D'="$u<^hHP)k.rt+=LH_B=HoZ`7[O#\<3kJQDk^sS=nBetZ#.Y-m3&Js
%g&FbUEiR]PdLdIHn+o?#YqScko.rGRB\$kRZ#stW^g9JVWWs@aYSoZu`ebn+l=A]t.qpp!+oMrh,UH3"UC\MaA3PY`hLO.tpY*]A
%.=&;e$GjI0%n'\8XoSs)*R6MQGp#S998;(SnG+#;)#kR*Q;pE(aV-.oM7s?&3]2WpD7]Y/c*S+m7^V]9#^qn^Q;=rRcK2#c9!mY@
%]P[`3]MP8]XS^Y/\D/$I-/?:4L2`9'WYCNRC@<(cc&?sB?#Ym#[OoB$28Wh+]rVS7k:6aCCu&_7*PjCLE#'W%R>+>jo$)5/?YR+!
%!Fba)e8M9ATaAc`>HFO5d]=kqY$ObBY!XM6:Yd71s("W9mQlT<;/85(*QYF+9i298il\fge!.%p/bc*Q8;Jj%BK>R7?:IJ$N#GT)
%W(Ua$j6.8:]*k<9FrI$'bXG$P+GolWo%@,.E[N<YJ2Uge*J&;ub/c3(9o\g[Sjm<SGh)(C(n<ZA/T>T):RR&C?5Sp]%lLi7!T5P&
%4L@ph[s)[j$Z4,M3TO\]cW5q!CsYSI2+C%6L1VF@M"!.jdYC>G4>9,fP0,Cc`9C:loqFQ8M-mnrgHn9AM5$?DK.uAGXZ3JqBi7U-
%)I?Q=^-msOZ@V.P+aPX!M'^P;5;#kPbK;%t9>b=MPEusc5jV%.8WbUZQBX>G-pJ54=Z>+r7s]'":11"6Ak)*Pf*Da1p^\:S)9_I7
%^*Qq_:3+uP@Xc62%2O_gHK\Ata[+nhX(m:-l3+f0'kq%ieuL9e40jV#Y""!C6XdMQ,<q,DjWKYR#@H:]V`G3/m5W_Gm6"4a4d+Ek
%3k_MhPbSE;-/KZRRiE^cPs4r,$;=BU$U]4onY.KXND=8c6,?UC;Z21b*m:!*bbDe<]Kaslq,ouj0c$N9:B`(e4p!"qklAbt3ui@f
%#+PpSir:'59,jA#pT.%UQ*LeW04>C">2m(f64QiF5afO&'lL>,+uh37+Z?3W.Xmq[Fpr-UF]Pb]P5N@Co#?]gPU4[iR(kW41"RV;
%[%]!cP"NYDQ^KI%13+hEC9uf2LgkE-g32]aWD:k>0XqHOk*57<fkZSRldb>"h2-^O2g5-;>ikY!LaN&<LufG?N9EW8Ea*_:9Wi5!
%0QN[)@+[)DB6l-4#\ku9(C:F!Z."+t!84S/?UQ6a)d#rK+R(kl(;J4,q(]h]5Di/)e`Zqob]nSps+m,_f@B]0MI3R]9rnIrSZkJs
%$uGP`.gs#J6sZ;-#!&unp!hV,&)npb@bE?2WS?5&Z\R29nILrdPm%8R7u_Oc<rWsnKmJ9ZPSclX3j"Sm?ROGl;LCe5>t2Gdbb4dn
%+u(a(e:7T@.(]2RplB]AAcXdTbIT(.Kms:ME6lf)9L2\j1boI6l?g5CWBPlLoPZX/@PiZN\J$[i/=?QA3%V.Dr!6EZHt&De"Q<Tg
%,oU7VHWE:7ATLDo/[Pm4Vp!JAKF^ae5`-ULW,VLrj-5k"iA1!QIe,RR1Uu[STlJGuc'WA^Qc&8"!8_9F3!3GkRoM'[B@.LmT*I-)
%_2t-0d0bP'%eGp-(LB%YD\%IeF5]D%eRD&t<6TCFRPCF?#p:-6a\uFhq@?ZY?^T/,$OQ;DAF2;0rY\(5hc)HS)mP;X"P%$fUI58&
%4r!omm*4A@F]4P-:Wmo/S_Fl!,G'\G"Ar^^a6,3N"Q2Jg;?C&U-:Q*(?4f:j>UF_B>eX9<_OmTT!)r2kG+P`SCQ9`<$jlOC9]U(T
%2n<6*T,31igpDAqYQ+^FflKUU+70,(=SrW1p2NK+OM]Ygfi]!TqARtd6D$JH:an96,k?fPp3dX"&6sjXTKJQ?hRJ]Nb!-c_S^LVX
%.^rcETQ!?=(E*EaW8%NpF[*gi[OmTLARIfd5@ZM.B/)//C2)"-&D+@H][,82;8FIsL.(m:#XpfW@:UAGPJ>K#miuaI!:1hQhmqW+
%\9;Q&:uUgC)_IHhQ)p;'>9PY)J-++j+TEHCm]>TYkf6+QX)X%fR70h3&@%]dT@O,]cB1CZD"mqW5lC^8rqGg87`lrWOsHCp7I'56
%&-,`HOZC),KS+pfTrG9dCjMaaX;5_bcbk=:!R9:T4Dh9&/dg_1QeMeAlVX28_C4G$Uq'Zmn%D5sdKa3@ZiV_R_n`cT"/i^="<8HR
%E%idi0*THDfUgrcN<&>RYDQp&Jd%Ihd'.-*FohIV<ZX.%XZX\Z!&](d&LGDUX;OUQYjlo`gg&"BOJrCSUm8q#7e+ls'$S?c\FFLh
%^o:-iZppih]]6Am9XR?@H?_AR>3HCgn+?LUX.'rLbuoIk&hYVNM/gcX8\9&9_h^Le^l@(m62dTk6QK#Pc0*dP6bU_\+Y+=X#>mWn
%"<`]/*u5DR@`Q#A1%KpP(E^l+Q_AsT=B*V>(9L-sMAhtG+Bl]r?%^B_(lN_CHW@k>%bT[U<o$.s^6ID<iW_+!8u5$':67\*$7X&E
%JalX?6/:bDIr,M"X9!79\`&f2=QVMCEAJ"8FK:,P/onX(ApDiIfJ?-i>Z558e%PsU=e[BJE+28-7`o\48hY9:8CFQ-Wsq9@Ff!<Z
%rl]4`jD_4eRl%_JVc=Vdlh+i^jWR-`R%p>^5XC,@83Kjg7X)MoV`SlQor8GhU6mN<)>(Y[k?I<IUA)jV=ZIQPhjChlUbMjWXVD[p
%&<o%[[9n=95>!Y:Tj!lG?_*-?7,`&imRrjB'RFS^m-g\/,iU8jnM)I![(Tf+<.g1%OOiIN$2#c]o_9p*62ACgH""&Vc-gIgS(0^"
%:XIE8i9)o`M*D]s_>'aqq*]\ZHuerYhu<6rd;aWr:\+Z%WH2B0:*e,pHtM1,eMJr.Lj;!i!cr@$!`r1UHi#LqM`LU\g;2H7+DAX&
%`QUu.RsOD>71?aMY,(QQLEr9!-DA'\1=.:_B!#g"_l7KUK)g5T:a'K"<g;b]80"59/6SV\/fA\acV\b@^,b6a0ABt30s]pBNj^:V
%Yd3--Ea-\<6b'HgJ!f).Aa9]_:=q>m@T*/%lL=\JrqAhZ5=S!"#?$`!YhU=MS`Ln)@;#58,['P=[LnO98\sJ)!brrA]G*=Y+:<IG
%=(rY@m'X[P]]2I-]]"VdrN((JJ<:HdH9%@WXiHJsCjNDjJ>,dj*aEi"M.:OVaS=%1R6(#R,=T?o9ofmn6)VI?^`sd&E$j5IeiIdJ
%B&4Al2+n1Im9&l[b8N^:GCp#QFKJ?.^C&!Hf/EY)m,pTVc$WFXqjq=%Aseig!4>u_A?dK"9b.LZ>!>n3(Sd"nVD=*8E?ei4'X$(%
%@!?q!#^g<)EGFKKK%ft%X>q0<g>*).V@mM^g:8r\:&i#Q0\!b'$`4:?j]9b3P;+RI6o-lI#0b`CC\(lLcj^A5b'KKhmL<Igfr&7J
%UE=8\A-Ln^J8>Eu3n=sE#d4cN&&THTe>0na\-&9UYl)*d]00I_^sFf,+c#='B6u@4'Up-"$dP]m5]kulGgEL\'U#kUS'Il'jm$H0
%AHD7hkg<p>@DFQnaYgEWY&YFe("m&,5j6W^mR!rZTIh#coDpQTZ'Y'Z0/V:$]*6Z0QpBZh'=0gXr&?6YKZ:#"MDe6HalXJVOF`lg
%R:_\`9+S"qpd"'+T#7iVBV0gSGbh[$2_iu\(;*o)2L0%!nBS'3dfQ^fQXP!^#I_>H/mdEKSuNU9S_>?hie<8e)3]iuip`kshDQ)O
%W:3bU9j9dmbFu.l7<Y0J[iD4t9CKphV9E2]V.-L_FjE^6QE4%Ea=qqI2_!eGNiF'$GZ@mc'i]g$=MBUqLZPQLAIcfN,%CpXW-nr;
%HB[M]>=``HCj_dPDJ4k#`J_#-_P+C(M2u?2lB^C^NFs<C]+kTi3=0*Kh5GO]L[/bbF"SC:QGu&iH$'nR0agT.r:R?,%^NYOr\Y;G
%BMN[.p*3t1-YHW8o-)bQj0L5#*i=4mHfYKXR#5$uTf/p9a]KDR"IJ$gJ\W[*@j-*3/P_SkW3#*>QJ1_#1RT(992]C,\DZ4l_?Nnf
%?LN]K:X]JcVcfuIbD(^(J.-QJb\om3$U\qa'HlQDT=Hej]sbFVkS!h4_LA([aSR/,.iQ$.WCk;;os/(]mR?^tA]!LT+.<KFEU(eK
%l*$>Z]I7J$)S3W![PC8_#RO(Q6%/rD*%q;0^48Ra9?3BGf+"1ITpk6L=.WE/%?;ub1ST^qM65GR,3Y,&646"]2fN/fh*<1ddRr:-
%1,C23>OVss@]j+;aI3ZocZcD39d>muEP&8Cf6%J(%C,'t7Yrqfh/_g$C(."P"M#@!^+L12UNtuTk/Fig?nr4s;"VVBr)i:GN6?#2
%qZ0=an)n(:Gn\^g0r8se+Xi3U&`hTW?3I&:7]pX@n.<)b[QCT^P(dVXM>aL/ZMBD4)*YNu\HP9^O2<`4F0SU^X$&TuJm+CnL1_hk
%/73VhUWpo?;?sA7kAfo-KgVC=7*g&PD8s,QV(4&VJR#JOdiN6PTBGUU/pXte>ffpVn2r&gNR5XQD5*8g)[&F(H`3NWpZ_Dtg7.7L
%`mB8O?5h+knW!$ZnZI$Ek"K13pi)^m?US&H)FMD59UpI4473=l-O>9]\<WjkJ3lYoS'QFn8m(8Nfo6624JHnJM;r+4F"T6@5*tZ#
%4rG@fF.##2=r=2oC+Q7_OKQ4nWnTg"%+Yd5ZD"0o0\(&M6hYSI<b!<1YC9G0WYoX@\'Fah0c6)"^.;Q(f=cJM=D#4OH<*VMm]kfh
%2*\bAqmjZ^@EVN.efEO'KH6dUo&2CBgpr'VNsCjJ(c!JtY4\IhlC;)HkF.?daJfrfGTM/d!O?0!,fPKSClTe5:',n?iDsj$MD17"
%fF1*GC:T@120jUA("R)^UI"Rr7ji9YgRia>-HE9,bmg=B3^=ia3G&2&&;kLCZ?VX/1+Ed44?\N'B(UAWo0BGb'tu6gaMjoqZ$>9`
%0<5KdNjon.7K+8BXj8$^lh:4,As8JhW5UY[6\.XuZ.M5V<e^!s<^hPQ:UZ&A_FWo>(ob"tXBCQjjHI[I"iQ>^dPtiiL<DSY<`J:7
%Wp_3;>@uMkCs/$Ke'dLD>[$S/esdJLNMk+-9)Mp%FXq84kM-s\@b9PKgfrhZa/r__Ou?LQa;-]:emGJJP6#d&G,sWP$%o'C9ED1p
%BIPhc*7DSj^KB%>KN%g`L`fQt?2K(R!%iTO7C#nLhj.a:+r?(-CP))DdWND\,XFEIUgmA]?G_M:H(Xn$mtD=p!uk>o@&MHnrW9$>
%%[DZYl(0L"JEg!@/hsItoWGAD.LF<sYP3S0D<-Xt>o)gMc^P>G7AgIq5P)cE$["MR=k!=X(!R!!Ji\b^\`F]i$`JT17X6[.W<@#C
%ZtLZ'"t!<)6Je:&lHaXs+6eJ:HiIE4iVI%pD*OBG^)qjt]Yf3rmgf5eggU4<-[QG2DAu"mdiu&-G&=-"H\DZe<_pX=$j-/)i&Xg?
%8kSdYOD_4eiZ:Pj^6MQI>$CI,GXF@"X9S_6AZ3^<"<6:'_eV1&Woh3-6<PNj>t[3dh^knt31m^F9mk^$>RVL'BP"2_,+;Ja9oSe]
%PX#DJc)(W?`_D%O1LmsnV*ru7!UrHLDXUrP1l.P1VLsE<2j"S*rY:9`3%V"oWL+<!UmZ*im908=Ypc+6k/F<Ad\suIRYtB=#U3J%
%J'1LaJ,`c^H]sFB4,?.%%KR^c`I6U`2JDHGg+0J5=o:gmWkF#^AGgHoO?I9PVjT1b;No"NN<*<8iQ($.7*J-';BLrec@k9X"k?)b
%n=fdl0FbI0W!d)WJo6OPDZid4l;?RQP)MIN0(20;.&_pN<YM59NGb^VG%3QR$g-11[N-K#lP@G2Z9+[:lT4,)b(aVl$Qh`a8l3_3
%_)Ku9GBMpO0cmD@-7ZL/lOlR(ER_jjgfno"8ZaQC,-3Qja)J>eM33MMF9388NpV#(R,^`GV4ETl@lr.Kp[rJIMK1lHcRahAZl8b\
%'l(r`445iO%qoR0)&PGCZB4]/I2[7M[dJt&B0[Z'%j*Ff%\k9Dl]$^pOZqm;eZk=[hho`IAYL6rNlARF;]e]WCmfZ4FuH2A8o/aG
%6ht<Co2sSiTl>slfLVpAh_Ne4S7T>qQsa9r8D8"LiMNt!iLD%]B074>BO7t2-HcJWroJdNd#q?i7^">1CEfH&!^fmT;:#i=cMbR?
%]?#4,jn)up9oB1`'g*s.8$NtB]4$6oXYA!>i?#REon^*JIUEXN)QTS4eZtNT`I:@(%6Kc.0VCCXbH[&VH-7eX'O'+ai,j]m>nH+R
%jRsQ!kn:B]iE'E32jkYlmk.,b)g'`_A49Zc5ho2kmF/HWZI6RHh&2;6FHaPI"hu.hU*m@9?%#XrHJ0)W#9C:?4-,7Rh!f*C8Wg<a
%p)@0dr](MJ\gSMd&LS&.-\S>2"#q5<'8a]J,[e1+>Ea>WL9uKi.^dn?acca=W;tggkU+[?2N^`S#fN=&WjXCuS*[E9"ZejAS)DS,
%`^1`7H1)!QS(_^PROn%URtlRC6gQ-1L[AK%L_%J#J=D%Uf%r\`fFHAM<o:-X/\)lg8l-(An?^<m)+P")ghXoCPON,2UWmD25Z1[b
%jLGJ!5N$^eh$M.rJqSG9&q*mgV#e-?$]-la$19Ze`J78H)k^GO2BlF%(!sZ/=m(L\H:R;7=4"Wg&!K%^P,4Ld/Qb2OI#A,nm.9=N
%)Ik_(=853+O%ds2MD<Jni>\_G<2aZ9r&(F=2<,%S:k6Rh`*2np`=>XE!'\@sEe\IHhpPSS3&$bl'18R5AgsuFbtt=<1m"IH!?CfV
%Edb_T',`5]J2DgW7ps)(HPl<O&rY9<5SVAj,?0j6CV-'m:`daj$4.cJ&58ph6[YXGc:6XZG+O(*q,sd?_A/6667HN?rQqL3]TG&p
%?eW,T[]G!0s24gM@Zu[=^0XJX1f>hf<?)dq4ZuMJT\[jk7Ge8+(I$bRTT/[fph#m=Xa(rpc\S@ni4>hd;k*ClqT\^*%:Y.N@%!_M
%Ic(Y"._GlG%hZCRIC2o+3SBo++Wu)0G[Kq-):3U&s4Ma_>tL2(9CrVK5L^2hU%>L)h!JA`:hp;^`;k5%7K<=m1PhL?FUogON%AQC
%L#aFVBn"<#9iY/I,NfcL5ACO,2W"cQCE:)+B\2cikL\7PT2t,=9//&PR$1VdJ=-S$p/$_bMO-;,JNP(b(qQiIW=*+O;Xu/GBpW47
%MA:1J.93Oa4713Xo-c]>*W6!*5XWK..G4G3&kI\H63i(+5QmM04+e`04+n];_fVM=@b]+>=MPRBP'W[))M[3J^k>Gt)2W1lDjicR
%`nd%.n/Tu)F':3(.1@Il$+kscc)1W,^SEUp[:0PmG`!aS_-o9OB_Z*QfZX(.#CouM&B?[AbbZN[lHJ9-NlKpZ:oZ\\<ofHWMT$:?
%L+Lo);apbab>W3t$AE6al\C#T^#e_m]n90CpDLA`LjU[piEk*Y4]06`5(GF%lh*MLpOPGrWQq+g/=$n\h]*;<.GUM0ECZlh[WiI2
%X@>#E"tu-QRZPUKXr>`k7'O?9oO2[MJKS(QSm@V)].3$fWhY#e@?#SMM:==!b!_dZ:P6V5?^p<GfM)%=>^!@^NXo][6IX,-Z\ehn
%ektoQ,ZDE:EA@*I@<K3%\Ib@Pm/AU4Zf!/oEPcSgflS9hL+$Z,rD_i-hD0Tjj6K'nG_RG:06$Ld#\j@SaVXt8L*!(3.)'t3#U35t
%kU)EBG17nciJ8O4'!rrT(5raFL=4D=Q_4R'XjKK@>f1Gg(CAO$rp'@Sg[tf8$sU350!'gGEekZgN!>Gr!XNdLT`O5eVH#u^)U8g(
%m+,oj0Gbh6OpW2JCg:AhZ+@*eocQ!_Nl\S2XQWS;;;JM+a;BYVlIm/mOnjDJk)kGaZqfr-AJ>[(*Dg;kCqUlLmlk2QL^C7`RDsu8
%!640#(ZQ-q#XO8k7I.U"$YA],a;'.C0#Z&d:Z_H%j?,g)'A1,s`URFJK=uQ)!ErE62kl)gCrCHJg'bu'Qm3GM(oR3Yp9A^J&YtMu
%0;<<0J6(hGGG;.qic;p3^gln531jtf<1P<DWBLLEg#P`H,lUPjn4^["OWB($cCpFT+=-HM>f5>"K!:XJ<H`mo`s>GE!X.q%(6Ku;
%'qQU`=k$^dkC*c(Z@_->3=R0s5)%G!6<!HQ?qk*i9[Ln_XqhosoD#7c+CYtJ1ibhUrOGY0;AU5(^`6HNK>rWi'YCO>a?p2`JE#+:
%m^*rnUWl=u4uT[X*\?<d_Vn7Q*"ZcpMhtCFPGV#9<O[PHlM_/N*GG.emi?VNoG0`tooe#Y:T:Iu/F%X(@LJddKbU"DA\hXL90*4u
%Z74qj#_b->RW`'KLa_gVUSHHP,cAm>a#u*A-0#e/1m,u*T_F/]]+6o\;d"3SkK/ntht?c+YAX-u1EGC8&C'*=TJW!tRgk5&.m?8k
%OI/1+/?L1Djle&19.,%eW-26NCK+?f1Cc=]L8Wf977q^R-/i[DTk(,Ce4;AufYJLQDGm:`H;pu?b?P0G;YPjbXCUmB\*>hOPr`EY
%n2sSXLn[pd`Z`%DqbeoZYZB%M<#*A(#JctXW%fMa\3'RA+VpK'1QL%;mAC`E>o.B&c?0(d;ouPCY38@"WkLVK>LrXuR*7RFqi`(T
%ff#14kTm7<[l%GAf$ACKh@.HU,]:%P$iCjlbZ^8""i:],PB.grXu5V@=PKkPP"rkh`V"GLXD2T*h5;=:eTRmA)uE.Hp?I5^hDGIN
%HU$@E3nmZ27./OeY*$[oN`eeLI*T!-ju>T/+fMZkd6"(p(6bc5GjQP5-X(IP*ZZ:W*h@3D3rP4,m:kS=,C=6Q2Sl.BX8@n_("FCc
%*KQsh3l*>;&0f)0@^56W2:9P:6_\%g-c/1$\;FZJ[B:n8=P?_-g[A*0IUNo5S#>="J,;EJ?Mas@oO]T1c1oK&3T'3#:\j6X2o@!/
%UKCpO&j?DGchh&WAk,EUfVnIEMlKZAoW*<X5#P*M]ieQm[o%cK3WtJ5O;K$)"b[pHN=F@`nN-E27$DfL4YAl1$'8@g0F[tnCM^$@
%kGD\_YgISm2gJ_*0+_^#!@T@-rb0]l?XN9QiO]j%V$P+il577'')Gi!;\,AmOp9O@H$"4KdUErVB=YGk56h>bbbZRP@%p>54AQ&9
%)s<fAc3?7RZ"ef\iCtGPSe@H;IJChr6L:=7T3cTOO/DQ4J]>%s"t_S`0TtD.Et7>0B'G/pJI6^Fq,=dPN!5]KX82F*4'0K_*B;*O
%/L+KkC+%o,diV`L2b*Y71&mBlIrdrh3CnU<k.EjKhAp*E&%jhKj4a\.#A<G9A,4C>rHcnA(m5\Q7LDOj\il3#Qbj#l#XCBC4Y?t9
%]NiFDi<uo=V;,D:&WmJ>;@!L^LBSLknqC%P%R<%dI*&G9g`fqI:KpYs<7>D'kNUa<.HY!LX`uaPW,nORSSgRD%N2-Z2u"^n7d<>c
%$!(e&n,cpP@^>/H80c^umK/]0P,%heM4b_W11fQ,<.TFMoTDTaCWu][g33C2SM(d#:a/G74>]CWHU%J;a6TlHb*(]8j",gZ8W._[
%)F^*GiINmk1mAX6CbF37;[0;oY@3-!BV03if`D?Dd!VSS6\]'RaHkbJ(O6HC<p7S1_[hl9Ii?`mX;&DZe.=;q1odNC,&UM7)%+#\
%-sY8,Zl8qaW;_iTrI<FtSk$fED,MQD]I/&gOs$;^YsLs2]49>37TE(q\h5`oO<;idBgSJtFDS*<p6XK$6&d&.L&T4F/2r)f(;WRl
%;1itmRK5"EA7LoS%a'%+VZYl@g'A+`]e_+"&LJ!p&`2q9f#'%g;%mm<NTaF2,:>cllORpXq"9GK8<%T6/W,P[I,>d+O.SnUeit)m
%_%.R5GDF,gPN2rrcC:TnblRP3TR1`&^,\*$E5'%-`,C\%pZMAl#N1T2nD9_'%agRkod$V-^')5I':JUq+_;M$k>QI.SL9.18;3=>
%&kr`%;NXk,%QH*RQiSuDf]7fJ^Js)t1VuCjN_!1a7p)Q\*5@(_X%$3LGVG`C;&:<tl7NZ?*BmWISK(clS:l8ZC_JrVe/<rp@0Mm1
%NqfgcY-QSb5Ie"2`34]qJ.%pgYiAua4XCfSO$GW2*@(2qO<bD(W`nML4540`+d`T\IrLLpLubcQ9)):2oHL54M2*1Cibo>)GE0Ld
%+6$Q7pEnDeHg]N&nu86(SG[A9ef>0t^.@=Dg&9o:#7G&DaJj!X2(Q$JmZ*"&eEsU46mE"X9d&nJe&Ka]a)$'fn?l;EFrtKBV=ABa
%pm/-&3O3c(=CaZJV/qT)K.j>S:\KF2fInD;mbtU)pCpXo4J(`K#!mdpQFj+&V0cd%Ok*BF;+b:;d,*W7:d6Dj/4r*a>jF%RIOg9t
%(%[(4;ZA1%d3/]Sf$fn%GO+3*U,e.+YX#\GKZQF0&:Oa'4KaVhFZfEMO7E#0,J*e]8+b\t7K6Nd'Ct&F5[j183M&glFVsL[=9<*)
%;iF:H%u:FJ*=+FkE(I4PJ!i[c&ZdO\8VGZnjOpgm^aq2-Q9mcR*)?MG350Q/LS,qFfe%F0#"RH/k94%^!s=]rMnk\3j:EOb`Cc1h
%/B/O;DBD&`8O0$09pQWuqnB.a19@Pr"H9;5\d`/q&9%XncmD3H2OY?U6nmU6&t4f!XRe-d)F[WDYR&iaC@9/t<`"p@eQ*NK0uO+b
%+jALQf>@%6-P25uKK`,[3^`5#1a/.e-'>4/>hds9aIEqlTY#^i"GJS=-%X[,=<MoIQINMY>4`ABAEO8NP3tdP98r_Eeg;f28D\DN
%M\`Vi"nO*BNpIff^T33\Z3a>uBWEfqpo9Iq?uHl7E)a""Md)Be#LKY$c5KZLie^@+?34`@*j+V#CHr73=;12cAB@?TNfl=\U,,<:
%BjXGc4%#5mKo]qq*1)lE$tPPo[R.MFY-%(.JWJ8To1@;0V$'\)9;6g%E?0.m,Ljtr1jg\ec7N#5.4,>Xri2W5@,g#j$UnIbW_rNo
%>$-!m64>W8QPa/H"_6F&+cIme-*8Y_)EI$FkAG?WB7:!+l'.jRSI/BMdCQH(aC"j7YT^[_+u6)N&*GUAHpK$qoa6l3aiPOG>q=)l
%4,O<"?ijU.aRIFshE\`CL0Zn/c/m9p9T&"M#WVNsnO4a5Cu!h4lH*Viku7hAq5X11kle\`e8$1r2H`iokArL,`ObV*LuR/l''ICO
%/_a\2!^L4L;tQ^@RBmo)6ZR:3Qa>K-)C/;hX]CpbB92)6B07LPcEl@".VSCjcF)1H;^g$cELT.-MDLiN:?%#LL@foLdjg'rTOHed
%Zir*WQ@f)b*HL-)@"7h*TeB2>/'6_dFgK.>A>6ZYIfVH4o":aqkOSdX2WL?1EQVRc7dJ.el^7PfS26GIP)*X:^t\6nIe`))IhdpI
%B[_dP)YpF#bPCDLeZ.$T1Lb0P\B&@*@=i5`#:=C7'R8.ARon8Lp],'(in+q?55_"K@*,.W4>e`9jh1sd61kZu:o#L+_&rbPSV9Q*
%/t&.K$(`$Kn-X-p,k:hG%,17=;Cddd/tiK<)<q=A6XS(T#r>X-eC#MTB'<uL1tnc,b$"[:SVs5cKJCWZaQ^Sif7H779,Uf5^"rUS
%B$gA%]@?(0CU@m+/lQHunQR:N&/P1SO:VG]Tsu.A.Lpe,W=%.t)'4D%D,\O@=\Xa5\nLi_*.kJQ.JlKW5W?PAca>j":L^/5?gQ<[
%qm]Mp2!pTu#Br>B_S8+cC5use2i-;S\XSAf7_tM8\!EPZE+F39hSIrm=u>D:T[I[^,#*:F.db\T-ZrG7(\NPAOk*oY,s7M;MWEcJ
%W"C982?V=D+47[,gR\&.XAHC<bVat/,g[ILfrV.OUX)GE8hd28m=C.o,@%XP'i:W#"o_D&Z%,U$%=;!A1#D[93?pf`==6g#GXI'd
%LtJjTcO"2AM.)%9;=.Vh4Y8V0cn,_m1//ZOD[ZL1_UF5DOk6;X*pV'R?cbU;%"&E,.`P/aP5ZJ/?]7qA!2uTb]QWL$bbVS2k/`GK
%=GDg-#gNJB*;Ft+aGWlo*[Y3-g6,0X.cN3CC0BY#?j8H?#/Xh"&HsM:(=`m6/Pt'i_-oaNap*=L(1,0F+CjJlO\>KA+g#8fd2Zj=
%L_Z;:Y#]+_?e5^D)d?e%'H]aljX`J:2]-ts=6ZE'!$A72'!6AioUl`:i[(cU?%)pZ;6QW#MItu`DBi=89d3[#c%u='ia3.nLgjBT
%?%QlFfC3UFL"JE/jB#ssHYnS@Y>M69%+.7%%g\G%kZKi[?Lh%CPmLk?X\;Q4!AFIeO0JtC44HL=E2uWN&Y*51^m4j=f?D=6#30YQ
%3qa9".k3gl6^FH7E,g<,]#+81Q^q*\iH07g0fq[f,r14plA1B<ATXi8&MPcs2hknE0kR]3W<;d`279\8[tW0ue*m%U_s["]Bs(/l
%#&+6"mIH+,*k3*@*$49be`.2EH!Ks0W+S,3344QO7EbomXq>.fcOY`4;_7NZ'=T<`"A)Et!bq.+5o]CZE1WZC6GJtZ[BTk%jeYna
%V&KQT>Yb$[\)nd).*/lYX[RA'*WY+Uc;7`2N'H34-NTi>6jm-3?ZXF`Gj+"!r0,CYAb@1<Cj+WS-BN(hgA++NUQgg)^^'h3:S3d;
%3X+,BTdVtI89H8Pq^"1:@T@[]eWs"/A@>55Rl`"DHGGEf<ImQV85=tC[gsKb-*0>qMabG8NaSn%LZEt$'=DP!b<lt4k`geTiG=%:
%G_^ikRNE\s54MF0G+2Au7J#bP$Su4@`BK'$jRdO#ecgjpaORK&,W[W4(TX*86l[fH"%EW:2#F;=]Ksh4gOUnedi94K*@^^GU&S,M
%aDWm##0V"9JfZ?C(T0Tm<FQ##`A>r^V-59B?](IklL8^s]"!Z\>`e@Vm;h";c]j1M6jGE_Ylrou<Z6?ZB,?4cm!EXg"14]&DIX4r
%2\o\kof1=`R6qNE2()fV+E&Ef,;SCT>S,R1c6M:pGYfSceqduD%F_p>'10IOh7\'k*C:T^;)/piBTVfAa7iU>/b4'HHHAu;UY0(,
%6A:S>Iu4Q9@LtlfM6i_0Ib:-Q421'ue*g2A^Ip88_;F:SJIS@""''<4Gd?r1l%<.J,@Z[Pe1a5&Qn?16j2Mhb5huPL'iLbSa,P"l
%J7M/6HGBM:eSpN!*jn?27eir$SblBMb\n16%BlH9nIFJ%OHS_Sc2cKkq(1/e+mGb?NP($-qS8H8gq]pc7T".abBD-k#j-LGa"SHA
%NM.Y$,]`k1fg/lE7*SV.K']0;%kuc&XN,(Y(KEZ.b5sQu6\bdZO(Y<g!&.Mi^#&/Z,T`WQP=cR8c*FDQLQq"toTiJ<VAl`5Bj+t@
%95Y2@5BcW74]FXJrb7@5W\S\:+)lc@bV/T<JAQgUN;c8BCU&ZE%Z5q1VB7maGuLO.R+9kUP(8Y([7H]f&T+k1VNPISMRrS*As5)A
%RFqDDMN3()(pTp]Y3Ua[#k7.#aX`eiRTX8SQR&TYhD,7DF)h8F-\EC!1E9THi&a/M\oE;ZTY6?a8g?=>2Xm][E\!*!PCap;H&/,N
%Hpr/i7m@t6hhT=jL<fus+[@RcU$-Pr5-76SQ]/7gYJa?'!=30*MpKhiLSQ.Wp!]5n\h7_i&H:@aVXm2lgD]$$KmYiM0(Fb=e;5q)
%LnSg(b64Q`+UL1W^BcY[D=]HMdP)N:frDf#;u<P`[X_M'IqSZPi-9g28f^=E,5C5\`Pbb/)kd)0b2(rN2,"Q)beaN&E_]b966q]8
%Q14Ki7_eDM'DhHmF.Q%<hbi5/7+nO-@/C"r,_EgM%e@;NT`6`\3Th!<CK6TX*-5'c::M#:fdMYi^)M?&Q4B%+.Mi3!5Rfaq1TT/`
%6Vp!HT>@ADStKeaEfLtmM\u@`4OJr%7Fu`LAs&GfRJZo0a3W]NM5"Hi[FU*ljih;.MOt$6n8a7uKsE3^;\uF&s7Lk($#UdP>6'S"
%4uSV3a1u:EH,-_OgRJtbpCEj>`acp=VMFJ_C5C3R)(%Pg*TesHUOs4dHlbZ#A,P%2^:Q+apMmL3D7)tiVaC&1L7QQO4Ig&V[tqn3
%p&i%,YSN$alSK=TbF:_FL[qu\.sClEFLl(Obp)-f0c0+6TDD-B3Q#^ZE[(:C:pM%pFnMRn(^SN-+gDX$dp_&=iFp_CNqS1/ci8%W
%kKfd5b;0*;M09)e)qH<ohDa>rb$cN54j,@n)(3]PT8eGtdGVdh73(3L?d7(PXXU;a0fJOd0CHU&>[AVJk/aeQHDnn^*6;LeXtc*)
%6S#ORh',91Mg:ecOL:A6gce7?2`A7MYHRnOX'qiHc1X@Q:QWYdOA*a"OcT>3AU$YXQq:#tbckaa>s]2Q`Rr)I/>Yq0XutMm:OhmU
%o?A@`S+lF65)*6N1>h@pPkT9<O$3F)nX0'IcYj\Nn`A";c=im!WULM!BH3c(4Bt9BaOVE_+&5cq9j%335c:S0+-DDV%T-Be(Z1"/
%#\]Ye>gZE*O(k1HU?GV<4L7#]Vh%)_qI4.-9L7#]K#E^jCQE^\,oi&eA`7\P:_jN\XgZjUrk6k5YF/^HLp0kX&PhBr4mCk@XFV!o
%5oL0$M[0TMQYZqe,otrHMht@qnLkHj]554-oB:.DQV*Y)2s22j3'Xen\DU+JAEF[)Bs,O3;FWF[_e=;GceH!/4(G(%M)"">kZf1[
%W"ofTj.L?.$c&MU/QQ++kLLJ-`3R#.A&`X9`GO)n7DX&IA5uTk+T#2nA-s1I>VQW-*c6NmbJC*b^oT,_,U5`-!&FTp3bQ9EbZk0l
%L(ME`-3g^,P<C="!TS*_a(0YeTNcbBK5ptZJ3Q$o3f7,q[U"K^&WP`3CC7:rC_65RpNu&S_.,p?4+D!]G-Pp+__ckP;P%N?`[<2?
%);e3c.%cIjl_=9%9NCok#_,K?E7u^Nb[^!(W*Xjs_q72L'*<c5(;]g"IF^SC*sXeX#&)m6XdaPmST]l19#Q"nI.h.p)ZmnkeZ7Q%
%d3,QhmSde0H/\5@-f1R,!)WMts.ijtrU%co55BC.0pr4q;M:O9T2?*u2lLr=SHd^ZpGBs91l'`+jJne-&p$lpg=;>XMWYFpGD8iC
%IBME/mlk*KM_D^6gV7ZNmW]Td?mYnn1G>UC*=ZC2:!pN`9a-n+2h1lePcLHX!oFOA/5k*adG2+(FO!q$FnV3=&rj4_j(e\01L`SX
%UW`YE48PL<NU/?%i.bC@<OM(#1AVHn2?JLV'/]^./mULKBfgRX4IF&V%#5`)b@LEDH=N?07]A33Ol<NEQ'L:<L.<o[.%BJd2aj#[
%"onGCB4Vis]P1/I.s%cdp"QS,ELsd<,K<\tiu_R@Nuf]K8="UdH!]aECRh)I&&eXmp1q%-$X;E\9]F5OlXeH31h/$14Q!Mk4d!Ps
%N\hSR/2AfJ8[.,.LB`G3*qEK1*tQ*gPY.;0(l92,5OLmQ+5%3YHGh_9Y"hM*R`^0'I!sH<*'H_#K+rP"4eQGcS.iIu(/s?dEobT@
%,2?5^j9Tn<H[YS)GQq>%`CrEA&I3hff^%AR\H(>^dK:H'7`GXToGT"@70sIr+./'Gku.=2L[ffKT6ltY-3nf*]qoff=e.?7"b-bs
%HPs*:O9*bhJoBgW9!)1J19ooT55\R^2\fSGg<4"mpF(T&[+4\ImHi5?IbhcrOn#_?/u<SmFjl,:RX-$U4<&oVSpp)J%7:"\8A>?$
%H@9tM'qj=bo)*#nm`8I7a">\;iPR0l9Z=-5M1c'aBS13H"chXiNqs9Qi5=m3pk3/f+@/>@OSW#.A+TQ?+n[.('n6ZB`>Qjo$1X,J
%O`FYmN\PUX>S8<@NU9-*eVP%UnAofIIdc@_(u\>*U_L$5s&,>C$(%]n+=:%01$,>iUo:AfF@U]cJX?p*e+>1(5#+@0$:k2,<[BUh
%6<2O4'RH3_?OUm#8\I*Z`QZ,Bqkn9>%Ioh]L][dEhQ5oI5+?m!4,5)Y3@*)pW7n?)bY^*BD!0^*1Wea54L.P'gJdVn$3_u\#Xo#4
%l'bJp6*(TSXAt2m&0bO%]6MU-]ua6->n2uH0/ETffM$n/:<gr!)cS6TIB(fTA)oRQ:YnKkUa9C"DW'-oW3DsFc*Ss^M82j)W+t"5
%Qf0-(%?r-hN.BG9[)HJOLH5RLlT%p`.-5tKN9RH"Mj`[Uj="Q)!UV&cJ-E'jDM4EH&(78OGZXCCTP_'+2/7(5XCquB!G5J;mJ:ZY
%%LQhnX1E/dRD#4Jim_/f]$=[H?iUf"BsG%DjoUGIL=-Ui<Xf<7IP31+[H-G)@s7I+&M:>FL4irP!>^O11bu&1:)45ks$gmOVSuXu
%a![XVV@kdrhZeTD\L_iKm,;hq<au0\"A,c&nu21,s)QThe,dF<]^'/5R__W1)lKW7S"t2]';-9jq\JJa8X7SKfJ#=/ih:__S7=SK
%$-a!s#]$R$VVZ0s=''6=9!X4&VB<[r45TB]\04fJMiOH3"0_;?$1s)0]]qbm4JhK"%a/,-g*$P^Jpio-68'[Q6HeQ:p5PSY>0W^;
%G8!S(h_KrScTt%hLH/4;jsP:8)2icV!6O,]Hbe/ub+cstD**NU??ZF0G,;PAJU78'iuksc'P<cB6_aQHjElVb]9<[VRi;&B=sPo.
%i`DB4X/W(LnnLRfUK#Oo3VJNTL8tCqVKbSg>A?)VQK7J8Fea_V$7?tk?HfU**)hu-5,o!:&ZT;V'*QLsn\+u8$WdL.(a4;520T$a
%9+X8fmTO;;bHX8:<*uLa4cnbnM">TTl@tQ>D&4=$AI303Q)86k<?9p!Ig6`_J/T9JcMVAdJm_,T#SBBpX@4@,-fMt9!%!eJcDBnq
%NP=+)6<KsQ1`pD-B[NdaU-tkKfN9,+RP7tP9*D>JFonELqDGOLe:ch)0E;bg4%:Ai>qS.qM(&-F_iFM`r%^NQ$end8Mgi6G;Or\u
%&l#9m_hSq<N;3870-e[n^b)CdB<Q?EVtD:I<sB$LSI45.U[Kb38?j*77(bg1Y)u^N/PUs9Y=A:Ng9K.Y"Q:X@#Ol'l`?'1I'TQQ2
%"NJHGX5,lgBuA:sm*_pu_6\2*MV5kqNf,/n9kp@<aAoPli;R-qZ-rU/%c^lN#=e4'ZC$X2E.*%[\eZjMh9*uXb-J6':Eh]4L7KIC
%cdm^[H`6g&:rLMe%L/[tjOOC::khCPeB2)sQ-sNUboI/2l=NQK#.BQGD_.ADb_ZN3af=QV_5K>ikA^_-_BMNcXCo*fAtVXmKA;63
%90]#E?=R/<fg'I>*djU2E44mj>m.f&]iUl]ET"/rEB*f,JrV't;h8J_D$3%7RCIc'KYO>Z/DBU_@5)/,&i:*\EP>H>!HU3$*5N':
%-[7>A,R9@Q3nth)52#hX^;.Z&.me3PcmjR1=HQ,:gr5'>"sZ*s.bc>ueB%n*$3G*f:WcS$@iBOc5ksqQXR*h=eh2g:NO]6FT;>*,
%aIGT7!;$_h-J3B1"c28>*#fP#csim&?kg#]!o?@4HuK0'=XP1LphqGdQR0U89P:3q^a'U4gGJT"\,NR*>#Hq<mKG!8"LX^'B]4/j
%/VDDUN/54eDI-j=!3dU'.i(=3W1,q$<F8qBmc;"CB1A&if6BTq%9S\#H:MNcJSnM0VO_,8LdVI[Gm!XKLI]%^9/&"O.V+(b1"WdL
%S-Dt.NudCgf/[$sbT!Z8c'5!LL&)t"%EmjhNMu':]MOZ6\2,DT!?"BegdAe#"`c"[mjcnlCA`Vr'ofmlA'a-gr@fl5iA<Jp!L'd%
%0uhne#ufSsZD,?+C(:"\KXcW3(S=p:Z"_`[!>L@>AV`IjIFP$D4+Of4"ShEFo0af(D_Q;H_p4#WEAKNCVd!+deh:\,I#[;1?_Z9i
%)R9CS6ih"&"1Cn7"6'X0e>sY#VmJ>KhHT_fVQ.ETKAhN'e#=E3^fFW74h`uhc"X0!(8&g$rj3sEN`D4"hr;`8_1W((%M9%>\/]rn
%Ua:Q(g;LVkW2=YMjMN9B2`).m$rQ`GgB@m@gUH,H$(d0@[R=nNIqi[=1?6Wt$08-_Ju:I,S+GW`J*;`1%S`iQH^r"]j.&=L1:g2V
%#([]KoRarZB0uEk-&m$2;JQZ'=m?p_d7+1@1R#1Bj_,*9_WZg7[ip,5CB[`^LEo3r7@WOOBl%nm\VZKU>X;FJc>T$/kpRkHpGHug
%8<4)+&fQNjHmWQf`)!^edtcSaL10aHEB;A`M\cG2b's#3k@anA5,+o'q?!@?e`bbbo0LI4^$VVOEeip_2$uLbP4*Y^Z<VYj8.0/:
%/V;qH@1G:(&-(@#&nnANfO9iLdB^[590IT#d"KmN;$Ro:=qZ@&%<Ra+=GGXQ6ZC6MBY>uKhpPnSA3Ill!-bH4:Q(Z3FI\57dAkWt
%+9&NJ'+dT(W20Y]%(]E>\0Wd1ojcrdijI=9N4dC$Fpi5RNj/jV,Cigj"'Ih7_iWe)5juKT_fA;FiHgrmr83MU9_.tCd!%N*0="aO
%H84QIG!1qcCbY!/:mK+$Qu]PcU.lPt[<if(@.Cr%3Ar##OcC^<@3cu+(fMt6]U]>B.?pK(+)2j%<$/9j=^n8D&alf9(AEi2H%Ken
%&H]#C;_4XJisA@88mk=r0Sh6Eb:YeoXcuXr2s#Rh'9J-Q>h,Z=mk5HBRYJuLn@kV-A4SnS9Q]tP8<Oin"[fS2*?6m/RcVTR].#<S
%MIcuJ!qVU2(flsb(pd#\p]J/HWQ^J$YQtUYF@uj0V"]oKXCbB&[m(j(1VnT=`n(XXm`[WIpF1*M=W?.?4u9ou2E7`5mr4(j*p+.,
%&a,p5r,=8EUh=H#p`KcGh*bcZ$RXCr3:.#+7]j4;"d6#$<#nK[Fm1;T=jLqZ8I,6MX*r_p-dg;^6;_R!ZoiF`i1N&1>?qVb^Y'KW
%eO[e<LSt&EFVqr/)g8(.5UJb_2,'p?DlH\ZmCWcFp"6]he6>&H!]8R0+K<"2%&]^<W!DSI+\dM?"slctjm[;O>QhFRe;r)]pP2Y4
%>&AeHBOR,soW3[l-m-O;CfEi8cuGfq9rUa*&dD&JP.rlGP/j^<^"W7+S#J_X*&9M3<ob/be)>N+MYC7q/7([mBW^%:!A@JedYlG%
%keZLSb!s])a[p\=UUF=cmdtZErd!!@Vg)n)f=F'`Ni2E/C-_sJ994Zl)i$hUa$si-TS9ImSA&&(aehbpR5hUT_+bSMHOILp3-:B,
%;ZEfA@!2kA_hh?*A93XH"P\-i^"OaM3cOBN!2AL9i`PFM^eM%*2Q*Q^..uMkmkoWX5XjYb55]JCGDs;X#6D-.f[o5$]h8AjSm)60
%!XJa*8IjsU\tOf<BN9Z(%&/V`p_j'.R]&e_f15sJV*$'rG*uV6J49sIUS47!6Zms.d6hf>?^:GsAN`0U'T1@V;!kHb_0$L`We;?I
%*;BKG0$NskRrhcb5e19>H>kDh27u1H[\eo06M#L(=P0PuN-AVA[?^Y!GS.GmWF/u>WF8.FKXs!mG)T6t4<GfpXQdoV8kJa"N.1[G
%%eVm)F8H&YW+Go>fXcQp(@TSWjD_,ZA;q\>n159l2W\0$#f;d-XRo)W&6X]<"_*'U[g=c[+go\A5I8K)fN5Lhb51HGl;j4R/C[f2
%$!l69'OH,gb)0EQ7?DTI2-]^/br?5jAs)>Hcc6_(7$n1t/m0FFKd1nn/CfW:-5S?K-e/>KCbV[iG8"*u*fmV^J)80EY7lH$/q\*B
%?'Y_s$<(-:i;L;0EDbQ$BnZKQ&!kq=2>M.O^00Fp-He4F!6au?r5JF>X\+n$Ltq-^%Y3BiOGFdZ]Sk9741I'IJ#&<8-bg58Anf7+
%R"OAdFu(Scc:07[(1_R]#Q*]/.J%j"]jE`)!n+)p4KL42_+=]B5i+gQSM;HX-&BLFeA5M/KMl[rgj2MsiK)N_jm!WY2tQ\367Me-
%6(4I\-I'\bS07t+D]4niKL_]#UlZcf#s88<M`AY\#@t3og\K37Pr$<q])o^c$SB5RYD7-@<Su$;PlG2&1)_OODs2iZYldIcF1FKD
%<'QK\2QJ)gs3-glka_)%G"^\irgZ4i(kn(3)/Nq^rMHOscPOa+b^SP&?pOe9CFl9m_/nDrFeZ0VQ^KaT`epg]f)tf3iQsK=!)e'n
%WDPKo742;(ALi'<ACbI/^/`F[8Os7kle3[3M0eq@94p2i9"U+/N*O(D7u"&0(qQ"l=].AEga&86p:ZoLJnN:7WilVZLEW43T^PLr
%idCf^&^ZM$Mp/kf^g0>Z83c]saX-#A$((A'@Y]97TaKY!#U!Kg@p*3'!4,W]`EQ3WLWm[NOk3V<mk\d83NrR[[#j9<612^_]pQ@4
%<==#%Ch!K;7t!nK(Zqm;b(=LSVk3J%8<5;u?ftsH9jASplucK5+%.`^@<<i,J=s-;:tapY'EJ,e8%03JO]:#^kAKXt_BEtp<QJnc
%T+nV)Nd<2cj!h=I!\m;UaorROZsouV(J6jl[raq+G2O,d3K>/VNY^:O6>sI`8Y[cM9)6Q0^0CGU9>"_IZ%]8&51g8Wc+4497.ip(
%kq\;W:^[73+bN#G5gd?^[8KXZ=[0?s@'_6uGBuKjPplDNM->&XFc\kho8Nctr*"j[-5EjLod,`88(R-u50'BH_C5"#Ms2.kS4n`E
%s0bHkhDBgek(c?.?_;Ous5HtPD(#@.Ao#Cq[$2>t18J9N8%Z8`+j$BU"+[N9TtH,(%Q5=<Y[V?am"_8BM%bUsNhka#MRYAn&$=\C
%j;0IpW2k%+SW]T^O<a,EdZSm\h<9ih]iXpLcqmZ]l'cCnE@3I^XO@n'gJ0Lqo-)#[`qF]&;ZK;WEZ(?pAL-h#FDZ>F"1%D-#'DZj
%M4_k;7TsZ]"\)HeA_oF1'GrK^?>"`7Z,.R-9i>mM!L)2,*"&RMJVt'@bQrhH@u^$`.tEJahk@OHaG"-&07Is"&[7n;5L;O-4FJLJ
%dnhhJ3%@f'BpE%_f:G!O3jLpR\g_aMC+"S*?^+RW8Q[brK!EnnQ]g<E+nMsb`+LL@^01!@G$k26q%<bOe-8Frfj8QTSs[>.W\)]B
%$%<5JN(E%01fdFq8f1Cf-u0A^2Tt"c?-:T9+agYbU]=4Z[O5KC".u4fiDea6DBe^L;)t*uDBB+:TU^*I*4r5J.u$5="uQ2i?Z8R!
%=h&LkclA6R!l<sn:cmV/R8-'[;;(@5Un>JWU_=A[J,hr.BFlN,b^?TMqffpo@$.T'pE/f=s-`(^quP3g^T:\:$0&h\"RZ6OQ%rfZ
%WuMtR/,IaD;;*0_K0.''o[8PSnun*:!U:]"Mh!<d1#snbpbsl%9,GFJ:j)Pa"aG=^:\Tj_^>bW]GX#na6`0gr,%QZo-ufo4r;TH;
%*LI<QR1L:PQVal\fO2NaQSXaaDI,ViiRFQ]dCC8*P?\/;$Ge;$)CZRt%4DYNfKaP'l[T9QK2dh]aXie?&W)s,\dK-=&b21@=dn>k
%_5'up>`2l+cIld+5F$fbItI<M=t[1D5ss<q]1In%k#R;r-uNg!RAH"En;8c.OTKXF?p\^:%ILNmH>jK,<Y\h\V-nYSd/O][HE7@:
%WXsgD#$RC5/DMNHC(<IWA3"#3nUEu_kL]=joj%CAY377@h48*WDG2%8?n=ZZ'j)qeoLW2ONlmjt3oMBK>#Y?jZ3nYTNRRjsrMTEZ
%.3-X)\h^c1f$h/S`"9V.Yt=!:n?*WpZO+?h#?=-9P7Q!<&E3lCBKI-Um+Wd!cu'1<-u2kJ-aB3SS.MGh'O]##_B<AS[/^(98]MnO
%X]\WN[ZdQNZ,H"CgjH>oj)FjijD@Z#@4iNb"ui5OQ5!.Z"\cE#g1F\<i\cdL*>F,PK+YD[[GW"Xer1q_S1S4Yl:h\AS-iY0'_Ee>
%*WoLiYU<O:L+K&8D]&SgNd)V/Na"J>+bd2H(aoZ$)JQFKGD"%nMP,J%RrfC?V")E\dERT-6#&"pfuE;'%ja+<iCe&r68;rC);p!g
%%@A;9i=+cIU8+H>jb[qqiU`]IM!tG@$[2SUDs$S,5Bq>r8.`Kc`gZ:^nU(=',X5,RTEo688>WgL$etFf'hu"pEsRRr:.gW!@aVM(
%M#^90;7M_H6/b+%Mn^@L>,"*f8"%9RMqQ__Sk._Pi=7">7K5L\;(YUHeCg^g(:8GraJ8uQC.Y(QJti#k@HShbj=hL$5)k((g'>Me
%%/M)fdp?rd]W%'$q8Nli(j14W74u3a`RuID:R]!a,tY(t(8k97H/Tglk">ClEX>ban'e)A"ZRWV&pj&e_.lJb.=NShcr?n*o=^Fc
%r2#FK3j`(r"AL&U7NXRI"CY&m,W]U(5l)dhO!hc`1s6\PGrI*#gbQVT`U??qZ/'YZD8H4;Ri2mnVtGJRkXS^)1j'd1djC=B$N?F`
%@7Z+(?#L!^o1%SG?d.XsA-P=47O<RZi7"cYJSu_*K6@D`KkT=XA1m'uab!Q+7RkW-[;*s?5oNO.`V$^U1et]4-n3!f6!*$_4WARm
%!0l8<h^H4%-d*cb)X6;H7\ZM(VjfD@N1Cqp6&8ic%q%U69-`]cj0^3,GdQRU!A6F\n<+*I+2+J>kCq)"P*,$/,3:jY\7iWU6e:QI
%qPAZ%+-uagEQ[Xj0^gIJSbhV?"D^'njZ\*8'j`J[?<`3!"9HS]6]\r$2QGQ(`Hb[<D#iPJ,+m[]+gD2Y$uo*OY@fntT3=PVOS0j>
%>aMggbiR0PE"^iEDW);lW#T7!W^@Pq7\[5D6B7Q#?KU8AC9?^RaSV#(#25[\j["R"A>f2;9$gS2:+66pN+?E(?l<!jNEm=jmsJ1q
%1dkt>5HG>R+RCW+?U.lF#2mDMdk;J'"fR"&j>O-?VMP:6Jf@1t^4tg"(l]M_4V3MY0XFpHTH#SW/e.ST)umLdf<_3Go`Hl[=tZ=Y
%L6A5N5Y0Xr$2aHKWBWq3pn&<GIefesr*9FH-XD$*c5sfeduhn'2,GAQ:aWG8h.\F@o27J<n2p;Hs4BTEbmGoS;WoVClWDEY0]^4r
%2bq<]APe1TO4@o"1P8L],ea!5Rg49^Ji,;qldnR,,pan$'h6h0SD*tY*r(G)l(8A1;,4-HTtWtX/@i;/0Bnd3Q6f[(B8MC8J?hL1
%,$>3u5")h1@/c(r?<coIZr">A1Y,Bti!dJ1(A<r:60M!l]&c7ArWjJ/Eo-u2;tt.9gSY>#YkWOKZ6ePJq6em@LSD'k"&bDJY<^]]
%!F(mRgi-[Q.aT)CDbZO4'$Hea_:c%j&[8&H$m\!AD_Nhrk+Y^e\\fiAj^4'3!`!$IF?KW^>clU;bkCI/'("q`SHl'O"$ZKGnJb&N
%jq/W@-q>fq\Y+FVrO<u:)::"SB^+L$"7t(FH_$o^4(b8bk,`0T3%2q**r6WLjHpf1X?SjQB(uB0b.S`HB9^S5I:7g7ak[!uUg<O0
%["Jgt@RBI[X@)<FUcF)SXRBBLe\B?jJ^\.pGjug$&3s[RgHhQamCk`?@$?mNNAihKc@)aY=2Z@3i&7$UUr\`nP:d-Sll$:.%MQq_
%+]^d*Mm\DmO/_Q\-Hbs>qtBcAF['M5**eW_U)<c$35d`dVj2+_bpa\J9H5"jIJqWe[7KKG,C3NoHn``IYl.!4B/Xt_\Bb:"#P7kt
%Y@;$'EY1pNjWb;V#1@)e"S\K59?'--+2o<&(P.D^OTp];*!&cH+G&_KT1iTQns-.>a]9um5WOW&aj:joT$Y.NDUuo6F[fpLLMn&3
%aXjM?H60QY*4^3LQ:*o!"XP"7lV8mQfO8HL_'U1NDEQb]k)U35jj["1_'@mX9IO=aA19;>PMJP7$H-[W-qZ@c5B:k_^]`8nBl4DG
%ANImdo&3jaO'FLJHU]r.ZfbnJ8PEA`okrN)=%#6,&fg%e$3524E5V9"/Js;pI!DKT*DI/$%T[BpO<,H\"LA/B&7i`([GQ$5Q#=1O
%fg^k/-b[c=T#c+d4JQmG[j*_K=gkI:]gI)dre844fDoI5Zr2e94;m-k\+GML#;?GR9rH>_,@#*A_%P3^JBE`@#+-Zei_[W4UsMHX
%\"k`>eUnn\@/&H>LZUgg7cAV<5.m>:oM(qm['PN"KGg-78^1!8oPar;^;_%S<OY_0\.%d[7>>\/X,cl^Rh+hi]GdSQC\PP4l9Fpf
%^P6G%n:c@=qB&8(>MdF2_+@CDZfuP'8FG0oB)]3BrNdjX_SR9op'OemcLHGa/$9(6c`C0n?r7-G%K0PCH4Kn9^OGoIOJY(V%8qs&
%G2k?5F8YD<m>;bKeE>8!J%?O"-5u=6IZf_sVM<jSP?a\`gi@Xr?[m=>(m;>;'ZI(f6,ddR,/+?t'=7X.RaIuqNDUk(=gdF,(oEGh
%r;Mm.H;PFCl/pRUqY9J5X,Z#c$h^A)s6k/Mcg'*X3`T!P9^D#WK$NM;Sr^,!II7!PW%knj5&Y00nC(i3cXVJ#)^$.b2uJ,unW/(3
%?[mQbP1E96q6ti;[]E<[]C1A;mMfLB^?2f8!o6,U"'BI%E=F#YS7%js,t'e.NrStS+$j*mrf'uXR=0>1d%TILMe\d:)/lmrn7o2@
%Y2\Fc3H=[cHW3W&P+RNg!P^Gp\q&rIY6G]S(D[%[$?F`?hJT1'c3iqQXn-6K*IjHAQTXkJs5)<`H62s$S_q>(Bj$##s!3EX=N.pk
%hWiK&H@!eQ_M4s))AY^<^Yca'Ye0f2<2$+CE;BBV-%j_6?TnPOD<.M,Hnlu)iD=su^hAsl5Q.r/Wh[QeIfq<DLi!(eZIJ+0ID0'>
%s3OBa$YocTI9^Y'<kVQ021Nd?5-=C1q7?$W`6=]4:.jd*TWS@Q'%tVLRNVcelr`B$1(jKt]Xi(%rqcTN!(T^V01aP;\O]<Xlp&n7
%,sr8t_7*H^<J5qiIeH_4janB[4Al-k[K_cmnHFICEk")@-5_9_Ph2Nr7qi<XdTPPmIaSQVQ<1hem/abjDG2(sVm5\lp_h@l.<t]I
%.%?A>pqCt0pB&+%EgThdl$\l*jo4^m097SkfU4NkTHZ\_pALM9#hG=QOR,Yiq-&S9i!k)6Br`3)^8utP)Y'0/J^P]LV13nrA*cAX
%I)#=QJ`Zi&qV;/_:,BURcm*]RBcQIhVSo_lJi$(ETmXZ?9-N@]l^_LY`LifReF6E^VD$ES%:iMhT1Hf4ZRtjj@9--=+GQ"[e/n^D
%JJrhmMp<;r:_AoL391A*i\23sKr/?t"c9HL2:E0t-H(@:_*\:@6HHK23uM[&'RD8Ko/uaF$9l@@7R068oHs[4?utsgF25o+IsaKC
%EiJb]+4=sA\K^d[UFBc!Ys(krq<cr73itsdfO)>nS*J&nrd0oP3uq,S(8a'Oi2;je9RQ?cT0SH#,)!_FXK\Ihr+=pdGQE<akP(I"
%rA.c)"o(>4H\d/*6hJ6P#0O*O+[Ecu4NMo\hbhG+`qj*\asq'IH7D/pATe8$@>5;9*?aGH>1Ta%GB3pQQN_%PbPYD!^3H.pC7qLP
%;SKfc.C+igMT$L;+lj2rrJ]VtI)%Yi9Rjt5M8\]PkH%V[>BOEIc$fOU[9+B=n;8)Z<10oRJlC$R?;if-rl7bH'VHp8\ME,Tn`'j%
%):40.a,6d/8/.2*O-mMFHi'c\8aI!n(FfkTL2(CS.YQmo,Ng^YgYr`2n&o4Y9Ij]@S)jfSRD@$^:5^m"f:C]b`]MRu^UsC'"Vg[>
%VZQBQ00_9_4Tr:TQ6.#QgDA=<1'd;+2U=E)(6ZLV6$psrN>)4i#N3SL-^XL?,4Lr']#JD1P1b1LB&boQB)kXlfDuBb:IV<JZbhO1
%G6#I,;EcP2F@pLM6oJ"sq[U<0OjC_Q"FNX^*)GFCIh+l#,]FWc;Fg#5b*RF@DL=)[r1QE0;3c4$4DG>"!B+Dl_HJ+52\F1>XXqs1
%)3EGa-1&3#LdhbMd62<Nd43B,*STVRE\`_$(2s&\<DH$.da)-X/$Baa->j3uj5lQu]>eujJ#&0Z9D_C`&uh9IQ)U0-C-RA8ok=X-
%OV0066LgQhs0)4Q]Q@I\hHAq>BXr3^\MT-1Nrp`*UHsQuDZM5)APn*dD]]*>1F@596XR-;'qt_W6^'Y$>D7mN-&7I-D*,ahB145C
%5OT)I\1d(VnE?D`[R1bBPTm\>B<oYh-7_XN4-65]IEtGj@V@0RMDKie;tqZiA(jG4Lk!iFM.";+g(u!lVVl!Z*7:6/l'((KUON+7
%D,aILEZ!lRf?T-s*-=TS/LZX[[LOLu*l`njrona'35,T#`9;CrVgPY^GSr;We<aC'B[itZcOoaS3$[b[4'P24X]>8//`-MP;'O9r
%&%9l(+d5dI"Z_;pM/Zp[reZdq_qRO\9M@gpOPl<0N<qL<1<;7PjM]=X\WsbF.l?tEB0RNg/H1*bGcpAFP+`Jf5PFZ`B5uX2pl1Bh
%*K.7\nH,f0;C"<tAoA!J"q<59N8ZSeqf.cci*0.dLR7]V=Ih>!c!?$s,=mK?5kL40\S*+paWf"nK.i9*mfGG-n]$qdObcZ%C?S2<
%H%+ZSP'A%iNNUO`]k2mU<TdPp:rPOM_nKU0j]4E0ESico\K,KOp&<0Gfh2a1;0*0!br<rg0/L`_q^K!4d29\X:V&*R+!:\;0lqlA
%8.<Q1P>3=4d*<#Y;aj0,MBWmI=>5<HJlg[lh;c$g#pE^ZfRV<q)VnrLN7=XtK[4A_[UN8=Sb:H2HhUbW4\SZPC:f]Wif/U^+:FnB
%ieVCRQ1/8-ob@b7ULJmL%>S%d-@5:IB,?4HJ4NB2]aYr[JbtWo/$RdE,T1nq(pcCZonK&]As^Sa)<]Ff-kV)=)e4R#MNRRZ/$QUQ
%F"bJOE9RdS4t./YH1o:nTM.b/?q,]/KSen+#k\bM's8Ljb,O?/h3a6Zoimi?X&`asUgDMBW!<[>X\8j&dEHn_hpOoF!@8>t#[PPX
%3(eYr3LQPCbqot(DE6E=9[AF$iKTK1a5TCCe;8D_MXqo8)jVk_7[MhPaB),b,2?Dn[HRK1ndLi@.'.ggM-tHPJ]("mVC>/;Hai="
%f?j5J!-h?H'QK@FDXq8tX:%H]N$0t)&*iX$'6s_<Ga_1icg5o.:iV^dr?`jHCB0[:HP$<J\57`)W)KWTK-@Wr0R^["aXi3Q45UB6
%E**h:D"G(*gfMdB)\$it/N4A@)Tdqh4?4`OQ4Uj*P9aFoAVhUJW[8k+OXM,]?Z#Y='T.-gnH5OZs7dAlRGYJtpgqqf7GO(8B2L/i
%M'?iZ<4h&,&k+e;8h:o2'Oc[mhLN<r@u#,!V`DE@&1GCMBMHVrgSbl',^3gh=k?oQ`XdWpgX]9_MS<S=7TH]2JWnlakQ-G#&1E-5
%<;-R[dCXk>eAD?31=PduScPBWThg?bVH$RmFaE\1Y0aHm/1jsRi5cR?<.6('$n+o)#H!p*ED,Z+iomIcq,&NVB2iD*MWp>`(hnug
%AgHipm_aYFo;E<W5d3diP!%.RQrpm#cUWC-%N4,/O$409N?I%0(.mcSP*J@2[mC\8ZU#-BZU,7p4SdJ]bV?HRF6ph;[@KO-cEe9p
%?#,`S6MM;>ZeZ6_Ygn((EVY_F)AFegiLa%'9+WF9`HW*1=Sg(%64p<2H?(E`'Ie9/EkMUcI>ODh+dYjM!]%k6'0-[>#33Z`&so?+
%BNia6:fd1B0Ns>7_=?Ck%LS1>7Z5i^fqJm`:anaoMS"GE'_Fg`\n-b,QP@D)9q=%.YUsm8^`G>M5k%M,.NY!%lp1[C-mQY)#]u[!
%-tg5$H5:UYA*&J>&a+lR+1RB1;hRA*hGnG=l4d[eX6112T[5->acJbAaub9bEf\SB^oUD2BTTmW#KkFCigWW"Ce1I[G)dR\5g!!&
%#d/gP1=uW4_]Uj'DCLK:6mKqA,4F*kKE1DD-'S2-;ag(FQG$M#Lg^@3@KA2m9*O\^OJVE>;hSFnFeiH:,+KW(^LB`<&.X:a$@CVr
%71>BlmN>?r+9D(M#":=a!3Qr$5"#C+:_?/Co7X+#EO>!&7(>RX"8k0FFqL)]XWi^-8>j$*#Z!dpT\nC2<W*\j@%q)q]Im+qL8aB6
%A9MaWM3_)\MC_fb;(KN-X0$M*B.lc?*Y.grW)e"%R^:da7D+`RK$gQ].6C*_Mrfg-lNpb@43[<73Y?!hQ8k0EH:<1#`e%V&?L5`J
%EW.45A"!Ko4P.@u->l?+3X?'\^MJEFiSoZ[$+X3]'b(d_X_%/YNt<e%1X'NPG`>nIgh>L7E6.5q;9q9nLedDsS7jJ_Gd@EXQ=s]d
%9BVb'71&6eD"u@,_Phcpf<eT++Ji.?6nE.2L4g"))fUTJ+cE,p4ik5DfhqAH0ZUS\[2rl*jsQ\.=qPd-U?eG\D\rO6_id3(RV;sr
%^X\4+WbmVZ]moS_SR^u@dLW3jKlgN)(3,SanT<lb,E+p&/iRi]3Mb?27h3WbO&i@hbu>0KUo4ZV,@2\`L_au0NO[11_L,a6&Zg*b
%f-jWCGA)F_59?A/2t\['`hO8D(8dDVJaTbs;(c=^Y'0^`9kd-'fRp61V*qR:"1%6VZ(UN'<a-JH84HeJ+[kmZ4Pn:TaEuW2^PGGe
%HV[:)jYbP8mNGHEmX`3aN(^/m%3pl_<ruhA'U#[ES-<4sk2;%P8QRo57b;<3+2K]].YjJ<\7Ab[%&nL_KkP6>EE)GaASt-NWH!+W
%mrHKI;roGEO9F7VcIgYXS5c"m&bCT3:,\df4X7\B:ZX#s,>OJRU?JZ/QAYZ_HI!tW9Mp;WJO)-sINP,S?@2U+meQ(UoYrkhB68`A
%D1Wsp=,'q]S4jI^0TWp[0>+"9<&eoUBfOaW&VX_(NF?43N?d:`nhX5o@EpU*-g`+T=8=?C['bV1&aSX]\VYbn-,N'[!)/`>:<]H&
%@2/8aFMt?om;DMK9%j:+[\GO9O%-<5*5$R8Np+'nMbe>`?"5*-+Hi]CY-B=n!HmffBCt"@iZH(nd2+q17MIuE]q]"Lhq[jV.P]\F
%l)@7pb;B+?4:h8A7G`;b8+VNm'HIKOfF#p"gu?[-j][f@K"i/&8,PIbXoY&&ERmB^R!kf1?EdV7"MKi`OUR>YE?NV0]"pnESYV$l
%FBs<0.cFM+Lr4:)`&r8E@/LG]5^!e"7nSF_=C=5:MS"qr?-OPP2iaK7e;e45n3gEM5Pq,Iog[WO"[7=?WTm`$cq7*=dSV9[B<eT&
%R4QbOJhKu$Z6A_-I`5.gU^3$(OD#S<e,oZ5*50j_E_!4*&^&cH]7$iTmH:#Cho14O\Kd>qnKG"95rJ1rJ@^r>br1oMZ0>.7)pU:T
%/(C2;GQiW8eB!J,/W`=-O3.qoq:q7)_(QB@Xn3aWVF_&Q<pSR,"*]GF9?']k\4%'Q-mEY5;WE"D.O+-*DI"#L,,mKg=[.d7N6A%L
%<`Z:rC7;AuQGS[cU0&TLCjr\`#+[H!mqT*O'#qlV$_@ZA'e$dE:KjBm11"H^#%^sLM*>,Qockn0NG&p(qrf14!jMINF\<7%2c_kY
%Q.D\d7%%*V=[EW*0<M+$4HI(!=><c.?*+l1)ALrg=/b3r7"X0.JIhOn'L]g*[FF1!<b38K2+97]7hLSaY?I&jV,[,#g4e\G@@rU`
%PK80a'p7F,]5*6Wn(\TgKlTlYX(/#B,b9uA&r)*Fi+d8;YIfogMneB[*2Lj.DFl+N$C.tO-IH8S+_^qhO!KiAAko1CUKokGUC6G'
%3lI_)[B(tqeZj7]MUF)5KOO2o+BkHa&n<\[<cMg_f>6P(@0mrG,Se41=tp9K\Jc/<f(u=B/d:F-Wq\I-P"6S\Z>RjK8BQ^B9TgZ`
%E;+UrED%KafOnQrc76l1\B6I->X.jJL>:44K6Ds:'W@a*$R1&gJC&gmb*5fgW9lZt\pU:D(RHT5al=1Q,%3#jk3B(*KTq5`h'I^(
%S-i5Y1.Pf7fas"d@dJmp&YWm3\S4ndN*/]V=NXpG70t8G-K^+.0c?b?(Y4?S3S?)ER5,;@o)p!T7$2^9)sh<:,`K,hD-EJ^C/-?O
%.-^NhD%$<^@>>M@bH/1s;,_0jNnok9;'\8gWu?eB[dm<R\1/'Pkh1=4:;F%EU.@hs\lUnQ3"PmGJj7/Y85.j*AHAPNMhKT`AYR7^
%c1QtV#t"u"3'hsREPt?.O@<X$fang`!]Xdm1q_.6&T<H[d(X(R0P]E<*,_!0_H9bA:H14pHli_qR?%cop3MW'EHLI=OAq?E<>BF6
%l;R(\"*`rGT%<5DUgh_^36LGHpAQpmH_11<O$$mP!KWe/4YVX\kgIiUoNN#ddrtV,'Lfmk':/hjOZ8Y9m"ci/G8n57#PU;p1fU4\
%M_2D/rC0<V]L@r:]\Ljp/W,4m@'\6uAi5To\$3&K"Xp??j#=Icin)X2K\Ne'Dt;27^FP670@Q80I%WjpDipK(Zn"EIjs('p7&6u"
%L?7"=R0EW#X1cQA6,k9cd:U7j@"j18p'M@he%+\n)'EZZU<&-Ko\[l0KA='4O8-9lIV[PYB5WGL?tiZ8_]-^"#p]a/+tu:6fJM6U
%&;,KH[m@!NSf!!Ym.KM3<`RX:d0TBq&@3nd.FQDEC>TU\9#VF"Z^I^uF2\Fhgc(g]^u-78#Qe&?:@Q<moN#9sGF`r-!8C*F2)7aQ
%VcDnek5Ke8-GKHQXpH$0mU;s5)JUNASHMUtr)hS'nEpJ>Re_7.HpkaNr_I^7oB34fn]Xb9\ph$[s%U\rf4`gL/;kI!iPk>Jj"NNj
%-+]@?GV"?NZ#W>KJ9Qsg0d^EX(upu7i)l.I6F)=ZZS"8\^Eee+?!EYU@!Yf/$tE%=T`1K.1W&*'=(L'&j-ZZ%;?$jQ!70N_^S."s
%^];U_ch/!31LNfLoH.*+M[bG$@IE)0@lVMJO+X%h+@C<T2$`iIZ2Du]EfX$q8Wi/I@ckR#B;L,o/;53%jlUQ_FsMW<*(;I-FEfWe
%c9%^H-Q$T%iBf0gqd!\fSCP"W746?YJ^+g4LEZc>Rf4ST"23FD3rcLS(bt#L;0!*phLqV0-Xf4MeMSWD`A)?>U:kE#>j=*1k&D*C
%.%JOO-0R1\AHI;gD$"-'A>L9k1Lg,qFe0(ZpZgiO?"Tou3.+tR(^lL;>[tT%$2Oh&3uWWB3El#T^d&f3RHt0SYQbOW,r:H>Z^'um
%J.OI@%YL.DTSMJQT&F:`q+hOeb@-cS%N:'_$CeJmqkc$ae=>h*OWWCYg,f%HG^r.)`u1\^cUL;Laa6&_`/"E%G3CWP;'Gq<qu"C:
%#of5d4RGt5`O+]FCPS>jEJYq(@1sdpPoXL^%dl%pJ\d;f2PBA=P'_PS+gmm!a/.5,`m4l^Pj6.@7HHRi3%pT]nOj>!!!bIo8G#AP
%;2.G#pI<MB@@/&QT,q#K+2^L$T4.E4+;o]O(r*?QP0e]K8(#F-=qYq81<[r2fqpS$r2U+e0Jmnj;P-!i0qT,BGo[i*XF'&eiUs#]
%pL3)?grZ(7lA@nE*MoO?HR08eMIA69@`qN/bs;/Y4KJ+m'Lbsba_<dQ*",:*XB%EC3?bmaF[fkPq/;Y>]YZ@>,EKW0>Sr(bS>'^9
%[<uioR*RNS(1gi/ie84L-8nKE42=sc8lS6Z>Ip>S7R]Q:qK`W+*g4g4Sup$aLq?bJDfR6Pkl`?H\G<GK(g&AZ4`uqt,:1)&#Ar*i
%c%tX?]?HSd;kG9)o7r">gg\'/8$=??@]..+TJKlbNS@il[bNQ)@4*?ah^n2&lg4OXd1I!W<K,TZK-BFPc&!*d5Cm[arfi"_kDXR_
%"m\AnFs`WQA3+,[3TPH0n7*BG=hfd)-NlZ)OJM,o";--C;NIKe[$sH7K+B+"YD4eAr'5=Y9JkjZJrd^8;aB@KTYo(jmXYPS<QB*p
%GUjT;bgq0$[E.L3-D8F;2M<eq?SQU3;;BVNiC9k'a\m4-o6CV5GW3TkGB'j.H.P8ID4pnI3Ku``55M`A8/rIF_H\N>2cZAnr3Zo(
%Z1mMQg`=qlHB\1KP%5-!qfMg=kQ%X$DEUlr@=f[(ba86a(<WhCV>+W/Tl3-f%p-a9/H/]b:;1Pg2uE=S>J2]^(9m`PGU<J._!Bo@
%1jQH*'BmWNQ#u"=B>L/^O;Ecj\hHr#;Ga^D54`,66okVZ?3n@P_.R?P"/lt,5a*pFMGk+?L0D2F3YJB'<X`5426W+t/UN]Rr^:#<
%"/b:<S[95#,gJcs^6L.-jRa->5/NKFI&aS*;AI="]<CquYOjFiKksVTqNoY2e;IleB^T$7D2sep"q&HRkAX(1'5jNnnpk6cpNIsi
%^Ln;E?,L#R*,lpH9M4*85mlLQhfVDD,K(GOjM3Kn!Fa292Qpm7@Qic1?^kcNW>7*NHY'tqQ:t-H@3;"6:7^g$'J$%*+^XGg:%TnI
%NJTBRk(6NE3)[ce'WF%THQ&X]*.>cG@dP]?NA4K^L_EC3T<?Qc\V__l/%TbV!I;&>HWWc\#`#CQ!]Y@/4sK%mH]\QDlI1QQ$)tq<
%?$)/qJ.r/(Sb^1In2RfnI5>pE"U`-%E5p4>(S+tlH8E%0Bppj36[+]oag%hF2o)oI`<Zr4Va(DO^lYk:=@oTXED5"1k!aKP?]Vu;
%O>E89"2$DK50"urGc8sH3Ccb^L_OGWd3t+@7=IpqP9b(6FMjH#A(Fq#:TkD6;0>O6,cTlop!?c,Y9up?n2t99C+AOFn`W&P?;gA/
%\P*HTO\PT]es)V`pLJc)!'E'YnpuBI$34r]3=J_jgbYDSFc)o#lop%l,T]dqLGp"9)2)=;\BjF!Rh\6J58#k<8GUZ(NS$6p,Dt@l
%S1GAgHpVsK%7iprUF'/D;iHU$FqK+"hK`XINs&CcW^>u3g.9k6^J<Z`nj``h@H-HSF8#D[:OD."OdM7h#Vn1nqqrabG2%FR_Mscc
%l=S"tTWSb#dcse%E^.5)Pn$5X$O;*VUVIkW#)l8FUKOS[f`!LD,KnZ*6,Bc%YfRVNP@d-8!46l:[g?l.b?)I[.NQ#/2_6OtfBLNW
%#d"6#0AX9Dgk80P'BPdQ3EZhZ;J9@D,C*%R7i%l\&!GV8h'Q>X/9D?RrdqBeerbgl!Ug@al7eZC)d/jJ,chGNWZ@dn[kgLCRLh1\
%jMn*QNA=ou;SRumR)Q;AO1GLTWnMDprH6X1=i9j$BEaPse[6ip:=NiC.V1Dh1jrY5^XQP;'D"O)VdJbP!=%K1W4lQ'XYA,39EmLQ
%Ui\nEoN^l2Mb>^*&rH#^HWo\mLJ)i^,WDdV+\<C'aYeubkP@D?1*"])3/gmUdu0T)="JQmWV25GXqJQA0cI#HQq!-?9M7Oi@?pL*
%#H(*b&Cu2_%T_`dI'tk^VT^Do9G.M\0(hF8OL=k)X:Ush^u&PEo%$VQ<qX+OJ+-5P\'lm:^cs9_%a@TJkqsd)P!E\k;PFSio#70h
%TQ[Ue!$)>#f@0,1nNA\S9DYPb=Z:?`U'-PF*<'%L/=G<Xap=]p<#[dnL]W'Y9kiFu(3T&7ci&3Ic0LR#oCJ"qcsJ"%$D($g.oupR
%:Kj#XIE_njZ/pfm26"9(H.)JJjh.@>>+,r`#4Lg7['_],nTF7+L,ci[/\XW##hV+cXu+Ge>4H%3<qp*_U":2Z)r+Qu>Uqr:m^9oC
%,mMc[A]5COGHATs'o8./GHB<"@o7<&EGXEg>'[VO'gce-oYL60MCe<enVPJg#GS82>^O@^CJTIe6d/9Ogr_._B]O8QF:n.5m>_BI
%`c.\s27/`B@oe$14X\;j1=jHe2"R*Q\i(<;?'.fr[Llf/\HPQ)6R.Wl=j;Y'fca1@A4%@b4gm7Me@Eq/`B<IUp%EaCb+IE(5Ef^S
%21dd%P!o#'Q2gPr[IVRK]EimujI>.E+fO)Cg\Am)rrB;m32ZrI,a>l4#pR8h0#j0UHPH4GZBQV706b6BRD/tdENWqr@ZKR#_[!oq
%[^-p'9]daKN$Tj7B2Luem[D*7ePKr%@gd:nV]gNT/nMqR=g8#;_5su:MDCNAa=qfia!s5B<aO?_DioK]#9'Mp<a'qm*S,%^G^i3\
%M_;iLh+QX^If<<\"=@<NNm%)p`$MA(_1SK:[oOGm-Sb[1,P[03=M[Q@r&cQgmTJn>\PZ4iN-CXX3ljDhN3nB'=WIk^e"W=U_priR
%mY60a,Trg*]?L-#]!l[YiZI!h2f*Ys6W)NClk&`-Yj\%?Q>sDo8mlinQP@6]<P@%@Lo1^k_]+-<h*qV.O.%mSH<GN7a7=aH"$"9+
%AI'enc/be)fFR0\^sH8,-h6@7a#*MJbk8h$l/?\8TURnd[^NHJ^"Le"X?2P13g7r/NpMn*XfC39h'O[do;i:N#Q1:W,(<bL>#s#f
%M@Z[%>"[T&DcgVD!fG;O<K#lB04R^f%f7su,V3$?G`3$#8u2S+c98HZ&X[rnfSDN/Kq'ErBjknLM^*mOB4<ng3`T-_3YUII'T5*?
%`A`R8W5TRAR%S_J.V"",A777;J:6<i=r9"YWrE[.5o'17mR8%.i%*@a/!@fo?Q1T'/)WJG($8e3J8rt^IGLg9p-d3+^k5EK/+D7A
%".Hs(^h7AdGQV)i#>U-p.CfUt:]U6%a=d9o[bZE+?d^.&jc3hTa!DQO:`e1kWW<OJ$5.Fi5AG;O3g/2Zi]mW'_Zro`J'^IXf'&%b
%*F&$3@ZoQ\7>Wp9?HZ]MhZUCEe8o$td#K9YeT;=ZmG7t-?SbX9Nm8$6-#[2bQm0)$o.5Q`O=laCA^E3Qef6&09\)WNB-6Jj>HnJ?
%NNO*+i:bZ<4SqCS^hf)$)Ooo/c_`/,=J*t^_UC-_@N3GS/6K\:XM\$H')T&Nid;$'JVZ%.ctN8*@^`&F-q\Pk)s2q3i2hSfqP=T)
%ElD?dElUO-TSe*.g`U9t:ER:'*S@`Almii%Q7,VrJN<f+?6V?s3)G4[NkJPsSeDJ@+`]tI+irD-]'jeE7(W:5[Oco_olU,EUe`No
%ln+='LO"b$;V?&/0Ro+V9T!)F01>(iHl=t]"!<!V0Gu3B_ssPJ+H5i`UArPil/A,$*=4W.0j:XGUP3-6ZY5-0/,Cqt@'C2sGpa_/
%&=Zcn-^%;FJT7l;s-gr5^Q-a)L8Q7?GK+'-At-1]p?'tq2(+4:HiHm?b^UdI"@PqRg.RmHKP@:qFVZa'$I7*&;ot%MNK%VJX$u![
%][HtU7$eJ.d4d6Q3U&?.D4@`(B,!QPo>m)b4/)SLYqaSNF522?,8eX1mn;8Xpi.>r78s6!T8L]fdJP6Ui#G4o0bHd*l`kiPH\oTa
%Np60,'n*DZfFR7'!L'ZJ'm.K95!#Z;6V%"N]UuW:_X.*iN_cEC6(LS&\6d@@Tq;#.obrddV4'?(V#+2AWU]E7)K4g%pYG^pBo,L'
%rC#?1d2<bakN/:\B"@SUB^4k\d#NB89"`M75A+?uNjefrUbC4q?#CAdOnof&BY`!#=gq574*3KA:FOLN1qBJC;>&npU$jk"_Sprt
%UO(C@8+:tPQr3P6+e'NgIQu*T3pXDZVl>SkFCotA5IitkHQW".CYXbY9L$jPptjS9?@Dh@/JbJPjEPC`B.Tu+46e#f2=:Bg3Bo/G
%I\+kD.clW&Qj]=p?]urBXfVTSBQ"'CQ,X(M/0oY[K[]Z1K7^&mOJOn`68mhr5=sj`>liK7QYQB:66Wd5CMJ/e"b;K2:JFejI:@WD
%.MZbW#8=0So^mGnn>l#E^9.n0$#^DBY\3kPS*BkIbJ*#%4e@H+;h'p6fmiM*GIt$ehHq.UeSQ9gAs`eIaGsUDj^2S<"Fg:*0^6Wb
%@FHPSDCoYe5KVOQC)$JRg!=C(H%&F[b@f&]os@.o4Y1VZ@D)PImU(H^k#^K7r=)gkIkc9Ni8D+p*T)TaN.67V5eiq(H`c5Ug(==W
%g,!"PV&e]YG01^dYR%gtb(JmY%j!stKD7sq>;:5lLOfJq?C@m;DV^QGMVl#7L,:j"[;cC4@[r4X)N5ub=[5IbpfDmJAle"Rc^-fL
%U&#]@<dG;l/(B90<HZ,tR*QYna4R!rbGUqd"p?S*()i&mnuG#,:Blmjnuq\EA\<b@TK*c9(]<23e7P0+[A3P*XS^,!gDrAaqfph%
%Lm%qdiD-QkcTTTY"*)2O;/`32P9d@IPb,g3SuOG[4b2kURBq<jqpic9r\R(9Y7\JI^@M'jR'kOUptPfg_uIG\pttJH:WJbJ2nNsK
%&GX=T/r'BcbDWJBlZP$K8!Xp9.&O6Lof)>7N?2%ck`n7ql7qQ7!4N3pb%>`(Al*UVM(`G%4;1P-!S:_%Js6Hda=>B3Bb9ohHGR`F
%@YoU?C/j8_hFf1DqK9=)"=eu``hC1MK*j?2%tm=kH,_#B6=lV]R2rf!g<J?U!ph)Y79CAc5\3QN`6C\K8Z4g4K*:C)AtRGh:'t,B
%psI##n_sGI`]4Hs@i"_U[d"E^7r?uSme6\[(R+Ta</\XkakUc<7`(S8fGN_lTpLGYZ\?$/2cGbNA>rcu#0RJ^'Nbui*am/)[mQL=
%`.VeE$:h&M*TCnHbA*Y0QQfAP<'gU9^%<jA(Su:O&G!5Uo;Mfr`$fHX@E0=\4<.iX[f^^"pX@L,5*O%mmON9.l_DA2\jC_=><r0i
%obZ'd=2\,QlA(0LjVYg_X!V^ph`)Jj1R]j6Iehr+]IHF)M%L>Pd]2$teOHUE*Z]IHD/dYr"]1R1@H=3#)"C%K*+8+K-Q?PS&FXE9
%GZ^gU6<B-R@;NArQ]Ob=eShLpr`YBFHe#>UDa7^QgDiM4SVa1H/i6cT$JnEZdHt_?9!*:alJ7(a-]lubVd<^UYRaAUSm6\CPU,$V
%eE=&)J]FNs1h02!G;A;!ZY;4S.Lq0.OJn3Q:)7>t1mB3^+X:GAhd,/j5H\hVHDZE7ZLp*APD?MO%XdQUYQ[]56cr%'ZR*t52>T?2
%75YpEc=\gSNX3^h)r_Lj0k283au=Fo/9ZhmPC#gr=b%=r=BJ6@cAc;`jV[#)L"0(qq<?<mqiO6pPO03@Ut&2Z__.;emr9kS(Dg-&
%/ZaR*$mjnM6cqDR&+SdA6d6^#?TE`<!]1pB@Mp@gVGptZFO[,MLr8X,.ltln\OYa:YZ;5Ggm]CD@h5&&T*"b`n2:Gi.qX(#F->oG
%+:T<lF7!SmWRBt?NisF0)"R9/hW[l*nXoFjmg`BY)DgPL7g.7^X9]V1X/RBX[TX2ad+s(D;ha\`"&F^<bd;g%q[/F7`cuPKRd9h<
%;NO+V3oD0C3sWPh5:"u8A)a3IWdHS!<`n>@lm&?%E'!Zl\?8!eLa_,,j]jbhEEp1;)%mcBdumJsa8[Ni^7`P":5"hsP%n)YUYSP(
%Wj!s(o+2nC1O9m):KE*>f!lG',9s0LSc6$^*l\je$4S+)c9bKp`->@8`rsu+OMZ]k]^98j"LQZ!:e/?5Kkkkt5Z[%detUe3[jup3
%rWJ0Br8a(X@S;f_,kUK[BETa_b!tKm>;=,SlSH,>T.Z\^RZ&uL#NA\OUnH^dEkaP8(UXMVWH3`ESUP\5K>Q48'i_)D9T*cbo0-G@
%71LF\<`0W*P!APWY1)Go*TXM@$3r^6$\/L?/8eOI+;WR210`*CHT;$T!j\^sHZs6AA._@2M3O(*Y&o/JYm9be<V\3lS:_-'I1YlD
%m81K@??54.7>3n!2dD5CN5%BV/78jK3i(P@o)[Wc!Z%/u;MPk^>H&A>8+Q>5)Nm,P+ocYT.Fe#sK`O.?F$.q8)9lT:Juk;Bf1Wk5
%kHJ7J5*M[i)X[iL^T@/8H_u6!h!F./`#,*\cF`iRmRq1HTj^ERiY,?nPMuLo&nk,FaX!=6=<gc-`X&IOqD,ik772jOC6/qlCp0PU
%d[VJ.?+]34mB.&eoN\q"E,GZM5]$&:A7%n#)@7,k"-\iNmF/mjJS&VqDhD^(4S9WLLH_Ck8cn1S?0I6_aP$E'h`r8Z:iO6]=kkb=
%`#q+njq\\$@[-'8hLTCp44H\sNs6CoK.E?HQ6kU3lZM]BGXphL%ma,LfX='Z$s=m5'V:g2]'sJ@W1eW5Bt])Qmds`+[_W)NOl[qX
%N3NoJIuB@q34a8]eom2uH%g?L9$uAIF*'!r"?(?@fVGDIaP!HV[U>_eUT0.u(HE)=6#-_9#`?hiq$t;3ZX1<TaX3m-qjt(5=$?'&
%c)fNpo.9<2Xu49>VPVL^oY7!\qtWA#B%;CBFKBH98Sk?Th$cd\[n.aW5!i0gBC]J2^cjUp(dP@(7>e*/OURn2V58=pa.XK#G's.m
%j&:tZH=*+/.a9^29O#:8JHq.r(cZ#f!_tf)pe63O=GP!G]8#)9]1pA+CFfWf*\ouf4iA1afH)!8nT8K-m(E*&ak;E=e.We[[UW,5
%<"3ler5YE>X3Hq89]T=nnK560ah3NX;o'pXeWm:5Xu,u+r!;IX"Jo9&R+7d%Rpabs,ZmfS,)QS^]kUHd.XIY5m_@;*a'nPtCp*iU
%+V[J74)qoi3Q?-aOUmHt/k*]"7&A@q]4APs*=JI(/cH9Y[t<BGomfjXQ7N]9"aO!"Apm!nZVsVeZ2=V!lft6S^u_f2>"^B#h;=-C
%]I\hXpEk1m$gSfK6KLSCmTd8^bZ+fb#5KO/)r,HN.9`PK<Y3pc;UV+(36<T=L_I?QK)gbn*h75C<>Q<F[rr]tLC1D>FP;8>C:M6O
%L6N"nArTsMA2pKO+G^DgSH,fO8?@prYk:Ha^'LeSa"EPTHP3iFm&.XIB\rs'kD/XL`j8NsIE+_:dpAIXh$JbAK,'^MoSf*V8T"T5
%-[<j;:C3&mkD^%;?m"-Ql#IGhV(`V>R"Yeke2GN:6;m'3PKcBf_CXE=LW'pZ9FTL-LPJ6/n;\@38*"%eE\9B`D>M=!UJ<k[)6uu(
%\u./HP(s*sP,!..ANuld8B#a['AJ2P*6rWFEfNtQ4kk8Y8Kf=[$lo&L"MnQ2@9'ms\RGJ77=ulh]!WW8cRuV4.fZ1."\@NW&p<kB
%e03(<llY+dRLu0%loeb5:lXn=O^$tk#:kf0>!a\-e&1b]K-2gkL.1Q!OgT(A1PZ6,G(7bL``Qb%e4B+O.?<.+(Nl\p6kp&\al,)6
%DX0q@nG1:=q$r__[hj#3AM@aa9).ta;+=8ra@e'@-0EiGH36qOYdj!)"d+_i8h)U4;:R\KjJ+F1(j:rd*'hVf+NRWu$-Or"9jlKO
%h]lph!u-:"D&IG7N(L)dc=(c7;m"8R3p"Q9np(@.&C?:!F]hQ.q,.P;&Q8Zk@J#(=/bnoTAU#I_"fd7Fi"e]2#\i=JWqG/,iK(EG
%c9B07lDR\&Bm9NB9HCi"WG'SLQb+/"Sn(hp'tXN]!'q7pEjOT;4A)-b*Y/MQA/glm%&RB(o<hLfn#Yfc_t2Xf+g!*iBe65#/qRka
%#!an4Tm=-qN2+3*S.D$1-S%9*UKukK&NYX:5X/R;\?)f'4[o(?H5H0]"+I4'MI\#ooePk/GmdW>H(WYDHE1+-Ir_OG?d$\j#Q!A'
%F?9<b[*,25<RVF"ggeNk\]f3@,I$;ANLI-8ESO.]HHm2(jHrVg;1ZiE]=7PU=ZtlL8qKiX96jN5i7[mcYIj7fIXYj,d[R/q/q<U^
%Dr1?r1\?,K?`3hfa#TdYq_+peQHTNUc6G(]cP90Ni5WpF#/f)F?rQeIPKU>``Xb"#Pm4I^8f<D6hgHZ':`&`]d:j(>gd+:P\.:<i
%SrusC!`8B3Lb[p\HVen."a\^6#7CV(FNi;*@5I4?E=O4i\L-Au_I"G9g\Z-aIS%4UH#M<uQNAD@VNM&+,j*unB/X7='h,p"gPJEc
%-TOmbeoD#5/N&=u9QPF-4cA9=VI8DTdI*"tec"NG1c1_,Fh>uh,7p2;$)>0rpYuQ8pFfou#?><i$q!sP$(2K4Ti1&-^"4Oqic<j?
%a<^[cdNb\P[kJ32]BHa-Y$5LYN<:h@@<c.'a2@68`?`/TSaW]I4+mIVE<"#!^RbXJcAWj9/oM5o[g1L=U[@^[I!8Edi(SQCr4Y7i
%?Vbd?l,RckEW@*.m<M\,%SFJ4:YMH9*f^B+RU"+)i[^qg]d5(ACu!C);O\ts69ug!94s)j9*6rI)Uf7'Ce\$?8=,fo#G8(Gfm.0H
%^9I'Tluk+'D'W/1pB)0VkFKVUn&2l+Et-6K/dFSV96]tI'5Pa[Y9Q(54;2!p3-Jrc+c7P!]mAJ4!/<8IeL-:D!"HCW$amF0$P-JU
%ENk1r]h-&Bo^plZYIrT:7dU]5Tr+]P$RInR?4("nhjJ<6<Xp3m79^Xq%Nto/g(pqcpP0e?OGq@VP*`G@k30B'9o\2:-L&S=_@Q0S
%Ii>?$M5mrDRC[!#TuXuk;V!1l@Mki0@LrI!L&E)$qu=BaNFtbHNLq#Ts&&,9Mo_NBa0HTHnJ\eWqs).XhCSiRC+LNIA+;p`YTmm5
%ZaBjS7>_KG`KAL9_WiNDSEd*:ibp>VloG4HN:+)+m@nlV-UW64dBke\oj,GeYreFr;.=6uV%iZBP(qC3l]KkQ$=,gbrJY+0fT*b^
%lQ`.T8OrR+\pXE4%_2H$kU#(IV=0G%2[@KdNh4iilHN3"p;hT%1qkt8hk.8oNoW,(p\PX'N@XM<@<h6D!9B#FA!r-M$?8M'U<F6:
%P`/Od7u6BCBA`gim#oT-.N.FkJ#AXkZ3,CTfMG^nP;fWZd3/9tV$_R;SDn)$In5^.SnPR&kD[2l8#[i+T_,*(#.4$d)%odjNS1"\
%gXSh2J5I4b89n7I+dqPd&"^qgd4=iKa7Ac$(`.HmaW%FY/RL)7qM:Yl:gm`Ll(k/H/\5,@3Mh1l#&4Y0E;3&Q$jV[DZXIO9Z4-3J
%mWZ_L4*TVbj7"[WHP>`D*=qKEdF_7aP5[EGleW(MIO**lm(SAu3>>a"7!2hel7(H<Vbs5!s5M-oUA'A)LWEK*AS(/7@kKW/$j#uH
%At38880M9ReorAq9B>,VQsQFbV9+]`K<K)e)6p[(Y@#.>T#4Jm2'/5oA?Y00`a$S`3=T<1Lafkrh#.?mf'$Ob7R&X;=c$_PXG1;[
%o`s]2:nZ!u[]mi&eqC@I7`Uo.H775pO^/'rM(V/8BsM8BG8*V=]<CjY>/sWmr>:Tf5)]"SFr(,&nG8ami;kY\%h@1Y;?S\(5#B8W
%$qk399TMdE&]lipAr$QNi=J8E+'9eS-#G^dp@)c'K`lsCP\09:k]@0Z^iD7TAcN,&/QMsgggj49"WA@ok<&tXflWB[ljBQboH&ee
%9d(s-=Da(\Q1*\,[>WcB-Z55h1A#@Kfl!9#*ljW32QIDeJW;LX`G._6R(QO+b/o$Mn>4C5%-oa&;RdQa`J-M?-">)?E.F-L]pQIQ
%8qqpSUI;TFU:`"?]@q3lS#LB29WR=DXXAHuFkR+=;f+.Ldj2O0I_D;#*bnC]oLtrqUWA+,>u*Zl0GRR=5Qdk%?`OoY&1\H=c#!2b
%%u1^^R4TTQNLN.HDQ;Y#SBRe:`rW[#M*R(l)ea*-/Ip(dH.[(*[K;$m_E$GKIZ^^p\gEDeL'If:"j4r[c4FS0dILKa@p?8VhNjuR
%[M;jlU7O6l9F"8.A<Ro4Y,]re-fHtnf]7K4leF2>U%a6s#q1f>I[l-r8"82udp-k98lO'>dui`nH._+J4:N,1DQa\50c&O5jq;VD
%Ctu1-U<A9KrRIY=aV\C"UO!LsH`:^3F!#'k#BUi[=>Zq3[?s@7FEVkpo==W>W9R?63k.1b7EK^i96Q2a#+Y>8:Vpfl7<s9k*O=0;
%.-:j@HhQN2K!LEH!#0#[ocYq1,RQ0eXX1O6*.su*)YX!6CZ.;eHAB_%Vf%Bh.<7*n'[u#S:8?4/f_GYt`P$3e\XZ"_El?6b#8o/-
%r8AeFA<<*&A.Td0h3;aY9tI^Y0N7<qJ_N7H;pa.LntP<@_D6K*LN?L3OTR$iPFBa\j(tM!JGG],0]^&/OWlsTEgtW.KrX]s9UC(O
%;Rc]?`G<:a&C^B%4P(jPfPE<Mr^GT9daaV%4X<Wn`L%nPB(b.0CcS!&Ed3;(/)K8,A8TZ#.O'u1,KJeO%>F/$P<pCrS5<shAUY[6
%Ji$:m:QLp')9p/M'Xf`t^P[/noAe<;Oj?oboBGP;-.(Uo.:ehOQT9Z2*/d9'QqZea<DUhJ;Sd-#9B6ni<[]VG78'7:"fQ(&Kf#[Q
%brWr-cpr:f8>&mWNZ*Mu+*jFqIW>tWUqlDj0kdb889m:OMi"46WqDLqSP>K)l-'`hl24oSLq@(PHH:Zd=oHR6$`)hoa=cnkklZEA
%Wr`#IARAm<FpiLR31];Zat^E'bKX!Cb1lG.TI9:1p3M=)Qn\k#U24+"$u>Rh0\-)XER5(&Lj_n?32MCn3N<JA'a@n(pk_j^!($S$
%[EU$5-^`9KXM,D3St*0kmbGhrE$#k.Apo95*r0^a1s?VnPsB%8\F`)7hkK\#(Aj7ggJ=6dnFsS@\$as-O@Zi:n%^`rJXg>j:NpRs
%`IY'%ARa.Z322-T"tt(&LoA^j,sdM3rd^;6##($O--T>e/Y_%FA5ESBYgkD-Y<UfV%&#CIKch>1\.?298LA^Qk6r&lb)34pBa%t4
%N(L:!7`ZHuWtaiH/B/V?e3e_2KodihOsK2(C5=@Crj:%NbnMagPG4Aq[BUs>d;1XmdV(r*4ljd8$rcM/b-^2*Z#U3t(+Q-\ed>C^
%e-g#IJA[pSbM^TBGGH6'90B?"BX0V>NOd,*Y>CF;=XX;<BTcn\,Gm!-qrbc/"GdZ"#385TA20=165cJrn<(Up+n4!VB?JU64$g<u
%P87DYN==L9:S5qPV5&&cNPdMb_f?1`^+LHLAH\2;&bPc/P]<MRq7)RTdlpA13=IaGf98eLiSjrqSWhUZa6@j3<0GLYmO,TSb7#\B
%HU'WS%TWKZ61d/EG6%Ft\%0n,%?C^UQ)LiO4Nb<!`qZD+.>lX-Mmij,#$6Vc,64&.+*M'PQZ^?k6t8nG7j9JnM+@fd&^#YFO4=(1
%\"W;0V*>Xa(efqIha(B&neKP&+bTQCMm/]WK7oQLoRTS(K'mH*i=nYu:kZY8@,lm@f]Pen7alB[Y]1)p:1MLgV9AMeDiCZ4/U9M_
%2PNf3G#4_2C.a5DAu+fbc8+tZYkqR/H2\1U"V!NWEOVH4U5)#d4H?9SJZYTci3=:W-KTnlDVJ)Eo.[`WQKr&/,Ji`og+gKCjiA%$
%(c-lC=F"Q[<m-4_$;>UH'^OhX7"31f6hp-o-Ac[#521O&/SZ@gquO9(Q5[A%'*KN(Z]hVi`KJl59]DEs'g^X1oI&%52,&tU:J.*U
%K00bXS.q`T=d]tR/4Hq7LKfeYfN)"'ck38>#4.`4XJhHG-o@5X@cK*,7#3ghk</$MlH^UC9lc]@!g%5s#kNQEgn#q+%E$NU7g>cV
%n4pkGGid>j0km=6MeknY/1L&9^cC#-W&od"!(L8=4Jdn'kL6thbBanSaMQJaKXJEaC#.$!O3X6;"St/5q't[$8C>"Q)9jY+fgiG*
%'"FmI*RJjc9fmc&-Q&CnWi@O=$lKKLKjH-@/eP98.g"+e>2m"KKUSl5MmF40=n@r2h0>Z#4$6J.=fPgF57^1SlVsi9U8i"B/P\@t
%=$!%]Mo$Q2MN8\B]3J@.Nnta/TGt#Eh.KQMKWG-alg2oib;oX"/pnlVkfd*>m2nM:;1-pPPr0b75r86Vb(.k#E3!u!U#Nt]F\gi0
%)ps%aDDZVl&pZR-eY[%iIuD@Da!4Xm;27<@W]fn,2QuhlNg-('jg0UmQNI(*6t5f\3,;_g7Xu6/`h)NRI/8d;P7"IpmdNX*YBYqi
%-&-:[,mKD2Osm&T;;)samP;WM_[00H'4A3@W"RN1_JdtKIG$@+`IHW;cKN?QC:Cuk82VSTGWBT:_pcDdqXdP7f1*&5?%XC2.]Ptp
%(/_n+K?<7g]M+5ol&c%0i"VVuGmm'"LBJ/*b"C#s2(&O`8=LZp\S"K#iK;]-gS+E7RA4\KABI@J4rS)B/[^-?2]BPW`=X0U<HY\l
%1i#-,WY9gUr'RK;bt[-nDK6Z+gSmJX\h/\"%aP`'6sAW@WFAHV`Uu8IgsDr!(kY"+=sTBN`BJ=k.2$e"!\?moaPG7fVShW%O3.mZ
%*MM`72HY*'U(/*1bljAi3>gukjAFDL3Sa:n8/@k/YH!@lS)dXS:W#YT-.b[kMD7/MUJ)IRDPZ($8:d5c=pc9<[Pf%SJ`EER4\_H`
%EF]*55Fl"9[ktTOK]SR[O1Tg0p+PTBWhTg#`,9XrOZ?h4Udq@odJ]Bt??Tnh)>is_FLWhZ^gK"b4lKklVt3/LI@hled2*52:k@W.
%+u>EL\/sR6GEGmNdsBF[id7VP/?/H!KJqW4A/W;P54?_Z4.?#Nc6PJ3L'WA'W*;;jllo*O#<0&qkbTER!5DP!R[R1EmP1Vrb?SOB
%*kt1mpo3*Vap.3I/EMui.TX.^f#Sh00\UY=]CCf'qY-J&T'O8NOUD+^Q0HYPJVt2HiAZPk?:_2&@fdu?12P4R5-Y!G2Sir;>EpN0
%*peY-E9@g3:3Aq`*,OC"QmpWN*0U2m&AO'A%fOM\'6Sj_G&n*oZ/l4Fa5p\?Dbpi_GOj)-b3bh1@+,rNVh'hH.MJm4]f?\lQ&YI:
%]\Dc%77u`mr?%Z'DI">U#LYPDYG_$W5j1(Nr1`s:KaVM*)&[sB?\-obi[L$GlH%:kQL_i',J^.1GW>?Li7KqL=@FW/T8f:@M^e)$
%%`OQ`=R\`>&Rn.#PQ1-iP6F5-)O,KB>:N_ZAu&13l+an.j*0^pTbOp6@En?'3C[MXihU!4fl(3Iedi_I8e!/cS_2u.Q\3R$9S*mf
%1I#U4Oii0/bp_%ecL/S=SmcC<]\NI2"XJ#nb^["Un.;>&_pUros33JrEp8Z4>cbJDSLUoc8^GC%@SdJ`H!pBQ-MSfAc*X?@/^t"[
%/99b1:Q!s5BRu9j;ceQJ^T/H/O*OeNaV^a0.M,l%?iIs2\j_AnIo<i'&LRsP@&%f?qV&]n**,[uXnmfA,k/d*q9-'AhnBNf80^J?
%7Pf\TGV`F=3&_71`u]C8,DU;HHMV*Bro?6)]>r7diS*>?pleXqL[X[!1&_$!d/28SpP_?4o'R%O4*HW`(Qs2+;?d%caX^NL[hL0t
%p5(f_N6EmF"R5/#j@A]K4\V%]F3"JV5iBlF3faVt9EJ3%O'pV/81:>'C$^qn5;C/-2'0hbB/jB5lTO7\Q&S1lT-_m5?sLe6CW4!$
%q<tGqT$k#@rr;,`UfF]F^$Zj3+10En,0"tJ/F>qH$jH@A1jETMF!2K-C*S#>s5&$uaAfiSQ6fP=C8VDM^:ZfAhf+<G@3el;KJ%O=
%bOn*+[m:_nR[l"(PBBUTphI;8/3:oCC^V?YM>t'hEmQ^"67Gk>7'JdkhDr!cE-n6-\0"MQD=q^(&#1%VWFAF]DCIna%-@JbZ,`LU
%Zc<=j;C&`*Y/XL"4uR_bSo3XubgW`eql`BE`urSNglO=aKPIE7]D5B&$s*Y!/eaab3X_H@OR7++4QmN)l+3Xo1!1-TAN]&nVe&1S
%ZRR.-<H1lE[@mD$*Y+jL]?ENc&!U[>Tuo.I`kNSZ(Y&NX+BQ3qG:6P^2is1oYBa:H#&O[`)CKYS0E&<Ue%[f,X/sRJ3J-*W77g=[
%]%`m[5<coGQdRdPId@tO]pGj.be.9k`u=7W80m'oD?Sj]mbr`j-&oTUOYIU`K:2jLIM3>jph27VrH;$4@fH)H=ab[5C>b^,X,;s8
%PGDYB)$O)H7,7_FYIjHm;S<NPl'9L?YFuBOB<Qg)/!NGH9MS;N2SHB8%!@fD4'P*C^C-u-r(!2oYVate6r?L9&f3'XmrOtP!@kF%
%;XTsrhKnuG1dhst9(;)Q(R]pH`Bo"I4"f#-GCp?-jT8ttSl]"W%mYCk'-4qU?t+'"86osEX!Ajurb4p5V"]+^9m+Kh=)q9;4l_R<
%50t/I^S^%,]@noCiRc+UiNIshGWaKX4"NIr<Y(XKLcu;M)oQK"(5X/H8/C`7@Ys7ZN?"siC%RXDhh/hg)81)lgpgZ#VmL/d8_tC:
%689-(8ban>E6G8rJ'AMq;i;4bB`-.;pM'E%YDIjEoC:Eu*T%[/5C3-LF@!0Y+_m;ZeFQt=]KF^36b+>1"WBPt#A\d45K"Aim$g<.
%A`R"`K&1bbl[k/![#W!@k:Mf<g&WB&%t0JN)2pbl6@JV##6F5a:k&02AZMn7]r.C>TdTA`7%t\;AUig1o4FZFX\oDCq!r/(C=!TR
%+*O^)E@JKTD4.ZgW>!e=Se!VoCb`A5W0(7X*ntc'jcAT1JG)oU"PZ1;>mEDe/L'j^AJ!Js>B.+:UC(qJD#X,&ipBth"W[Ni\J8a_
%=W&Ms+h477U'_'F?S8^4p.&83f?P_`JX71ff>1ahDEP"8BY/,5(Z-Q@>]+=hI6gr^?U#SJBA[o[m#Rb8UM&SW[]c_pmL*kpI,0^M
%)Iej#QZV+8(U)Qp5b'g,?WanoL*.la!dGFqJeLgKeV]k#hPE',T]iL1aY6VUD'TmVSiq'&E%%l$$;<LT?/3uWXWqck?im![`NMZ#
%n]VE(miQf-79D/\.id-EFNk,\[Xj-aFm+EN3MZ(;h=KkpRfHJK&(N?pj^nDW)S^U*;#ODeHX5l;e?inNq64!&(oMH'1AiPW9IHj6
%"IHp!GM6Y"Z;Aa(eZ.>pGAO0fTqV%X3K51mn/Po<%7<7%SoUQ%:M\4JDrKWU"rj9X2?)X&[$G1!6l8l3!CVF#E`JmaMK[(J\8Zl[
%_sKnqJehc+QW<e1(8<M<\nlHr`'G&>NPNS_DWjRJVgMT6a:4XiBLo;)V@__=>u,E)M'cTAeVubHBQS$F(T6!']\Pu3mu=2GLRpMA
%YTUOYIJ"opOr\Q!b2Ied&&o6G7_!8:4R>8\+dd@o7gNROh9'.c#7Uttk_*V"p>iSBhj0'`$Z(cI/a_Bf2Q[*I^UF8Aa3[b>?Xe>,
%<//j_N!oP=GY?e(EBB0i@X&XXjf\/N4U5q^3"_BnoS,8aOLj,ql*#Gf+NKLMM2F;&Qd]VSZ">(QgncMZTEs^*^\d@l=@MSopc!oM
%F?H59ra?[Y<Jr47;HJ":0TK#O@Zs59JT5/ZnhSc0,Hg!XpJLX.99=GD@_#/HXEoa&"f41-#!;P*]M$27lHa!Co%*qnE,9/\%q!Z1
%EI0aJW/`$47%Vk:\KGo.BT1)'g&T0G#0kqTPrg3\29*e'AU^D<kiG"3A"s;j$FG]%7^YJ1prKblreqU-JVi%"V1q16>A;4_95I.>
%?ZRGG8$c_aC=JF*Yg>26=mn"sr&oJ;V74-K*?`10SfmgNO?.@DgRcAk_k*Yn)lh[C5VdXNYN0BUL.7[H@3YGO]nU7d,&id%PRL=U
%\<l.n>`U@Y@*W+F!VE=,""cuD<]8c:B?(XJ3&9uU`Qe3'0Gt4G+0#A[W_#5JU(`<&6JRU41;n>pT\tgVe:KjI@HNc&(-#hLZqd*>
%+9c&eNA_/8!AiK?Hag]gCe0$@Ar6T\N<PJ5`,q=`dRGbTQ_AVPn\hVF/h^\S""Fs>#FjgcQ*j*()"&IIQ[m^T/dd]]1W9h`2mD;c
%1OAjr;p:!)IqQbtA+Yf"G\eF/0l!4hjd^)&Jg"&)5RY_uKX(Wie2O/"B=*G7#+u'&cOcog=f*,'#b5]ka8L2WIa0H'a_IgRe"529
%6P>f?:?G0*)nlp&T+RmVrI0G"Ks)7TEUOJd\5uo*X!Mc$kc()T,qCnn90""98S?pmk]gek5/GLh)t6fhK1e+^$#2PX$GWGNkXsuU
%+Z2@`_7Gb?OLU;bYW6-W*;262JDMU)A?pa*%[;q%.2gOg+d1:$&&8ng6Fb1Ji/-,h5,\TU0!S1r&nkh1DPFglc"7**ZmE`.Qe>o&
%QH6rK$Q_8s5lq2O`T3_VZ7OtE4TROk%U28U9`o,;H3t!6:[`Nr3YRFU/F3!eSb5Nn>6^_)RM@:]8hSQ*4qe[jK7[ALlVYTVQ0Mk:
%E;/G^.]@!0=;[Ij7L2i[Hic+bF-OX:b"2Tp0TZI!OCpegOOKW.3):N'a9la2+34A`KT7c=r2>?3]7>V,%H1q/H5`fh-Q6'Q#[iK9
%%gX].?<79%E*pjgJ5b_^5>/KLBK@j*=#4QY&C%jq.EWSjbar'Ekg>+L->LPR#I-3G;ZV9'6i"E"YXCZKhBHZo]MAS)9ER':BBYN)
%IHI4U_;4+V3j;/7FM'l(jP&D0&U;s6gBOM+8[ek`9G7BP+Ogb`N.QlG;43P5`:6;Wm4SM.N2FR.5KJ)7Eb%sB/sXomNU=($)i(jU
%#@fUiIHbPm*o&%TDK]>)Zu;M203jqI(9.V^OCog'SM4Ho^%*7II-],a0CPUMjHpHm&f:`6jHd_.&`L(/^Ztd%"2?tkp_(j#F8Id_
%<V6X>KBF`"Zk-4jqUVb=&?3&g?E#Ar$+Rmc8etP\0*t?IO"Ah;Y/&VN;:#$*i:X,b<&TO*RR%U[e9IQcnM+^N4M']\251Y[_?e_6
%?/mN7poL@H$K1(&2pY]J0[eH^m]]EpMKRpT8[L^*"g:_(+YdTu4,a#M#lU5fGZo-@6N7+2(\++te)+&$r:[FBOcd#d"^T/ER)^V2
%:?S%Nj1$XpEV?'FU+ru"(!lc#7I,,)nO;Z@Q&"=54,#7`;^823hZTXmT^d&8*m[*R@5]8\IS`K;aM:)Dl/[7].CrF&UH`Q],CJX@
%h*c[u3^7,Fd?\-Qili5?J2K"*2@>/\IFe*cL1n$:k,S_O?NF*Y[-.-J\itKse7_$2PC\fD?4\b164486GsaG9=ZV+Rj$W+slnf\O
%`G+kH96b'[0l7mG7Zso$(@r4T!`_$Th.I!Hbpqo1PYN`Fe+o-2*qo_;PkHrnFr+)5*I#n18dpR=871jLHSmc%f:/kP9'.G1GJe\K
%'?+5n#EZ&9+Z3)4ac^SSSuK22cVZPjQc`8P9)VT^(=R`g/&R]OcR23u-8Mk^cWId>%AB(:'M`An$DKO`hhm.O<E*4L]?Yeg5`=B&
%R^%h>\3ZmfH<Z6'ib`jmAOY%>bXY:B8\jXL4$]@*Jbt]JOdPRO:Dj?`@dLL:[:%2bDh$E/ELR0\K+W-o2GUNG!S["-S,EC<PrAi/
%E-j9QOTkpq.5J3.!O'?!Mlf4j"\NG<m!Ltn\]qIJoYjh*cJdT!JP,d7!bjrE>K,gl>Jh("&])!#'Mhn+Ofk/5%!+6FTNs*cSskM@
%iP;;s#NmPu%ctbg(b20C^@0&_iH6p_C3JdHW89^Oi(6hT\_'q[BOb-@jt>^*V*<0HepNid9$*)Qn?aW>QA"tUGrb675TWhQ(7B7i
%ZSL7>L#R[=`C;l3QD]qn];P&/J,P8Y".1YsoK[##\h[l`d-GI'dP%;:T3T-Q\KpakWY/,nOg4&2SPMS1=/\Hf"?MCbereJ8Zb47%
%*+QGlB';ObZDYlPgYF,M1`/=8O<g6CkEr\t0c]u1BtJ1#0J"FcUl+nM4!V4i1+@Ai,42"-CrlKkL290=6RXSZ-4d*m1hYJ='h7'+
%Y+3LaB*;QI_N1VPglRsC42fc0VFk<&3<fEmQV_2*]>Sc4>>\WVPId@@FL!bq$Oa;]E'i=3FF@cIhFKM^$eXL/GYX,bFE[^e06FIt
%M:BMbFsJgjktP:9gT[u?K0.u]2Qp.Rhtn=^-$tH9h8g#mrmB?1]0fo8ntdB3O)aSlqY#fG?p.E^k\JYGNo1Ms5SHcrpl(=uH#/r^
%6iiRZ'crTW`*C\'#CgVN0OPW/GNqR[`G.KRWbYc0\=HRS]7%\,H=*XfNZJBFCJ/2aO7#o!*o+&QUSQJ19rh6H*WZa[-'i./]PZnI
%OuD$nIVpdB4o=!uM-bc]M2LW^Ah-M[UM+_I;CCnNE!.hS/2Xk$C8kU%]J^R-#7:H08)W&OU+Qs\A:DIk"(<6D'I)pZ&$0Z+4Lo4m
%nh8]Y.Y%ppAu3?l0Kf^A,?_i@%Df:3.krj1Ej39OE^Vg8QG>A9[5OZ43qR-BH;2,U;NAV5P"o@bS=^mK$LbkMJ$Y1A**u$`62:]V
%A5p'QfL322)Sk:R@(/Nc-E8VqEWE9j<CYqobjltG($7oa1pppAN&ntha%hum#O!o5ODYCYq!D\\q1]H3?+NlX#"&K-,iaBk-YjoE
%Gf_LB-<Rn@>iIN8j?&fm92nsE(?OS49/m@TMHkS4!81M`6:OL]l"6(4m<(an*?B^0W#WHD&tt[5+RP_t*INA5I%Pit.sjollhCTb
%fl;HJkhg:nr;-mM+HK^;E]2,?gr@K[B^Lg67c3o/M!&4@Up$uhle!bA25![Z^PF%2g]fYs3P&^:`q:9WAgQT%P4]`4b[qq+k2qh7
%Jh>Rt(\1KM,&C-Zj>"2Cea@b)+JF\<7`\b8T,D0/nsi/u&!^/o33"];o1e:Kfqhn"jd:'bs.!0/7h@Y03A97f75lQ,7M(hN_+EpN
%i0'n@LG;68+.Rkbc.1G.oII9JGM8LG:Tu_T@Z>!4%^C]Gha[Pc^3<+tORLOun*5#\X!7O9"Hj<u=q""pAk@_VbJGa*=;?u__+HGX
%$KAd*54PhZWRoFj=,sBnc(eb)4"c[0Y1gpTNjZnr1]*`4_M+?D(k0$PNMa<jo)mC:Q'SL%nCg6VHD.G;lVL]i`([NQ,:_Pq=A]m;
%_Rh6[GGhWr.SUgkG6[2<ltCC"`,L]@e61Hla.JUZEH11ln%7jR(st3Y?8@"?98qCk-jZb.^d$'Z(PHBPZjHJ-eY.MJ<D'hr4+-)'
%.C]Y<D].*CBKk3u%/s91cHn"PRXqfNCQ?2NQ"H37D4>Z]G6#qU=F'Hm@t@s::;)u;&=g);H3dbXC6(IS.IF'G1a?iF<?5HdVr`;&
%U#iPSO(#YfP.n;F\G49uOs'(BK?\fkB7R,8*/r)3q\5&g[*5jJe5?-4Wn(Q/\mC*6j4W<J)]#64W[1`TZ5;^2](?Vih-s'AFVq=l
%&$;O(H'tV43HKEgg>*>-N!0.t(7h"fcKN!TaaV\Pj_WiiQE>JL>g5=JCCY1)mu)4W!u[0$^6'a:[t+b[npD[h\n2Z]+&u_`>J2/'
%309p:hdgKe>=E+Z4Uein(GoscGhC<)(gca+Ck9G[TX9f8O.JBi^!@302']9bh2!8G<&66?nBjl6h/k`E@pI+RfZr_M?E:`d))60'
%?ZMc-DaIKq33A+`B3!NZs(4,'R@tjB_I:MKS#pI[/SNZu*upIu&tQe,!?5.3U-N*2<SiQi0=`'UDW^mBjC73\]BG'/)Rfsd\n202
%/2aa7i<-bh?eGIP5Am\nSC=-61g_kMrj^d.IQd%fF''`W_2;+Vh1\Bf+;#FcP7RW66'Q\j*/t(,L/iq=*+%[Ob7Yu+Or9k?@i';&
%"C5I`q$=hT`@<shlK*m5:+Mr'bt(a8)>,9pYtiLEC,jp(8-Q^tCM%GHetmWdp?Tt'*_JX1CP<M(646RgPN&h\8<48dc"M4O4jSA3
%6MHQ3K%SbXncSAr[1bHQXiH6GQY-ZF:3Gu*"Am)F/q^e1[!4BNAP4Bpfhp,1bC+3BEk=S5U@'4rPHVU_X,9k,Ut63'&]`N2`$2K\
%&-@t2@l#L=lJln$EtG]U/6Y#[EUG/%C5[aeITtO8Gar;YH]2kPa"s?!5c&kBID7UDV@R\Y:AiR72m>q)m6g?_Dpb^U4$t",nM%BB
%DQg;^5K^'iOO[E5`lDA8T;o$rjIQ'u[.p3Z%UG=eRe"JADP;[D+op]rrmM[8:o_p#?!$,eE"D^ZLJ<O-\lE&<QtEFm!T*C1J7'3l
%H+"*WaG;\(j=@O]MRQjAb_*T*!PK)G:)FF:)TV+?T+3kL<CH8I+^mF&;Xrhr'Bk)>.ATnF6jcmsfh(],.%ra\Z"'jkPeb5um>,Vs
%qM-_rnGen@0lXe=_bZCYbtjEbrT5Z"%u@Kj*mjc,c9R%3Cs01&2*A*7g=Y\3Cqao8(mWMCPPZj'L&bO[_Aa&+Zg2^sFT3lcpeg4i
%a"Z$<^ddhQ_M.$"m1s&S'X'a.@PAQ^fp6S9eYS'p%@#1Za^=f&E]Wt<<E)O1PlGJ5,/mM'cu.,H`MP/::9ai.o^Pq"!KNN0$Tm(d
%/K/]mA%+XE/>Il/r&1Q4X<a`n'OlS(;"S`LAaG7'V&VU+HHo0=FSXIe&GJ2%<o\8"ooPc>=UcqV/cN>^65-HT#XE*9!ieiAW""$!
%f\E#e0SmqF7#Za:/b;*C%>P?V_Vi7.+[/3JW70"met&aiT5^u1Rpc)5B70R&-Mm9Js.d3\miPi=*H<0+)HDK9/-FK^Xs189/d#S;
%#Se!k@6(R?;;-4B\CBZ)XK"/bbktslKmrkR5#r+!r"(Sb\/;As$6;T"0b9@n2qU+5$d?bj5Wh"R44R;3FOL\rDb-s2R!;1(\j5rD
%rnO'?Ugs"+_6E5Rh8P1AWV<:<MH"/:1.5ug!3qKY,0d+@=Ck)qs"Z?^n'bGo^eWGq)8$`a+i&\rE*UXL12Ak6)9/&oDi"h(_/WJ[
%-_/%1/&k`?$#&;#gY"0!f0TX'>he?EE4'.oV$2/VWY^9]JF++WPBfY@e)rVB%&f[dKYZ-*H-@gu^J."3$gX@dL<+Wfg:'&%RO`\a
%R6ZMgHI3#VdW*d]YJMer`(a[]AjGsWelSN<4iL?1KNE/l4)?-q"0RZ'WOVbjCQf25)3kgs:.PQ7:a(&B>+MS9ZXf\HGN=s@-FsSo
%dSlXnb7j-o8C=*:$T.%8IV&$;n0o@i'?7m#]8KckU2DsH)0OnaW;N;q\RU_j?O)=Di;U5XDbP[oG!@ntY;!EH>B&e@,%LL5a(ZTN
%VH;gGg.ah1NNb\hr+q5DP)aQ"7&n<I$e9o=JNaUuc#[5WGfV!Ln,up,2U_L)=tnOc2JU?7SHp^He*F=X9&Pk-T.22Wl]cXpY#j6j
%IZ?6!!&Gf'@n+9Fqts2fl+lN'ACf+sf/L)r+#WDlEPcFJTLNpbGso21:Io(J!.=VI;4<WM$-hX4fJLYJam7Q&;_0oQ0p9_a:dc24
%McF4\NDM`4X.eLnP1Ck59(SA7F6H.(%TWD?qMl'seO5=4!ULff+gW$dVcD#m3e%Zs!&=e"AQne%dmhtg&5eOc/XM`<)D>:iK3PKn
%,j.+<#6S-_S2a9o[VR%$;Bba'3+1qU]b93'c-H9V8%N:sH"5%q6QpUk2<.=TDPqiI(qmA,r=0oY)4+bD#WQ'[XrbLA$dM"o-_jLi
%&&kS_(GjeQ'<EisQn_N5I![lG5&(N&a\!ub]h('CFrK39]nI'bH3V1`p3WM$4-eo`KO6VeAVo(a6_P(2X(snD.Pi(VS-lq4_PpAQ
%P`fp,OsF`]TtrGgb.RUl\JU-`<Z^]<ael!q9<KNG;5RLIG;N\Z%Tb>7V%jHTAJJjdJ"r,B:ZLWl`YEfPkGLisqWEZJ_<V_.PE<4-
%ST46Ce`\qU<,"Os^P`;WN4D.EAm:Mp3!ko./>I(i+'c7:2U/Rd(9bZhRHI'b)!8,GXU0%qg:;ul7g)Ap9"qu5ORN:o,IqlMNOK:G
%5!5I:Ui<\(V(BHDrE'oa3\?MSTCMXJnsTH*Zg&478,m>ikSN^[S_o<i/!MB:UFOOr#m+.pH>ejjnfAO*IN/a6[mSY=q#ZY51,o3Z
%*`ZJX,.V"n);jSjK@<dX-epGfG*?T/K0Q#l5?\:Y\+?]_0=0h9,P\ZUBjRYJpf[eNh?iD5l<#JtNReC1oX-"7&SKOqbX9e.')!;Q
%"E[)hH!!17'%dOga(Tf73euKj,=+,RnZUupRQ"Z_CTpSA@HpZ_5E9>W!]e@5$S6g8;sq:6]q-PWgc+(=X=R]n+,fZo/1YWD1HbSL
%=nrfG>1.2sf"oA&YJ=BlU>a.g0+L+_Fjt4_rD$<H-3dC?51aA`R^!Np@bq6%P54bX[2WL6l0e]704TTKn<AkfV0n0lG6Iq.lFFZ(
%,aq/HRMGZ:L[0^R!M:r>N_r+)ffQfk"iQ%OI^%@qBG_s3Qn>e-$:>f78[+;X"juO>3=iN-3M`=:b]e%KWXWO2*/<6H_WB_lk7X#Z
%cKX@5TG!6E4_jYUQ8Uk9E\c@cT@JP5qj>9bE)c-1D%V']0hY3P)XVS1Q#uCHoI,lq>!9N4:j#1`5!nK7Ur`+)NbZP7P]9C/dQ7WJ
%BD\V..X+BeRtIqb*@-=oC*Bp6Hl):+[\%5(-lbFIek7\_A3q\ks4Zc:\MiA!gJj\_TuOS?>Ij@>o<@fsJd?,T/LntE4*8Zb85'DM
%F`V@fi6_sIedOgtkfI+>aE=Bj@93tjN!FEqHX&149#7EFG"4;2kRPuqT<ki3R\cjd0hkCNj`9XLE-:I5?pfi-&8EE3Z#E*eKN#;i
%!&69,5gU-/@;"=^QG`>/`4oo29gQ?%U3&l`>8<5sMb?KtGc!]M9Y+o'j5K'uLLmPl8gC.>k,Q`50&pQ@7B='jEVpE>J?_aAFoXRM
%oYq1l4M55\%FbK\/=XK8A">O$lJjQOQuF3s^!$+I,%$f9FmLuk+sVZu::\69?2]>dFraVS<M!*L1d,S97&Xb[D.KTrn`75),"WeX
%ogiA!GE':7.4)Dl0qg:EG=e3HEt9XeOS!8?Y,nQ'N=@[bVjoSaRU)iU^8@J&:fA"(R##tL6NTB\SSiuXCSI>cGVWZMl@>C>MCGoo
%8f?nPaaX=,OsHGufiiF^n@hd]lgk)p8.3/e>;/\3-2YI!fGHEt$d5jb\"K55#S[Eern#d>jjI1-J@!.(5osed@fl:&UN1PQ+B0>8
%jeg\=NF'"]fPCB4a5-aO:Ye5PXhUL5rP(Slk-&\*J+^;BTDnWa5JR$fJ):1op"-[(YQ"OUn)"&]&)[BP^V0U)Ma)U`j1#']p<.Bh
%ruTeep>9fglc\aGGl-NNr:u,W?iKgRJ,XAFi(NqT?[_Uf^\aKRrp[[5c1-e~>
%AI9_PrivateDataEnd
