%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Black_Sheep_Hurt.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: WINDOWS
%%CreationDate: 1/25/2017
%%BoundingBox: 0 0 921 239
%%HiResBoundingBox: 0 0 920.2725 238.6587
%%CropBox: 0 0 920.2725 238.6587
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.2 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 36 8%%BeginData: 7406 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD12FFA8517551A8FFFFAF7D7D27527D7DFD21FFA7A07AA0A8FFFF
%FFA7A74AA0A1CAFD20FF9ABB99C3CBFFFFCAA1BC8CC3A1FD14FFAF52F87C
%A09F757D7D27F8F8F827F827A8FD1FFF75749FCCA4A5A0A851504A744A4A
%50FD1EFFCA8C98A0C19E9AA1C38C8C8CB48C8CA0FD12FFA851519F515151
%7D20F8F82727270527F8A8FD1DFFA87B9FA49F74A59F744A505074747450
%74A8FD1CFFC292C198BB92C2988C8C9292B492B48CBCFD11FF7D50A6FF7B
%A6A726F8270027F827002700007DFD1CFFA774CDCEA4A5CD504A4A745074
%507450744AA8AFFD19FFA99998CFC8C0C8C168928CB48CB48CB48CB493FD
%10FFA8519ECECF75A6CE50272727052827270527F8A8AFFD1AFFCA7AFECD
%CE7ACDCD9E507A5074747A74745074CAAFAFFD18FFC298C7CEC7BACEC7B4
%92B48CB492B492B48CBCFD10FF52A6A074C74A9F7426002726270027F8F8
%F827A98BA9FD19FF75CD9EA4C69EC6C650745074507450504A4A51FFFFFF
%85FD16FFCA98CD98C698BAC0988CB492928CB4FD048CA1FD10FF51FFA650
%74264A27002700512727F827272052FFFF8BAFFD17FFA89FCFCD749E749E
%50FD04747B5050507B4AA1FD1AFF9AC8CEC092BA92BA8CB4929292B48C92
%92928CFD10FF7D75A5C774FD04F827F827514AF82775C2994B7DFF858BFD
%17FFA77ACCFEC64A504A745074509F745050C6C6C674A8FFFFA9AFFD15FF
%9A9EC7C092688C68928C8C92BB8C8C92C1BABA99FD0FFFA8509F7475F84B
%6F6F262726A64A0075C275C2757DFFFFAFFD17FFA7A4A4A47A5074C09875
%4A75C69E4AC7C6C7C69E7DFD19FF99C098BA928CB4BB92928CC1C08C92C1
%BBC1C0BBFD0FFFA851A49F7426F84B4AF8F8A67427F875752720754B7D7D
%CAFD17FFA87AFEA4A44A7498984A74A59E4A509E9E4A749E7B7CA7A8FD16
%FFBCC0C698BA689292926899C0B48C92BA928CBA92BCA1C9FD0DFF4BC7C7
%9F2627F8F84A7B7A75F82799A04B264BC2754B52FD18FF9FC6FEA4745050
%4A9E7AC69E504AC7C69E4A9FC6C674A1FD16FFA1BAC6C692B48C8C8CC098
%C08C8C92C198938CC1BABB8CFD0DFF524A9F50A55074507A9E50F800F84B
%994B75C275752052FD18FF759EA4A4FE9E7AA4A4FE74744A4A74C774C7C0
%C69E747CFD16FFCA8CC098C0C0929E98C0C0FD048C98BB92C1BABA9292A8
%52A8FD08FF7D52F82774C7C7759FC7509F2627F82727A0A0C9994B7DA1A8
%FD0BFFA8A0A7FD07FFA8A7757474C6FEFE7AFEFE9E9E7450744A9FC6C7C7
%C775A7A1FD0BFFA1C3CAFD07FFA1C392B492C0C6C098FEBAC092928CB48C
%BBC1C8C1BB9AC9C3F8F8F8525227A8FFA87DF8F8F8270027507474C1744A
%F805F8F875C299A0997527A8A8FD0BFFA8754A507C7C75FFFFCA7D504A74
%50744A9E9EC6C6C674504A744AC0C6C7C6C79E7CA8FD0BFFA18C8C939A93
%A1FFFFC39A8C8C928C9292C098C0C0BAFD048C92C1BAC1BAC192C4A8FFF8
%2727F800F87DA827F8FD0527002726262627F827F827F89AA0C2A0C2A09A
%4A52FD0CFF4A7474744A74A1CF4A7450FD05744A7474744A7450744A74C0
%C7C6C7C6C79E747CFD0AFFC38CB48C8C8C93CABC8C9292B492B492B49292
%92B48C928CB48CB4BAFD05C1BA92CA27F80027F827F827F8270027002700
%270027F8F8F827F805F800209999996F99754A7DFD0CFF754A7450744A50
%4A7450745074507450744A504A504A744A504A98C0C6FD04C074A8FD0AFF
%A18C8CB48CB48C938CB492B48CB48C928CB48C8C8C928C928C928CB4FD05
%BAB493FF7DF827272827270028FD0A27F8270027F8270027204B274B4B52
%7DFD0DFF7C50FD04744A74747A7474747A7474747A74744A74507450744A
%74749F759F75A8FD0CFF8C9292B492928CB492B492B492B492B492B48C92
%8CB48CB48C928CB492B593BB9AFFFFF8F8F827F827F82700270527002705
%2700270527F800F827F827F8F827A8A9FD0FFFCA4A4A7450744A74507450
%74507450745074507450504A5050744A742676A8FD0FFF9A8C8C928C928C
%928CB492B48CB492B48CB492928C928C928C928C8C68C3CBFD05FF7D2727
%F827F8270527052727270527272705272727F827F800F8277DFD13FFA17C
%4A7450744A7474745074747450747474507474744A744A5051A8FD12FF9A
%BB8C928C928CB492B492B492B492B492B492B48C928C928C939AFD0AFF52
%FD04F827002700270027002700270027F805F800F8F87DA8A87D7652F8A8
%FD0FFF7C26504A504A74507450745074507450744A744A504A504AA7A8A8
%A1A15175A8FD0DFFA8FD048C928CB48CB48C928CB48CB48CB48C92FD048C
%93CAA8CAA19A8CA1FD05FFA8A8F827002705FD072705270027F8270027F8
%4B4B4B4A4BF8F87DFD0FFFCFFFA77450FD04747A7474747A747450745074
%50745074989F989E74744ACFFD0EFFCAFF93B48CB492B492B492B492B492
%B48CB48CB48CB48CB5B4B592B48C8C93FD05FFA8A827F827F805F8270027
%F827F805F827F800F827F8F84A996F994B27F8A8FD10FFA8CA4A504A744A
%74507450744A744A504A744A504A744AFD04C09E4A50A8FD0FFFCA9B8C92
%8C928CB48C928C928C928C928C8C8C928C8C8CBAB4BAB4B48C9AFD04FF7D
%F8272027F8270027F8270027F8270027F827F827F805F86F6F996F4BF827
%FD10FF7C4A4A754A744A7450744A7450744A7450744A7450744A74BAC0C0
%C0744A51FD0FFF8C8C928C8CB48C928CB48C928CB48C928C928C8C8CB48C
%B4B4BAB4BA8C8CA1FFFFFFA8F800204BF805F805F805F827F805F827F8F8
%4A75F8F8277D5151275127277DFD0FFF7D4A4A7474504A504A504A504A74
%4A504A504AC098504A7C7CA07599747550A8FD0EFF938C8CB48C8C8C928C
%8C8C928C928C928C8C8CBA8C8C68C39A9992BB929393FD04FF52F800766F
%27F8272027F8270027F8270027F8759951F8FD05FFA9FD12FF7C4A74C0C0
%4A744A7450745074507450745074BAC77451CAFFFFFFAFFD11FFCA928CB5
%BAB48CB48C928CB48CB48CB48CB48CB5BABB8CC3FD04FFCBFFCBFD05FF52
%F8F84A6F20F8F8756F20F827F827F827F8F8209A994BFD18FF504A4ABA98
%984A5098C04A504A744A744A744A98C0C675FD16FFCA8C8C8CB4928C68B4
%B4928C928C928C928C928CBABA92A1FD0CFF7D525276767DF8759975F827
%F8270027F827F8F86FC26F7DFD17FFA876A17CA77C759EC6987450745074
%50744A504AC0C69EA1FD15FFCAC39AC29AC39392BABB92928CB48C928CB4
%8C8C8CC1BA99CBFD10FF52759F9920FD07F827A87D4A99C226A8FD1AFFA9
%7C9EC7C07426FD044A504A75A8A174C6C674A8FD19FFA199BAC192FD078C
%68C3A89392C1929AFD0EFFA82775C2C24A527D7D27527DA87DFFFFFF4B75
%A0A027FD19FFA87B9ECCC69876A77C7C75A7A8A8FFFFFF7BC0C7C67BA9FD
%17FF9ABBBAC1BAB5A1C39ABB9ACAA1CAFFFFA8B4BAC192C3FD0BFFA87D26
%999FC24A27AFFD0AFFA82099996FF87DFD16FF769E9EC7C09E75FD0BFFA7
%98C0C69875A1FD14FFCA93BABAC1BA92A1FFFFFFCAFD07FF93B4BABA8C9A
%CAFD08FFA827F89A999A4A27A8FD0CFF524A9A4B05F8A8FD13FFCA4A74C0
%C7C0C074FD0DFF7CC0C09E4A4AA7FD12FFBC8CB4BAC1B4B4A1FD0CFFCB8C
%BAB4B48C93FD08FF7DF8276F994427A8FD0DFFA827F800F8F8A8FD13FF7C
%4A50C0BA9875FD0FFF4A744A4A4ACFFD12FF8C8C92BAB48C9AFD0EFFA1FD
%048C9AFD08FF7DF8F84B4A52AFFD0FFFA8272752A8FD14FFA74A7498987C
%FD10FFCF50757CFD14FF938CB5B4B5A1FD10FFBD8C93A1FD0AFFF8F8F852
%FD12FFA8FD17FFA8504A4A7CFD13FFA8FD15FF9A8C8C93A8FD1FFF7DF852
%FD2CFF7C507CFD2BFF9392A8FD21FFA8FD2EFFA8FD2DFFA8FD1EFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Sheep_Hurt</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2017-01-25T21:58:15+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2017-01-25T21:58:16+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2017-01-25T21:58:16+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>68</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgARAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqkfm/wA5aL5V&#xA;05bzUmd5Z39GxsbdfUubqcgkRQR1HJttySFUbsQN8hkyRhEykaiEgEmg8m88n81NaudKuNTW10vS&#xA;9QnS207yjHd3Hq3MjjlW8ubX0SeKKzlVJRQOjkVzU6rXS9IEZCMvMAn53zJA6GyOTfDEN9+TANR/&#xA;MS9/LfVbm0g0nUdB8wQy+tDocc/1vRp7Tio4uZpVLF350lijVl2Br0NmhjlJJErAl9MuY/aBXeD8&#xA;UZTHuYd5p/Pb82PMl/8AWZNV/QsItzbpaaS0kUB5luTSJI8pdyr0qTtTahzcCDjWxTRPNnnHyzbK&#xA;mga1d6ZbQut2bW3ldIWuIhRWaMHiysCQ6nZ9uQNBhMVt+gmjagNS0ex1ELwF7bxXAQ9hKgen0csr&#xA;ZIzFXYq7FXYq7FXYqx/XfNn1K+TSdLtDqmtSKHNqriOKFG+zJczEN6amh4gKWbsM1uv7Ux6agd5y&#xA;+mI5ltx4jLfkHn+o6P5vu9Wu21eO18x3qQi5bTI7i5tobZGJEaQCvpFmKmhdeRoasNs47WdpZs2S&#xA;cJcQofwmwPOhuasWAT8XNgIgCtmML+b+paFW00GO5mZB6N1a6z+8ihuEoHaLjM06CqlfSLU6Eceh&#xA;2Oh7SzYoDikMgMbH7DtYr3fFMtOJc9vcw3WvNnmzXo54tW1GWa2uLj15bEtytxRmKLGp+yqhth7b&#xA;4M/aGSdi9i2wxRjyDJ/yq83+Y7bztpFjcanc3Wm3Jax+pyyPJGsRjZo+KsSAUkGzdeO3TM3s3W5J&#xA;ZREnamrUYo8JNbvpFWVhVSCKkVG+4NCPvzpiHVg23il2KuxV2KuxVAa5rml6HpsupanOILWKgLUL&#xA;MzMaKiKKszsdlUCpyGTJGETKRoBu0+nnmmIQFyLzLzlrPnvV9Lj1BVXQPL5dVSyaV/r140jcY0ka&#xA;3KmEOSBwST/WYjbOW1/bUpY+LGCMZ62AT5jntQPT5vSaDS6bFkMD+8y99emPz5+8j4MQ1fW7vyTq&#xA;ciyWF5oOpuqtpwsJzdWVwy19VpxcPGJFaq/Dx5LvRu+Ymnz5YZJESlGq9Mt/xe+4JHls7bBpo6yA&#xA;oxyR68Q4ZDuqht9x7ki8wfnN+YeuXFtItyuiwW5dli05pEZi1OPrF2cScePhTfpmyz9qTl9O1Ofp&#xA;PZvS4QbHiX/Or7O5ithq/mHTvXaw1W6s5b1uV/LbyvE0zBi4dipB5896/MdDmJHWTiTRO7tcuiw5&#xA;KE4Rlw8rHJ9Z+Qdaudb8l6Nqt0a3V1axtcNsA0gHF2AHTkwJzq8M+KAPk+UdpYBh1E4R5CRr3J/l&#xA;rhOxV2KvGNRm0fzJ5184tqtw/r2EZ0Hy/HG1HgX0I5bydBXZ3mmClv5UXOa7c1mOJMJgmgJR7uKz&#xA;z+XyJc3TYydx+A8Z8z/nFr9t5k0qzvIJZ9Q8tGRbqW1I4FJYgonjqSY+XNTxanGvGp65Rpezjkxc&#xA;QmeEgcF3caN18O8N8sgjKjGyObz7zP5n1fzFrDa3qo/fXcSi3CNzX0o9lRSC3Jqtv03PTfOi0GCG&#xA;DGYg3W5twNQZSN1V8lPXfL+saNrUWhNZ3H6XmiidrAhJZFmaMGUKYmkUryDMKkUX7VKECWm1cZRM&#xA;idgeaJYDYAG5Ttfyi8xQRwXWrSpLpamOXVLWzYterDyBnSBWHpPIqVoee58cqj2lAmt3Ml2XkjG9&#xA;vc+2rG7to7Sxv9NnM2i6iIXtgIppAsDwosCwqo/dq32iX6VzbQAnGq3iO8C973vn7g6PIZYp3dxl&#xA;LuJragBXLfck7J7mM5jsVdirsVdiqjfXSWdlcXbglLeN5WA6kIpY/qyM5CIJPRIFmnl9nFcReUbf&#xA;WbGZJvMbSjU9SLsAs01woMlvIwJ4hY3CR/y8VPQZ5B2nrsOfLcuPxDKQJ7gD6TH3EXt3y8nb48Z4&#xA;uHo8/H5w6gNQ1TUbG0mB1EwpbvccUjWSNeBV96Eb1oGr8szT2RIgCc99zKiblZv8bOQIwr6WKaRp&#xA;17qusQ6d6Es9xNOTeRxlFmMat6lw4Z2VA3DkQWalab5spSjCPETUQP7GuWyjpejavrF9+jLJC0kR&#xA;Vbq5KkRxr/O5NPDZepxyZoY48cuR5DvbI4yTQeg/lz5Ql8u+fNLvvMEqSQsZINOkty7qLuVeEYm5&#xA;KpUMjOFpX4qVOZ3YeuwZM1CxLpbTrMMowe+ypFbiN05pGJCWihTkHaUmpcKrNTk3InbxOdxEmVjy&#xA;6+X4p5+QEKIsC+QHO+/bzv70Tlbc7FXYq7FXYq838z3umah+YP1HVmLWOjWSyWdt2e+u+fKShI5G&#xA;OFAF8OTZyXtJrMcSMeTi4DEnbv6X+OYej0GKcNLx4/qnLc/0Y1t8Tz9zyTzV511bS3s/LsqyXb6d&#xA;cJcW0se/qQxkirDcrIoXfalRy75zmi0vjQ4xKoEH0/zZHnXkf2PW6XQ45XkquIb/AI/HcxfzF5p1&#xA;HzBfx396T6KK8NtyYMVAPJubAn4zTf5d6Zs8Ol8KJFmUjuT+OjstJpseEER2Qeo2N3pq2DTwTJca&#xA;lCsyQtxfl6jn0TGsZZhzjKfCwB5dstjUrAI9LPDqBMyo7RNfLn9toxPI/maWzFxyijaRS5tnZhIv&#xA;gNgULH3IyP5nEDW/vYnWRun1b5DfR28m6ONGLnTYrWOGD1RxlHpD02Eg/nDqQ1O+drglEwBjyp8p&#xA;7RGQaififXxG+7ffby7k4S9s5LmS1jnje6iAaWBXUyID0LKDUV98tcJWxVZNNDChkmkWOMdXchRv&#xA;7nFXzV5g17yDL+afmfRZ5bXV7C+liv0VU9dYr2OFYLmFaKayKYg54V+0R+y2ct7QabKJRzYyQao9&#xA;HY6OUSDE+951r35ZeYLLXrbWvL8MGjtq90tlYaXJIDIEZCxeYqJU3SNndV5UArUtkdH2xj8MwyEz&#xA;4I2Zfq5d9Dl8mZxyjISh6Sdqa03yZb6Jd3/mPzZJZX2oaTdmC+0i4gRrWSJolKyq1E9Q8JlaMOm7&#xA;DiRy3WWTtOWXhx4QRGcbEut93zG+/ny5jwjImc62O7DbTzNp5/MCy1u8MltpcVwPTUMWeKJEMcQ+&#xA;I149C4BO1QNqZuoaWUNPwc5dfe0Y88fHEjtEPUp/LPnF/NE2oabe3MWlCRUvXvZfVt51kUOYoLdY&#xA;+MYRfhD8ga167nMAZIeHuN/Lp7y7k48ni+k7eZ5+4fpZF5T8/wDm611Dy/oflTXrjWdLjv7TTRp8&#xA;trFJDHZLIscoF2turusMSn4vUJHUsaUOy0+XKTU40HU6rDhiCYSs3yfTmZjgOxVxIAJJoBuScVU7&#xA;e5trmP1beVJoiSA8bBlqOu4rgBB5KQqYVQWsXOlw6dcjU7iO3s2icTvK6oBGVIc1b2OQmRRvkyiD&#xA;ezxjy/N5a17y2lvJp8Ws6vZL9RWRIwrSiLaORpJAvGNlHP4+1RStRnjOvxZdNqZcM+HETxX0+A7/&#xA;AMF3vdL5sWh/Lzzrpl5f6TpNzbTcbVb25iLMVDSFlVF5xyVkb02ALEcgKmmbGXa2myRjkyCQ9XCP&#xA;hW+xG2/w6NmPUyxg8J5qiWOh+T9DF8DBqt1qdtFcafO0fpXEM9OQEdGJWMiSrstDtQ1qAHx8uryH&#xA;HRhGMql1BH6+4fqNwjGvUfgln5XXluupajp8tzLDd38C+hJHxLH0uTOdw37yj1XanXM3tWB4IyAB&#xA;jE/f+hs053IZLpmka5p9q13rOoS2GkoUu7RbiX17y2mjcNFIJWTjWo+xRhvTKPzPBlicUf3o6gUD&#xA;8P07M+C4kSPpZ9+XnmjzNqnmie0uL6XU9FSw9b61NbJbstz6qoifBFD9pObf079t2Rq9Tlvxo8JD&#xA;ptXhxwA4C9JzeOC7FVM3VsLgWxlQXDLzEPIcyo/a49aYLZcBq62VMLFp3RFLOwVVFSxNAB88UgW8&#xA;S/MTWPK0f5jehLc295FqVlFBqFrT1RHPAzNEX2K8pI5fhHX4fcV4v2qwSnwzxn1w7ntexcOY6XkY&#xA;8Mrie8Hn9343ef8AmrybcGc67o8CadBE8cVpExpLNJLIEDBQHChmcKoO5HUAZo9D2iAPCyHjO5Pc&#xA;AB+P2u+0utA9EzZ6+VKMXk26h1O7udfuLZ7rTFguEtGTlbXETFmo8lIjxrGytUbd6jY2/wApRMYj&#xA;EDwyJF9Qfdv3/gs563xIgQBqVi+oY3rus2V1rcd3BGbfSreWP0oYvg4xo/NjEp+FST9kDtTNjpcE&#xA;owqRuZ5+/wA3Nw4THHR3kzS/03XL/UI9R0W5mSH0o5muJHrahH2VBCFPLl1JYjr1zGxyjGJEhy8t&#xA;/m4MckIjhlV/amtr50806JZS6f5b1Se5kt5D6WlrbxzxCeaQs8Yl9FnALuTxL7dAV7bfQazUgRiB&#xA;6HXajs3TZZceWIBPM2RsPK+7y+b55aTW9A823o+vvH5n0i9mWbV7eQvI1wkjB5fV3LiQ1J5faBof&#xA;DOwFEPnBZ/8Alr/zkF5u8oarfvrMtx5gg1VJpmtJZSfTveXJJkZ6+nG1SHVfagqMBim2KebvPvnX&#xA;zoIB5p1WTUIIHaaKy4xx26SOKVEcaJy4r8K8q0HzOERY2kKIsfD0qxGIhomjJRkYGoZStCpB8MZw&#xA;EhRGyRIg2E8b8y/ONgIbn1IL2S1jaKK4uEf1Y1kI5cRHJElTQAnjXbNNk7CwG6sA9BX6QXMjr59Q&#xA;CWP6zr2razcvcahcNKWbmIxRYw3ELUIKCvEUqd/fM7TaLHhFRDTlzymd0+/LPzJpOg65PLqUaBbm&#xA;JY4bpwKxFWJYBj9nmCK9Bt1yvX4ZTiK6Ob2ZmhCR4uvV6tL+Yvk5j6D38ZMgI4q6M1CPBWLfcM1A&#xA;0uTud3LU4+sh83oH5B3nm6e+Wytby6m/L/SNP+q2ZvLOG3WScughW3kWGCWUQxo4kckgkitW3zd4&#xA;JZCLmKec1MMcZVAkvb8vcZ2KsO/OC1vrn8uNaSylMUiRLLJ8XDnDHIrzIWqPtRhhTv075i62JOKV&#xA;N2AgTFvmjSta1awt7g6LeS2K3kfo3SQsUWSMncbdG8GG46dznJY9TkxEi+btJQEubNtN/OnzPaeU&#xA;5dCheSXVIpgkGsylZGS3NGKt6nPnIu6gntTvmxj2tKOGj9fe0HSxMr6MM1a9vtY1CTUdXuHv72QK&#xA;pmmCkhUFFVQoVVA9hmrzarJkNyLkRgIig3Y3t7YXS3djO1tcrt6iU3X+VlNVYfMZiZMcckeGYsM4&#xA;yI5JlJ+ZPmu3aaJPq0bXjF3ukR2lZgoUFvUd12UAAcaUGYw7HwSo+r09Nq+wMxlI5AMYnuLi4lMt&#xA;xI0spAXkxrRV2VQOgUdgNhmzjARFAUGskl6D+XXmvQrDSDp9yY7W6R3d5GKp6oZiVarEciAePXt4&#xA;Zpe0tLklPiFyj9zsNMImNWAfNkGoeZ/K2oxrCNR4TQTRzwS24WZ0mhYPGQgWZWoy/ZZTlOiw6nDk&#xA;E4RPEO8Ms8IGJBkPgXqP5eT+Z7nQpLvzC8rTXFw8lktxFHBOlrxVYxLHGqBWLKzUIqAQDnp+gOY4&#xA;gcv1l5fUCAlUOTJ8zGh2KvkH8w47yz/MvX0upidQW+e5trqOQmRI5D6lvxkB5IY42VQB9mlM5fXc&#xA;cMpN9X1jscwyaPGAPTw0RXwPzPzTLyl+bXmnQfMo1XVby51a3uyYr2zaT+8UJSN41PwI6FRUgCor&#xA;45Zp+0ZCdyNxrdx9f2Bhy4eDGBCQ5H9aD82fmB5t81+vFqd66aXNP6yaVHwEKKpJjRmVVZ+Ox+I7&#xA;nfKNR2jkyWL9LkaDsbT6ajGPrA+r7/cxsQQhDGqBUPVQKD8MwOI3btkx/wAU+YLSCHhKl2tqTJEL&#xA;kOzKQKcgUZOTAVoW398x/wAlhmTtw8Xd/YfscWWkgb80s1LXdU1dhLeTFlYKfTUcU2qRUDc0r+0T&#xA;mTh00MW0Q2Y8EYclTy7qNrp2sw3d1GHhCsnIivps1KOPDpSvvks0DKBA5pzY+ONPQD5x0Aca3SVb&#xA;oAyE/cGzWDTzPQuu/KT8mW/lLe+ZJdctNP0S5nbynbvcXWoetbRrBWUMRFHO0SyPIZpA/wBs0UeG&#xA;2dX2RPUGhIVAPN9v4tPGBnMDxzQFS3261dVQrkwD80v+cUrnSbFL/wDL5rzU5pLoJJpEjW9Ybd1d&#xA;mdJXMJYI4VQpq1DWpoc6AF4qngmsaNreheYbjTtXgNnqNjxjubd2SRgZEWQBjGzr9lgdj+OSBQiF&#xA;dG+yQflk2LeFVKeaEIytR67FOtfngJSlTw0kDwgJQEcCSRv9OQpLLPy50HynquqTjzZf38Nlbem/&#xA;1bTLUSvMr8gymYv+5oVH7DVr1GV5MgjzLbiwyn9It9Ix/n3+WPkby2LHyv5X1CO0tVVIYVhitomY&#xA;7AyyySNKST9pyjMchHLGRoFsnpskBchQemflV+YcPn/yfB5ijsm09pJpoJbRpBNweFyu0gWPkCKH&#xA;7I8MsaGX4q7FUq80+W9O8y6FdaLqBcWt0F5PEQsisjiRGUkMKhlHUZXlxDJExPIsoTMTYfP3nD8l&#xA;PNekar6egw3GraWYBI1yTBGVk5MGRgXT7KgGtO+c/qeypA+gWHY49VEjfYvOtPdlJZjRZTzp4VHj&#xA;mpyj7HJTAEEVBqMx0uJAFT264qhrp4XUKVEnf5fSMsgCEIERSKWCMArGtTUkfjl/EDzV6H+XOkeQ&#xA;xDb6t5iW+1SZGJXTktR9VV42K/GwdvW6VoeI8VOZeDUaPEbyS9XciWmzzHojt3vRtf8Az+0nRxFF&#xA;Z6DdyKQTSdorVQgNPgC+sT8iBmyj25hl/d+r7HEn2dkh9ez1eGVZYklX7Mihlr1oRXN0C69dirsV&#xA;eI/md+Q63C6p5g8tS3M+sXU5uTpZMRR5J5QZijv6ZWgZnoWPgM1eq7PErkPqex7I9pTDgxZeEYwK&#xA;4t+g2/U8P17QNf0LVY7LWLZ7K8RFnEcjI7FHLKD8DMN+JzT5cJx7SHN7TS6vHnjxYzxR5L0kVgKE&#xA;E03GYJFOSuwKseWNQakVHbCIkqlksSllaJRGVNeO/E/RmTGXeqa+WNP0q+1YQa3e3FpZ8OZaztxP&#xA;I3FgCg5OvCqn7RDfLLcfhc5mg4urnmjD91ESl5mv7fds900X8zfyx8maKbTQNFvykalnk9FFklfa&#xA;rTSyyKxJP3dhTbNpj7T00BUXjNR2Fr9Vk4sso/Pl7gAzT8svzHi886ZeXa2LafLZziB4TJ6wKsgd&#xA;WD8I+tSKU7Zn6bUjLG6p0na/ZR0cxEy4uIXyr9bx7/nKT83vMekavaeTfLl7Lph9BLzVL+1cx3B9&#xA;RmEUCSIQ0YonNyu5qorStcoB1BfPvnZNcfULXVdcvpb/AFC/hVbu6nC8i8KJHGrOACziMAFm3NMp&#xA;w5xMkDo5ep0pxRiTzKSKlz6RnWKUQcvT9cK3p8gK05/Zy7xBdXu43hS4eKtmi7mlWJp03ybBTkZl&#xA;QlRyI7YCoZHrPku5sdNtNTsXk1C1uGSByq8m9WQAx8ERa0krQe9B3zDwarikYnYux1eiGOAlE2Ht&#xA;flr/AJxg8/6Xp8N9bX2nS32oQQSXlleGe2a3fjyaESRJdBuDOQW475LPh8Tq16TVeDe12s8wf848&#xA;fm3q1qlmkelW68w0khvZXU0qB/x7A03r0rkcGn8M3dtur13ix4ap9Aflf5ITyR5F0ry2JBPPaRs1&#xA;5Ov2ZLiZzLMy1APHm5C1FeNMyXXsqxV2KuxV81+a/wAx/N3mHzvLb6Pqc+n6dbTyW9lFbuVjaOMl&#xA;XmmXpLz4luLggDbxryvaPas4EyB9MftdxpNGJkRrcvPdSsjp2oXNkzHjC37suACUIqG2oKfLNbiy&#xA;+JAS7/vcrPi8OZisZLqHiJYpYeSh1EilahuhFevTCDE8iCwljlHmKWFmJqSTXDTBE6XZpe6nb2ck&#xA;hhjmbiZRQmoBIG+3xUplebIYQMgLpv0+ITmIk1aeW35f6xdebLXy7ZhmF7SWK8ZeapbHd5ZKcR+7&#xA;6UqKmniMt7NP5qq59fJhrIjDI9weoWX5R+c9Is47Ozk0++t4eVHeaa3lYs3Inj6Uy1qT+1l+q9mJ&#xA;5JmQmN/Jnpu3I44CPDyS+5/JLzhreu20mrNaWukoUW4WKZ5JTEGq6oPTUcn6VJ2zJ0HYEsO0iCL3&#xA;cbWdqDKbA6Pd1UKAqiijYAdAM6l0rsVdiryf8/PzC1Ty9p1no2jzNbX+qCR57xCRJDbx0WkZ/ZeR&#xA;moG7AGm9CNf2hqTjjQ5l6f2a7LhqJnJkFxh07z5+Q7ngPmG512+gsdT1e+mvpQgtxLcH1HWGrOga&#xA;Q/G3xMaFieuc7+aOWRidyHv8Gmx4bGOIiCb25fJKlMtGdEdkSgaRASo5dKkdMaHVvbLuRQsaeGCk&#xA;rWJoSBU+GEKmL6HL+h01WGRplRQ1ylBRFc0qABX4DsfvyqOa5mBFd3482s5ACAer0nyp+RHm640e&#xA;z11Li2gu7yEsNOvFliaKNmqlXQS/E6hSQUFOmbWXZEsmMb081qPanBjyyhwmUY/xCt/u+9G6j+Sn&#xA;5jXFs9uiacvI0Li6kIIBrtWBTv8ALKMfYM4yviBSPavS90/kP1vU/wAqPIcvkzyv+j7qVJtRuZ3u&#xA;b2SIkx82ARVQsFbiqIvUda50GlweFDh6vH9tdpDV5+MCogUPx70J56/Jr8s/Nep/4g8y2RN3BCI5&#xA;rtbqa2X0YiWHqem6L8PI/F1p32GZLqXh3m/yp+W+tj9EeTIL2409W43nmOe+u5LYqD8UdmjyUuWP&#xA;T1GrGvbn2wM+fHi5AcTs9NgzZvqJ4GPax5J1nzOJ/KvkPSxeLpkET3irJHEiIHBRfVlZE9WRqtu1&#xA;SFY5XooSkeOTkdoZYwh4cWPD/nHv85hqC2B8syiVuJ9b17YwAEDdphIU27jr882vE6Oma+Vv+cRf&#xA;O91rBh8zXtrp2kxcudzYyevNMafD6SuihVr1L7+3fHiWkZd+TYvJWr3/AJA1iVrvSbiBJ9KvpaI0&#xA;ts+xqV2V4Zart9n4DtXNPrcZjITi77s/KMmM45fgPYfyo/MyO/RfKnmO9j/xLZKEtbqR1X9J24Hw&#xA;TR1O8yqKTIO/xD4W2z8GYZI26rU6c4pUeXR6dl7juxV2KuxV2KvOdc/LP8qtHM+taiH00SOzNIl3&#xA;cR1kkPIrGiPUlj0RQfYZrdRodNROQCvNy8WpzA+g7sIm8raDqOqx6q1lPaaRZnnawX08008zfzyx&#xA;u7JEnTigHI/tfy5w/afaOCJOPTREe+X4/H6N5p8WWdeITI9yR6t5J86+cJItT0PS/rGko0kVtOZY&#xA;Yg7chzdfUdCyVHEEA9Dmw7K7JzDFxV9THtHXQM+G/pS/Tfyb/Mi/leMaV9SEYPKW8kSNCRvxXiXZ&#xA;i3QEDj4nNlDsvKTuKdfLUwHVl/l3/nHbVZrKW41vURYX4IaygteMoRlFQ0rsOvKmydKdd9svF2Pc&#xA;TxnctR1tSBir6dd30tvBNEy2PmbRJnQJIfhE0Z4TQSU6xSAcTTtRh2zicWXJ2dqj3A7+Yd9nxDUY&#xA;+IcpfYXrHlTzdpXmSw9e0cJdRUW9sGYetbydCjr4V+y3RhuM9L02qhmgJQPN5bNhljlUgneZDU7F&#xA;XYq7FWNeb/y68pebJLebXLVpprRWWGWOWSJgjEFlPBlqKiu+U5dPDJ9Qdhoe1M+lBGI0JeQLyDzZ&#xA;on5bBJNJ8qQT39yCUmv/AK7dPZW3YjkJP37j+RTQftEdM0GunpMPKIM3sOz8+vnU80uGPdwjiP2b&#xA;Dz+TGH8r3N4sflXyva/Wr9oJHkFVX4KfvJJXbior9lanqQM1Ojw5NRl4u53U9bDBA5cxqJKAl/Jv&#xA;8z4JYoW0CVmkHwenNBIo3pR3EhVfpObc9n5e5pj7QaIgnxOXkf1Mi0f/AJx0883GowRarJa2Wnni&#xA;9zcxS+rIFO5SNOO7jpU/D33y+HZcuL1HZwM/tXpxAmAlKfQVX4H2ozXPJC+QdXh0x5nvdE1WJmt7&#xA;iZVFJVP76Fgvw/ZIYbbgt4Zq+2NCcRE48mzs3tP89jJrhyQPId3ezj8s/PtrZel5V1q8ReApod7K&#xA;4pLD0W2dmP8Aex9E/mX3Bzbdk9ojLDhkfUHQdudkSs5scTR+odx7/cevcXqmbt5V2Kvlf/nMW+8w&#xA;ReYdAtGnlXy9PaPJHaBmEEl3DNWQyIPhcqjx05dK7d8IFrdIDyFpfnD8woo7Ty8z2ulRUjv9YnUi&#xA;3tthWKNfhM8oHRFPEbciNq6yGh9Xqd5m7Tjwjg5n7H0z5K8k6D5O0NNI0eNhFyMtzcynnPcTtTnN&#xA;M9BydqfICgAAAGbEAAUHSSkSbPNPsKHYqwf82vy6HnTy8qWciW3mDTGa40a7kBKCQijwS039KZRx&#xA;anQ0bcrTITgJCi2Yspxy4g+ZbH8gvzp82azFFq+nrodpDJR724li9OHi3xNDHE7ySNtVTsDt8QGO&#xA;PHGAoMs+onlNyL7J0yzax020snuJbt7WGOFrqduU0pjUKZJG7u1KsfHJtKJxV2KuxV2KvlvzVrWo&#xA;2f5q6pcazLI5tLyaOAyEt6Fs55QemDXivpsrfD1zi+2oZMhlH5O/7OnCBiTy6vRPLnk3WPNwju9X&#xA;Mtn5bNHWFqx3F6vUfDsYoW8ftsOlBvg7G9narJl+A/H4+9nr+1Ii4Yvm9ct7eC2gjt7eNYYIVCRR&#xA;IAqKiiiqqjYADO0AAFB54m1TCh2KvMvzS8ka3LLJ5h8rxLNqEqLHqNgRvMF+FJ4t1HqovwkH7S07&#xA;qAdD2x2PHU1MfUPtdp2f2jLADHoWMflp+VPneLzZb+ZddkbTFtmLtGJFe4uKigjb0yyLEf2gT0FA&#xA;B1D2d2bPEQT6QOjDVasTv+Il7pm+dc7FXYq7FXjP/OTF1rEGiaPHbTyxaZczzRX6RsVWRyitCklC&#xA;OS0WQ8Ttms7TlIQFcnrvZGGOWWfEAZgAx8u+vsefeSbTzH5lSLStAiJaJVW6naqW1sD+1I4H7VCV&#xA;Rdz+Oc1g7MnmyH+b3vV9o6zBpY8eTn0HU/jvfQvkjyPpflPTDbWxNxezkPqGoyACSeQDaoFeKLWi&#xA;INlHiSSew02lhhjwxfN+0u0smrycUtgOQ6D8dSyLMh1zsVSLzr5Ss/NPl+fS7hvSlJEtldAVaC4T&#xA;+7kH6mHdSR3ynUYI5YGJ6ud2drpaXMMkfiO8d346vneb8oPzV1bUm06402OGCKQo128qLaUHSRd2&#xA;ldSNxRK+w3znsPZE4S2+b6DL2k0cYcXFZrlW/u7vtfR/lPRJtC8t6fpE95Jfy2UKxPdy/acj5k0U&#xA;dFFdhTOkxQ4YgXb5zrNQM2WWQDhEjyCbZNxnnf54/wDKrv8ACCf8rEr+jfrC/UvR9T6z9Z4mnoel&#xA;8deHLl+zTrirIvy8/wAF/wCDdM/wV6P+GvS/0D6vXjTkefLl8fqc68+fxcq8t8VZFirsVdirsVdi&#xA;rsVdirsVdirsVea+ev8AlTv+M9O/xR6f6bolOXqejxr+6+t8P3fHl09Tt9r4cwNR4HiDj+r8c3Jx&#xA;eJwnh5PShSgp07UzPcZ2KuxV2KuxV2KuxV2KuxV2Ksc/ML/B/wDhS7/xdx/Qvw+py5c/U5D0/S9P&#xA;4+fLpx/VXKc/BwHj+lz+zPH8ceB/efjne1Ib8sP8Df4Vi/wbx/RfqN6teXrevQc/X5/H6lKde1Kf&#xA;DTBpuDg9HJs7X/M+OfzH1/ZXl5fjmyzL3WOxV2KuxV2KuxV2Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:F07C39C7E0E2E611BF2DF3497AE93A38</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F07C39C7E0E2E611BF2DF3497AE93A38</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:EF7C39C7E0E2E611BF2DF3497AE93A38</stRef:instanceID>
            <stRef:documentID>xmp.did:EF7C39C7E0E2E611BF2DF3497AE93A38</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EB860B6B92DFE611931BE4445CC23D15</stEvt:instanceID>
                  <stEvt:when>2017-01-24T21:21:04+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF7C39C7E0E2E611BF2DF3497AE93A38</stEvt:instanceID>
                  <stEvt:when>2017-01-25T21:57:53+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07C39C7E0E2E611BF2DF3497AE93A38</stEvt:instanceID>
                  <stEvt:when>2017-01-25T21:58:16+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>300.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -238.659 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 238.659 li
920.272 238.659 li
920.272 0 li
cp
clp
[1 0 0 1 0 0 ]ct
188.824 27.5947 mo
188.704 22.8574 192.433 24.8579 194.938 32.5234 cv
197.845 41.4121 202.138 62.6191 180.48 77.4619 cv
154.616 95.1875 133.968 77.0591 125.875 65.6436 cv
116.047 51.7651 109.495 26.0522 130.39 9.31299 cv
148.776 -5.41602 167.445 9.42725 172.214 17.6689 cv
172.519 18.0176 li
170.028 20.4609 168.354 24.6558 169.883 29.7725 cv
164.575 31.0596 161.501 33.9424 160.32 37.2412 cv
153.356 31.1846 141.571 34.2183 143.383 45.7583 cv
145.567 59.6484 162.913 66.8403 174.678 56.665 cv
187.099 45.917 188.969 33.2065 188.824 27.5947 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.118532 .179629 .999206 0 cmyk
f
182.271 64.8765 mo
194.749 52.9819 194.991 36.8721 191.956 28.3101 cv
192.884 27.8081 li
193.595 29.0044 194.296 30.5815 194.938 32.5234 cv
197.845 41.4121 202.138 62.6191 180.48 77.4619 cv
154.616 95.1875 133.968 77.0591 125.875 65.6436 cv
118.165 54.752 112.466 36.5713 120.473 21.1626 cv
113.629 43.1504 130.258 67.3252 143.536 73.2134 cv
160.074 80.5264 174.256 72.522 182.271 64.8765 cv
cp
.240848 .455299 1 .0437018 cmyk
f
169.883 29.7725 mo
164.575 31.0596 161.501 33.9424 160.32 37.2412 cv
153.356 31.1846 141.571 34.2183 143.383 45.7583 cv
145.103 56.708 156.25 63.4966 166.661 60.8916 cv
143.612 72.8252 130.614 43.7432 139.108 31.9941 cv
149.303 17.8984 164.507 25.0469 169.883 29.7725 cv
cp
f
135.036 13.8213 mo
134.19 16.0854 139.951 23.1689 142.876 22.208 cv
145.802 21.2476 147.267 12.0332 148.212 9.39063 cv
149.159 6.74805 136.737 9.26611 135.036 13.8213 cv
cp
0 0 0 0 cmyk
f
157.627 10.4976 mo
155.528 11.1152 153.88 17.8315 155.855 20.52 cv
157.83 23.209 165.742 20.3057 166.87 18.9468 cv
167.998 17.5874 159.757 9.87158 157.627 10.4976 cv
cp
f
125.697 22.7012 mo
123.466 25.2031 121.356 28.4341 122.454 32.3062 cv
123.075 34.4985 132.074 34.479 130.899 30.4502 cv
129.142 24.4253 127.131 21.0928 125.697 22.7012 cv
cp
f
191.223 32.8086 mo
190.968 35.0898 190.688 36.3442 191.277 36.687 cv
195.042 38.876 191.478 30.5293 191.223 32.8086 cv
cp
f
189.044 42.3511 mo
187.972 44.4258 186.995 46.1357 187.625 46.5664 cv
188.471 47.1465 191.123 45.3218 192.016 44.1196 cv
192.91 42.9175 189.661 41.1553 189.044 42.3511 cv
cp
f
183.627 52.2617 mo
182.786 53.2749 180.996 55.4331 181.744 55.5337 cv
182.491 55.6338 185.816 54.0044 186.217 53.3335 cv
186.617 52.6631 184.567 51.1289 183.627 52.2617 cv
cp
f
193.676 32.7983 mo
197.048 43.1108 199.709 62.4639 179.638 76.2192 cv
150.984 95.8428 130.685 70.231 126.907 64.8955 cv
118.956 53.6689 109.644 27.8521 131.301 10.5024 cv
138.236 4.94385 146.054 3.20459 153.905 5.46631 cv
162.361 7.90234 168.661 14.2402 170.963 18.0566 cv
170.286 18.7002 169.686 19.4448 169.2 20.2905 cv
168.429 21.6226 167.947 23.208 167.843 24.8955 cv
167.764 26.1377 167.909 27.4326 168.261 28.6763 cv
167.277 28.8882 166.332 29.2319 165.438 29.6816 cv
164.19 30.3125 163.061 31.1895 162.119 32.2593 cv
161.292 33.186 160.629 34.2847 160.181 35.4912 cv
158.261 34.0781 156.041 33.1914 153.812 32.8901 cv
152.972 31.2305 152.416 29.2705 151.996 27.3545 cv
151.527 25.1362 151.306 22.8765 151.337 20.6558 cv
151.369 18.4321 151.703 16.2607 152.331 14.1958 cv
152.979 12.1411 153.978 10.2324 155.282 8.52588 cv
153.543 9.73779 152.104 11.437 151.059 13.4351 cv
149.986 15.4204 149.341 17.7144 149.043 20.1021 cv
148.745 22.4937 148.812 24.9966 149.244 27.5068 cv
149.57 29.2822 150.039 31.0854 150.861 32.8418 cv
149.548 32.978 148.278 33.3262 147.122 33.9141 cv
146.303 34.3306 145.577 34.8418 144.943 35.4312 cv
143.618 34.3535 142.329 33.2314 141.079 32.0498 cv
139.613 30.6411 138.202 29.1567 136.904 27.5625 cv
134.283 24.3882 132.124 20.7959 130.529 16.7842 cv
130.695 18.8594 131.193 20.9888 131.988 23.0435 cv
132.768 25.1064 133.83 27.0933 135.063 28.9653 cv
136.309 30.8296 137.732 32.5791 139.302 34.1563 cv
140.529 35.4053 141.859 36.5425 143.261 37.5464 cv
142.141 39.4844 141.668 41.9028 141.921 44.6523 cv
140.597 45.0283 139.195 45.2646 137.762 45.3418 cv
136.02 45.4155 134.234 45.3052 132.442 44.9194 cv
130.649 44.5464 128.856 43.9102 127.092 43.061 cv
126.208 42.6387 125.335 42.1509 124.483 41.6011 cv
123.61 41.0806 122.777 40.4712 121.925 39.8574 cv
122.577 40.7114 123.31 41.4951 124.074 42.2588 cv
124.854 42.9976 125.682 43.6895 126.549 44.3301 cv
128.289 45.6006 130.214 46.5874 132.202 47.2505 cv
134.19 47.9023 136.241 48.2568 138.242 48.229 cv
139.68 48.2168 141.102 48.0474 142.46 47.6602 cv
143.17 50.3833 144.457 52.917 146.211 55.1074 cv
145.437 56.1587 144.588 57.1899 143.676 58.166 cv
142.586 59.3418 141.433 60.4644 140.216 61.5024 cv
138.995 62.5376 137.695 63.4731 136.288 64.2236 cv
134.874 64.9331 133.316 65.5068 131.549 65.23 cv
133.276 66.0166 135.168 65.8296 136.82 65.395 cv
138.504 64.959 140.047 64.2017 141.501 63.3335 cv
142.955 62.4595 144.311 61.4385 145.571 60.2939 cv
146.535 59.3916 147.467 58.4399 148.287 57.3398 cv
149.691 58.6406 151.284 59.7622 153.04 60.6484 cv
153.86 61.0615 154.695 61.4072 155.537 61.7051 cv
155.544 63.0562 155.439 64.3867 155.246 65.7305 cv
155.001 67.356 154.641 68.9648 154.148 70.5171 cv
153.169 73.6328 151.69 76.5234 149.508 78.9922 cv
151.007 78.3193 152.354 77.2969 153.488 76.0513 cv
154.634 74.8135 155.578 73.3589 156.346 71.7866 cv
157.101 70.207 157.683 68.5049 158.028 66.6943 cv
158.285 65.3604 158.425 63.9355 158.354 62.4834 cv
160.972 63.0103 163.627 63.02 166.199 62.5024 cv
166.956 63.5537 167.656 64.6704 168.337 65.8301 cv
169.066 67.0947 169.757 68.3931 170.362 69.7241 cv
170.965 71.0552 171.506 72.4126 171.906 73.8057 cv
172.29 75.1963 172.584 76.6279 172.523 78.1172 cv
173.211 76.9063 173.453 75.3389 173.386 73.7866 cv
173.324 72.2236 173.005 70.6465 172.535 69.1138 cv
172.062 67.5801 171.451 66.0786 170.691 64.6387 cv
170.175 63.6499 169.581 62.6768 168.898 61.7539 cv
171.295 60.9092 173.575 59.5991 175.621 57.8286 cv
175.762 57.7065 175.892 57.5835 176.029 57.4619 cv
176.903 57.8945 177.699 58.3887 178.513 58.981 cv
179.445 59.6748 180.355 60.4795 181.224 61.3765 cv
182.977 63.165 184.572 65.2607 186.287 67.3867 cv
185.577 64.7993 184.43 62.2822 182.796 59.9678 cv
181.972 58.8203 181.021 57.7183 179.91 56.7793 cv
179.361 56.3052 178.757 55.8706 178.129 55.498 cv
180.008 53.625 181.597 51.7227 182.94 49.8354 cv
183.774 49.8882 184.506 50.0059 185.319 50.2432 cv
186.137 50.4897 186.977 50.8408 187.816 51.2949 cv
189.506 52.1938 191.166 53.4453 192.93 54.7358 cv
191.937 52.7397 190.549 50.9131 188.776 49.4248 cv
187.888 48.6914 186.896 48.0415 185.814 47.5977 cv
185.443 47.4395 185.051 47.3184 184.657 47.2148 cv
186.164 44.7144 187.268 42.2759 188.071 40.0029 cv
188.334 40.0083 188.648 40.0381 189.004 40.0933 cv
189.548 40.1841 190.141 40.3042 190.737 40.4668 cv
191.338 40.6187 191.95 40.8032 192.571 41.0059 cv
193.191 41.2212 193.825 41.4302 194.487 41.7461 cv
194.144 41.0518 193.64 40.4248 193.093 39.8862 cv
192.546 39.3379 191.943 38.8677 191.309 38.4453 cv
190.67 38.0356 189.998 37.6729 189.263 37.418 cv
189.151 37.3804 189.031 37.3467 188.912 37.3115 cv
190.101 32.9502 190.214 29.4668 190.171 27.7725 cv
190.155 27.1084 190.231 26.7471 190.293 26.5659 cv
190.897 26.9883 192.367 28.7988 193.676 32.7983 cv
cp
189.681 23.6162 mo
188.991 23.6416 187.395 24.0635 187.48 27.4116 cv
187.547 30.0576 187.2 43.8486 173.74 55.4966 cv
168.053 60.4189 160.445 61.4067 153.872 58.0908 cv
148.891 55.5771 145.552 51.0737 144.712 45.7339 cv
144.042 41.4751 145.443 38.1182 148.568 36.5371 cv
149.943 35.8389 151.514 35.5557 153.103 35.6455 cv
153.224 35.666 153.343 35.6812 153.463 35.6665 cv
155.64 35.8672 157.831 36.7739 159.591 38.313 cv
159.558 39.0391 159.603 39.7739 159.743 40.4937 cv
160.366 37.6963 161.921 35.6826 163.832 34.2627 cv
164.795 33.5537 165.846 32.9834 166.94 32.479 cv
168.029 31.9585 169.178 31.5474 170.329 31.0522 cv
170.329 31.0527 li
171.261 30.9634 li
171.057 29.5527 li
170.857 28.1694 170.728 26.855 170.804 25.563 cv
170.872 24.2734 171.123 23.0166 171.549 21.8115 cv
171.98 20.6064 172.604 19.4775 173.385 18.4458 cv
174.175 17.4209 175.119 16.5068 176.325 15.8105 cv
175.166 15.75 174.047 16.061 173.034 16.5771 cv
169.913 11.5337 162.858 5.19385 154.224 2.70654 cv
148.189 .96875 139.005 .497559 129.482 8.11914 cv
106.319 26.6748 116.322 54.3457 124.847 66.3848 cv
136.002 82.1353 157.334 94.8125 180.898 78.9893 cv
181.04 78.8936 181.184 78.7959 181.327 78.6987 cv
202.702 64.0503 199.823 43.3047 196.205 32.2427 cv
194.438 26.8374 191.938 23.5322 189.681 23.6162 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
92.1714 158.571 mo
89.4648 160.525 87.2466 164.207 87.3677 168.165 cv
71.5083 177.138 45.4775 180.161 27.4614 178.01 cv
27.4614 178.01 18.2114 180.778 12.2075 177.176 cv
7.56201 165.859 20.1147 149.645 26.9009 149.201 cv
54.3467 161.368 74.8237 153.065 85.2588 148.673 cv
85.2007 152.026 87.1309 156.157 92.1714 158.571 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
27.4614 178.01 mo
27.4614 178.01 18.2114 180.778 12.2075 177.176 cv
7.56201 165.859 20.1147 149.645 26.9009 149.201 cv
31.2476 151.125 35.415 152.536 39.3994 153.54 cv
29.166 161.77 26.8462 171.847 27.4614 178.01 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
27.6411 176.515 mo
27.332 176.478 li
27.0327 176.567 li
26.9482 176.592 18.8037 178.977 13.4165 176.132 cv
11.1074 169.725 14.875 162.575 16.6377 159.75 cv
20.0195 154.331 24.2227 151.143 26.6689 150.732 cv
53.2793 162.38 73.6235 155.124 84.4116 150.663 cv
84.4766 151.42 84.6196 152.178 84.8599 152.909 cv
85.3613 154.504 86.2759 155.975 87.4355 157.181 cv
88.0425 157.809 88.7197 158.356 89.4404 158.827 cv
88.8174 159.461 88.2749 160.169 87.8193 160.922 cv
86.9634 162.348 86.4409 163.97 86.27 165.614 cv
86.2163 166.101 86.208 166.589 86.2236 167.076 cv
70.3188 175.868 44.4624 178.532 27.6411 176.515 cv
cp
88.4028 170.057 mo
88.2798 168.689 88.4536 167.358 88.8374 166.113 cv
89.2246 164.866 89.8438 163.717 90.5615 162.659 cv
91.2813 161.595 92.1421 160.655 93.0518 159.782 cv
94.9365 157.975 li
92.8184 157.215 li
92.8174 157.214 li
91.6499 156.542 90.561 155.81 89.5942 154.952 cv
88.623 154.096 87.792 153.096 87.1523 151.952 cv
86.5317 150.803 86.1113 149.51 86.0273 148.147 cv
85.958 146.801 86.1636 145.341 87.0991 144.141 cv
85.9614 144.764 85.1782 145.966 84.7612 147.266 cv
74.7725 151.461 54.4189 159.755 27.5103 147.825 cv
27.1724 147.675 li
26.8047 147.7 li
22.9487 147.952 17.8394 152.157 14.0928 158.162 cv
9.75781 165.11 8.56543 172.247 10.8242 177.744 cv
11.0132 178.205 li
11.4399 178.461 li
17.3623 182.012 25.8315 180.002 27.5825 179.528 cv
44.9937 181.553 70.2642 178.932 86.8013 170.165 cv
86.832 170.252 86.8521 170.344 86.8853 170.428 cv
87.4692 171.924 88.4238 173.204 89.5586 174.188 cv
88.9263 172.819 88.5176 171.426 88.4028 170.057 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
221.108 135.368 mo
221.108 135.368 229.221 130.839 235.406 132.163 cv
240.565 141.784 232.234 158.661 229.62 159.825 cv
213.806 163.379 179.101 158.239 157.562 150.513 cv
158.242 147.862 158.071 144.743 156.116 141.757 cv
158.412 140.917 161.692 137.534 162.118 133.328 cv
190.189 138.122 205.68 137.186 221.108 135.368 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
221.108 135.368 mo
221.108 135.368 229.221 130.839 235.406 132.163 cv
240.565 141.784 232.234 158.661 229.62 159.825 cv
225.859 160.673 221.021 161.026 215.557 160.963 cv
215.562 160.538 li
221.971 152.125 223.324 138.995 221.108 135.368 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
229.077 158.409 mo
213.071 161.899 179.632 156.604 159.049 149.444 cv
159.337 148.161 159.409 146.807 159.216 145.47 cv
159.057 144.4 158.709 143.363 158.229 142.401 cv
159.2 141.793 159.977 141.022 160.676 140.195 cv
161.7 138.944 162.458 137.481 162.877 135.917 cv
162.958 135.619 163.012 135.313 163.064 135.006 cv
191.229 139.713 206.699 138.578 221.28 136.858 cv
221.575 136.823 li
221.835 136.679 li
221.908 136.637 228.909 132.776 234.394 133.508 cv
238.338 142.222 231.085 156.975 229.077 158.409 cv
cp
235.715 130.696 mo
229.64 129.396 222.175 133.102 220.644 133.911 cv
206.287 135.596 190.978 136.672 163.077 131.968 cv
163.032 131.694 162.991 131.416 162.919 131.15 cv
162.507 129.62 161.678 128.269 160.584 127.273 cv
161.041 128.682 161.294 130.055 161.257 131.37 cv
161.225 132.682 160.911 133.922 160.4 135.067 cv
159.885 136.211 159.159 137.256 158.325 138.18 cv
157.498 139.087 156.482 139.913 155.594 140.35 cv
154.018 141.125 li
154.856 142.58 li
155.49 143.679 155.974 144.819 156.263 146.024 cv
156.564 147.23 156.633 148.506 156.507 149.807 cv
156.363 151.104 156.006 152.418 155.434 153.665 cv
154.846 154.895 154.117 156.134 152.931 157.004 cv
154.386 156.638 155.627 155.585 156.613 154.422 cv
157.16 153.766 157.63 153.04 158.026 152.265 cv
179.114 159.594 213.548 164.979 229.945 161.29 cv
230.225 161.196 li
231.206 160.761 232.321 159.385 233.391 157.569 cv
234.584 155.545 235.718 152.978 236.547 150.561 cv
238.064 146.128 240.105 137.754 236.723 131.454 cv
236.395 130.84 li
235.715 130.696 li
cp
.75021 .679683 .670222 .90164 cmyk
f
50.8545 126.786 mo
52.7886 120.682 50.3638 105.448 40.9624 93.3696 cv
35.4941 86.3452 30.3149 90.9497 32.0649 101.131 cv
23.6567 89.8945 15.5762 84.9873 7.6792 87.0962 cv
-2.00879 89.6841 1.52881 105.38 10.4668 112.954 cv
3.46338 113.396 -.890625 117.19 2.89746 121.391 cv
8.34766 127.437 20.3643 125.536 23.8638 125.564 cv
18.335 129.018 16.9463 135.841 24.9458 135.907 cv
30.5361 135.953 48.8013 133.27 50.8545 126.786 cv
cp
.795712 .70428 .552972 .608392 cmyk
f
45.5859 100.513 mo
51.1309 110.909 52.4209 121.839 50.8501 126.788 cv
48.7969 133.27 30.5342 135.95 24.9443 135.905 cv
16.9443 135.838 18.3311 129.02 23.8599 125.565 cv
20.3594 125.536 8.34326 127.438 2.89307 121.393 cv
-.89209 117.191 3.45898 113.397 10.4624 112.955 cv
2.24902 105.997 -1.39746 92.1865 5.56738 87.9834 cv
2.62158 92.3091 7.1001 103.497 21.7598 109.687 cv
12.4639 110.38 16.5361 117.385 24.2656 118.738 cv
29.3979 119.64 35.6777 118.432 39.7686 116.025 cv
43.376 113.895 45.4634 109.282 45.5859 100.513 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
23.876 124.065 mo
29.0269 124.106 li
24.6587 126.836 li
21.7881 128.629 20.4961 131.2 20.9053 132.649 cv
21.3301 134.153 23.6265 134.396 24.958 134.407 cv
31.4448 134.459 47.8252 131.383 49.4248 126.333 cv
51.2329 120.625 48.8379 105.93 39.7783 94.2915 cv
38.4033 92.5249 36.9858 91.5059 35.8901 91.4971 cv
35.3799 91.4932 34.9375 91.7192 34.5381 92.189 cv
33.5381 93.3667 32.7515 96.2671 33.543 100.876 cv
34.5991 107.021 li
30.8638 102.029 li
23.9937 92.8486 17.439 88.1689 11.3799 88.1187 cv
10.2754 88.1099 9.16016 88.2534 8.06641 88.5454 cv
5.69238 89.1797 4.20215 90.7764 3.63721 93.292 cv
2.39746 98.8081 5.89648 107.115 11.437 111.809 cv
14.2773 114.216 li
10.5615 114.451 li
6.24121 114.724 3.67969 116.304 3.12793 117.658 cv
2.80176 118.458 3.09912 119.375 4.01172 120.387 cv
6.35449 122.987 10.4575 124.274 16.5537 124.324 cv
18.4014 124.338 20.124 124.24 21.5083 124.161 cv
22.4907 124.104 23.2676 124.059 23.876 124.065 cv
cp
24.9336 137.407 mo
19.873 137.365 18.4287 134.918 18.0181 133.464 cv
17.4697 131.52 18.1406 129.26 19.7129 127.259 cv
18.7319 127.303 17.6592 127.333 16.5293 127.324 cv
9.54443 127.266 4.72119 125.655 1.7832 122.397 cv
-.509766 119.854 -.0996094 117.626 .350098 116.525 cv
1.2417 114.336 3.77051 112.674 7.22656 111.897 cv
2.20801 106.362 -.588867 98.4155 .709961 92.6348 cv
1.51611 89.0474 3.85352 86.5654 7.29248 85.6475 cv
8.64648 85.2852 10.0303 85.1079 11.4043 85.1191 cv
17.5903 85.1699 23.7808 88.8828 30.2422 96.4409 cv
30.3672 93.814 31.0503 91.6606 32.2524 90.2466 cv
33.2349 89.0903 34.501 88.4858 35.915 88.4976 cv
37.3633 88.5093 39.6206 89.2041 42.1465 92.4482 cv
51.9585 105.055 54.3389 120.753 52.2842 127.239 cv
49.8228 135.012 30.0298 137.448 24.9336 137.407 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
73.8564 95.165 mo
66.791 91.54 55.7129 95.3325 58.6323 103.34 cv
50.5684 103.032 36.9438 115.127 46.9756 125.829 cv
36.1245 131.133 32.6387 146.088 45.9253 155.719 cv
40.2285 159.999 43.6978 171.158 54.7671 172.583 cv
54.4434 182.564 64.5464 185.885 74.4053 183.145 cv
73.2744 190.579 84.9482 194.43 93.5615 189.706 cv
95.8252 198.355 113.751 192.145 117.271 186.629 cv
121.214 194.087 133.262 190.053 137.223 181.913 cv
142.481 185.694 153.479 181.579 157.239 171.254 cv
163.508 174.956 174.67 167.362 174.347 157.199 cv
185.185 158.557 192.475 138.188 178.371 123.731 cv
181.955 114.335 175.764 101.474 167.712 103.715 cv
163.89 85.54 153.544 82.623 146.683 88.6035 cv
141.258 78.8149 128.323 77.917 126.371 86.7104 cv
120.562 78.4785 109 78.9556 107.878 85.9102 cv
100.754 78.9502 89.9199 80.9644 89.6865 88.3843 cv
81.5898 84.7588 73.9878 88.7148 73.8564 95.165 cv
cp
.795712 .70428 .552972 .608392 cmyk
f
153.717 85.8032 mo
159.297 85.8652 165.063 91.1367 167.716 103.719 cv
175.763 101.476 181.958 114.338 178.375 123.735 cv
192.472 138.194 185.183 158.563 174.351 157.202 cv
174.67 167.367 163.504 174.954 157.243 171.257 cv
153.477 181.576 142.478 185.699 137.227 181.917 cv
133.259 190.058 121.216 194.09 117.275 186.632 cv
113.755 192.148 95.8252 198.36 93.5654 189.709 cv
84.9521 194.433 73.2744 190.584 74.4092 183.148 cv
64.5483 185.885 54.4443 182.561 54.7705 172.584 cv
43.6978 171.162 40.2246 160 45.9292 155.723 cv
32.6353 146.093 36.1206 131.136 46.9795 125.832 cv
40.8286 119.264 43.5664 112.182 48.4736 107.764 cv
45.5444 113.874 46.0527 122.734 57.5293 126.809 cv
49.8726 134.293 61.3735 145.247 73.4043 140.298 cv
68.3159 147.504 81.8281 149.865 88.186 144.776 cv
89.0864 151.9 103.597 148.303 106.625 142.219 cv
107.928 149.594 120.88 144.251 122.184 138.526 cv
127.009 145.105 141.077 135.352 140.051 128.135 cv
146.727 133.542 158.489 120.448 153.159 111.47 cv
166.881 113.099 166.271 89.6509 153.722 85.8223 cv
153.717 85.8032 li
cp
.78027 .700557 .606195 .759976 cmyk
f
117.393 183.65 mo
118.598 185.928 li
120.623 189.759 124.855 189.172 126.581 188.743 cv
130.487 187.769 134.135 184.831 135.875 181.256 cv
136.653 179.656 li
138.099 180.696 li
139.656 181.815 142.008 182.092 144.553 181.458 cv
148.474 180.481 153.494 177.152 155.83 170.741 cv
156.447 169.045 li
158.002 169.963 li
159.685 170.957 161.603 170.774 162.916 170.448 cv
167.854 169.215 173.057 163.819 172.848 157.247 cv
172.792 155.492 li
174.534 155.711 li
178.625 156.225 182.386 152.801 183.937 147.336 cv
185.612 141.44 184.747 132.416 177.297 124.779 cv
176.627 124.092 li
176.97 123.197 li
179.181 117.396 177.25 110.741 174.309 107.424 cv
173.047 106 170.974 104.445 168.269 105.119 cv
166.573 105.589 li
166.245 104.024 li
164.649 96.4419 161.688 90.9604 157.903 88.5898 cv
154.637 86.5444 150.807 86.9985 147.668 89.7344 cv
146.27 90.9531 li
145.37 89.3306 li
142.143 83.5088 136.234 81.4058 132.313 82.3838 cv
130.649 82.7983 128.522 83.9419 127.835 87.0352 cv
127.101 90.3462 li
125.146 87.5757 li
121.765 82.7847 116.582 81.5112 113.196 82.355 cv
111.941 82.668 109.774 83.5771 109.359 86.1489 cv
108.899 89.0039 li
106.83 86.9834 li
103.671 83.897 99.2837 82.4878 95.6519 83.3931 cv
94.3467 83.7183 91.2983 84.8608 91.186 88.4312 cv
91.1152 90.668 li
89.0737 89.7534 li
86.3359 88.5278 83.4668 88.1924 80.9932 88.8091 cv
77.5791 89.6602 75.4194 92.1074 75.3564 95.1958 cv
75.3076 97.5952 li
73.1719 96.4995 li
70.7744 95.269 67.6792 94.9497 64.8931 95.6445 cv
62.6484 96.2041 60.915 97.3633 60.1382 98.8257 cv
59.5259 99.9775 59.4937 101.324 60.0415 102.827 cv
60.8062 104.925 li
58.5752 104.839 li
57.8535 104.812 57.0557 104.906 56.2051 105.118 cv
51.9917 106.168 46.7681 110.189 45.3203 115.1 cv
44.3135 118.517 45.2383 121.782 48.0703 124.802 cv
49.459 126.284 li
47.6348 127.175 li
42.6777 129.6 39.3198 134.325 38.8721 139.506 cv
38.3872 145.118 41.2046 150.446 46.8057 154.506 cv
48.4517 155.698 li
46.8262 156.919 li
44.9775 158.307 44.2881 160.706 44.9814 163.333 cv
45.7979 166.426 48.9014 170.315 54.958 171.094 cv
56.3105 171.268 li
56.2661 172.631 li
56.1636 175.789 57.2046 178.272 59.3599 180.014 cv
62.6006 182.631 68.2607 183.286 74.0039 181.7 cv
76.2368 181.079 li
75.8887 183.372 li
75.6353 185.035 76.1885 186.499 77.5322 187.721 cv
80.0669 190.031 84.8687 190.887 89.21 189.805 cv
90.4912 189.485 91.7119 189.01 92.8398 188.39 cv
94.5259 187.467 li
95.0127 189.327 li
96.1738 193.761 103.108 192.399 105.206 191.876 cv
109.909 190.704 114.552 188.101 116.007 185.823 cv
117.393 183.65 li
cp
127.306 191.654 mo
123.111 192.7 119.457 191.744 117.147 189.092 cv
114.696 191.459 110.432 193.666 105.932 194.788 cv
99.4688 196.399 94.709 195.262 92.772 191.758 cv
91.8613 192.152 90.9121 192.472 89.9355 192.715 cv
84.5933 194.047 78.7974 192.932 75.5122 189.94 cv
74.0093 188.572 73.1128 186.883 72.8867 185.051 cv
66.8228 186.282 61.1294 185.299 57.4746 182.348 cv
54.9067 180.272 53.4727 177.357 53.2813 173.857 cv
46.5894 172.513 43.0732 167.856 42.0811 164.098 cv
41.2651 161.008 41.8633 158 43.6362 155.846 cv
38.0898 151.285 35.3477 145.447 35.8828 139.249 cv
36.3691 133.628 39.6743 128.47 44.6519 125.399 cv
41.4209 121.118 41.6216 117.038 42.4429 114.251 cv
44.2607 108.086 50.5156 103.444 55.4795 102.207 cv
55.9063 102.1 56.3267 102.017 56.7388 101.956 cv
56.5059 100.337 56.7573 98.7949 57.4888 97.418 cv
58.6816 95.1733 61.0537 93.5098 64.1675 92.7334 cv
66.9443 92.041 69.9819 92.1655 72.6353 93.0371 cv
73.502 89.5825 76.3208 86.8818 80.2676 85.8979 cv
82.834 85.2583 85.6973 85.4126 88.4946 86.3198 cv
89.3018 83.4634 91.6289 81.3042 94.9263 80.4824 cv
98.9521 79.4785 103.476 80.5659 107.172 83.3335 cv
108.184 81.4263 110.023 80.0542 112.47 79.4443 cv
116.26 78.4995 121.755 79.5513 125.88 83.7778 cv
127.069 81.624 129.053 80.1045 131.587 79.4727 cv
136.349 78.2856 142.967 80.334 147.087 86.3979 cv
148.326 85.5552 149.64 84.958 151.009 84.6167 cv
153.912 83.8931 156.846 84.3877 159.496 86.0479 cv
162.522 87.9434 166.537 92.2437 168.861 101.986 cv
171.649 101.742 174.339 102.937 176.553 105.434 cv
180.563 109.958 181.983 117.35 180.087 123.362 cv
187.837 131.772 188.678 141.627 186.822 148.157 cv
185.284 153.577 181.861 157.437 177.668 158.482 cv
177.059 158.633 176.439 158.724 175.813 158.753 cv
175.276 166.165 169.433 171.915 163.642 173.358 cv
161.631 173.86 159.728 173.823 158.043 173.26 cv
155.101 179.808 149.628 183.286 145.279 184.37 cv
142.503 185.061 139.908 184.913 137.798 183.965 cv
135.488 187.661 131.521 190.603 127.306 191.654 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
252.721 68.0566 mo
255.497 72.4795 253.115 80.1255 250.71 83.2339 cv
248.854 84.9019 240.36 78.6914 234.766 83.5078 cv
224.051 94.46 237.281 98.0195 246.584 95.3149 cv
248.677 96.0288 244.102 110.725 234.979 111.525 cv
223.224 112.564 221.434 112.466 209.847 114.15 cv
201.07 115.431 195.282 113.089 190.46 108.292 cv
184.894 102.767 178.382 85.5674 199.167 83.9097 cv
197.363 80.3267 194.587 76.1924 189.258 73.1699 cv
197.215 67.4063 194.851 58.6104 190.509 53.1309 cv
197.824 53.3145 205.063 44.937 206.624 40.5161 cv
212.807 45.1333 218.017 45.5024 221.97 43.2095 cv
222.363 43.8843 li
225.919 47.3511 229.104 50.3193 231.255 53.9702 cv
230.727 60.3232 230.967 65.0044 236.647 66.7554 cv
242.566 68.5752 250.849 66.6152 252.721 68.0566 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
217.583 12.1519 mo
220.704 -6.43262 233.255 13.2651 229.526 30.8369 cv
228.333 36.4688 225.724 41.0498 221.97 43.2095 cv
218.017 45.5024 212.807 45.1333 206.624 40.5161 cv
205.063 44.937 197.824 53.3145 190.509 53.1309 cv
194.851 58.6104 197.215 67.4063 189.258 73.1699 cv
194.587 76.1924 197.363 80.3267 199.167 83.9097 cv
178.382 85.5674 184.894 102.767 190.46 108.292 cv
195.282 113.089 201.07 115.431 209.847 114.15 cv
197.21 123.442 187.347 132.665 180.385 124.09 cv
173.66 131.907 154.111 131.601 160.588 118.821 cv
142.779 122.346 137.165 113.734 140.648 105.108 cv
128.313 103.224 121.816 94.2646 129.827 83.646 cv
119.768 82.6909 118.899 71.5308 130.119 64.9019 cv
121.767 57.8613 124.999 49.6694 139.416 44.001 cv
131.41 38.1387 142.953 27.0757 154.528 29.9644 cv
150.425 22.0591 161.775 15.6426 171.169 19.9839 cv
169.603 13.3984 179.042 10.1455 185.695 16.2168 cv
180.883 2.60938 194.426 4.91064 201.076 12.1416 cv
198.323 -4.90869 212.574 1.12109 217.583 12.1519 cv
cp
.795712 .70428 .552972 .608392 cmyk
f
230.13 21.8916 mo
230.314 24.8032 230.146 27.8555 229.516 30.8438 cv
228.325 36.4609 225.724 41.0381 221.968 43.2109 cv
218.021 45.5117 212.805 45.1353 206.621 40.5181 cv
205.06 44.9385 197.827 53.3242 190.499 53.1377 cv
194.849 58.6118 197.205 67.4131 189.255 73.1719 cv
194.585 76.1938 197.361 80.3286 199.17 83.9199 cv
178.385 85.5771 184.883 102.774 190.455 108.308 cv
195.271 113.096 201.06 115.438 209.836 114.158 cv
197.208 123.444 187.342 132.68 180.38 124.106 cv
173.657 131.907 154.101 131.608 160.577 118.829 cv
142.769 122.354 137.162 113.735 140.646 105.109 cv
128.312 103.225 121.806 94.271 129.831 83.6553 cv
123.931 93.7236 139.14 98.5801 145.199 92.1753 cv
148.678 98.3076 160.968 94.2598 161.009 85.8003 cv
167.538 89.2461 178.682 81.6431 174.489 70.6069 cv
184.14 68.5479 186.313 52.9482 179.576 47.9565 cv
185.542 48.7686 203.162 39.3115 204.242 28.6494 cv
212.505 36.9038 224.281 33.8643 230.13 21.8916 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
252.71 68.0635 mo
254.143 70.3408 254.207 73.4668 253.603 76.3892 cv
251.586 76.2017 250.837 73.417 248.795 72.6924 cv
246.146 71.7603 245.284 69.0391 245.261 67.5718 cv
248.712 67.5088 251.684 67.2705 252.71 68.0635 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
214.94 105.31 mo
224.223 103.294 234.4 113.396 243.596 105.114 cv
243.863 105.297 li
241.794 108.443 238.79 111.196 234.983 111.535 cv
223.227 112.575 221.423 112.473 209.836 114.158 cv
201.06 115.438 195.271 113.096 190.455 108.308 cv
186.589 104.471 182.273 95.0112 186.953 89.0273 cv
184.529 99.519 199.478 108.67 214.94 105.31 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
180.418 121.751 mo
181.549 123.145 li
186.558 129.313 193.271 124.735 204.705 116.121 cv
204.764 116.077 204.823 116.031 204.882 115.987 cv
198.782 115.874 193.78 113.711 189.401 109.356 cv
185.755 105.735 181.711 97.6514 184.141 91.019 cv
185.316 87.8115 188.479 83.8931 196.784 82.6694 cv
195.211 80.0186 192.733 76.8657 188.518 74.4751 cv
186.488 73.3242 li
188.377 71.9556 li
191.005 70.0522 192.531 67.6875 192.91 64.9277 cv
193.377 61.5396 192.04 57.478 189.334 54.0615 cv
187.343 51.5503 li
190.546 51.6309 li
196.938 51.792 203.769 44.0952 205.209 40.0166 cv
205.888 38.0947 li
207.521 39.314 li
212.72 43.1958 217.455 44.0938 221.218 41.9121 cv
224.463 40.0361 226.899 35.9976 228.059 30.5259 cv
230.193 20.4707 226.658 9.77246 223.288 6.8252 cv
222.848 6.44092 222.217 6.01953 221.713 6.20068 cv
221.426 6.30225 219.956 7.08008 219.063 12.4004 cv
218.249 17.2461 li
216.217 12.772 li
213.292 6.32959 207.361 2.2207 204.399 3.11475 cv
202.425 3.70654 201.751 6.91455 202.557 11.9028 cv
203.352 16.834 li
199.972 13.1572 li
196.28 9.14307 190.079 6.75488 187.452 8.33545 cv
185.331 9.63379 186.329 13.5073 187.11 15.7168 cv
189.105 21.3584 li
184.685 17.3252 li
181.188 14.1348 176.889 13.9204 174.448 15.3584 cv
173.515 15.9019 172.047 17.1885 172.629 19.6357 cv
173.343 22.6401 li
170.54 21.3452 li
165.263 18.9067 159.363 20.3286 156.709 23.105 cv
155.512 24.3589 154.393 26.4468 155.859 29.2734 cv
157.391 32.2246 li
154.165 31.4199 li
147.49 29.7549 140.679 33.2021 138.739 37.3389 cv
137.743 39.4663 138.269 41.3008 140.302 42.791 cv
142.501 44.3999 li
139.965 45.397 li
132.341 48.3936 127.793 52.1719 127.16 56.0327 cv
126.737 58.605 128.058 61.2031 131.085 63.7549 cv
132.702 65.1172 li
130.882 66.1924 li
124.511 69.9614 122.989 74.665 123.631 77.5459 cv
124.211 80.147 126.522 81.8252 129.969 82.1528 cv
132.642 82.4058 li
131.025 84.5493 li
127.955 88.6187 127.053 92.5396 128.416 95.8911 cv
130 99.7842 134.658 102.675 140.874 103.625 cv
142.748 103.912 li
142.039 105.669 li
140.665 109.071 140.938 112.304 142.787 114.537 cv
145.664 118.017 151.883 119.016 160.296 117.351 cv
163.317 116.752 li
161.925 119.5 li
160.244 122.819 160.426 125.196 162.47 126.563 cv
166.215 129.069 175.199 127.823 179.248 123.112 cv
180.418 121.751 li
cp
209.659 112.663 mo
218.392 111.393 221.676 111.125 227.633 110.64 cv
229.625 110.478 231.929 110.289 234.847 110.031 cv
238.404 109.718 240.991 106.898 242.538 104.586 cv
244.5 101.646 245.39 98.6309 245.562 97.1206 cv
239.629 98.4141 232.428 97.4995 230.06 93.5449 cv
228.81 91.4595 228.427 87.8423 233.693 82.459 cv
233.787 82.3716 li
237.924 78.8027 243.289 80.3477 246.836 81.3696 cv
247.839 81.6582 249.178 82.0444 249.733 82.0327 cv
251.856 79.0366 253.564 72.7612 251.633 69.1689 cv
250.855 68.9155 248.583 68.981 246.886 69.0293 cv
243.646 69.1221 239.612 69.2368 236.206 68.1899 cv
229.504 66.123 229.241 60.4932 229.72 54.3325 cv
227.845 51.3042 225.18 48.7153 222.116 45.7363 cv
221.492 45.1299 li
218.271 46.5332 213.492 46.8926 207.241 42.7817 cv
204.939 47.0723 199.398 53.0425 193.206 54.3667 cv
195.4 57.9312 196.367 61.8208 195.882 65.3369 cv
195.477 68.2793 194.113 70.8491 191.82 73.0005 cv
196.602 76.2627 199.045 80.3335 200.506 83.2354 cv
201.509 85.228 li
199.286 85.4053 li
192.522 85.9438 188.375 88.1807 186.958 92.0503 cv
185.091 97.147 188.405 104.14 191.517 107.229 cv
196.41 112.095 201.988 113.774 209.599 112.671 cv
209.619 112.668 209.639 112.665 209.659 112.663 cv
cp
240.303 111.11 mo
238.754 112.15 237.014 112.853 235.11 113.019 cv
232.185 113.278 229.875 113.467 227.877 113.629 cv
221.87 114.119 218.813 114.369 210.433 115.582 cv
209.094 116.569 207.787 117.554 206.51 118.517 cv
196.229 126.266 187.271 133.016 180.34 126.267 cv
175.19 130.855 165.727 132.352 160.801 129.056 cv
159.434 128.141 156.778 125.654 158.202 120.747 cv
149.981 121.893 143.742 120.399 140.475 116.45 cv
138.235 113.744 137.609 110.105 138.669 106.271 cv
132.191 104.89 127.489 101.575 125.637 97.0215 cv
124.526 94.2915 124.017 90.043 127.291 84.7012 cv
123.816 83.7261 121.417 81.4028 120.703 78.1992 cv
119.671 73.5771 122.384 68.4248 127.685 64.689 cv
124.199 61.1123 123.83 57.7983 124.2 55.5464 cv
124.955 50.9492 129.277 46.8081 136.737 43.4941 cv
135.069 41.3574 134.785 38.7085 136.024 36.0654 cv
138.244 31.3242 145.015 27.3838 152.291 28.0649 cv
151.827 25.5386 152.594 23.0698 154.541 21.0322 cv
157.976 17.4351 164.097 16.1924 169.54 17.7778 cv
169.775 15.7168 170.95 13.9365 172.926 12.7729 cv
175.453 11.2847 179.421 10.8857 183.295 12.7715 cv
182.749 8.47314 184.569 6.56104 185.905 5.76514 cv
189.397 3.66406 194.937 5.3374 199.233 8.5 cv
199.158 2.56494 201.77 .774414 203.533 .242188 cv
207.573 -.977539 213.286 2.53076 217.027 8.09277 cv
217.902 5.51807 219.135 3.93555 220.705 3.37451 cv
221.552 3.07227 223.27 2.8252 225.262 4.56689 cv
229.799 8.53467 233.269 20.4263 230.994 31.1479 cv
229.822 36.6782 227.423 41.0049 224.159 43.5396 cv
224.207 43.585 li
227.42 46.7095 230.457 49.6597 232.547 53.2095 cv
232.79 53.6201 li
232.75 54.0952 li
232.196 60.7622 232.69 63.9658 237.089 65.3218 cv
240.021 66.2236 243.78 66.1162 246.8 66.0298 cv
250.019 65.9385 252.343 65.8721 253.636 66.8682 cv
253.849 67.0317 li
253.991 67.2588 li
257.264 72.4736 254.413 80.8999 251.896 84.1519 cv
251.712 84.3496 li
250.415 85.5122 248.466 84.9614 246.005 84.2524 cv
242.75 83.3145 238.69 82.1543 235.792 84.605 cv
234.015 86.4307 231.297 89.772 232.633 92.0034 cv
234.183 94.5918 240.632 95.4834 246.165 93.875 cv
246.62 93.7422 li
247.068 93.895 li
247.901 94.1797 248.83 95.0518 248.521 97.5918 cv
248.049 101.494 245.074 107.907 240.303 111.11 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
217.653 83.1265 mo
217.979 83.6123 217.639 84.4106 216.896 84.9102 cv
216.15 85.4106 215.283 85.4219 214.957 84.9365 cv
214.63 84.4507 214.97 83.6523 215.715 83.1523 cv
216.459 82.6528 217.327 82.6406 217.653 83.1265 cv
cp
0 0 0 0 cmyk
f
217.653 83.1265 mo
217.979 83.6123 217.639 84.4106 216.896 84.9102 cv
216.15 85.4106 215.283 85.4219 214.957 84.9365 cv
214.63 84.4507 214.97 83.6523 215.715 83.1523 cv
216.459 82.6528 217.327 82.6406 217.653 83.1265 cv
cp
f
204.307 68.5107 mo
206.093 64.5215 210.573 60.7202 211.837 60.4736 cv
213.153 60.2168 221.696 63.1323 226.014 70.3774 cv
226.461 69.0234 226.699 67.8096 226.287 65.1006 cv
227.897 70.042 226.947 73.0854 227.186 73.6953 cv
222.66 72.4668 214.45 74.3481 209.042 81.4146 cv
208.584 76.0781 213.181 67.9736 224.055 71.3125 cv
217.783 65.9668 209.347 65.7344 204.307 68.5107 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
250.302 69.458 mo
250.347 69.9561 249.71 70.4224 248.878 70.498 cv
248.045 70.5732 247.334 70.231 247.289 69.7319 cv
247.243 69.2334 247.881 68.7666 248.713 68.6909 cv
249.544 68.6152 250.256 68.9585 250.302 69.458 cv
cp
0 0 0 0 cmyk
f
176.115 36.127 mo
176.376 31.1338 180.404 32.9346 182.579 40.8213 cv
185.105 49.9653 188.159 72.0044 162.561 89.4922 cv
131.993 110.377 110.289 92.9585 102.142 81.5776 cv
92.2505 67.7422 87.0327 41.1333 111.931 21.7065 cv
133.84 4.61182 153.593 18.7275 158.266 27.0327 cv
158.58 27.376 li
155.575 30.165 153.342 34.7349 154.633 40.0112 cv
148.556 41.8145 144.859 45.1162 143.254 48.6992 cv
135.93 42.8848 122.422 47.0752 123.494 59.1113 cv
124.79 73.5986 143.694 79.7437 157.776 68.0137 cv
172.643 55.6226 175.81 42.0415 176.115 36.127 cv
cp
.118532 .179629 .999206 0 cmyk
f
165.628 76.0503 mo
180.655 62.4443 182.274 45.4097 179.578 36.6206 cv
180.664 36.0127 li
181.364 37.2168 182.021 38.8232 182.579 40.8213 cv
185.105 49.9653 188.159 72.0044 162.561 89.4922 cv
131.993 110.377 110.289 92.9585 102.142 81.5776 cv
94.3813 70.7192 89.4941 51.9951 99.7871 35.0513 cv
90.252 58.8457 106.931 82.9873 121.37 88.0962 cv
139.357 94.4355 155.975 84.7964 165.628 76.0503 cv
cp
.240848 .455299 1 .0437018 cmyk
f
154.633 40.0112 mo
148.556 41.8145 144.859 45.1162 143.254 48.6992 cv
135.93 42.8848 122.422 47.0752 123.494 59.1113 cv
124.513 70.5322 136.481 76.7695 148.406 73.1475 cv
121.488 87.6792 109.304 58.0513 119.838 44.9316 cv
132.481 29.1919 148.983 35.4697 154.633 40.0112 cv
cp
f
116.779 26.0791 mo
115.638 28.5415 121.524 35.54 124.895 34.2813 cv
128.265 33.0215 130.683 23.1675 131.968 20.2974 cv
133.253 17.4272 119.073 21.1255 116.779 26.0791 cv
cp
0 0 0 0 cmyk
f
142.463 20.6792 mo
140.051 21.5073 137.635 28.7378 139.632 31.4126 cv
141.628 34.0879 150.769 30.3594 152.15 28.8291 cv
153.532 27.2993 144.91 19.8394 142.463 20.6792 cv
cp
f
105.533 36.2393 mo
102.815 39.0679 100.172 42.6572 101.084 46.6543 cv
101.599 48.918 111.72 48.145 110.736 43.9878 cv
109.263 37.772 107.281 34.4204 105.533 36.2393 cv
cp
f
178.377 41.4321 mo
177.9 43.8633 177.479 45.2119 178.114 45.5244 cv
182.165 47.522 178.855 39.0039 178.377 41.4321 cv
cp
f
175.129 51.6934 mo
173.75 53.9746 172.508 55.8628 173.18 56.2646 cv
174.083 56.8062 177.219 54.6572 178.324 53.3125 cv
179.43 51.9683 175.924 50.3794 175.129 51.6934 cv
cp
f
168.208 62.6143 mo
167.178 63.7544 164.984 66.1836 165.816 66.2271 cv
166.649 66.2705 170.524 64.271 171.031 63.5293 cv
171.538 62.7876 169.36 61.3389 168.208 62.6143 cv
cp
f
181.136 41.2178 mo
184.067 51.8262 185.441 72.0439 161.718 88.2505 cv
127.854 111.373 107.167 86.0215 103.365 80.7017 cv
95.3628 69.5093 87.0488 43.022 112.856 22.8857 cv
121.12 16.4355 130.058 13.9443 138.698 15.6763 cv
148.003 17.5425 154.559 23.7095 156.828 27.5469 cv
156.013 28.2837 155.275 29.1201 154.658 30.0542 cv
153.679 31.5254 153.006 33.2402 152.747 35.0313 cv
152.554 36.3496 152.609 37.7051 152.9 38.9893 cv
151.777 39.2954 150.685 39.7378 149.641 40.2876 cv
148.186 41.0576 146.842 42.0786 145.694 43.2871 cv
144.687 44.335 143.848 45.5503 143.244 46.8628 cv
141.203 45.5308 138.781 44.7803 136.298 44.6484 cv
135.492 42.9663 135.031 40.9424 134.72 38.9536 cv
134.378 36.6499 134.318 34.2817 134.539 31.9336 cv
134.762 29.5825 135.319 27.2612 136.197 25.0278 cv
137.097 22.8037 138.38 20.7046 139.99 18.793 cv
137.934 20.2183 136.173 22.1333 134.83 24.3306 cv
133.458 26.5176 132.54 28.9946 132.006 31.5405 cv
131.47 34.0918 131.337 36.729 131.611 39.3447 cv
131.83 41.1934 132.206 43.0576 132.984 44.8438 cv
131.496 45.0981 130.04 45.5718 128.69 46.2891 cv
127.733 46.7974 126.875 47.3984 126.112 48.0737 cv
124.713 47.0464 123.357 45.9692 122.05 44.8262 cv
120.519 43.4609 119.056 42.0112 117.73 40.4355 cv
115.048 37.3027 112.921 33.689 111.462 29.5859 cv
111.476 31.7637 111.858 33.9702 112.58 36.0737 cv
113.284 38.188 114.312 40.1973 115.542 42.0718 cv
116.788 43.936 118.242 45.6646 119.876 47.1997 cv
121.152 48.4155 122.551 49.5059 124.044 50.4482 cv
122.623 52.5889 121.889 55.1831 121.942 58.0654 cv
120.423 58.5737 118.826 58.9399 117.207 59.1416 cv
115.243 59.3657 113.244 59.3984 111.261 59.1411 cv
109.276 58.8965 107.313 58.3745 105.399 57.6255 cv
104.441 57.2529 103.5 56.811 102.587 56.3013 cv
101.65 55.8247 100.764 55.2505 99.8564 54.6748 cv
100.519 55.522 101.277 56.2881 102.073 57.0308 cv
102.889 57.7451 103.761 58.4072 104.683 59.0112 cv
106.533 60.2075 108.615 61.0884 110.796 61.623 cv
112.978 62.1445 115.254 62.3472 117.506 62.1509 cv
119.125 62.0181 120.738 61.7197 122.297 61.1973 cv
122.868 64.0146 124.104 66.582 125.893 68.749 cv
124.934 69.9248 123.894 71.0845 122.786 72.1914 cv
121.462 73.5244 120.072 74.8066 118.616 76.0054 cv
117.156 77.1997 115.617 78.2969 113.971 79.207 cv
112.321 80.0752 110.521 80.811 108.558 80.666 cv
110.435 81.353 112.577 80.9971 114.472 80.3994 cv
116.401 79.7983 118.2 78.8696 119.908 77.8311 cv
121.616 76.7866 123.227 75.5942 124.739 74.2803 cv
125.899 73.2466 127.026 72.1636 128.04 70.9331 cv
129.511 72.1895 131.209 73.2407 133.109 74.0298 cv
133.996 74.3979 134.907 74.6924 135.829 74.937 cv
135.724 76.3633 135.495 77.7773 135.165 79.2134 cv
134.753 80.9502 134.214 82.6792 133.529 84.3604 cv
132.168 87.7329 130.264 90.9092 127.603 93.6992 cv
129.344 92.8633 130.944 91.6709 132.324 90.2607 cv
133.717 88.8574 134.9 87.2422 135.895 85.5171 cv
136.876 83.7861 137.673 81.9395 138.212 79.998 cv
138.613 78.5684 138.89 77.0518 138.931 75.5234 cv
141.832 75.8608 144.817 75.6494 147.752 74.8877 cv
148.516 75.9346 149.209 77.0552 149.878 78.2231 cv
150.592 79.498 151.261 80.8115 151.83 82.167 cv
152.397 83.5215 152.891 84.9102 153.225 86.3481 cv
153.541 87.7842 153.751 89.272 153.558 90.8501 cv
154.434 89.5137 154.837 87.8379 154.891 86.2036 cv
154.952 84.5586 154.725 82.9189 154.325 81.3398 cv
153.92 79.7603 153.359 78.2251 152.625 76.7681 cv
152.128 75.7666 151.541 74.7881 150.85 73.8711 cv
153.617 72.7783 156.29 71.2041 158.738 69.1626 cv
158.907 69.0225 159.065 68.8818 159.229 68.7417 cv
160.176 69.1255 161.029 69.5806 161.895 70.1382 cv
162.885 70.7935 163.842 71.5669 164.744 72.4419 cv
166.565 74.1841 168.183 76.2642 169.935 78.3652 cv
169.352 75.6929 168.272 73.1299 166.629 70.8223 cv
165.799 69.6792 164.822 68.5952 163.65 67.6963 cv
163.073 67.2412 162.429 66.8325 161.755 66.4917 cv
164.023 64.3564 165.97 62.2148 167.638 60.1089 cv
168.572 60.0947 169.386 60.1577 170.28 60.3403 cv
171.18 60.5322 172.095 60.8325 173 61.2422 cv
174.825 62.0508 176.588 63.2334 178.463 64.4482 cv
177.513 62.4243 176.105 60.6108 174.237 59.187 cv
173.298 58.4863 172.237 57.8833 171.058 57.5049 cv
170.654 57.3687 170.223 57.2739 169.788 57.1973 cv
171.692 54.4302 173.138 51.7622 174.231 49.2954 cv
174.526 49.2783 174.877 49.2832 175.273 49.312 cv
175.878 49.3628 176.533 49.4404 177.191 49.5615 cv
177.854 49.6719 178.526 49.8159 179.208 49.9775 cv
179.888 50.1533 180.583 50.3213 181.301 50.5991 cv
180.973 49.895 180.458 49.2744 179.889 48.7515 cv
179.319 48.2183 178.681 47.7725 178.003 47.3794 cv
177.319 47 176.594 46.6729 175.789 46.4648 cv
175.666 46.4346 175.533 46.4087 175.402 46.3823 cv
177.104 41.6758 177.522 37.9878 177.616 36.2021 cv
177.653 35.5024 177.769 35.1143 177.854 34.918 cv
178.498 35.3135 180 37.1021 181.136 41.2178 cv
cp
177.413 31.8535 mo
176.634 31.938 174.804 32.5161 174.621 36.0459 cv
174.474 38.835 172.93 53.4297 156.819 66.8574 cv
150.012 72.5322 141.373 74.2114 134.259 71.2593 cv
128.867 69.021 125.488 64.5435 124.99 58.9751 cv
124.593 54.5327 126.451 50.8696 130.097 48.939 cv
131.702 48.0864 133.491 47.6558 135.271 47.6177 cv
135.406 47.6289 135.538 47.6357 135.674 47.6099 cv
138.105 47.6396 140.493 48.4141 142.345 49.8921 cv
142.246 50.6621 142.235 51.4341 142.334 52.1821 cv
143.268 49.1763 145.185 46.9194 147.452 45.2593 cv
148.595 44.4302 149.825 43.7397 151.098 43.1162 cv
152.365 42.4751 153.691 41.9453 155.027 41.3257 cv
155.027 41.3262 li
156.083 41.1538 li
155.972 39.6812 li
155.863 38.2368 155.828 36.8589 156.021 35.4883 cv
156.205 34.1206 156.593 32.772 157.173 31.4634 cv
157.758 30.1553 158.554 28.9106 159.519 27.7559 cv
160.494 26.6069 161.631 25.5625 163.046 24.7261 cv
161.747 24.7593 160.462 25.1816 159.28 25.8115 cv
156.192 20.7456 148.789 14.6401 139.287 12.7354 cv
132.646 11.4043 122.356 11.6753 111.01 20.521 cv
83.4092 42.0566 92.3438 70.4448 100.924 82.4468 cv
112.151 98.1489 135.08 109.754 162.903 91.0708 cv
163.071 90.9585 163.242 90.8428 163.41 90.728 cv
188.674 73.4688 187.171 51.7988 184.027 40.4185 cv
182.493 34.8574 179.958 31.5757 177.413 31.8535 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
78.8057 165.645 mo
78.4727 168.936 79.7026 173 82.687 175.555 cv
74.978 200.644 48.3101 218.417 37.1875 226.417 cv
37.1875 226.417 33.1284 234.163 26.2446 237.067 cv
15.0244 233.678 11.1343 213.012 15.3213 207.653 cv
48.1641 192.166 60.3696 177.717 67.9194 165.071 cv
70.4819 166.778 74.3496 167.502 78.8057 165.645 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
78.8057 165.645 mo
78.4727 168.936 79.7026 173 82.687 175.555 cv
74.978 200.644 48.3101 218.417 37.1875 226.417 cv
32.2583 222.825 26.3887 214.589 26.8496 201.817 cv
28.2256 201.064 29.5522 200.319 30.8389 199.573 cv
29.0723 211.62 48.8242 210.19 60.104 199.042 cv
71.1567 188.125 69.0962 177.377 64.9043 169.809 cv
66.0005 168.206 66.9951 166.62 67.9194 165.071 cv
70.4819 166.778 74.3496 167.502 78.8057 165.645 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
37.1875 226.417 mo
37.1875 226.417 33.1284 234.163 26.2446 237.067 cv
15.0244 233.678 11.1343 213.012 15.3213 207.653 cv
19.4819 205.686 23.3101 203.747 26.8496 201.817 cv
26.3887 214.589 32.2583 222.825 37.1875 226.417 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
38.4346 223.678 mo
37.6768 224.217 36.9663 224.723 36.3091 225.195 cv
36.022 225.403 li
35.8569 225.715 li
35.8203 225.786 32.1543 232.641 26.1694 235.459 cv
22.0806 233.965 18.6211 229.557 16.6235 223.258 cv
14.6118 216.917 14.8877 211.09 16.3145 208.837 cv
47.8428 193.907 60.6162 179.844 68.6265 166.772 cv
68.9766 166.979 69.3384 167.166 69.7119 167.329 cv
71.2363 168.018 72.9429 168.315 74.6147 168.253 cv
75.4878 168.217 76.3472 168.078 77.1782 167.852 cv
77.2358 168.741 77.4038 169.617 77.6626 170.458 cv
78.1558 172.046 79.0181 173.515 80.1309 174.738 cv
80.4199 175.059 80.729 175.358 81.0542 175.64 cv
73.7397 198.508 49.9937 215.445 38.4346 223.678 cv
cp
84.8662 176.105 mo
83.7627 175.286 82.8848 174.269 82.2119 173.155 cv
81.5396 172.035 81.0957 170.808 80.7832 169.567 cv
80.4692 168.323 80.3403 167.054 80.2954 165.795 cv
80.2017 163.184 li
78.2246 164.26 li
78.2231 164.26 li
76.9443 164.682 75.6733 165.008 74.3892 165.158 cv
73.1045 165.313 71.8047 165.267 70.5259 164.983 cv
69.2554 164.68 68.0098 164.132 66.9375 163.288 cv
65.8872 162.443 64.9351 161.318 64.6621 159.821 cv
64.314 161.327 64.9072 163.006 65.8623 164.299 cv
65.9961 164.483 66.1543 164.646 66.3027 164.817 cv
58.5156 177.645 46.0752 191.484 14.6787 206.292 cv
14.356 206.444 li
14.1362 206.725 li
11.6636 209.89 11.5103 217.061 13.7637 224.167 cv
16.1484 231.684 20.5415 236.91 25.8154 238.502 cv
26.334 238.659 li
26.833 238.448 li
33.3804 235.678 37.4497 229.004 38.3359 227.434 cv
38.9111 227.021 39.5254 226.583 40.1748 226.122 cv
51.8818 217.784 75.7974 200.723 83.6714 177.28 cv
83.8262 177.346 83.9761 177.426 84.1323 177.485 cv
85.6377 178.045 87.2275 178.184 88.7163 177.993 cv
87.2744 177.553 85.9634 176.93 84.8662 176.105 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
188.997 199.413 mo
188.997 199.413 198.783 203.034 202.452 208.529 cv
199.458 218.551 180.184 223.674 177.521 222.627 cv
164.173 214.021 145.431 175.47 140.249 160.303 cv
142.726 158.955 144.944 156.608 145.734 152.999 cv
147.919 154.032 152.545 154.023 155.835 151.471 cv
163.38 167.553 179.646 190.346 188.997 199.413 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
188.999 199.422 mo
188.999 199.422 198.783 203.034 202.452 208.529 cv
199.458 218.551 180.184 223.674 177.521 222.627 cv
174.55 220.709 171.297 217.295 167.984 212.979 cv
178.172 211.346 187.971 203.44 188.999 199.422 cv
cp
.78027 .700557 .606195 .759976 cmyk
f
188.997 199.413 mo
188.999 199.422 li
187.971 203.44 178.172 211.346 167.984 212.979 cv
156.483 197.975 144.279 172.088 140.249 160.303 cv
142.726 158.955 144.944 156.608 145.734 152.999 cv
147.919 154.032 152.545 154.023 155.835 151.471 cv
156.697 153.318 157.68 155.237 158.754 157.225 cv
155.497 163.551 152.168 174.213 160.356 188.456 cv
169.172 203.809 182.957 201.681 185.182 195.395 cv
186.541 196.922 187.826 198.272 188.997 199.413 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
178.158 221.251 mo
165.308 212.738 147.345 175.733 141.975 160.674 cv
143.225 159.959 144.361 158.994 145.26 157.813 cv
145.911 156.949 146.407 155.973 146.758 154.958 cv
147.87 155.225 148.965 155.237 150.045 155.155 cv
151.655 155.008 153.229 154.524 154.639 153.726 cv
154.801 153.635 154.951 153.524 155.108 153.422 cv
163.083 169.813 178.908 191.722 187.949 200.487 cv
188.176 200.706 li
188.472 200.817 li
188.563 200.849 197.13 204.057 200.783 208.777 cv
197.474 217.2 180.757 221.771 178.158 221.251 cv
cp
203.701 207.7 mo
200.14 202.357 191.577 198.805 189.818 198.119 cv
180.773 189.245 165.07 167.389 157.433 151.336 cv
157.664 151.042 157.879 150.735 158.068 150.415 cv
158.87 149.048 159.252 147.51 159.196 146.032 cv
158.512 147.344 157.71 148.489 156.747 149.383 cv
155.788 150.281 154.683 150.925 153.508 151.364 cv
152.332 151.799 151.078 152.014 149.834 152.067 cv
148.607 152.113 147.307 151.967 146.372 151.639 cv
144.714 151.059 li
144.265 152.677 li
143.925 153.9 143.451 155.043 142.793 156.096 cv
142.146 157.155 141.284 158.098 140.268 158.92 cv
139.242 159.727 138.055 160.394 136.764 160.86 cv
135.475 161.303 134.08 161.651 132.628 161.416 cv
133.909 162.198 135.53 162.344 137.051 162.231 cv
137.773 162.172 138.495 162.039 139.204 161.842 cv
144.865 177.674 163.132 215.134 176.705 223.886 cv
176.968 224.02 li
178.111 224.471 180.533 224.239 183.408 223.522 cv
186.139 222.84 189.278 221.723 192.124 220.342 cv
196.587 218.173 202.252 214.44 203.89 208.96 cv
204.093 208.286 li
203.701 207.7 li
cp
.75021 .679683 .670222 .90164 cmyk
f
156.887 50.543 mo
157.667 50.416 li
157.605 52.457 158.461 54.6646 160.425 56.9961 cv
158.01 58.3164 154.783 61.4224 154.348 64.7012 cv
136.016 76.9014 127.782 54.9316 131.201 52.937 cv
138.954 50.7427 150.468 50.2397 156.887 50.543 cv
cp
.126741 .547387 .724605 .00781262 cmyk
f
155.584 61.522 mo
154.956 62.5229 154.491 63.606 154.348 64.7012 cv
136.356 76.6729 128.092 55.7354 131.022 53.0684 cv
131.514 55.5933 135.32 66.1426 144.029 63.3433 cv
140.953 61.9028 137.949 59.8853 135.601 56.8003 cv
142.199 55.0923 150.48 57.6143 155.584 61.522 cv
cp
.263004 .754299 .82855 .170535 cmyk
f
156.539 57.791 mo
156.431 57.8979 156.33 58.0142 156.226 58.126 cv
155.001 57.1973 153.629 56.4761 152.214 55.9351 cv
150.383 55.2285 148.458 54.8647 146.552 54.6938 cv
144.641 54.5337 142.729 54.5942 140.859 54.8838 cv
139.926 55.04 138.999 55.2305 138.103 55.5361 cv
137.221 55.8452 136.303 56.1777 135.601 56.8037 cv
136.457 56.4653 137.358 56.3823 138.254 56.3364 cv
139.151 56.3076 140.043 56.312 140.932 56.3794 cv
142.706 56.4956 144.455 56.7813 146.145 57.1992 cv
147.835 57.6191 149.457 58.207 151 58.8911 cv
152.188 59.4189 153.313 60.0337 154.403 60.7061 cv
154.375 60.7637 154.341 60.8169 154.313 60.8755 cv
153.932 61.6665 153.646 62.5356 153.521 63.4321 cv
145.004 69.106 139.453 66.7422 136.265 63.6846 cv
132.618 60.1885 131.606 55.4224 132.004 54.2676 cv
139.65 52.1934 150.557 51.7871 156.409 52.0229 cv
156.473 52.9863 156.689 53.9355 157.054 54.7974 cv
157.321 55.4307 157.652 56.0215 158.036 56.563 cv
157.498 56.9268 157.001 57.3428 156.539 57.791 cv
cp
157.809 47.0728 mo
157.385 47.6509 157.044 48.3193 156.796 49.0352 cv
150.708 48.7656 138.896 49.1943 130.788 51.4912 cv
130.439 51.6396 li
129.705 52.0654 128.87 53.0264 128.943 55.2197 cv
129.064 58.8267 131.979 65.5273 137.857 68.4561 cv
141.242 70.1421 146.7 71.0645 153.972 66.6895 cv
154.233 67.2251 154.579 67.7036 155.006 68.0654 cv
154.771 66.8779 154.871 65.8213 155.216 64.894 cv
155.565 63.9678 156.102 63.1475 156.738 62.3838 cv
158.021 60.8682 159.628 59.5649 161.144 58.3164 cv
162.704 57.0313 li
161.572 56.0347 li
161.571 56.0347 li
161.03 55.1021 160.445 54.2695 159.971 53.4072 cv
159.493 52.5508 159.081 51.6787 158.923 50.7305 cv
158.743 49.7871 158.81 48.769 159.109 47.7358 cv
159.402 46.6978 159.929 45.665 160.568 44.6567 cv
159.535 45.251 158.569 46.0376 157.809 47.0728 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
237.194 35.6362 mo
237.396 33.5132 238.982 32.6177 239.973 32.7144 cv
240.964 32.8071 242.35 33.9883 242.146 36.1104 cv
241.942 38.2319 240.096 41.8599 239.105 41.7651 cv
238.115 41.6714 236.99 37.7563 237.194 35.6362 cv
cp
.626825 .102937 0 0 cmyk
f
248.2 39.7095 mo
249.843 38.3516 251.599 38.8398 252.232 39.6069 cv
252.865 40.3774 253.012 42.1919 251.367 43.5474 cv
249.723 44.9028 245.851 46.1626 245.217 45.396 cv
244.583 44.6274 246.557 41.0659 248.2 39.7095 cv
cp
f
253.464 50.0947 mo
255.588 50.2959 256.483 51.8833 256.387 52.8726 cv
256.292 53.8643 255.112 55.2505 252.991 55.0459 cv
250.869 54.8413 247.241 52.9941 247.335 52.0049 cv
247.431 51.0151 251.345 49.8901 253.464 50.0947 cv
cp
f
526.157 27.5947 mo
526.037 22.8574 529.767 24.8579 532.271 32.5234 cv
535.179 41.4121 539.472 62.6191 517.813 77.4619 cv
491.95 95.1875 471.302 77.0591 463.208 65.6436 cv
453.38 51.7651 446.828 26.0522 467.724 9.31299 cv
486.11 -5.41602 504.778 9.42725 509.548 17.6689 cv
509.853 18.0176 li
507.361 20.4609 505.688 24.6558 507.217 29.7725 cv
501.909 31.0596 498.835 33.9424 497.653 37.2412 cv
490.69 31.1846 478.904 34.2183 480.716 45.7583 cv
482.901 59.6484 500.246 66.8403 512.011 56.665 cv
524.433 45.917 526.302 33.2065 526.157 27.5947 cv
cp
.0619821 0 .965148 0 cmyk
f
519.604 64.8765 mo
532.083 52.9819 532.324 36.8721 529.289 28.3101 cv
530.218 27.8081 li
530.929 29.0044 531.63 30.5815 532.271 32.5234 cv
535.179 41.4121 539.472 62.6191 517.813 77.4619 cv
491.95 95.1875 471.302 77.0591 463.208 65.6436 cv
455.498 54.752 449.8 36.5713 457.807 21.1626 cv
450.963 43.1504 467.591 67.3252 480.87 73.2134 cv
497.407 80.5264 511.589 72.522 519.604 64.8765 cv
cp
.00155642 .206119 1 0 cmyk
f
507.217 29.7725 mo
501.909 31.0596 498.835 33.9424 497.653 37.2412 cv
490.69 31.1846 478.904 34.2183 480.716 45.7583 cv
482.437 56.708 493.584 63.4966 503.995 60.8916 cv
480.945 72.8252 467.948 43.7432 476.442 31.9941 cv
486.636 17.8984 501.841 25.0469 507.217 29.7725 cv
cp
f
472.37 13.8213 mo
471.523 16.0854 477.284 23.1689 480.21 22.208 cv
483.136 21.2476 484.601 12.0332 485.546 9.39063 cv
486.492 6.74805 474.071 9.26611 472.37 13.8213 cv
cp
.0176699 0 .304417 0 cmyk
f
494.961 10.4976 mo
492.862 11.1152 491.214 17.8315 493.188 20.52 cv
495.163 23.209 503.075 20.3057 504.203 18.9468 cv
505.331 17.5874 497.091 9.87158 494.961 10.4976 cv
cp
f
463.03 22.7012 mo
460.799 25.2031 458.69 28.4341 459.788 32.3062 cv
460.409 34.4985 469.407 34.479 468.233 30.4502 cv
466.476 24.4253 464.464 21.0928 463.03 22.7012 cv
cp
f
528.556 32.8086 mo
528.302 35.0898 528.021 36.3442 528.61 36.687 cv
532.376 38.876 528.812 30.5293 528.556 32.8086 cv
cp
f
526.378 42.3511 mo
525.306 44.4258 524.328 46.1357 524.958 46.5664 cv
525.805 47.1465 528.456 45.3218 529.35 44.1196 cv
530.243 42.9175 526.995 41.1553 526.378 42.3511 cv
cp
f
520.96 52.2617 mo
520.12 53.2749 518.329 55.4331 519.077 55.5337 cv
519.825 55.6338 523.149 54.0044 523.55 53.3335 cv
523.95 52.6631 521.9 51.1289 520.96 52.2617 cv
cp
f
531.009 32.7983 mo
534.382 43.1108 537.043 62.4639 516.972 76.2192 cv
488.317 95.8428 468.019 70.231 464.241 64.8955 cv
456.29 53.6689 446.977 27.8521 468.635 10.5024 cv
475.569 4.94385 483.388 3.20459 491.239 5.46631 cv
499.694 7.90234 505.995 14.2402 508.297 18.0566 cv
507.62 18.7002 507.02 19.4448 506.534 20.2905 cv
505.763 21.6226 505.28 23.208 505.177 24.8955 cv
505.098 26.1377 505.243 27.4326 505.595 28.6763 cv
504.61 28.8882 503.665 29.2319 502.771 29.6816 cv
501.523 30.3125 500.394 31.1895 499.452 32.2593 cv
498.626 33.186 497.962 34.2847 497.515 35.4912 cv
495.595 34.0781 493.374 33.1914 491.146 32.8901 cv
490.306 31.2305 489.749 29.2705 489.329 27.3545 cv
488.86 25.1362 488.64 22.8765 488.671 20.6558 cv
488.702 18.4321 489.036 16.2607 489.664 14.1958 cv
490.312 12.1411 491.312 10.2324 492.616 8.52588 cv
490.877 9.73779 489.438 11.437 488.392 13.4351 cv
487.319 15.4204 486.675 17.7144 486.376 20.1021 cv
486.079 22.4937 486.146 24.9966 486.577 27.5068 cv
486.903 29.2822 487.372 31.0854 488.194 32.8418 cv
486.882 32.978 485.612 33.3262 484.455 33.9141 cv
483.636 34.3306 482.911 34.8418 482.276 35.4312 cv
480.952 34.3535 479.663 33.2314 478.412 32.0498 cv
476.946 30.6411 475.535 29.1567 474.237 27.5625 cv
471.616 24.3882 469.457 20.7959 467.862 16.7842 cv
468.028 18.8594 468.526 20.9888 469.321 23.0435 cv
470.101 25.1064 471.163 27.0933 472.396 28.9653 cv
473.643 30.8296 475.065 32.5791 476.636 34.1563 cv
477.862 35.4053 479.192 36.5425 480.595 37.5464 cv
479.474 39.4844 479.002 41.9028 479.255 44.6523 cv
477.931 45.0283 476.528 45.2646 475.095 45.3418 cv
473.354 45.4155 471.567 45.3052 469.775 44.9194 cv
467.983 44.5464 466.19 43.9102 464.426 43.061 cv
463.542 42.6387 462.669 42.1509 461.816 41.6011 cv
460.944 41.0806 460.11 40.4712 459.258 39.8574 cv
459.911 40.7114 460.644 41.4951 461.407 42.2588 cv
462.188 42.9976 463.015 43.6895 463.882 44.3301 cv
465.622 45.6006 467.548 46.5874 469.536 47.2505 cv
471.524 47.9023 473.575 48.2568 475.575 48.229 cv
477.013 48.2168 478.436 48.0474 479.794 47.6602 cv
480.503 50.3833 481.79 52.917 483.544 55.1074 cv
482.771 56.1587 481.922 57.1899 481.009 58.166 cv
479.919 59.3418 478.767 60.4644 477.55 61.5024 cv
476.329 62.5376 475.028 63.4731 473.621 64.2236 cv
472.207 64.9331 470.649 65.5068 468.882 65.23 cv
470.61 66.0166 472.501 65.8296 474.153 65.395 cv
475.837 64.959 477.38 64.2017 478.835 63.3335 cv
480.288 62.4595 481.645 61.4385 482.905 60.2939 cv
483.868 59.3916 484.8 58.4399 485.62 57.3398 cv
487.024 58.6406 488.618 59.7622 490.374 60.6484 cv
491.193 61.0615 492.028 61.4072 492.87 61.7051 cv
492.878 63.0562 492.772 64.3867 492.579 65.7305 cv
492.335 67.356 491.974 68.9648 491.481 70.5171 cv
490.503 73.6328 489.024 76.5234 486.841 78.9922 cv
488.341 78.3193 489.687 77.2969 490.821 76.0513 cv
491.968 74.8135 492.911 73.3589 493.679 71.7866 cv
494.435 70.207 495.017 68.5049 495.361 66.6943 cv
495.618 65.3604 495.759 63.9355 495.687 62.4834 cv
498.306 63.0103 500.96 63.02 503.532 62.5024 cv
504.29 63.5537 504.989 64.6704 505.671 65.8301 cv
506.399 67.0947 507.091 68.3931 507.696 69.7241 cv
508.299 71.0552 508.839 72.4126 509.239 73.8057 cv
509.624 75.1963 509.917 76.6279 509.856 78.1172 cv
510.545 76.9063 510.786 75.3389 510.72 73.7866 cv
510.657 72.2236 510.339 70.6465 509.868 69.1138 cv
509.396 67.5801 508.784 66.0786 508.024 64.6387 cv
507.509 63.6499 506.914 62.6768 506.231 61.7539 cv
508.629 60.9092 510.908 59.5991 512.954 57.8286 cv
513.095 57.7065 513.226 57.5835 513.362 57.4619 cv
514.237 57.8945 515.032 58.3887 515.847 58.981 cv
516.778 59.6748 517.688 60.4795 518.558 61.3765 cv
520.311 63.165 521.905 65.2607 523.62 67.3867 cv
522.91 64.7993 521.763 62.2822 520.13 59.9678 cv
519.306 58.8203 518.354 57.7183 517.243 56.7793 cv
516.694 56.3052 516.091 55.8706 515.462 55.498 cv
517.341 53.625 518.931 51.7227 520.273 49.8354 cv
521.107 49.8882 521.84 50.0059 522.652 50.2432 cv
523.471 50.4897 524.311 50.8408 525.149 51.2949 cv
526.839 52.1938 528.499 53.4453 530.263 54.7358 cv
529.271 52.7397 527.882 50.9131 526.11 49.4248 cv
525.222 48.6914 524.229 48.0415 523.147 47.5977 cv
522.776 47.4395 522.384 47.3184 521.99 47.2148 cv
523.497 44.7144 524.601 42.2759 525.405 40.0029 cv
525.667 40.0083 525.981 40.0381 526.337 40.0933 cv
526.882 40.1841 527.474 40.3042 528.071 40.4668 cv
528.671 40.6187 529.283 40.8032 529.905 41.0059 cv
530.524 41.2212 531.159 41.4302 531.821 41.7461 cv
531.478 41.0518 530.974 40.4248 530.427 39.8862 cv
529.88 39.3379 529.276 38.8677 528.643 38.4453 cv
528.004 38.0356 527.331 37.6729 526.597 37.418 cv
526.484 37.3804 526.364 37.3467 526.245 37.3115 cv
527.435 32.9502 527.548 29.4668 527.505 27.7725 cv
527.489 27.1084 527.564 26.7471 527.626 26.5659 cv
528.23 26.9883 529.7 28.7988 531.009 32.7983 cv
cp
527.015 23.6162 mo
526.324 23.6416 524.728 24.0635 524.813 27.4116 cv
524.881 30.0576 524.534 43.8486 511.073 55.4966 cv
505.387 60.4189 497.778 61.4067 491.206 58.0908 cv
486.225 55.5771 482.886 51.0737 482.046 45.7339 cv
481.376 41.4751 482.776 38.1182 485.901 36.5371 cv
487.276 35.8389 488.847 35.5557 490.437 35.6455 cv
490.558 35.666 490.677 35.6812 490.796 35.6665 cv
492.974 35.8672 495.164 36.7739 496.925 38.313 cv
496.892 39.0391 496.937 39.7739 497.077 40.4937 cv
497.7 37.6963 499.255 35.6826 501.165 34.2627 cv
502.129 33.5537 503.179 32.9834 504.274 32.479 cv
505.362 31.9585 506.511 31.5474 507.663 31.0522 cv
507.663 31.0527 li
508.595 30.9634 li
508.391 29.5527 li
508.19 28.1694 508.062 26.855 508.138 25.563 cv
508.205 24.2734 508.456 23.0166 508.883 21.8115 cv
509.313 20.6064 509.937 19.4775 510.718 18.4458 cv
511.509 17.4209 512.452 16.5068 513.659 15.8105 cv
512.499 15.75 511.38 16.061 510.368 16.5771 cv
507.247 11.5337 500.192 5.19385 491.558 2.70654 cv
485.522 .96875 476.339 .497559 466.815 8.11914 cv
443.653 26.6748 453.656 54.3457 462.181 66.3848 cv
473.335 82.1353 494.667 94.8125 518.231 78.9893 cv
518.374 78.8936 518.518 78.7959 518.66 78.6987 cv
540.036 64.0503 537.157 43.3047 533.538 32.2427 cv
531.771 26.8374 529.271 23.5322 527.015 23.6162 cv
cp
.426307 .656123 1 .442695 cmyk
f
429.505 158.571 mo
426.798 160.525 424.58 164.207 424.701 168.165 cv
408.842 177.138 382.811 180.161 364.795 178.01 cv
364.795 178.01 355.545 180.778 349.541 177.176 cv
344.896 165.859 357.448 149.645 364.234 149.201 cv
391.68 161.368 412.157 153.065 422.592 148.673 cv
422.534 152.026 424.464 156.157 429.505 158.571 cv
cp
0 .518425 1 0 cmyk
f
364.795 178.01 mo
364.795 178.01 355.545 180.778 349.541 177.176 cv
344.896 165.859 357.448 149.645 364.234 149.201 cv
368.581 151.125 372.749 152.536 376.733 153.54 cv
366.5 161.77 364.18 171.847 364.795 178.01 cv
cp
.41239 .570855 1 .293828 cmyk
f
364.975 176.515 mo
364.666 176.478 li
364.366 176.567 li
364.282 176.592 356.137 178.977 350.75 176.132 cv
348.441 169.725 352.208 162.575 353.971 159.75 cv
357.353 154.331 361.556 151.143 364.002 150.732 cv
390.613 162.38 410.957 155.124 421.745 150.663 cv
421.81 151.42 421.953 152.178 422.193 152.909 cv
422.695 154.504 423.609 155.975 424.769 157.181 cv
425.376 157.809 426.053 158.356 426.774 158.827 cv
426.151 159.461 425.608 160.169 425.153 160.922 cv
424.297 162.348 423.774 163.97 423.604 165.614 cv
423.55 166.101 423.542 166.589 423.557 167.076 cv
407.652 175.868 381.796 178.532 364.975 176.515 cv
cp
425.736 170.057 mo
425.613 168.689 425.787 167.358 426.171 166.113 cv
426.558 164.866 427.177 163.717 427.895 162.659 cv
428.615 161.595 429.476 160.655 430.385 159.782 cv
432.27 157.975 li
430.152 157.215 li
430.151 157.214 li
428.983 156.542 427.895 155.81 426.928 154.952 cv
425.957 154.096 425.125 153.096 424.486 151.952 cv
423.865 150.803 423.445 149.51 423.361 148.147 cv
423.292 146.801 423.497 145.341 424.433 144.141 cv
423.295 144.764 422.512 145.966 422.095 147.266 cv
412.106 151.461 391.752 159.755 364.844 147.825 cv
364.506 147.675 li
364.138 147.7 li
360.282 147.952 355.173 152.157 351.426 158.162 cv
347.091 165.11 345.899 172.247 348.158 177.744 cv
348.347 178.205 li
348.773 178.461 li
354.696 182.012 363.165 180.002 364.916 179.528 cv
382.327 181.553 407.598 178.932 424.135 170.165 cv
424.166 170.252 424.186 170.344 424.219 170.428 cv
424.803 171.924 425.757 173.204 426.892 174.188 cv
426.26 172.819 425.851 171.426 425.736 170.057 cv
cp
.426307 .656123 1 .442695 cmyk
f
558.442 135.368 mo
558.442 135.368 566.555 130.839 572.739 132.163 cv
577.899 141.784 569.567 158.661 566.954 159.825 cv
551.14 163.379 516.435 158.239 494.896 150.513 cv
495.575 147.862 495.405 144.743 493.45 141.757 cv
495.745 140.917 499.026 137.534 499.451 133.328 cv
527.522 138.122 543.014 137.186 558.442 135.368 cv
cp
0 .518425 1 0 cmyk
f
558.442 135.368 mo
558.442 135.368 566.555 130.839 572.739 132.163 cv
577.899 141.784 569.567 158.661 566.954 159.825 cv
563.192 160.673 558.354 161.026 552.89 160.963 cv
552.896 160.538 li
559.304 152.125 560.657 138.995 558.442 135.368 cv
cp
.41239 .570855 1 .293828 cmyk
f
566.41 158.409 mo
550.405 161.899 516.966 156.604 496.383 149.444 cv
496.671 148.161 496.743 146.807 496.55 145.47 cv
496.39 144.4 496.042 143.363 495.563 142.401 cv
496.534 141.793 497.311 141.022 498.009 140.195 cv
499.034 138.944 499.792 137.481 500.21 135.917 cv
500.292 135.619 500.345 135.313 500.397 135.006 cv
528.563 139.713 544.032 138.578 558.614 136.858 cv
558.908 136.823 li
559.169 136.679 li
559.241 136.637 566.243 132.776 571.728 133.508 cv
575.672 142.222 568.419 156.975 566.41 158.409 cv
cp
573.048 130.696 mo
566.974 129.396 559.509 133.102 557.978 133.911 cv
543.62 135.596 528.312 136.672 500.411 131.968 cv
500.366 131.694 500.325 131.416 500.253 131.15 cv
499.841 129.62 499.011 128.269 497.918 127.273 cv
498.374 128.682 498.628 130.055 498.591 131.37 cv
498.558 132.682 498.245 133.922 497.733 135.067 cv
497.219 136.211 496.493 137.256 495.659 138.18 cv
494.831 139.087 493.815 139.913 492.927 140.35 cv
491.352 141.125 li
492.19 142.58 li
492.823 143.679 493.308 144.819 493.597 146.024 cv
493.897 147.23 493.966 148.506 493.841 149.807 cv
493.696 151.104 493.339 152.418 492.767 153.665 cv
492.179 154.895 491.45 156.134 490.265 157.004 cv
491.72 156.638 492.96 155.585 493.946 154.422 cv
494.493 153.766 494.964 153.04 495.36 152.265 cv
516.448 159.594 550.882 164.979 567.278 161.29 cv
567.559 161.196 li
568.54 160.761 569.655 159.385 570.725 157.569 cv
571.917 155.545 573.052 152.978 573.88 150.561 cv
575.397 146.128 577.438 137.754 574.056 131.454 cv
573.728 130.84 li
573.048 130.696 li
cp
.426307 .656123 1 .442695 cmyk
f
388.188 126.786 mo
390.122 120.682 387.697 105.448 378.296 93.3696 cv
372.828 86.3452 367.648 90.9497 369.398 101.131 cv
360.99 89.8945 352.91 84.9873 345.013 87.0962 cv
335.325 89.6841 338.862 105.38 347.8 112.954 cv
340.797 113.396 336.443 117.19 340.231 121.391 cv
345.681 127.437 357.698 125.536 361.197 125.564 cv
355.668 129.018 354.28 135.841 362.279 135.907 cv
367.87 135.953 386.135 133.27 388.188 126.786 cv
cp
.398749 .512108 1 .209964 cmyk
f
382.919 100.513 mo
388.464 110.909 389.754 121.839 388.184 126.788 cv
386.13 133.27 367.868 135.95 362.278 135.905 cv
354.278 135.838 355.665 129.02 361.193 125.565 cv
357.693 125.536 345.677 127.438 340.227 121.393 cv
336.441 117.191 340.792 113.397 347.796 112.955 cv
339.583 105.997 335.936 92.1865 342.901 87.9834 cv
339.955 92.3091 344.434 103.497 359.093 109.687 cv
349.797 110.38 353.87 117.385 361.599 118.738 cv
366.731 119.64 373.011 118.432 377.102 116.025 cv
380.709 113.895 382.797 109.282 382.919 100.513 cv
cp
.41239 .570855 1 .293828 cmyk
f
361.209 124.065 mo
366.36 124.106 li
361.992 126.836 li
359.122 128.629 357.83 131.2 358.239 132.649 cv
358.664 134.153 360.96 134.396 362.292 134.407 cv
368.778 134.459 385.159 131.383 386.758 126.333 cv
388.566 120.625 386.171 105.93 377.112 94.2915 cv
375.737 92.5249 374.319 91.5059 373.224 91.4971 cv
372.713 91.4932 372.271 91.7192 371.872 92.189 cv
370.872 93.3667 370.085 96.2671 370.876 100.876 cv
371.933 107.021 li
368.197 102.029 li
361.327 92.8486 354.772 88.1689 348.713 88.1187 cv
347.609 88.1099 346.494 88.2534 345.4 88.5454 cv
343.026 89.1797 341.536 90.7764 340.971 93.292 cv
339.731 98.8081 343.23 107.115 348.771 111.809 cv
351.611 114.216 li
347.895 114.451 li
343.575 114.724 341.013 116.304 340.461 117.658 cv
340.135 118.458 340.433 119.375 341.345 120.387 cv
343.688 122.987 347.791 124.274 353.887 124.324 cv
355.735 124.338 357.458 124.24 358.842 124.161 cv
359.824 124.104 360.601 124.059 361.209 124.065 cv
cp
362.267 137.407 mo
357.207 137.365 355.762 134.918 355.352 133.464 cv
354.803 131.52 355.474 129.26 357.046 127.259 cv
356.065 127.303 354.993 127.333 353.863 127.324 cv
346.878 127.266 342.055 125.655 339.117 122.397 cv
336.824 119.854 337.234 117.626 337.684 116.525 cv
338.575 114.336 341.104 112.674 344.56 111.897 cv
339.542 106.362 336.745 98.4155 338.043 92.6348 cv
338.85 89.0474 341.187 86.5654 344.626 85.6475 cv
345.98 85.2852 347.364 85.1079 348.738 85.1191 cv
354.924 85.1699 361.114 88.8828 367.576 96.4409 cv
367.701 93.814 368.384 91.6606 369.586 90.2466 cv
370.568 89.0903 371.834 88.4858 373.249 88.4976 cv
374.697 88.5093 376.954 89.2041 379.48 92.4482 cv
389.292 105.055 391.672 120.753 389.618 127.239 cv
387.156 135.012 367.363 137.448 362.267 137.407 cv
cp
.426307 .656123 1 .442695 cmyk
f
411.19 95.165 mo
404.125 91.54 393.046 95.3325 395.966 103.34 cv
387.902 103.032 374.277 115.127 384.309 125.829 cv
373.458 131.133 369.972 146.088 383.259 155.719 cv
377.562 159.999 381.031 171.158 392.101 172.583 cv
391.777 182.564 401.88 185.885 411.739 183.145 cv
410.608 190.579 422.282 194.43 430.895 189.706 cv
433.159 198.355 451.084 192.145 454.605 186.629 cv
458.547 194.087 470.595 190.053 474.557 181.913 cv
479.815 185.694 490.812 181.579 494.573 171.254 cv
500.841 174.956 512.003 167.362 511.681 157.199 cv
522.519 158.557 529.808 138.188 515.704 123.731 cv
519.288 114.335 513.098 101.474 505.046 103.715 cv
501.224 85.54 490.878 82.623 484.017 88.6035 cv
478.591 78.8149 465.657 77.917 463.704 86.7104 cv
457.895 78.4785 446.334 78.9556 445.212 85.9102 cv
438.088 78.9502 427.253 80.9644 427.02 88.3843 cv
418.923 84.7588 411.321 88.7148 411.19 95.165 cv
cp
.398749 .512108 1 .209964 cmyk
f
491.05 85.8032 mo
496.63 85.8652 502.397 91.1367 505.05 103.719 cv
513.097 101.476 519.292 114.338 515.708 123.735 cv
529.806 138.194 522.517 158.563 511.685 157.202 cv
512.003 167.367 500.837 174.954 494.577 171.257 cv
490.811 181.576 479.812 185.699 474.56 181.917 cv
470.593 190.058 458.55 194.09 454.609 186.632 cv
451.088 192.148 433.159 198.36 430.899 189.709 cv
422.286 194.433 410.608 190.584 411.743 183.148 cv
401.882 185.885 391.778 182.561 392.104 172.584 cv
381.031 171.162 377.558 160 383.263 155.723 cv
369.969 146.093 373.454 131.136 384.313 125.832 cv
378.162 119.264 380.9 112.182 385.807 107.764 cv
382.878 113.874 383.386 122.734 394.863 126.809 cv
387.206 134.293 398.707 145.247 410.738 140.298 cv
405.649 147.504 419.162 149.865 425.52 144.776 cv
426.42 151.9 440.93 148.303 443.959 142.219 cv
445.262 149.594 458.214 144.251 459.517 138.526 cv
464.343 145.105 478.411 135.352 477.385 128.135 cv
484.061 133.542 495.822 120.448 490.493 111.47 cv
504.214 113.099 503.604 89.6509 491.056 85.8223 cv
491.05 85.8032 li
cp
.41239 .570855 1 .293828 cmyk
f
454.727 183.65 mo
455.931 185.928 li
457.956 189.759 462.188 189.172 463.914 188.743 cv
467.821 187.769 471.469 184.831 473.208 181.256 cv
473.987 179.656 li
475.433 180.696 li
476.989 181.815 479.342 182.092 481.887 181.458 cv
485.808 180.481 490.827 177.152 493.163 170.741 cv
493.78 169.045 li
495.335 169.963 li
497.019 170.957 498.937 170.774 500.249 170.448 cv
505.188 169.215 510.39 163.819 510.181 157.247 cv
510.126 155.492 li
511.867 155.711 li
515.958 156.225 519.72 152.801 521.271 147.336 cv
522.945 141.44 522.081 132.416 514.631 124.779 cv
513.96 124.092 li
514.304 123.197 li
516.515 117.396 514.583 110.741 511.642 107.424 cv
510.38 106 508.308 104.445 505.603 105.119 cv
503.907 105.589 li
503.578 104.024 li
501.983 96.4419 499.021 90.9604 495.236 88.5898 cv
491.971 86.5444 488.141 86.9985 485.001 89.7344 cv
483.603 90.9531 li
482.704 89.3306 li
479.477 83.5088 473.567 81.4058 469.646 82.3838 cv
467.983 82.7983 465.856 83.9419 465.169 87.0352 cv
464.435 90.3462 li
462.479 87.5757 li
459.098 82.7847 453.915 81.5112 450.529 82.355 cv
449.275 82.668 447.108 83.5771 446.692 86.1489 cv
446.232 89.0039 li
444.164 86.9834 li
441.005 83.897 436.617 82.4878 432.985 83.3931 cv
431.68 83.7183 428.632 84.8608 428.52 88.4312 cv
428.449 90.668 li
426.407 89.7534 li
423.669 88.5278 420.8 88.1924 418.327 88.8091 cv
414.913 89.6602 412.753 92.1074 412.69 95.1958 cv
412.641 97.5952 li
410.505 96.4995 li
408.108 95.269 405.013 94.9497 402.227 95.6445 cv
399.982 96.2041 398.249 97.3633 397.472 98.8257 cv
396.859 99.9775 396.827 101.324 397.375 102.827 cv
398.14 104.925 li
395.909 104.839 li
395.187 104.812 394.389 104.906 393.539 105.118 cv
389.325 106.168 384.102 110.189 382.654 115.1 cv
381.647 118.517 382.572 121.782 385.404 124.802 cv
386.792 126.284 li
384.968 127.175 li
380.011 129.6 376.653 134.325 376.206 139.506 cv
375.721 145.118 378.538 150.446 384.139 154.506 cv
385.785 155.698 li
384.16 156.919 li
382.311 158.307 381.622 160.706 382.315 163.333 cv
383.131 166.426 386.235 170.315 392.292 171.094 cv
393.644 171.268 li
393.6 172.631 li
393.497 175.789 394.538 178.272 396.693 180.014 cv
399.934 182.631 405.594 183.286 411.337 181.7 cv
413.57 181.079 li
413.222 183.372 li
412.969 185.035 413.522 186.499 414.866 187.721 cv
417.4 190.031 422.202 190.887 426.543 189.805 cv
427.825 189.485 429.045 189.01 430.173 188.39 cv
431.859 187.467 li
432.346 189.327 li
433.507 193.761 440.442 192.399 442.54 191.876 cv
447.243 190.704 451.885 188.101 453.34 185.823 cv
454.727 183.65 li
cp
464.64 191.654 mo
460.445 192.7 456.791 191.744 454.48 189.092 cv
452.03 191.459 447.765 193.666 443.265 194.788 cv
436.802 196.399 432.042 195.262 430.105 191.758 cv
429.195 192.152 428.246 192.472 427.269 192.715 cv
421.927 194.047 416.131 192.932 412.846 189.94 cv
411.343 188.572 410.446 186.883 410.22 185.051 cv
404.156 186.282 398.463 185.299 394.808 182.348 cv
392.24 180.272 390.806 177.357 390.615 173.857 cv
383.923 172.513 380.407 167.856 379.415 164.098 cv
378.599 161.008 379.197 158 380.97 155.846 cv
375.423 151.285 372.681 145.447 373.216 139.249 cv
373.703 133.628 377.008 128.47 381.985 125.399 cv
378.754 121.118 378.955 117.038 379.776 114.251 cv
381.594 108.086 387.849 103.444 392.813 102.207 cv
393.24 102.1 393.66 102.017 394.072 101.956 cv
393.839 100.337 394.091 98.7949 394.822 97.418 cv
396.015 95.1733 398.387 93.5098 401.501 92.7334 cv
404.278 92.041 407.315 92.1655 409.969 93.0371 cv
410.835 89.5825 413.654 86.8818 417.601 85.8979 cv
420.167 85.2583 423.031 85.4126 425.828 86.3198 cv
426.635 83.4634 428.962 81.3042 432.26 80.4824 cv
436.286 79.4785 440.809 80.5659 444.505 83.3335 cv
445.518 81.4263 447.357 80.0542 449.804 79.4443 cv
453.593 78.4995 459.088 79.5513 463.214 83.7778 cv
464.402 81.624 466.386 80.1045 468.921 79.4727 cv
473.683 78.2856 480.3 80.334 484.421 86.3979 cv
485.659 85.5552 486.974 84.958 488.343 84.6167 cv
491.245 83.8931 494.18 84.3877 496.829 86.0479 cv
499.856 87.9434 503.87 92.2437 506.194 101.986 cv
508.982 101.742 511.673 102.937 513.886 105.434 cv
517.896 109.958 519.317 117.35 517.421 123.362 cv
525.171 131.772 526.011 141.627 524.155 148.157 cv
522.618 153.577 519.194 157.437 515.002 158.482 cv
514.393 158.633 513.772 158.724 513.147 158.753 cv
512.609 166.165 506.767 171.915 500.976 173.358 cv
498.964 173.86 497.062 173.823 495.376 173.26 cv
492.435 179.808 486.962 183.286 482.612 184.37 cv
479.837 185.061 477.241 184.913 475.132 183.965 cv
472.821 187.661 468.854 190.603 464.64 191.654 cv
cp
.426307 .656123 1 .442695 cmyk
f
590.054 68.0566 mo
592.831 72.4795 590.448 80.1255 588.044 83.2339 cv
586.188 84.9019 577.694 78.6914 572.099 83.5078 cv
561.385 94.46 574.614 98.0195 583.917 95.3149 cv
586.011 96.0288 581.435 110.725 572.313 111.525 cv
560.558 112.564 558.768 112.466 547.181 114.15 cv
538.403 115.431 532.615 113.089 527.794 108.292 cv
522.228 102.767 515.716 85.5674 536.501 83.9097 cv
534.696 80.3267 531.921 76.1924 526.591 73.1699 cv
534.548 67.4063 532.185 58.6104 527.843 53.1309 cv
535.157 53.3145 542.396 44.937 543.957 40.5161 cv
550.141 45.1333 555.351 45.5024 559.304 43.2095 cv
559.696 43.8843 li
563.253 47.3511 566.438 50.3193 568.589 53.9702 cv
568.061 60.3232 568.3 65.0044 573.98 66.7554 cv
579.899 68.5752 588.183 66.6152 590.054 68.0566 cv
cp
.000244144 .223728 .967346 0 cmyk
f
554.917 12.1519 mo
558.037 -6.43262 570.589 13.2651 566.86 30.8369 cv
565.667 36.4688 563.058 41.0498 559.304 43.2095 cv
555.351 45.5024 550.141 45.1333 543.957 40.5161 cv
542.396 44.937 535.157 53.3145 527.843 53.1309 cv
532.185 58.6104 534.548 67.4063 526.591 73.1699 cv
531.921 76.1924 534.696 80.3267 536.501 83.9097 cv
515.716 85.5674 522.228 102.767 527.794 108.292 cv
532.615 113.089 538.403 115.431 547.181 114.15 cv
534.544 123.442 524.681 132.665 517.718 124.09 cv
510.993 131.907 491.444 131.601 497.921 118.821 cv
480.112 122.346 474.498 113.734 477.981 105.108 cv
465.646 103.224 459.149 94.2646 467.161 83.646 cv
457.102 82.6909 456.233 71.5308 467.452 64.9019 cv
459.101 57.8613 462.333 49.6694 476.749 44.001 cv
468.743 38.1387 480.286 27.0757 491.862 29.9644 cv
487.759 22.0591 499.108 15.6426 508.503 19.9839 cv
506.937 13.3984 516.376 10.1455 523.028 16.2168 cv
518.216 2.60938 531.76 4.91064 538.409 12.1416 cv
535.657 -4.90869 549.907 1.12109 554.917 12.1519 cv
cp
.398749 .512108 1 .209964 cmyk
f
567.464 21.8916 mo
567.647 24.8032 567.479 27.8555 566.849 30.8438 cv
565.659 36.4609 563.058 41.0381 559.302 43.2109 cv
555.354 45.5117 550.138 45.1353 543.954 40.5181 cv
542.394 44.9385 535.161 53.3242 527.832 53.1377 cv
532.183 58.6118 534.538 67.4131 526.589 73.1719 cv
531.919 76.1938 534.694 80.3286 536.503 83.9199 cv
515.718 85.5771 522.217 102.774 527.788 108.308 cv
532.604 113.096 538.394 115.438 547.169 114.158 cv
534.542 123.444 524.676 132.68 517.714 124.106 cv
510.99 131.907 491.435 131.608 497.91 118.829 cv
480.103 122.354 474.495 113.735 477.979 105.109 cv
465.646 103.225 459.139 94.271 467.165 83.6553 cv
461.265 93.7236 476.474 98.5801 482.532 92.1753 cv
486.011 98.3076 498.302 94.2598 498.343 85.8003 cv
504.872 89.2461 516.016 81.6431 511.822 70.6069 cv
521.474 68.5479 523.646 52.9482 516.909 47.9565 cv
522.875 48.7686 540.495 39.3115 541.575 28.6494 cv
549.839 36.9038 561.614 33.8643 567.464 21.8916 cv
cp
.41239 .570855 1 .293828 cmyk
f
590.044 68.0635 mo
591.476 70.3408 591.54 73.4668 590.937 76.3892 cv
588.919 76.2017 588.171 73.417 586.128 72.6924 cv
583.479 71.7603 582.618 69.0391 582.595 67.5718 cv
586.046 67.5088 589.017 67.2705 590.044 68.0635 cv
cp
.426307 .656123 1 .442695 cmyk
f
552.274 105.31 mo
561.556 103.294 571.733 113.396 580.929 105.114 cv
581.196 105.297 li
579.128 108.443 576.123 111.196 572.316 111.535 cv
560.56 112.575 558.757 112.473 547.169 114.158 cv
538.394 115.438 532.604 113.096 527.788 108.308 cv
523.923 104.471 519.606 95.0112 524.286 89.0273 cv
521.862 99.519 536.812 108.67 552.274 105.31 cv
cp
0 .518425 1 0 cmyk
f
517.752 121.751 mo
518.882 123.145 li
523.892 129.313 530.604 124.735 542.038 116.121 cv
542.098 116.077 542.157 116.031 542.216 115.987 cv
536.116 115.874 531.113 113.711 526.735 109.356 cv
523.089 105.735 519.044 97.6514 521.474 91.019 cv
522.649 87.8115 525.812 83.8931 534.117 82.6694 cv
532.544 80.0186 530.066 76.8657 525.851 74.4751 cv
523.821 73.3242 li
525.711 71.9556 li
528.339 70.0522 529.864 67.6875 530.243 64.9277 cv
530.711 61.5396 529.373 57.478 526.668 54.0615 cv
524.677 51.5503 li
527.88 51.6309 li
534.271 51.792 541.103 44.0952 542.543 40.0166 cv
543.222 38.0947 li
544.854 39.314 li
550.054 43.1958 554.788 44.0938 558.552 41.9121 cv
561.797 40.0361 564.233 35.9976 565.392 30.5259 cv
567.526 20.4707 563.991 9.77246 560.621 6.8252 cv
560.181 6.44092 559.551 6.01953 559.047 6.20068 cv
558.759 6.30225 557.29 7.08008 556.396 12.4004 cv
555.582 17.2461 li
553.551 12.772 li
550.626 6.32959 544.694 2.2207 541.733 3.11475 cv
539.759 3.70654 539.085 6.91455 539.89 11.9028 cv
540.686 16.834 li
537.306 13.1572 li
533.613 9.14307 527.413 6.75488 524.786 8.33545 cv
522.665 9.63379 523.662 13.5073 524.443 15.7168 cv
526.438 21.3584 li
522.019 17.3252 li
518.522 14.1348 514.223 13.9204 511.781 15.3584 cv
510.849 15.9019 509.38 17.1885 509.962 19.6357 cv
510.677 22.6401 li
507.874 21.3452 li
502.597 18.9067 496.696 20.3286 494.043 23.105 cv
492.845 24.3589 491.726 26.4468 493.192 29.2734 cv
494.725 32.2246 li
491.498 31.4199 li
484.823 29.7549 478.013 33.2021 476.073 37.3389 cv
475.077 39.4663 475.603 41.3008 477.636 42.791 cv
479.835 44.3999 li
477.298 45.397 li
469.675 48.3936 465.126 52.1719 464.493 56.0327 cv
464.07 58.605 465.392 61.2031 468.419 63.7549 cv
470.035 65.1172 li
468.216 66.1924 li
461.845 69.9614 460.323 74.665 460.964 77.5459 cv
461.545 80.147 463.855 81.8252 467.303 82.1528 cv
469.976 82.4058 li
468.358 84.5493 li
465.288 88.6187 464.387 92.5396 465.749 95.8911 cv
467.333 99.7842 471.991 102.675 478.208 103.625 cv
480.081 103.912 li
479.372 105.669 li
477.999 109.071 478.271 112.304 480.12 114.537 cv
482.997 118.017 489.216 119.016 497.63 117.351 cv
500.651 116.752 li
499.259 119.5 li
497.577 122.819 497.76 125.196 499.804 126.563 cv
503.549 129.069 512.532 127.823 516.581 123.112 cv
517.752 121.751 li
cp
546.992 112.663 mo
555.726 111.393 559.01 111.125 564.967 110.64 cv
566.959 110.478 569.263 110.289 572.181 110.031 cv
575.737 109.718 578.325 106.898 579.871 104.586 cv
581.834 101.646 582.724 98.6309 582.896 97.1206 cv
576.962 98.4141 569.761 97.4995 567.394 93.5449 cv
566.144 91.4595 565.761 87.8423 571.026 82.459 cv
571.12 82.3716 li
575.258 78.8027 580.622 80.3477 584.169 81.3696 cv
585.173 81.6582 586.511 82.0444 587.067 82.0327 cv
589.19 79.0366 590.897 72.7612 588.967 69.1689 cv
588.188 68.9155 585.917 68.981 584.22 69.0293 cv
580.979 69.1221 576.945 69.2368 573.539 68.1899 cv
566.837 66.123 566.575 60.4932 567.054 54.3325 cv
565.179 51.3042 562.513 48.7153 559.45 45.7363 cv
558.825 45.1299 li
555.604 46.5332 550.825 46.8926 544.574 42.7817 cv
542.272 47.0723 536.731 53.0425 530.539 54.3667 cv
532.733 57.9312 533.7 61.8208 533.216 65.3369 cv
532.81 68.2793 531.446 70.8491 529.153 73.0005 cv
533.935 76.2627 536.378 80.3335 537.84 83.2354 cv
538.843 85.228 li
536.62 85.4053 li
529.855 85.9438 525.709 88.1807 524.292 92.0503 cv
522.425 97.147 525.739 104.14 528.851 107.229 cv
533.743 112.095 539.321 113.774 546.933 112.671 cv
546.952 112.668 546.973 112.665 546.992 112.663 cv
cp
577.637 111.11 mo
576.087 112.15 574.348 112.853 572.444 113.019 cv
569.519 113.278 567.208 113.467 565.211 113.629 cv
559.204 114.119 556.146 114.369 547.767 115.582 cv
546.427 116.569 545.12 117.554 543.844 118.517 cv
533.563 126.266 524.604 133.016 517.674 126.267 cv
512.523 130.855 503.06 132.352 498.135 129.056 cv
496.768 128.141 494.112 125.654 495.535 120.747 cv
487.315 121.893 481.075 120.399 477.808 116.45 cv
475.569 113.744 474.942 110.105 476.003 106.271 cv
469.524 104.89 464.823 101.575 462.97 97.0215 cv
461.86 94.2915 461.351 90.043 464.624 84.7012 cv
461.149 83.7261 458.751 81.4028 458.037 78.1992 cv
457.004 73.5771 459.717 68.4248 465.019 64.689 cv
461.532 61.1123 461.163 57.7983 461.534 55.5464 cv
462.288 50.9492 466.61 46.8081 474.071 43.4941 cv
472.403 41.3574 472.118 38.7085 473.358 36.0654 cv
475.577 31.3242 482.349 27.3838 489.624 28.0649 cv
489.161 25.5386 489.928 23.0698 491.874 21.0322 cv
495.31 17.4351 501.431 16.1924 506.873 17.7778 cv
507.108 15.7168 508.284 13.9365 510.26 12.7729 cv
512.786 11.2847 516.755 10.8857 520.628 12.7715 cv
520.083 8.47314 521.903 6.56104 523.239 5.76514 cv
526.73 3.66406 532.271 5.3374 536.567 8.5 cv
536.491 2.56494 539.103 .774414 540.866 .242188 cv
544.906 -.977539 550.619 2.53076 554.36 8.09277 cv
555.235 5.51807 556.469 3.93555 558.038 3.37451 cv
558.886 3.07227 560.603 2.8252 562.596 4.56689 cv
567.132 8.53467 570.603 20.4263 568.327 31.1479 cv
567.155 36.6782 564.757 41.0049 561.493 43.5396 cv
561.54 43.585 li
564.754 46.7095 567.79 49.6597 569.88 53.2095 cv
570.123 53.6201 li
570.083 54.0952 li
569.529 60.7622 570.024 63.9658 574.423 65.3218 cv
577.354 66.2236 581.114 66.1162 584.134 66.0298 cv
587.353 65.9385 589.677 65.8721 590.97 66.8682 cv
591.183 67.0317 li
591.325 67.2588 li
594.598 72.4736 591.746 80.8999 589.229 84.1519 cv
589.046 84.3496 li
587.748 85.5122 585.8 84.9614 583.339 84.2524 cv
580.083 83.3145 576.023 82.1543 573.125 84.605 cv
571.349 86.4307 568.631 89.772 569.967 92.0034 cv
571.517 94.5918 577.966 95.4834 583.499 93.875 cv
583.953 93.7422 li
584.401 93.895 li
585.235 94.1797 586.163 95.0518 585.854 97.5918 cv
585.383 101.494 582.407 107.907 577.637 111.11 cv
cp
.426307 .656123 1 .442695 cmyk
f
554.986 83.1265 mo
555.312 83.6123 554.973 84.4106 554.229 84.9102 cv
553.483 85.4106 552.616 85.4219 552.29 84.9365 cv
551.964 84.4507 552.304 83.6523 553.048 83.1523 cv
553.792 82.6528 554.66 82.6406 554.986 83.1265 cv
cp
.0176699 0 .304417 0 cmyk
f
554.986 83.1265 mo
555.312 83.6123 554.973 84.4106 554.229 84.9102 cv
553.483 85.4106 552.616 85.4219 552.29 84.9365 cv
551.964 84.4507 552.304 83.6523 553.048 83.1523 cv
553.792 82.6528 554.66 82.6406 554.986 83.1265 cv
cp
f
541.641 68.5107 mo
543.427 64.5215 547.906 60.7202 549.171 60.4736 cv
550.487 60.2168 559.03 63.1323 563.348 70.3774 cv
563.794 69.0234 564.032 67.8096 563.62 65.1006 cv
565.23 70.042 564.28 73.0854 564.519 73.6953 cv
559.993 72.4668 551.783 74.3481 546.375 81.4146 cv
545.918 76.0781 550.515 67.9736 561.388 71.3125 cv
555.116 65.9668 546.681 65.7344 541.641 68.5107 cv
cp
.426307 .656123 1 .442695 cmyk
f
587.636 69.458 mo
587.681 69.9561 587.044 70.4224 586.212 70.498 cv
585.379 70.5732 584.668 70.231 584.622 69.7319 cv
584.577 69.2334 585.215 68.7666 586.047 68.6909 cv
586.878 68.6152 587.589 68.9585 587.636 69.458 cv
cp
.0176699 0 .304417 0 cmyk
f
513.448 36.127 mo
513.71 31.1338 517.737 32.9346 519.913 40.8213 cv
522.438 49.9653 525.493 72.0044 499.895 89.4922 cv
469.327 110.377 447.622 92.9585 439.475 81.5776 cv
429.584 67.7422 424.366 41.1333 449.264 21.7065 cv
471.173 4.61182 490.927 18.7275 495.599 27.0327 cv
495.913 27.376 li
492.908 30.165 490.676 34.7349 491.967 40.0112 cv
485.89 41.8145 482.192 45.1162 480.587 48.6992 cv
473.263 42.8848 459.755 47.0752 460.828 59.1113 cv
462.123 73.5986 481.027 79.7437 495.109 68.0137 cv
509.977 55.6226 513.144 42.0415 513.448 36.127 cv
cp
.0619821 0 .965148 0 cmyk
f
502.962 76.0503 mo
517.989 62.4443 519.608 45.4097 516.911 36.6206 cv
517.997 36.0127 li
518.697 37.2168 519.354 38.8232 519.913 40.8213 cv
522.438 49.9653 525.493 72.0044 499.895 89.4922 cv
469.327 110.377 447.622 92.9585 439.475 81.5776 cv
431.715 70.7192 426.828 51.9951 437.121 35.0513 cv
427.585 58.8457 444.264 82.9873 458.703 88.0962 cv
476.69 94.4355 493.308 84.7964 502.962 76.0503 cv
cp
.00155642 .206119 1 0 cmyk
f
491.967 40.0112 mo
485.89 41.8145 482.192 45.1162 480.587 48.6992 cv
473.263 42.8848 459.755 47.0752 460.828 59.1113 cv
461.847 70.5322 473.815 76.7695 485.739 73.1475 cv
458.822 87.6792 446.637 58.0513 457.172 44.9316 cv
469.815 29.1919 486.316 35.4697 491.967 40.0112 cv
cp
f
454.113 26.0791 mo
452.971 28.5415 458.858 35.54 462.229 34.2813 cv
465.599 33.0215 468.017 23.1675 469.302 20.2974 cv
470.587 17.4272 456.407 21.1255 454.113 26.0791 cv
cp
.0176699 0 .304417 0 cmyk
f
479.796 20.6792 mo
477.384 21.5073 474.968 28.7378 476.966 31.4126 cv
478.962 34.0879 488.103 30.3594 489.483 28.8291 cv
490.866 27.2993 482.243 19.8394 479.796 20.6792 cv
cp
f
442.867 36.2393 mo
440.148 39.0679 437.506 42.6572 438.417 46.6543 cv
438.932 48.918 449.053 48.145 448.07 43.9878 cv
446.597 37.772 444.614 34.4204 442.867 36.2393 cv
cp
f
515.711 41.4321 mo
515.233 43.8633 514.813 45.2119 515.448 45.5244 cv
519.499 47.522 516.188 39.0039 515.711 41.4321 cv
cp
f
512.462 51.6934 mo
511.084 53.9746 509.841 55.8628 510.514 56.2646 cv
511.417 56.8062 514.552 54.6572 515.657 53.3125 cv
516.763 51.9683 513.257 50.3794 512.462 51.6934 cv
cp
f
505.542 62.6143 mo
504.511 63.7544 502.317 66.1836 503.149 66.2271 cv
503.982 66.2705 507.858 64.271 508.364 63.5293 cv
508.871 62.7876 506.693 61.3389 505.542 62.6143 cv
cp
f
518.47 41.2178 mo
521.401 51.8262 522.774 72.0439 499.052 88.2505 cv
465.188 111.373 444.501 86.0215 440.699 80.7017 cv
432.696 69.5093 424.382 43.022 450.19 22.8857 cv
458.454 16.4355 467.392 13.9443 476.031 15.6763 cv
485.337 17.5425 491.892 23.7095 494.161 27.5469 cv
493.347 28.2837 492.608 29.1201 491.991 30.0542 cv
491.013 31.5254 490.339 33.2402 490.08 35.0313 cv
489.888 36.3496 489.942 37.7051 490.233 38.9893 cv
489.11 39.2954 488.019 39.7378 486.975 40.2876 cv
485.52 41.0576 484.176 42.0786 483.027 43.2871 cv
482.021 44.335 481.182 45.5503 480.577 46.8628 cv
478.536 45.5308 476.114 44.7803 473.632 44.6484 cv
472.825 42.9663 472.364 40.9424 472.054 38.9536 cv
471.712 36.6499 471.651 34.2817 471.872 31.9336 cv
472.095 29.5825 472.652 27.2612 473.53 25.0278 cv
474.431 22.8037 475.714 20.7046 477.323 18.793 cv
475.267 20.2183 473.507 22.1333 472.163 24.3306 cv
470.791 26.5176 469.873 28.9946 469.34 31.5405 cv
468.804 34.0918 468.671 36.729 468.944 39.3447 cv
469.163 41.1934 469.54 43.0576 470.317 44.8438 cv
468.829 45.0981 467.373 45.5718 466.023 46.2891 cv
465.067 46.7974 464.208 47.3984 463.445 48.0737 cv
462.046 47.0464 460.69 45.9692 459.383 44.8262 cv
457.852 43.4609 456.39 42.0112 455.063 40.4355 cv
452.381 37.3027 450.254 33.689 448.796 29.5859 cv
448.81 31.7637 449.192 33.9702 449.913 36.0737 cv
450.618 38.188 451.646 40.1973 452.876 42.0718 cv
454.122 43.936 455.575 45.6646 457.209 47.1997 cv
458.485 48.4155 459.884 49.5059 461.378 50.4482 cv
459.956 52.5889 459.222 55.1831 459.276 58.0654 cv
457.756 58.5737 456.159 58.9399 454.541 59.1416 cv
452.576 59.3657 450.577 59.3984 448.594 59.1411 cv
446.61 58.8965 444.646 58.3745 442.733 57.6255 cv
441.775 57.2529 440.833 56.811 439.921 56.3013 cv
438.983 55.8247 438.097 55.2505 437.19 54.6748 cv
437.852 55.522 438.611 56.2881 439.406 57.0308 cv
440.222 57.7451 441.095 58.4072 442.017 59.0112 cv
443.867 60.2075 445.948 61.0884 448.129 61.623 cv
450.311 62.1445 452.588 62.3472 454.839 62.1509 cv
456.458 62.0181 458.071 61.7197 459.631 61.1973 cv
460.201 64.0146 461.437 66.582 463.226 68.749 cv
462.268 69.9248 461.228 71.0845 460.119 72.1914 cv
458.796 73.5244 457.405 74.8066 455.949 76.0054 cv
454.489 77.1997 452.95 78.2969 451.304 79.207 cv
449.655 80.0752 447.855 80.811 445.891 80.666 cv
447.768 81.353 449.911 80.9971 451.805 80.3994 cv
453.735 79.7983 455.533 78.8696 457.242 77.8311 cv
458.95 76.7866 460.56 75.5942 462.073 74.2803 cv
463.232 73.2466 464.36 72.1636 465.374 70.9331 cv
466.845 72.1895 468.542 73.2407 470.442 74.0298 cv
471.329 74.3979 472.24 74.6924 473.162 74.937 cv
473.058 76.3633 472.828 77.7773 472.499 79.2134 cv
472.087 80.9502 471.548 82.6792 470.862 84.3604 cv
469.501 87.7329 467.597 90.9092 464.937 93.6992 cv
466.677 92.8633 468.278 91.6709 469.657 90.2607 cv
471.05 88.8574 472.233 87.2422 473.228 85.5171 cv
474.21 83.7861 475.007 81.9395 475.546 79.998 cv
475.946 78.5684 476.224 77.0518 476.265 75.5234 cv
479.165 75.8608 482.15 75.6494 485.086 74.8877 cv
485.85 75.9346 486.543 77.0552 487.212 78.2231 cv
487.926 79.498 488.595 80.8115 489.163 82.167 cv
489.731 83.5215 490.224 84.9102 490.559 86.3481 cv
490.874 87.7842 491.085 89.272 490.892 90.8501 cv
491.767 89.5137 492.171 87.8379 492.224 86.2036 cv
492.286 84.5586 492.058 82.9189 491.658 81.3398 cv
491.253 79.7603 490.692 78.2251 489.959 76.7681 cv
489.462 75.7666 488.874 74.7881 488.184 73.8711 cv
490.95 72.7783 493.623 71.2041 496.071 69.1626 cv
496.241 69.0225 496.398 68.8818 496.563 68.7417 cv
497.509 69.1255 498.362 69.5806 499.229 70.1382 cv
500.219 70.7935 501.175 71.5669 502.077 72.4419 cv
503.898 74.1841 505.517 76.2642 507.269 78.3652 cv
506.686 75.6929 505.606 73.1299 503.962 70.8223 cv
503.132 69.6792 502.155 68.5952 500.983 67.6963 cv
500.407 67.2412 499.763 66.8325 499.089 66.4917 cv
501.356 64.3564 503.304 62.2148 504.972 60.1089 cv
505.905 60.0947 506.72 60.1577 507.613 60.3403 cv
508.513 60.5322 509.429 60.8325 510.334 61.2422 cv
512.159 62.0508 513.921 63.2334 515.796 64.4482 cv
514.847 62.4243 513.438 60.6108 511.57 59.187 cv
510.632 58.4863 509.57 57.8833 508.392 57.5049 cv
507.987 57.3687 507.557 57.2739 507.122 57.1973 cv
509.026 54.4302 510.472 51.7622 511.565 49.2954 cv
511.86 49.2783 512.211 49.2832 512.606 49.312 cv
513.212 49.3628 513.866 49.4404 514.524 49.5615 cv
515.187 49.6719 515.859 49.8159 516.542 49.9775 cv
517.222 50.1533 517.917 50.3213 518.634 50.5991 cv
518.307 49.895 517.792 49.2744 517.222 48.7515 cv
516.653 48.2183 516.015 47.7725 515.337 47.3794 cv
514.652 47 513.927 46.6729 513.122 46.4648 cv
512.999 46.4346 512.866 46.4087 512.735 46.3823 cv
514.438 41.6758 514.856 37.9878 514.95 36.2021 cv
514.987 35.5024 515.103 35.1143 515.188 34.918 cv
515.831 35.3135 517.333 37.1021 518.47 41.2178 cv
cp
514.746 31.8535 mo
513.968 31.938 512.138 32.5161 511.954 36.0459 cv
511.808 38.835 510.264 53.4297 494.152 66.8574 cv
487.345 72.5322 478.706 74.2114 471.593 71.2593 cv
466.2 69.021 462.821 64.5435 462.323 58.9751 cv
461.927 54.5327 463.784 50.8696 467.431 48.939 cv
469.035 48.0864 470.825 47.6558 472.604 47.6177 cv
472.739 47.6289 472.872 47.6357 473.007 47.6099 cv
475.438 47.6396 477.827 48.4141 479.679 49.8921 cv
479.579 50.6621 479.569 51.4341 479.667 52.1821 cv
480.601 49.1763 482.519 46.9194 484.786 45.2593 cv
485.929 44.4302 487.158 43.7397 488.432 43.1162 cv
489.698 42.4751 491.024 41.9453 492.36 41.3257 cv
492.36 41.3262 li
493.417 41.1538 li
493.306 39.6812 li
493.196 38.2368 493.161 36.8589 493.354 35.4883 cv
493.538 34.1206 493.927 32.772 494.507 31.4634 cv
495.092 30.1553 495.888 28.9106 496.853 27.7559 cv
497.827 26.6069 498.964 25.5625 500.38 24.7261 cv
499.081 24.7593 497.796 25.1816 496.614 25.8115 cv
493.526 20.7456 486.122 14.6401 476.62 12.7354 cv
469.979 11.4043 459.69 11.6753 448.344 20.521 cv
420.743 42.0566 429.677 70.4448 438.258 82.4468 cv
449.484 98.1489 472.413 109.754 500.237 91.0708 cv
500.405 90.9585 500.575 90.8428 500.743 90.728 cv
526.007 73.4688 524.505 51.7988 521.36 40.4185 cv
519.826 34.8574 517.291 31.5757 514.746 31.8535 cv
cp
.426307 .656123 1 .442695 cmyk
f
416.139 165.645 mo
415.806 168.936 417.036 173 420.021 175.555 cv
412.312 200.644 385.644 218.417 374.521 226.417 cv
374.521 226.417 370.462 234.163 363.578 237.067 cv
352.358 233.678 348.468 213.012 352.655 207.653 cv
385.498 192.166 397.703 177.717 405.253 165.071 cv
407.815 166.778 411.683 167.502 416.139 165.645 cv
cp
.000244144 .223728 .967346 0 cmyk
f
416.139 165.645 mo
415.806 168.936 417.036 173 420.021 175.555 cv
412.312 200.644 385.644 218.417 374.521 226.417 cv
369.592 222.825 363.722 214.589 364.183 201.817 cv
365.559 201.064 366.886 200.319 368.172 199.573 cv
366.406 211.62 386.158 210.19 397.438 199.042 cv
408.49 188.125 406.43 177.377 402.238 169.809 cv
403.334 168.206 404.329 166.62 405.253 165.071 cv
407.815 166.778 411.683 167.502 416.139 165.645 cv
cp
0 .518425 1 0 cmyk
f
374.521 226.417 mo
374.521 226.417 370.462 234.163 363.578 237.067 cv
352.358 233.678 348.468 213.012 352.655 207.653 cv
356.815 205.686 360.644 203.747 364.183 201.817 cv
363.722 214.589 369.592 222.825 374.521 226.417 cv
cp
.41239 .570855 1 .293828 cmyk
f
375.768 223.678 mo
375.01 224.217 374.3 224.723 373.643 225.195 cv
373.355 225.403 li
373.19 225.715 li
373.154 225.786 369.488 232.641 363.503 235.459 cv
359.414 233.965 355.955 229.557 353.957 223.258 cv
351.945 216.917 352.221 211.09 353.648 208.837 cv
385.176 193.907 397.95 179.844 405.96 166.772 cv
406.31 166.979 406.672 167.166 407.045 167.329 cv
408.57 168.018 410.276 168.315 411.948 168.253 cv
412.821 168.217 413.681 168.078 414.512 167.852 cv
414.569 168.741 414.737 169.617 414.996 170.458 cv
415.489 172.046 416.352 173.515 417.464 174.738 cv
417.753 175.059 418.063 175.358 418.388 175.64 cv
411.073 198.508 387.327 215.445 375.768 223.678 cv
cp
422.2 176.105 mo
421.096 175.286 420.218 174.269 419.545 173.155 cv
418.873 172.035 418.429 170.808 418.117 169.567 cv
417.803 168.323 417.674 167.054 417.629 165.795 cv
417.535 163.184 li
415.558 164.26 li
415.557 164.26 li
414.278 164.682 413.007 165.008 411.723 165.158 cv
410.438 165.313 409.138 165.267 407.859 164.983 cv
406.589 164.68 405.343 164.132 404.271 163.288 cv
403.221 162.443 402.269 161.318 401.996 159.821 cv
401.647 161.327 402.241 163.006 403.196 164.299 cv
403.33 164.483 403.488 164.646 403.636 164.817 cv
395.849 177.645 383.409 191.484 352.012 206.292 cv
351.689 206.444 li
351.47 206.725 li
348.997 209.89 348.844 217.061 351.097 224.167 cv
353.482 231.684 357.875 236.91 363.149 238.502 cv
363.667 238.659 li
364.167 238.448 li
370.714 235.678 374.783 229.004 375.669 227.434 cv
376.245 227.021 376.859 226.583 377.508 226.122 cv
389.215 217.784 413.131 200.723 421.005 177.28 cv
421.16 177.346 421.31 177.426 421.466 177.485 cv
422.971 178.045 424.561 178.184 426.05 177.993 cv
424.608 177.553 423.297 176.93 422.2 176.105 cv
cp
.426307 .656123 1 .442695 cmyk
f
526.33 199.413 mo
526.33 199.413 536.116 203.034 539.786 208.529 cv
536.791 218.551 517.518 223.674 514.854 222.627 cv
501.507 214.021 482.765 175.47 477.582 160.303 cv
480.06 158.955 482.278 156.608 483.067 152.999 cv
485.253 154.032 489.878 154.023 493.169 151.471 cv
500.714 167.553 516.979 190.346 526.33 199.413 cv
cp
.000244144 .223728 .967346 0 cmyk
f
526.333 199.422 mo
526.333 199.422 536.116 203.034 539.786 208.529 cv
536.791 218.551 517.518 223.674 514.854 222.627 cv
511.884 220.709 508.63 217.295 505.317 212.979 cv
515.506 211.346 525.304 203.44 526.333 199.422 cv
cp
.41239 .570855 1 .293828 cmyk
f
526.33 199.413 mo
526.333 199.422 li
525.304 203.44 515.506 211.346 505.317 212.979 cv
493.817 197.975 481.612 172.088 477.582 160.303 cv
480.06 158.955 482.278 156.608 483.067 152.999 cv
485.253 154.032 489.878 154.023 493.169 151.471 cv
494.03 153.318 495.014 155.237 496.087 157.225 cv
492.831 163.551 489.501 174.213 497.689 188.456 cv
506.505 203.809 520.29 201.681 522.516 195.395 cv
523.874 196.922 525.159 198.272 526.33 199.413 cv
cp
0 .518425 1 0 cmyk
f
515.491 221.251 mo
502.642 212.738 484.679 175.733 479.308 160.674 cv
480.558 159.959 481.694 158.994 482.593 157.813 cv
483.245 156.949 483.74 155.973 484.091 154.958 cv
485.204 155.225 486.298 155.237 487.378 155.155 cv
488.989 155.008 490.563 154.524 491.972 153.726 cv
492.135 153.635 492.284 153.524 492.442 153.422 cv
500.417 169.813 516.241 191.722 525.282 200.487 cv
525.509 200.706 li
525.806 200.817 li
525.896 200.849 534.464 204.057 538.116 208.777 cv
534.808 217.2 518.091 221.771 515.491 221.251 cv
cp
541.034 207.7 mo
537.474 202.357 528.911 198.805 527.151 198.119 cv
518.106 189.245 502.403 167.389 494.767 151.336 cv
494.997 151.042 495.213 150.735 495.401 150.415 cv
496.204 149.048 496.586 147.51 496.529 146.032 cv
495.845 147.344 495.044 148.489 494.08 149.383 cv
493.121 150.281 492.017 150.925 490.842 151.364 cv
489.665 151.799 488.411 152.014 487.167 152.067 cv
485.94 152.113 484.64 151.967 483.706 151.639 cv
482.048 151.059 li
481.599 152.677 li
481.259 153.9 480.784 155.043 480.127 156.096 cv
479.479 157.155 478.618 158.098 477.602 158.92 cv
476.575 159.727 475.388 160.394 474.098 160.86 cv
472.808 161.303 471.413 161.651 469.962 161.416 cv
471.243 162.198 472.863 162.344 474.384 162.231 cv
475.106 162.172 475.828 162.039 476.538 161.842 cv
482.198 177.674 500.466 215.134 514.038 223.886 cv
514.302 224.02 li
515.444 224.471 517.866 224.239 520.741 223.522 cv
523.472 222.84 526.612 221.723 529.458 220.342 cv
533.921 218.173 539.585 214.44 541.224 208.96 cv
541.427 208.286 li
541.034 207.7 li
cp
.426307 .656123 1 .442695 cmyk
f
494.22 50.543 mo
495.001 50.416 li
494.938 52.457 495.794 54.6646 497.759 56.9961 cv
495.343 58.3164 492.116 61.4224 491.682 64.7012 cv
473.35 76.9014 465.115 54.9316 468.534 52.937 cv
476.287 50.7427 487.802 50.2397 494.22 50.543 cv
cp
.000244144 .223728 .967346 0 cmyk
f
492.918 61.522 mo
492.289 62.5229 491.825 63.606 491.682 64.7012 cv
473.69 76.6729 465.425 55.7354 468.356 53.0684 cv
468.847 55.5933 472.653 66.1426 481.362 63.3433 cv
478.286 61.9028 475.282 59.8853 472.935 56.8003 cv
479.532 55.0923 487.813 57.6143 492.918 61.522 cv
cp
0 .518425 1 0 cmyk
f
493.872 57.791 mo
493.765 57.8979 493.663 58.0142 493.56 58.126 cv
492.335 57.1973 490.962 56.4761 489.548 55.9351 cv
487.716 55.2285 485.792 54.8647 483.886 54.6938 cv
481.974 54.5337 480.063 54.5942 478.192 54.8838 cv
477.26 55.04 476.333 55.2305 475.437 55.5361 cv
474.554 55.8452 473.636 56.1777 472.935 56.8037 cv
473.79 56.4653 474.692 56.3823 475.587 56.3364 cv
476.485 56.3076 477.376 56.312 478.265 56.3794 cv
480.039 56.4956 481.788 56.7813 483.479 57.1992 cv
485.169 57.6191 486.79 58.207 488.333 58.8911 cv
489.521 59.4189 490.646 60.0337 491.737 60.7061 cv
491.709 60.7637 491.675 60.8169 491.646 60.8755 cv
491.265 61.6665 490.979 62.5356 490.854 63.4321 cv
482.337 69.106 476.786 66.7422 473.599 63.6846 cv
469.952 60.1885 468.939 55.4224 469.337 54.2676 cv
476.983 52.1934 487.89 51.7871 493.743 52.0229 cv
493.807 52.9863 494.022 53.9355 494.388 54.7974 cv
494.654 55.4307 494.985 56.0215 495.37 56.563 cv
494.831 56.9268 494.335 57.3428 493.872 57.791 cv
cp
495.143 47.0728 mo
494.718 47.6509 494.378 48.3193 494.13 49.0352 cv
488.042 48.7656 476.229 49.1943 468.121 51.4912 cv
467.772 51.6396 li
467.038 52.0654 466.204 53.0264 466.276 55.2197 cv
466.397 58.8267 469.313 65.5273 475.19 68.4561 cv
478.575 70.1421 484.034 71.0645 491.306 66.6895 cv
491.567 67.2251 491.912 67.7036 492.339 68.0654 cv
492.104 66.8779 492.204 65.8213 492.55 64.894 cv
492.898 63.9678 493.435 63.1475 494.071 62.3838 cv
495.354 60.8682 496.962 59.5649 498.478 58.3164 cv
500.037 57.0313 li
498.905 56.0347 li
498.905 56.0347 li
498.364 55.1021 497.778 54.2695 497.304 53.4072 cv
496.827 52.5508 496.415 51.6787 496.257 50.7305 cv
496.077 49.7871 496.144 48.769 496.442 47.7358 cv
496.735 46.6978 497.263 45.665 497.901 44.6567 cv
496.868 45.251 495.903 46.0376 495.143 47.0728 cv
cp
.426307 .656123 1 .442695 cmyk
f
579.364 29.0332 mo
579.493 27.687 580.497 27.1211 581.126 27.1792 cv
581.757 27.2393 582.636 27.9883 582.505 29.335 cv
582.376 30.6802 581.204 32.9824 580.575 32.9229 cv
579.948 32.8613 579.235 30.3799 579.364 29.0332 cv
cp
.626825 .102937 0 0 cmyk
f
593.411 35.8438 mo
594.466 34.9688 595.597 35.2813 596.005 35.7773 cv
596.413 36.271 596.507 37.4385 595.45 38.3135 cv
594.39 39.1855 591.896 39.9961 591.489 39.5034 cv
591.081 39.0088 592.351 36.7153 593.411 35.8438 cv
cp
f
599.325 50.0474 mo
600.716 50.1797 601.304 51.2183 601.241 51.8662 cv
601.179 52.5171 600.405 53.4248 599.013 53.2925 cv
597.624 53.1567 595.247 51.9468 595.31 51.2998 cv
595.372 50.6509 597.937 49.9131 599.325 50.0474 cv
cp
f
853.633 27.5947 mo
853.513 22.8574 857.242 24.8579 859.747 32.5234 cv
862.654 41.4121 866.947 62.6191 845.289 77.4619 cv
819.425 95.1875 798.777 77.0591 790.684 65.6436 cv
780.856 51.7651 774.304 26.0522 795.198 9.31299 cv
813.585 -5.41602 832.255 9.42725 837.022 17.6689 cv
837.327 18.0176 li
834.837 20.4609 833.163 24.6558 834.692 29.7725 cv
829.384 31.0596 826.311 33.9424 825.129 37.2412 cv
818.165 31.1846 806.38 34.2183 808.192 45.7583 cv
810.376 59.6484 827.722 66.8403 839.487 56.665 cv
851.907 45.917 853.778 33.2065 853.633 27.5947 cv
cp
.00149538 .22266 .999145 0 cmyk
f
847.08 64.8765 mo
859.558 52.9819 859.8 36.8721 856.765 28.3101 cv
857.692 27.8081 li
858.404 29.0044 859.104 30.5815 859.747 32.5234 cv
862.654 41.4121 866.947 62.6191 845.289 77.4619 cv
819.425 95.1875 798.777 77.0591 790.684 65.6436 cv
782.974 54.752 777.275 36.5713 785.282 21.1626 cv
778.438 43.1504 795.067 67.3252 808.345 73.2134 cv
824.884 80.5264 839.065 72.522 847.08 64.8765 cv
cp
0 .56115 1 0 cmyk
f
834.692 29.7725 mo
829.384 31.0596 826.311 33.9424 825.129 37.2412 cv
818.165 31.1846 806.38 34.2183 808.192 45.7583 cv
809.912 56.708 821.06 63.4966 831.47 60.8916 cv
808.421 72.8252 795.423 43.7432 803.917 31.9941 cv
814.112 17.8984 829.316 25.0469 834.692 29.7725 cv
cp
f
799.845 13.8213 mo
798.999 16.0854 804.761 23.1689 807.686 22.208 cv
810.611 21.2476 812.075 12.0332 813.021 9.39063 cv
813.968 6.74805 801.546 9.26611 799.845 13.8213 cv
cp
.0140688 0 .237491 0 cmyk
f
822.437 10.4976 mo
820.337 11.1152 818.688 17.8315 820.665 20.52 cv
822.64 23.209 830.552 20.3057 831.679 18.9468 cv
832.807 17.5874 824.565 9.87158 822.437 10.4976 cv
cp
f
790.507 22.7012 mo
788.274 25.2031 786.165 28.4341 787.263 32.3062 cv
787.884 34.4985 796.884 34.479 795.708 30.4502 cv
793.951 24.4253 791.94 21.0928 790.507 22.7012 cv
cp
f
856.032 32.8086 mo
855.776 35.0898 855.497 36.3442 856.087 36.687 cv
859.852 38.876 856.287 30.5293 856.032 32.8086 cv
cp
f
853.853 42.3511 mo
852.78 44.4258 851.804 46.1357 852.434 46.5664 cv
853.28 47.1465 855.933 45.3218 856.825 44.1196 cv
857.72 42.9175 854.47 41.1553 853.853 42.3511 cv
cp
f
848.437 52.2617 mo
847.595 53.2749 845.806 55.4331 846.553 55.5337 cv
847.3 55.6338 850.626 54.0044 851.026 53.3335 cv
851.427 52.6631 849.376 51.1289 848.437 52.2617 cv
cp
f
858.485 32.7983 mo
861.857 43.1108 864.519 62.4639 844.446 76.2192 cv
815.794 95.8428 795.494 70.231 791.716 64.8955 cv
783.765 53.6689 774.452 27.8521 796.11 10.5024 cv
803.045 4.94385 810.862 3.20459 818.714 5.46631 cv
827.17 7.90234 833.47 14.2402 835.772 18.0566 cv
835.095 18.7002 834.495 19.4448 834.009 20.2905 cv
833.237 21.6226 832.757 23.208 832.651 24.8955 cv
832.573 26.1377 832.718 27.4326 833.069 28.6763 cv
832.087 28.8882 831.142 29.2319 830.247 29.6816 cv
828.999 30.3125 827.87 31.1895 826.929 32.2593 cv
826.101 33.186 825.438 34.2847 824.989 35.4912 cv
823.069 34.0781 820.851 33.1914 818.62 32.8901 cv
817.78 31.2305 817.225 29.2705 816.806 27.3545 cv
816.336 25.1362 816.114 22.8765 816.146 20.6558 cv
816.179 18.4321 816.513 16.2607 817.14 14.1958 cv
817.788 12.1411 818.786 10.2324 820.091 8.52588 cv
818.353 9.73779 816.913 11.437 815.868 13.4351 cv
814.796 15.4204 814.149 17.7144 813.853 20.1021 cv
813.554 22.4937 813.621 24.9966 814.054 27.5068 cv
814.38 29.2822 814.848 31.0854 815.671 32.8418 cv
814.356 32.978 813.087 33.3262 811.931 33.9141 cv
811.112 34.3306 810.386 34.8418 809.752 35.4312 cv
808.427 34.3535 807.138 33.2314 805.888 32.0498 cv
804.422 30.6411 803.011 29.1567 801.714 27.5625 cv
799.092 24.3882 796.933 20.7959 795.338 16.7842 cv
795.505 18.8594 796.003 20.9888 796.798 23.0435 cv
797.577 25.1064 798.64 27.0933 799.872 28.9653 cv
801.118 30.8296 802.541 32.5791 804.111 34.1563 cv
805.339 35.4053 806.668 36.5425 808.069 37.5464 cv
806.95 39.4844 806.478 41.9028 806.729 44.6523 cv
805.406 45.0283 804.004 45.2646 802.571 45.3418 cv
800.829 45.4155 799.044 45.3052 797.251 44.9194 cv
795.458 44.5464 793.665 43.9102 791.901 43.061 cv
791.018 42.6387 790.145 42.1509 789.292 41.6011 cv
788.419 41.0806 787.586 40.4712 786.733 39.8574 cv
787.386 40.7114 788.119 41.4951 788.883 42.2588 cv
789.663 42.9976 790.491 43.6895 791.358 44.3301 cv
793.099 45.6006 795.022 46.5874 797.011 47.2505 cv
798.999 47.9023 801.05 48.2568 803.052 48.229 cv
804.489 48.2168 805.911 48.0474 807.269 47.6602 cv
807.979 50.3833 809.267 52.917 811.021 55.1074 cv
810.246 56.1587 809.397 57.1899 808.485 58.166 cv
807.396 59.3418 806.242 60.4644 805.025 61.5024 cv
803.804 62.5376 802.505 63.4731 801.097 64.2236 cv
799.683 64.9331 798.125 65.5068 796.358 65.23 cv
798.085 66.0166 799.978 65.8296 801.629 65.395 cv
803.313 64.959 804.856 64.2017 806.31 63.3335 cv
807.765 62.4595 809.12 61.4385 810.38 60.2939 cv
811.345 59.3916 812.276 58.4399 813.097 57.3398 cv
814.5 58.6406 816.093 59.7622 817.849 60.6484 cv
818.669 61.0615 819.504 61.4072 820.346 61.7051 cv
820.353 63.0562 820.249 64.3867 820.056 65.7305 cv
819.81 67.356 819.45 68.9648 818.958 70.5171 cv
817.978 73.6328 816.499 76.5234 814.317 78.9922 cv
815.815 78.3193 817.163 77.2969 818.297 76.0513 cv
819.442 74.8135 820.388 73.3589 821.155 71.7866 cv
821.91 70.207 822.491 68.5049 822.837 66.6943 cv
823.094 65.3604 823.234 63.9355 823.163 62.4834 cv
825.781 63.0103 828.437 63.02 831.008 62.5024 cv
831.765 63.5537 832.466 64.6704 833.146 65.8301 cv
833.875 67.0947 834.566 68.3931 835.171 69.7241 cv
835.774 71.0552 836.315 72.4126 836.716 73.8057 cv
837.099 75.1963 837.394 76.6279 837.332 78.1172 cv
838.021 76.9063 838.263 75.3389 838.194 73.7866 cv
838.134 72.2236 837.813 70.6465 837.345 69.1138 cv
836.87 67.5801 836.26 66.0786 835.501 64.6387 cv
834.984 63.6499 834.39 62.6768 833.707 61.7539 cv
836.104 60.9092 838.384 59.5991 840.43 57.8286 cv
840.571 57.7065 840.701 57.5835 840.839 57.4619 cv
841.712 57.8945 842.508 58.3887 843.322 58.981 cv
844.255 59.6748 845.165 60.4795 846.033 61.3765 cv
847.786 63.165 849.381 65.2607 851.097 67.3867 cv
850.386 64.7993 849.239 62.2822 847.604 59.9678 cv
846.781 58.8203 845.831 57.7183 844.719 56.7793 cv
844.171 56.3052 843.565 55.8706 842.938 55.498 cv
844.817 53.625 846.405 51.7227 847.749 49.8354 cv
848.583 49.8882 849.315 50.0059 850.128 50.2432 cv
850.946 50.4897 851.786 50.8408 852.626 51.2949 cv
854.315 52.1938 855.976 53.4453 857.739 54.7358 cv
856.746 52.7397 855.358 50.9131 853.585 49.4248 cv
852.696 48.6914 851.704 48.0415 850.623 47.5977 cv
850.253 47.4395 849.86 47.3184 849.466 47.2148 cv
850.973 44.7144 852.077 42.2759 852.88 40.0029 cv
853.144 40.0083 853.458 40.0381 853.813 40.0933 cv
854.357 40.1841 854.95 40.3042 855.546 40.4668 cv
856.147 40.6187 856.759 40.8032 857.38 41.0059 cv
858.001 41.2212 858.634 41.4302 859.296 41.7461 cv
858.953 41.0518 858.449 40.4248 857.902 39.8862 cv
857.354 39.3379 856.753 38.8677 856.118 38.4453 cv
855.479 38.0356 854.808 37.6729 854.072 37.418 cv
853.96 37.3804 853.84 37.3467 853.722 37.3115 cv
854.909 32.9502 855.022 29.4668 854.98 27.7725 cv
854.964 27.1084 855.04 26.7471 855.103 26.5659 cv
855.706 26.9883 857.176 28.7988 858.485 32.7983 cv
cp
854.49 23.6162 mo
853.8 23.6416 852.204 24.0635 852.289 27.4116 cv
852.356 30.0576 852.009 43.8486 838.549 55.4966 cv
832.862 60.4189 825.255 61.4067 818.681 58.0908 cv
813.7 55.5771 810.36 51.0737 809.521 45.7339 cv
808.851 41.4751 810.253 38.1182 813.378 36.5371 cv
814.753 35.8389 816.323 35.5557 817.912 35.6455 cv
818.033 35.666 818.151 35.6812 818.272 35.6665 cv
820.448 35.8672 822.64 36.7739 824.4 38.313 cv
824.366 39.0391 824.411 39.7739 824.552 40.4937 cv
825.175 37.6963 826.73 35.6826 828.641 34.2627 cv
829.604 33.5537 830.655 32.9834 831.749 32.479 cv
832.838 31.9585 833.987 31.5474 835.138 31.0522 cv
835.138 31.0527 li
836.069 30.9634 li
835.866 29.5527 li
835.667 28.1694 835.537 26.855 835.613 25.563 cv
835.681 24.2734 835.933 23.0166 836.358 21.8115 cv
836.789 20.6064 837.413 19.4775 838.194 18.4458 cv
838.984 17.4209 839.929 16.5068 841.134 15.8105 cv
839.976 15.75 838.856 16.061 837.843 16.5771 cv
834.722 11.5337 827.667 5.19385 819.033 2.70654 cv
812.999 .96875 803.813 .497559 794.292 8.11914 cv
771.128 26.6748 781.132 54.3457 789.656 66.3848 cv
800.812 82.1353 822.144 94.8125 845.707 78.9893 cv
845.849 78.8936 845.993 78.7959 846.136 78.6987 cv
867.511 64.0503 864.632 43.3047 861.015 32.2427 cv
859.247 26.8374 856.747 23.5322 854.49 23.6162 cv
cp
.167636 1 1 .0859998 cmyk
f
756.98 158.571 mo
754.274 160.525 752.056 164.207 752.177 168.165 cv
736.317 177.138 710.286 180.161 692.271 178.01 cv
692.271 178.01 683.021 180.778 677.017 177.176 cv
672.371 165.859 684.924 149.645 691.71 149.201 cv
719.155 161.368 739.633 153.065 750.067 148.673 cv
750.01 152.026 751.94 156.157 756.98 158.571 cv
cp
0 .82681 1 0 cmyk
f
692.271 178.01 mo
692.271 178.01 683.021 180.778 677.017 177.176 cv
672.371 165.859 684.924 149.645 691.71 149.201 cv
696.057 151.125 700.224 152.536 704.208 153.54 cv
693.976 161.77 691.655 171.847 692.271 178.01 cv
cp
.102541 .997314 1 .0227054 cmyk
f
692.45 176.515 mo
692.142 176.478 li
691.842 176.567 li
691.757 176.592 683.612 178.977 678.226 176.132 cv
675.917 169.725 679.685 162.575 681.446 159.75 cv
684.829 154.331 689.032 151.143 691.478 150.732 cv
718.089 162.38 738.433 155.124 749.221 150.663 cv
749.286 151.42 749.429 152.178 749.669 152.909 cv
750.171 154.504 751.085 155.975 752.245 157.181 cv
752.852 157.809 753.528 158.356 754.249 158.827 cv
753.626 159.461 753.084 160.169 752.628 160.922 cv
751.772 162.348 751.25 163.97 751.079 165.614 cv
751.025 166.101 751.017 166.589 751.032 167.076 cv
735.128 175.868 709.271 178.532 692.45 176.515 cv
cp
753.212 170.057 mo
753.089 168.689 753.263 167.358 753.646 166.113 cv
754.034 164.866 754.653 163.717 755.37 162.659 cv
756.091 161.595 756.951 160.655 757.86 159.782 cv
759.745 157.975 li
757.628 157.215 li
757.626 157.214 li
756.459 156.542 755.37 155.81 754.403 154.952 cv
753.433 154.096 752.601 153.096 751.962 151.952 cv
751.341 150.803 750.921 149.51 750.837 148.147 cv
750.767 146.801 750.973 145.341 751.908 144.141 cv
750.771 144.764 749.987 145.966 749.57 147.266 cv
739.581 151.461 719.228 159.755 692.319 147.825 cv
691.981 147.675 li
691.614 147.7 li
687.758 147.952 682.648 152.157 678.901 158.162 cv
674.567 165.11 673.374 172.247 675.634 177.744 cv
675.822 178.205 li
676.249 178.461 li
682.171 182.012 690.641 180.002 692.392 179.528 cv
709.803 181.553 735.073 178.932 751.61 170.165 cv
751.642 170.252 751.661 170.344 751.694 170.428 cv
752.278 171.924 753.233 173.204 754.368 174.188 cv
753.735 172.819 753.327 171.426 753.212 170.057 cv
cp
.167636 1 1 .0859998 cmyk
f
885.917 135.368 mo
885.917 135.368 894.03 130.839 900.215 132.163 cv
905.374 141.784 897.043 158.661 894.429 159.825 cv
878.615 163.379 843.91 158.239 822.371 150.513 cv
823.051 147.862 822.88 144.743 820.925 141.757 cv
823.221 140.917 826.501 137.534 826.927 133.328 cv
854.998 138.122 870.489 137.186 885.917 135.368 cv
cp
0 .82681 1 0 cmyk
f
885.917 135.368 mo
885.917 135.368 894.03 130.839 900.215 132.163 cv
905.374 141.784 897.043 158.661 894.429 159.825 cv
890.669 160.673 885.829 161.026 880.366 160.963 cv
880.371 160.538 li
886.78 152.125 888.133 138.995 885.917 135.368 cv
cp
.102541 .997314 1 .0227054 cmyk
f
893.886 158.409 mo
877.88 161.899 844.44 156.604 823.858 149.444 cv
824.146 148.161 824.218 146.807 824.024 145.47 cv
823.866 144.4 823.519 143.363 823.038 142.401 cv
824.009 141.793 824.786 141.022 825.485 140.195 cv
826.509 138.944 827.268 137.481 827.687 135.917 cv
827.768 135.619 827.821 135.313 827.873 135.006 cv
856.038 139.713 871.509 138.578 886.089 136.858 cv
886.384 136.823 li
886.644 136.679 li
886.717 136.637 893.718 132.776 899.202 133.508 cv
903.147 142.222 895.894 156.975 893.886 158.409 cv
cp
900.524 130.696 mo
894.448 129.396 886.984 133.102 885.452 133.911 cv
871.096 135.596 855.787 136.672 827.886 131.968 cv
827.841 131.694 827.8 131.416 827.728 131.15 cv
827.315 129.62 826.487 128.269 825.394 127.273 cv
825.851 128.682 826.104 130.055 826.065 131.37 cv
826.034 132.682 825.72 133.922 825.209 135.067 cv
824.694 136.211 823.968 137.256 823.134 138.18 cv
822.308 139.087 821.291 139.913 820.403 140.35 cv
818.827 141.125 li
819.665 142.58 li
820.299 143.679 820.782 144.819 821.071 146.024 cv
821.373 147.23 821.442 148.506 821.315 149.807 cv
821.172 151.104 820.815 152.418 820.243 153.665 cv
819.655 154.895 818.926 156.134 817.74 157.004 cv
819.195 156.638 820.437 155.585 821.423 154.422 cv
821.97 153.766 822.438 153.04 822.835 152.265 cv
843.923 159.594 878.356 164.979 894.754 161.29 cv
895.034 161.196 li
896.015 160.761 897.13 159.385 898.2 157.569 cv
899.394 155.545 900.527 152.978 901.356 150.561 cv
902.873 146.128 904.915 137.754 901.532 131.454 cv
901.204 130.84 li
900.524 130.696 li
cp
.167636 1 1 .0859998 cmyk
f
715.663 126.786 mo
717.598 120.682 715.173 105.448 705.771 93.3696 cv
700.304 86.3452 695.124 90.9497 696.874 101.131 cv
688.466 89.8945 680.386 84.9873 672.488 87.0962 cv
662.8 89.6841 666.338 105.38 675.276 112.954 cv
668.272 113.396 663.919 117.19 667.706 121.391 cv
673.157 127.437 685.173 125.536 688.673 125.564 cv
683.144 129.018 681.755 135.841 689.755 135.907 cv
695.345 135.953 713.61 133.27 715.663 126.786 cv
cp
.0484016 .961425 1 .00640879 cmyk
f
710.396 100.513 mo
715.94 110.909 717.229 121.839 715.659 126.788 cv
713.606 133.27 695.343 135.95 689.753 135.905 cv
681.753 135.838 683.14 129.02 688.669 125.565 cv
685.169 125.536 673.152 127.438 667.702 121.393 cv
663.917 117.191 668.269 113.397 675.271 112.955 cv
667.058 105.997 663.411 92.1865 670.376 87.9834 cv
667.431 92.3091 671.909 103.497 686.569 109.687 cv
677.272 110.38 681.345 117.385 689.075 118.738 cv
694.207 119.64 700.487 118.432 704.577 116.025 cv
708.185 113.895 710.272 109.282 710.396 100.513 cv
cp
.102541 .997314 1 .0227054 cmyk
f
688.685 124.065 mo
693.836 124.106 li
689.468 126.836 li
686.597 128.629 685.306 131.2 685.714 132.649 cv
686.14 134.153 688.436 134.396 689.767 134.407 cv
696.254 134.459 712.634 131.383 714.233 126.333 cv
716.042 120.625 713.647 105.93 704.587 94.2915 cv
703.212 92.5249 701.795 91.5059 700.699 91.4971 cv
700.188 91.4932 699.747 91.7192 699.347 92.189 cv
698.347 93.3667 697.561 96.2671 698.353 100.876 cv
699.408 107.021 li
695.673 102.029 li
688.803 92.8486 682.248 88.1689 676.188 88.1187 cv
675.085 88.1099 673.97 88.2534 672.876 88.5454 cv
670.501 89.1797 669.011 90.7764 668.446 93.292 cv
667.206 98.8081 670.706 107.115 676.246 111.809 cv
679.087 114.216 li
675.37 114.451 li
671.05 114.724 668.489 116.304 667.937 117.658 cv
667.61 118.458 667.908 119.375 668.821 120.387 cv
671.163 122.987 675.267 124.274 681.362 124.324 cv
683.21 124.338 684.933 124.24 686.317 124.161 cv
687.3 124.104 688.077 124.059 688.685 124.065 cv
cp
689.743 137.407 mo
684.683 137.365 683.237 134.918 682.827 133.464 cv
682.278 131.52 682.95 129.26 684.522 127.259 cv
683.541 127.303 682.468 127.333 681.339 127.324 cv
674.354 127.266 669.53 125.655 666.593 122.397 cv
664.3 119.854 664.71 117.626 665.159 116.525 cv
666.051 114.336 668.579 112.674 672.036 111.897 cv
667.017 106.362 664.22 98.4155 665.519 92.6348 cv
666.325 89.0474 668.663 86.5654 672.102 85.6475 cv
673.456 85.2852 674.839 85.1079 676.214 85.1191 cv
682.399 85.1699 688.59 88.8828 695.052 96.4409 cv
695.177 93.814 695.859 91.6606 697.062 90.2466 cv
698.044 89.0903 699.31 88.4858 700.724 88.4976 cv
702.173 88.5093 704.43 89.2041 706.956 92.4482 cv
716.768 105.055 719.147 120.753 717.093 127.239 cv
714.632 135.012 694.839 137.448 689.743 137.407 cv
cp
.167636 1 1 .0859998 cmyk
f
738.665 95.165 mo
731.601 91.54 720.522 95.3325 723.441 103.34 cv
715.378 103.032 701.753 115.127 711.784 125.829 cv
700.934 131.133 697.448 146.088 710.734 155.719 cv
705.038 159.999 708.507 171.158 719.576 172.583 cv
719.253 182.564 729.355 185.885 739.214 183.145 cv
738.083 190.579 749.757 194.43 758.37 189.706 cv
760.634 198.355 778.56 192.145 782.081 186.629 cv
786.022 194.087 798.071 190.053 802.032 181.913 cv
807.29 185.694 818.288 181.579 822.048 171.254 cv
828.317 174.956 839.479 167.362 839.156 157.199 cv
849.994 158.557 857.284 138.188 843.181 123.731 cv
846.764 114.335 840.573 101.474 832.521 103.715 cv
828.698 85.54 818.353 82.623 811.491 88.6035 cv
806.067 78.8149 793.132 77.917 791.181 86.7104 cv
785.37 78.4785 773.81 78.9556 772.688 85.9102 cv
765.563 78.9502 754.729 80.9644 754.495 88.3843 cv
746.399 84.7588 738.797 88.7148 738.665 95.165 cv
cp
.0484016 .961425 1 .00640879 cmyk
f
818.526 85.8032 mo
824.106 85.8652 829.872 91.1367 832.525 103.719 cv
840.572 101.476 846.767 114.338 843.184 123.735 cv
857.28 138.194 849.991 158.563 839.16 157.202 cv
839.479 167.367 828.313 174.954 822.052 171.257 cv
818.286 181.576 807.287 185.699 802.036 181.917 cv
798.067 190.058 786.025 194.09 782.085 186.632 cv
778.563 192.148 760.634 198.36 758.374 189.709 cv
749.761 194.433 738.083 190.584 739.218 183.148 cv
729.357 185.885 719.253 182.561 719.579 172.584 cv
708.507 171.162 705.034 160 710.738 155.723 cv
697.444 146.093 700.93 131.136 711.788 125.832 cv
705.638 119.264 708.376 112.182 713.282 107.764 cv
710.354 113.874 710.862 122.734 722.339 126.809 cv
714.682 134.293 726.183 145.247 738.214 140.298 cv
733.125 147.504 746.638 149.865 752.995 144.776 cv
753.896 151.9 768.405 148.303 771.435 142.219 cv
772.737 149.594 785.689 144.251 786.993 138.526 cv
791.817 145.105 805.886 135.352 804.86 128.135 cv
811.536 133.542 823.298 120.448 817.968 111.47 cv
831.69 113.099 831.079 89.6509 818.53 85.8223 cv
818.526 85.8032 li
cp
.102541 .997314 1 .0227054 cmyk
f
782.202 183.65 mo
783.407 185.928 li
785.432 189.759 789.664 189.172 791.39 188.743 cv
795.296 187.769 798.944 184.831 800.684 181.256 cv
801.462 179.656 li
802.907 180.696 li
804.465 181.815 806.817 182.092 809.362 181.458 cv
813.282 180.481 818.304 177.152 820.64 170.741 cv
821.256 169.045 li
822.812 169.963 li
824.494 170.957 826.411 170.774 827.725 170.448 cv
832.663 169.215 837.866 163.819 837.657 157.247 cv
837.602 155.492 li
839.343 155.711 li
843.434 156.225 847.194 152.801 848.746 147.336 cv
850.421 141.44 849.556 132.416 842.106 124.779 cv
841.437 124.092 li
841.778 123.197 li
843.989 117.396 842.06 110.741 839.118 107.424 cv
837.856 106 835.783 104.445 833.077 105.119 cv
831.382 105.589 li
831.054 104.024 li
829.458 96.4419 826.497 90.9604 822.712 88.5898 cv
819.446 86.5444 815.616 86.9985 812.478 89.7344 cv
811.079 90.9531 li
810.179 89.3306 li
806.952 83.5088 801.044 81.4058 797.122 82.3838 cv
795.458 82.7983 793.331 83.9419 792.645 87.0352 cv
791.91 90.3462 li
789.954 87.5757 li
786.573 82.7847 781.391 81.5112 778.005 82.355 cv
776.751 82.668 774.583 83.5771 774.168 86.1489 cv
773.708 89.0039 li
771.64 86.9834 li
768.48 83.897 764.093 82.4878 760.461 83.3931 cv
759.155 83.7183 756.107 84.8608 755.995 88.4312 cv
755.925 90.668 li
753.883 89.7534 li
751.146 88.5278 748.276 88.1924 745.802 88.8091 cv
742.388 89.6602 740.229 92.1074 740.165 95.1958 cv
740.116 97.5952 li
737.981 96.4995 li
735.583 95.269 732.488 94.9497 729.702 95.6445 cv
727.458 96.2041 725.724 97.3633 724.947 98.8257 cv
724.335 99.9775 724.303 101.324 724.851 102.827 cv
725.615 104.925 li
723.384 104.839 li
722.663 104.812 721.864 104.906 721.015 105.118 cv
716.801 106.168 711.577 110.189 710.13 115.1 cv
709.122 118.517 710.048 121.782 712.88 124.802 cv
714.269 126.284 li
712.444 127.175 li
707.487 129.6 704.129 134.325 703.681 139.506 cv
703.196 145.118 706.014 150.446 711.614 154.506 cv
713.261 155.698 li
711.636 156.919 li
709.786 158.307 709.097 160.706 709.79 163.333 cv
710.606 166.426 713.71 170.315 719.767 171.094 cv
721.12 171.268 li
721.075 172.631 li
720.973 175.789 722.014 178.272 724.169 180.014 cv
727.409 182.631 733.069 183.286 738.813 181.7 cv
741.046 181.079 li
740.698 183.372 li
740.444 185.035 740.997 186.499 742.341 187.721 cv
744.876 190.031 749.678 190.887 754.019 189.805 cv
755.3 189.485 756.521 189.01 757.649 188.39 cv
759.335 187.467 li
759.821 189.327 li
760.983 193.761 767.917 192.399 770.015 191.876 cv
774.718 190.704 779.36 188.101 780.815 185.823 cv
782.202 183.65 li
cp
792.115 191.654 mo
787.921 192.7 784.267 191.744 781.956 189.092 cv
779.505 191.459 775.241 193.666 770.741 194.788 cv
764.278 196.399 759.519 195.262 757.581 191.758 cv
756.671 192.152 755.722 192.472 754.745 192.715 cv
749.402 194.047 743.606 192.932 740.321 189.94 cv
738.818 188.572 737.922 186.883 737.696 185.051 cv
731.632 186.282 725.938 185.299 722.284 182.348 cv
719.716 180.272 718.282 177.357 718.091 173.857 cv
711.398 172.513 707.882 167.856 706.89 164.098 cv
706.074 161.008 706.673 158 708.445 155.846 cv
702.899 151.285 700.157 145.447 700.692 139.249 cv
701.179 133.628 704.483 128.47 709.461 125.399 cv
706.229 121.118 706.431 117.038 707.252 114.251 cv
709.069 108.086 715.325 103.444 720.288 102.207 cv
720.716 102.1 721.136 102.017 721.548 101.956 cv
721.315 100.337 721.566 98.7949 722.298 97.418 cv
723.491 95.1733 725.862 93.5098 728.977 92.7334 cv
731.753 92.041 734.791 92.1655 737.444 93.0371 cv
738.312 89.5825 741.13 86.8818 745.077 85.8979 cv
747.644 85.2583 750.507 85.4126 753.304 86.3198 cv
754.11 83.4634 756.438 81.3042 759.735 80.4824 cv
763.761 79.4785 768.284 80.5659 771.981 83.3335 cv
772.993 81.4263 774.833 80.0542 777.279 79.4443 cv
781.069 78.4995 786.563 79.5513 790.688 83.7778 cv
791.878 81.624 793.862 80.1045 796.396 79.4727 cv
801.158 78.2856 807.776 80.334 811.896 86.3979 cv
813.135 85.5552 814.449 84.958 815.817 84.6167 cv
818.722 83.8931 821.655 84.3877 824.305 86.0479 cv
827.331 87.9434 831.347 92.2437 833.671 101.986 cv
836.458 101.742 839.147 102.937 841.362 105.434 cv
845.372 109.958 846.792 117.35 844.896 123.362 cv
852.646 131.772 853.487 141.627 851.632 148.157 cv
850.093 153.577 846.671 157.437 842.478 158.482 cv
841.868 158.633 841.249 158.724 840.622 158.753 cv
840.085 166.165 834.241 171.915 828.45 173.358 cv
826.44 173.86 824.536 173.823 822.853 173.26 cv
819.91 179.808 814.437 183.286 810.089 184.37 cv
807.312 185.061 804.717 184.913 802.606 183.965 cv
800.298 187.661 796.329 190.603 792.115 191.654 cv
cp
.167636 1 1 .0859998 cmyk
f
917.53 68.0566 mo
920.306 72.4795 917.925 80.1255 915.52 83.2339 cv
913.663 84.9019 905.169 78.6914 899.575 83.5078 cv
888.86 94.46 902.091 98.0195 911.394 95.3149 cv
913.486 96.0288 908.911 110.725 899.788 111.525 cv
888.032 112.564 886.243 112.466 874.655 114.15 cv
865.879 115.431 860.091 113.089 855.269 108.292 cv
849.703 102.767 843.19 85.5674 863.976 83.9097 cv
862.173 80.3267 859.396 76.1924 854.067 73.1699 cv
862.024 67.4063 859.66 58.6104 855.317 53.1309 cv
862.634 53.3145 869.872 44.937 871.433 40.5161 cv
877.616 45.1333 882.825 45.5024 886.778 43.2095 cv
887.173 43.8843 li
890.729 47.3511 893.913 50.3193 896.063 53.9702 cv
895.536 60.3232 895.776 65.0044 901.456 66.7554 cv
907.375 68.5752 915.658 66.6152 917.53 68.0566 cv
cp
0 .580957 .932189 0 cmyk
f
882.392 12.1519 mo
885.513 -6.43262 898.063 13.2651 894.335 30.8369 cv
893.142 36.4688 890.533 41.0498 886.778 43.2095 cv
882.825 45.5024 877.616 45.1333 871.433 40.5161 cv
869.872 44.937 862.634 53.3145 855.317 53.1309 cv
859.66 58.6104 862.024 67.4063 854.067 73.1699 cv
859.396 76.1924 862.173 80.3267 863.976 83.9097 cv
843.19 85.5674 849.703 102.767 855.269 108.292 cv
860.091 113.089 865.879 115.431 874.655 114.15 cv
862.019 123.442 852.155 132.665 845.194 124.09 cv
838.47 131.907 818.921 131.601 825.397 118.821 cv
807.588 122.346 801.974 113.734 805.458 105.108 cv
793.122 103.224 786.625 94.2646 794.636 83.646 cv
784.577 82.6909 783.708 71.5308 794.928 64.9019 cv
786.576 57.8613 789.808 49.6694 804.225 44.001 cv
796.219 38.1387 807.763 27.0757 819.337 29.9644 cv
815.234 22.0591 826.585 15.6426 835.978 19.9839 cv
834.412 13.3984 843.851 10.1455 850.505 16.2168 cv
845.692 2.60938 859.235 4.91064 865.886 12.1416 cv
863.132 -4.90869 877.384 1.12109 882.392 12.1519 cv
cp
.0484016 .961425 1 .00640879 cmyk
f
894.938 21.8916 mo
895.124 24.8032 894.955 27.8555 894.325 30.8438 cv
893.134 36.4609 890.533 41.0381 886.776 43.2109 cv
882.829 45.5117 877.614 45.1353 871.431 40.5181 cv
869.869 44.9385 862.636 53.3242 855.308 53.1377 cv
859.658 58.6118 862.014 67.4131 854.064 73.1719 cv
859.394 76.1938 862.17 80.3286 863.979 83.9199 cv
843.194 85.5771 849.692 102.774 855.264 108.308 cv
860.081 113.096 865.868 115.438 874.646 114.158 cv
862.017 123.444 852.151 132.68 845.188 124.106 cv
838.466 131.907 818.909 131.608 825.386 118.829 cv
807.577 122.354 801.972 113.735 805.454 105.109 cv
793.12 103.225 786.614 94.271 794.64 83.6553 cv
788.739 93.7236 803.948 98.5801 810.009 92.1753 cv
813.487 98.3076 825.776 94.2598 825.818 85.8003 cv
832.347 89.2461 843.491 81.6431 839.298 70.6069 cv
848.948 68.5479 851.122 52.9482 844.386 47.9565 cv
850.351 48.7686 867.972 39.3115 869.052 28.6494 cv
877.314 36.9038 889.091 33.8643 894.938 21.8916 cv
cp
.102541 .997314 1 .0227054 cmyk
f
917.519 68.0635 mo
918.952 70.3408 919.016 73.4668 918.412 76.3892 cv
916.396 76.2017 915.646 73.417 913.604 72.6924 cv
910.956 71.7603 910.093 69.0391 910.07 67.5718 cv
913.521 67.5088 916.493 67.2705 917.519 68.0635 cv
cp
.167636 1 1 .0859998 cmyk
f
879.749 105.31 mo
889.032 103.294 899.21 113.396 908.405 105.114 cv
908.672 105.297 li
906.604 108.443 903.599 111.196 899.792 111.535 cv
888.036 112.575 886.232 112.473 874.646 114.158 cv
865.868 115.438 860.081 113.096 855.264 108.308 cv
851.398 104.471 847.082 95.0112 851.762 89.0273 cv
849.338 99.519 864.286 108.67 879.749 105.31 cv
cp
0 .82681 1 0 cmyk
f
845.228 121.751 mo
846.358 123.145 li
851.366 129.313 858.079 124.735 869.515 116.121 cv
869.573 116.077 869.632 116.031 869.69 115.987 cv
863.591 115.874 858.589 113.711 854.21 109.356 cv
850.563 105.735 846.521 97.6514 848.95 91.019 cv
850.126 87.8115 853.288 83.8931 861.593 82.6694 cv
860.021 80.0186 857.542 76.8657 853.327 74.4751 cv
851.297 73.3242 li
853.187 71.9556 li
855.813 70.0522 857.34 67.6875 857.72 64.9277 cv
858.187 61.5396 856.849 57.478 854.144 54.0615 cv
852.152 51.5503 li
855.355 51.6309 li
861.747 51.792 868.578 44.0952 870.019 40.0166 cv
870.696 38.0947 li
872.331 39.314 li
877.529 43.1958 882.265 44.0938 886.026 41.9121 cv
889.272 40.0361 891.708 35.9976 892.868 30.5259 cv
895.002 20.4707 891.468 9.77246 888.097 6.8252 cv
887.657 6.44092 887.026 6.01953 886.522 6.20068 cv
886.235 6.30225 884.765 7.08008 883.872 12.4004 cv
883.058 17.2461 li
881.026 12.772 li
878.101 6.32959 872.17 2.2207 869.208 3.11475 cv
867.234 3.70654 866.561 6.91455 867.366 11.9028 cv
868.161 16.834 li
864.781 13.1572 li
861.089 9.14307 854.888 6.75488 852.261 8.33545 cv
850.14 9.63379 851.138 13.5073 851.919 15.7168 cv
853.914 21.3584 li
849.493 17.3252 li
845.997 14.1348 841.698 13.9204 839.257 15.3584 cv
838.323 15.9019 836.856 17.1885 837.438 19.6357 cv
838.151 22.6401 li
835.349 21.3452 li
830.072 18.9067 824.172 20.3286 821.519 23.105 cv
820.321 24.3589 819.202 26.4468 820.669 29.2734 cv
822.2 32.2246 li
818.974 31.4199 li
812.299 29.7549 805.487 33.2021 803.548 37.3389 cv
802.552 39.4663 803.077 41.3008 805.11 42.791 cv
807.31 44.3999 li
804.774 45.397 li
797.149 48.3936 792.603 52.1719 791.969 56.0327 cv
791.546 58.605 792.867 61.2031 795.894 63.7549 cv
797.511 65.1172 li
795.691 66.1924 li
789.319 69.9614 787.798 74.665 788.44 77.5459 cv
789.021 80.147 791.331 81.8252 794.778 82.1528 cv
797.451 82.4058 li
795.835 84.5493 li
792.765 88.6187 791.862 92.5396 793.226 95.8911 cv
794.81 99.7842 799.468 102.675 805.683 103.625 cv
807.558 103.912 li
806.849 105.669 li
805.474 109.071 805.747 112.304 807.596 114.537 cv
810.474 118.017 816.692 119.016 825.104 117.351 cv
828.126 116.752 li
826.733 119.5 li
825.053 122.819 825.235 125.196 827.279 126.563 cv
831.024 129.069 840.008 127.823 844.058 123.112 cv
845.228 121.751 li
cp
874.468 112.663 mo
883.2 111.393 886.485 111.125 892.442 110.64 cv
894.435 110.478 896.737 110.289 899.656 110.031 cv
903.214 109.718 905.8 106.898 907.347 104.586 cv
909.31 101.646 910.198 98.6309 910.37 97.1206 cv
904.438 98.4141 897.237 97.4995 894.868 93.5449 cv
893.618 91.4595 893.235 87.8423 898.503 82.459 cv
898.597 82.3716 li
902.733 78.8027 908.098 80.3477 911.646 81.3696 cv
912.647 81.6582 913.987 82.0444 914.542 82.0327 cv
916.665 79.0366 918.373 72.7612 916.442 69.1689 cv
915.664 68.9155 913.392 68.981 911.695 69.0293 cv
908.454 69.1221 904.421 69.2368 901.015 68.1899 cv
894.313 66.123 894.05 60.4932 894.529 54.3325 cv
892.653 51.3042 889.989 48.7153 886.925 45.7363 cv
886.302 45.1299 li
883.079 46.5332 878.302 46.8926 872.05 42.7817 cv
869.748 47.0723 864.208 53.0425 858.015 54.3667 cv
860.209 57.9312 861.176 61.8208 860.691 65.3369 cv
860.286 68.2793 858.922 70.8491 856.629 73.0005 cv
861.411 76.2627 863.854 80.3335 865.315 83.2354 cv
866.317 85.228 li
864.095 85.4053 li
857.331 85.9438 853.185 88.1807 851.767 92.0503 cv
849.9 97.147 853.214 104.14 856.325 107.229 cv
861.219 112.095 866.797 113.774 874.408 112.671 cv
874.429 112.668 874.448 112.665 874.468 112.663 cv
cp
905.112 111.11 mo
903.563 112.15 901.823 112.853 899.919 113.019 cv
896.993 113.278 894.685 113.467 892.687 113.629 cv
886.679 114.119 883.622 114.369 875.242 115.582 cv
873.903 116.569 872.596 117.554 871.319 118.517 cv
861.038 126.266 852.081 133.016 845.149 126.267 cv
839.999 130.855 830.536 132.352 825.61 129.056 cv
824.243 128.141 821.587 125.654 823.011 120.747 cv
814.79 121.893 808.552 120.399 805.284 116.45 cv
803.044 113.744 802.419 110.105 803.479 106.271 cv
797.001 104.89 792.298 101.575 790.446 97.0215 cv
789.335 94.2915 788.825 90.043 792.1 84.7012 cv
788.626 83.7261 786.227 81.4028 785.513 78.1992 cv
784.479 73.5771 787.192 68.4248 792.493 64.689 cv
789.009 61.1123 788.64 57.7983 789.009 55.5464 cv
789.765 50.9492 794.086 46.8081 801.546 43.4941 cv
799.878 41.3574 799.595 38.7085 800.833 36.0654 cv
803.054 31.3242 809.823 27.3838 817.101 28.0649 cv
816.636 25.5386 817.403 23.0698 819.35 21.0322 cv
822.784 17.4351 828.906 16.1924 834.349 17.7778 cv
834.585 15.7168 835.759 13.9365 837.735 12.7729 cv
840.263 11.2847 844.229 10.8857 848.104 12.7715 cv
847.558 8.47314 849.378 6.56104 850.714 5.76514 cv
854.206 3.66406 859.746 5.3374 864.042 8.5 cv
863.968 2.56494 866.579 .774414 868.343 .242188 cv
872.382 -.977539 878.095 2.53076 881.837 8.09277 cv
882.712 5.51807 883.944 3.93555 885.515 3.37451 cv
886.36 3.07227 888.079 2.8252 890.071 4.56689 cv
894.608 8.53467 898.077 20.4263 895.803 31.1479 cv
894.631 36.6782 892.231 41.0049 888.968 43.5396 cv
889.016 43.585 li
892.229 46.7095 895.266 49.6597 897.356 53.2095 cv
897.599 53.6201 li
897.559 54.0952 li
897.005 60.7622 897.499 63.9658 901.898 65.3218 cv
904.831 66.2236 908.589 66.1162 911.609 66.0298 cv
914.827 65.9385 917.152 65.8721 918.445 66.8682 cv
918.657 67.0317 li
918.8 67.2588 li
922.073 72.4736 919.222 80.8999 916.705 84.1519 cv
916.521 84.3496 li
915.224 85.5122 913.275 84.9614 910.813 84.2524 cv
907.559 83.3145 903.499 82.1543 900.601 84.605 cv
898.823 86.4307 896.106 89.772 897.442 92.0034 cv
898.991 94.5918 905.441 95.4834 910.974 93.875 cv
911.429 93.7422 li
911.878 93.895 li
912.71 94.1797 913.64 95.0518 913.331 97.5918 cv
912.858 101.494 909.884 107.907 905.112 111.11 cv
cp
.167636 1 1 .0859998 cmyk
f
882.462 83.1265 mo
882.788 83.6123 882.448 84.4106 881.704 84.9102 cv
880.959 85.4106 880.092 85.4219 879.766 84.9365 cv
879.439 84.4507 879.779 83.6523 880.524 83.1523 cv
881.269 82.6528 882.136 82.6406 882.462 83.1265 cv
cp
.0140688 0 .237491 0 cmyk
f
882.462 83.1265 mo
882.788 83.6123 882.448 84.4106 881.704 84.9102 cv
880.959 85.4106 880.092 85.4219 879.766 84.9365 cv
879.439 84.4507 879.779 83.6523 880.524 83.1523 cv
881.269 82.6528 882.136 82.6406 882.462 83.1265 cv
cp
f
869.116 68.5107 mo
870.901 64.5215 875.382 60.7202 876.646 60.4736 cv
877.962 60.2168 886.505 63.1323 890.823 70.3774 cv
891.271 69.0234 891.509 67.8096 891.096 65.1006 cv
892.706 70.042 891.757 73.0854 891.995 73.6953 cv
887.47 72.4668 879.259 74.3481 873.851 81.4146 cv
873.394 76.0781 877.989 67.9736 888.864 71.3125 cv
882.593 65.9668 874.155 65.7344 869.116 68.5107 cv
cp
.167636 1 1 .0859998 cmyk
f
915.111 69.458 mo
915.156 69.9561 914.519 70.4224 913.687 70.498 cv
912.854 70.5732 912.144 70.231 912.099 69.7319 cv
912.052 69.2334 912.69 68.7666 913.522 68.6909 cv
914.354 68.6152 915.065 68.9585 915.111 69.458 cv
cp
.0140688 0 .237491 0 cmyk
f
840.925 36.127 mo
841.186 31.1338 845.213 32.9346 847.388 40.8213 cv
849.915 49.9653 852.968 72.0044 827.37 89.4922 cv
796.802 110.377 775.098 92.9585 766.95 81.5776 cv
757.06 67.7422 751.842 41.1333 776.739 21.7065 cv
798.649 4.61182 818.401 18.7275 823.075 27.0327 cv
823.39 27.376 li
820.384 30.165 818.151 34.7349 819.442 40.0112 cv
813.365 41.8145 809.668 45.1162 808.063 48.6992 cv
800.739 42.8848 787.231 47.0752 788.304 59.1113 cv
789.599 73.5986 808.503 79.7437 822.585 68.0137 cv
837.452 55.6226 840.618 42.0415 840.925 36.127 cv
cp
.00149538 .22266 .999145 0 cmyk
f
830.437 76.0503 mo
845.464 62.4443 847.083 45.4097 844.388 36.6206 cv
845.473 36.0127 li
846.173 37.2168 846.829 38.8232 847.388 40.8213 cv
849.915 49.9653 852.968 72.0044 827.37 89.4922 cv
796.802 110.377 775.098 92.9585 766.95 81.5776 cv
759.19 70.7192 754.304 51.9951 764.597 35.0513 cv
755.062 58.8457 771.739 82.9873 786.179 88.0962 cv
804.166 94.4355 820.784 84.7964 830.437 76.0503 cv
cp
0 .56115 1 0 cmyk
f
819.442 40.0112 mo
813.365 41.8145 809.668 45.1162 808.063 48.6992 cv
800.739 42.8848 787.231 47.0752 788.304 59.1113 cv
789.321 70.5322 801.29 76.7695 813.216 73.1475 cv
786.298 87.6792 774.112 58.0513 784.647 44.9316 cv
797.29 29.1919 813.792 35.4697 819.442 40.0112 cv
cp
f
781.589 26.0791 mo
780.446 28.5415 786.333 35.54 789.704 34.2813 cv
793.074 33.0215 795.491 23.1675 796.777 20.2974 cv
798.063 17.4272 783.882 21.1255 781.589 26.0791 cv
cp
.0140688 0 .237491 0 cmyk
f
807.272 20.6792 mo
804.86 21.5073 802.444 28.7378 804.44 31.4126 cv
806.437 34.0879 815.577 30.3594 816.959 28.8291 cv
818.341 27.2993 809.719 19.8394 807.272 20.6792 cv
cp
f
770.343 36.2393 mo
767.624 39.0679 764.981 42.6572 765.894 46.6543 cv
766.407 48.918 776.528 48.145 775.546 43.9878 cv
774.072 37.772 772.09 34.4204 770.343 36.2393 cv
cp
f
843.187 41.4321 mo
842.709 43.8633 842.288 45.2119 842.923 45.5244 cv
846.974 47.522 843.664 39.0039 843.187 41.4321 cv
cp
f
839.938 51.6934 mo
838.56 53.9746 837.317 55.8628 837.989 56.2646 cv
838.893 56.8062 842.028 54.6572 843.133 53.3125 cv
844.239 51.9683 840.733 50.3794 839.938 51.6934 cv
cp
f
833.018 62.6143 mo
831.987 63.7544 829.793 66.1836 830.626 66.2271 cv
831.458 66.2705 835.333 64.271 835.841 63.5293 cv
836.347 62.7876 834.169 61.3389 833.018 62.6143 cv
cp
f
845.945 41.2178 mo
848.876 51.8262 850.25 72.0439 826.526 88.2505 cv
792.663 111.373 771.977 86.0215 768.175 80.7017 cv
760.172 69.5093 751.858 43.022 777.665 22.8857 cv
785.929 16.4355 794.866 13.9443 803.507 15.6763 cv
812.812 17.5425 819.368 23.7095 821.637 27.5469 cv
820.821 28.2837 820.085 29.1201 819.467 30.0542 cv
818.487 31.5254 817.815 33.2402 817.556 35.0313 cv
817.363 36.3496 817.418 37.7051 817.71 38.9893 cv
816.586 39.2954 815.494 39.7378 814.45 40.2876 cv
812.995 41.0576 811.651 42.0786 810.503 43.2871 cv
809.496 44.335 808.657 45.5503 808.054 46.8628 cv
806.013 45.5308 803.59 44.7803 801.107 44.6484 cv
800.302 42.9663 799.84 40.9424 799.528 38.9536 cv
799.187 36.6499 799.128 34.2817 799.349 31.9336 cv
799.571 29.5825 800.128 27.2612 801.006 25.0278 cv
801.906 22.8037 803.189 20.7046 804.8 18.793 cv
802.743 20.2183 800.981 22.1333 799.64 24.3306 cv
798.267 26.5176 797.349 28.9946 796.815 31.5405 cv
796.278 34.0918 796.146 36.729 796.421 39.3447 cv
796.64 41.1934 797.015 43.0576 797.794 44.8438 cv
796.306 45.0981 794.849 45.5718 793.499 46.2891 cv
792.542 46.7974 791.685 47.3984 790.921 48.0737 cv
789.522 47.0464 788.166 45.9692 786.858 44.8262 cv
785.327 43.4609 783.865 42.0112 782.539 40.4355 cv
779.856 37.3027 777.729 33.689 776.271 29.5859 cv
776.285 31.7637 776.667 33.9702 777.389 36.0737 cv
778.093 38.188 779.121 40.1973 780.352 42.0718 cv
781.597 43.936 783.051 45.6646 784.685 47.1997 cv
785.961 48.4155 787.36 49.5059 788.853 50.4482 cv
787.432 52.5889 786.698 55.1831 786.751 58.0654 cv
785.231 58.5737 783.635 58.9399 782.017 59.1416 cv
780.052 59.3657 778.053 59.3984 776.069 59.1411 cv
774.085 58.8965 772.122 58.3745 770.208 57.6255 cv
769.251 57.2529 768.31 56.811 767.396 56.3013 cv
766.459 55.8247 765.573 55.2505 764.665 54.6748 cv
765.327 55.522 766.087 56.2881 766.882 57.0308 cv
767.698 57.7451 768.57 58.4072 769.492 59.0112 cv
771.343 60.2075 773.424 61.0884 775.604 61.623 cv
777.786 62.1445 780.063 62.3472 782.315 62.1509 cv
783.934 62.0181 785.547 61.7197 787.106 61.1973 cv
787.677 64.0146 788.913 66.582 790.702 68.749 cv
789.743 69.9248 788.702 71.0845 787.595 72.1914 cv
786.271 73.5244 784.881 74.8066 783.425 76.0054 cv
781.965 77.1997 780.426 78.2969 778.78 79.207 cv
777.13 80.0752 775.331 80.811 773.366 80.666 cv
775.243 81.353 777.386 80.9971 779.28 80.3994 cv
781.21 79.7983 783.009 78.8696 784.718 77.8311 cv
786.425 76.7866 788.036 75.5942 789.548 74.2803 cv
790.708 73.2466 791.835 72.1636 792.849 70.9331 cv
794.319 72.1895 796.019 73.2407 797.918 74.0298 cv
798.806 74.3979 799.716 74.6924 800.638 74.937 cv
800.532 76.3633 800.304 77.7773 799.974 79.2134 cv
799.563 80.9502 799.022 82.6792 798.339 84.3604 cv
796.978 87.7329 795.073 90.9092 792.411 93.6992 cv
794.153 92.8633 795.753 91.6709 797.133 90.2607 cv
798.526 88.8574 799.71 87.2422 800.704 85.5171 cv
801.686 83.7861 802.481 81.9395 803.021 79.998 cv
803.423 78.5684 803.699 77.0518 803.74 75.5234 cv
806.641 75.8608 809.626 75.6494 812.562 74.8877 cv
813.325 75.9346 814.019 77.0552 814.688 78.2231 cv
815.401 79.498 816.069 80.8115 816.64 82.167 cv
817.206 83.5215 817.7 84.9102 818.034 86.3481 cv
818.35 87.7842 818.561 89.272 818.367 90.8501 cv
819.243 89.5137 819.646 87.8379 819.7 86.2036 cv
819.761 84.5586 819.534 82.9189 819.134 81.3398 cv
818.729 79.7603 818.168 78.2251 817.435 76.7681 cv
816.938 75.7666 816.351 74.7881 815.659 73.8711 cv
818.426 72.7783 821.099 71.2041 823.548 69.1626 cv
823.716 69.0225 823.874 68.8818 824.038 68.7417 cv
824.985 69.1255 825.838 69.5806 826.704 70.1382 cv
827.694 70.7935 828.651 71.5669 829.553 72.4419 cv
831.374 74.1841 832.991 76.2642 834.743 78.3652 cv
834.161 75.6929 833.081 73.1299 831.438 70.8223 cv
830.608 69.6792 829.632 68.5952 828.46 67.6963 cv
827.882 67.2412 827.238 66.8325 826.563 66.4917 cv
828.833 64.3564 830.778 62.2148 832.446 60.1089 cv
833.382 60.0947 834.194 60.1577 835.089 60.3403 cv
835.989 60.5322 836.903 60.8325 837.81 61.2422 cv
839.634 62.0508 841.397 63.2334 843.272 64.4482 cv
842.322 62.4243 840.914 60.6108 839.046 59.187 cv
838.106 58.4863 837.046 57.8833 835.866 57.5049 cv
835.464 57.3687 835.032 57.2739 834.597 57.1973 cv
836.501 54.4302 837.946 51.7622 839.04 49.2954 cv
839.335 49.2783 839.687 49.2832 840.083 49.312 cv
840.687 49.3628 841.343 49.4404 842.001 49.5615 cv
842.663 49.6719 843.335 49.8159 844.018 49.9775 cv
844.696 50.1533 845.392 50.3213 846.11 50.5991 cv
845.782 49.895 845.268 49.2744 844.698 48.7515 cv
844.128 48.2183 843.489 47.7725 842.812 47.3794 cv
842.128 47 841.403 46.6729 840.598 46.4648 cv
840.475 46.4346 840.343 46.4087 840.212 46.3823 cv
841.913 41.6758 842.331 37.9878 842.425 36.2021 cv
842.462 35.5024 842.578 35.1143 842.663 34.918 cv
843.308 35.3135 844.81 37.1021 845.945 41.2178 cv
cp
842.222 31.8535 mo
841.443 31.938 839.613 32.5161 839.43 36.0459 cv
839.283 38.835 837.739 53.4297 821.628 66.8574 cv
814.821 72.5322 806.183 74.2114 799.067 71.2593 cv
793.677 69.021 790.298 64.5435 789.8 58.9751 cv
789.402 54.5327 791.261 50.8696 794.906 48.939 cv
796.511 48.0864 798.3 47.6558 800.08 47.6177 cv
800.216 47.6289 800.347 47.6357 800.483 47.6099 cv
802.915 47.6396 805.302 48.4141 807.154 49.8921 cv
807.055 50.6621 807.044 51.4341 807.144 52.1821 cv
808.077 49.1763 809.994 46.9194 812.261 45.2593 cv
813.404 44.4302 814.634 43.7397 815.907 43.1162 cv
817.175 42.4751 818.501 41.9453 819.837 41.3257 cv
819.837 41.3262 li
820.892 41.1538 li
820.78 39.6812 li
820.672 38.2368 820.637 36.8589 820.83 35.4883 cv
821.015 34.1206 821.402 32.772 821.981 31.4634 cv
822.567 30.1553 823.362 28.9106 824.327 27.7559 cv
825.303 26.6069 826.44 25.5625 827.854 24.7261 cv
826.556 24.7593 825.271 25.1816 824.089 25.8115 cv
821.001 20.7456 813.599 14.6401 804.097 12.7354 cv
797.456 11.4043 787.165 11.6753 775.819 20.521 cv
748.218 42.0566 757.153 70.4448 765.733 82.4468 cv
776.96 98.1489 799.89 109.754 827.712 91.0708 cv
827.88 90.9585 828.052 90.8428 828.219 90.728 cv
853.483 73.4688 851.98 51.7988 848.837 40.4185 cv
847.302 34.8574 844.767 31.5757 842.222 31.8535 cv
cp
.167636 1 1 .0859998 cmyk
f
743.614 165.645 mo
743.282 168.936 744.512 173 747.496 175.555 cv
739.787 200.644 713.119 218.417 701.997 226.417 cv
701.997 226.417 697.938 234.163 691.054 237.067 cv
679.833 233.678 675.943 213.012 680.13 207.653 cv
712.974 192.166 725.179 177.717 732.729 165.071 cv
735.291 166.778 739.159 167.502 743.614 165.645 cv
cp
0 .580957 .932189 0 cmyk
f
743.614 165.645 mo
743.282 168.936 744.512 173 747.496 175.555 cv
739.787 200.644 713.119 218.417 701.997 226.417 cv
697.067 222.825 691.198 214.589 691.659 201.817 cv
693.034 201.064 694.361 200.319 695.647 199.573 cv
693.882 211.62 713.634 210.19 724.913 199.042 cv
735.966 188.125 733.905 177.377 729.714 169.809 cv
730.81 168.206 731.804 166.62 732.729 165.071 cv
735.291 166.778 739.159 167.502 743.614 165.645 cv
cp
0 .82681 1 0 cmyk
f
701.997 226.417 mo
701.997 226.417 697.938 234.163 691.054 237.067 cv
679.833 233.678 675.943 213.012 680.13 207.653 cv
684.291 205.686 688.119 203.747 691.659 201.817 cv
691.198 214.589 697.067 222.825 701.997 226.417 cv
cp
.102541 .997314 1 .0227054 cmyk
f
703.243 223.678 mo
702.485 224.217 701.775 224.723 701.118 225.195 cv
700.831 225.403 li
700.666 225.715 li
700.63 225.786 696.964 232.641 690.979 235.459 cv
686.89 233.965 683.431 229.557 681.433 223.258 cv
679.421 216.917 679.696 211.09 681.124 208.837 cv
712.651 193.907 725.425 179.844 733.436 166.772 cv
733.786 166.979 734.147 167.166 734.521 167.329 cv
736.046 168.018 737.752 168.315 739.424 168.253 cv
740.297 168.217 741.156 168.078 741.987 167.852 cv
742.045 168.741 742.213 169.617 742.472 170.458 cv
742.965 172.046 743.827 173.515 744.94 174.738 cv
745.229 175.059 745.538 175.358 745.863 175.64 cv
738.549 198.508 714.803 215.445 703.243 223.678 cv
cp
749.675 176.105 mo
748.571 175.286 747.694 174.269 747.021 173.155 cv
746.349 172.035 745.905 170.808 745.593 169.567 cv
745.278 168.323 745.149 167.054 745.104 165.795 cv
745.011 163.184 li
743.034 164.26 li
743.032 164.26 li
741.753 164.682 740.482 165.008 739.198 165.158 cv
737.913 165.313 736.614 165.267 735.335 164.983 cv
734.064 164.68 732.819 164.132 731.747 163.288 cv
730.696 162.443 729.744 161.318 729.472 159.821 cv
729.123 161.327 729.716 163.006 730.671 164.299 cv
730.806 164.483 730.964 164.646 731.112 164.817 cv
723.325 177.645 710.884 191.484 679.487 206.292 cv
679.165 206.444 li
678.945 206.725 li
676.473 209.89 676.319 217.061 678.573 224.167 cv
680.958 231.684 685.351 236.91 690.624 238.502 cv
691.144 238.659 li
691.642 238.448 li
698.189 235.678 702.259 229.004 703.146 227.434 cv
703.72 227.021 704.335 226.583 704.983 226.122 cv
716.69 217.784 740.606 200.723 748.48 177.28 cv
748.636 177.346 748.785 177.426 748.941 177.485 cv
750.446 178.045 752.036 178.184 753.525 177.993 cv
752.083 177.553 750.772 176.93 749.675 176.105 cv
cp
.167636 1 1 .0859998 cmyk
f
853.806 199.413 mo
853.806 199.413 863.593 203.034 867.261 208.529 cv
864.267 218.551 844.993 223.674 842.331 222.627 cv
828.982 214.021 810.24 175.47 805.058 160.303 cv
807.534 158.955 809.753 156.608 810.544 152.999 cv
812.728 154.032 817.354 154.023 820.644 151.471 cv
828.188 167.553 844.455 190.346 853.806 199.413 cv
cp
0 .580957 .932189 0 cmyk
f
853.808 199.422 mo
853.808 199.422 863.593 203.034 867.261 208.529 cv
864.267 218.551 844.993 223.674 842.331 222.627 cv
839.358 220.709 836.106 217.295 832.794 212.979 cv
842.981 211.346 852.78 203.44 853.808 199.422 cv
cp
.102541 .997314 1 .0227054 cmyk
f
853.806 199.413 mo
853.808 199.422 li
852.78 203.44 842.981 211.346 832.794 212.979 cv
821.292 197.975 809.089 172.088 805.058 160.303 cv
807.534 158.955 809.753 156.608 810.544 152.999 cv
812.728 154.032 817.354 154.023 820.644 151.471 cv
821.506 153.318 822.489 155.237 823.563 157.225 cv
820.306 163.551 816.978 174.213 825.165 188.456 cv
833.981 203.809 847.767 201.681 849.991 195.395 cv
851.351 196.922 852.635 198.272 853.806 199.413 cv
cp
0 .82681 1 0 cmyk
f
842.967 221.251 mo
830.116 212.738 812.153 175.733 806.784 160.674 cv
808.034 159.959 809.171 158.994 810.069 157.813 cv
810.72 156.949 811.216 155.973 811.567 154.958 cv
812.679 155.225 813.774 155.237 814.854 155.155 cv
816.464 155.008 818.038 154.524 819.448 153.726 cv
819.61 153.635 819.761 153.524 819.917 153.422 cv
827.892 169.813 843.718 191.722 852.759 200.487 cv
852.985 200.706 li
853.281 200.817 li
853.372 200.849 861.939 204.057 865.592 208.777 cv
862.283 217.2 845.566 221.771 842.967 221.251 cv
cp
868.51 207.7 mo
864.948 202.357 856.386 198.805 854.628 198.119 cv
845.583 189.245 829.88 167.389 822.241 151.336 cv
822.474 151.042 822.688 150.735 822.878 150.415 cv
823.679 149.048 824.062 147.51 824.005 146.032 cv
823.321 147.344 822.519 148.489 821.556 149.383 cv
820.597 150.281 819.492 150.925 818.317 151.364 cv
817.141 151.799 815.887 152.014 814.644 152.067 cv
813.417 152.113 812.116 151.967 811.181 151.639 cv
809.523 151.059 li
809.074 152.677 li
808.733 153.9 808.261 155.043 807.603 156.096 cv
806.955 157.155 806.093 158.098 805.077 158.92 cv
804.051 159.727 802.864 160.394 801.573 160.86 cv
800.284 161.303 798.89 161.651 797.438 161.416 cv
798.718 162.198 800.339 162.344 801.86 162.231 cv
802.583 162.172 803.304 162.039 804.013 161.842 cv
809.675 177.674 827.941 215.134 841.515 223.886 cv
841.776 224.02 li
842.921 224.471 845.343 224.239 848.217 223.522 cv
850.948 222.84 854.087 221.723 856.933 220.342 cv
861.396 218.173 867.062 214.44 868.699 208.96 cv
868.901 208.286 li
868.51 207.7 li
cp
.167636 1 1 .0859998 cmyk
f
821.696 50.543 mo
822.477 50.416 li
822.414 52.457 823.271 54.6646 825.233 56.9961 cv
822.819 58.3164 819.593 61.4224 819.157 64.7012 cv
800.825 76.9014 792.591 54.9316 796.01 52.937 cv
803.763 50.7427 815.276 50.2397 821.696 50.543 cv
cp
0 .580957 .932189 0 cmyk
f
820.394 61.522 mo
819.765 62.5229 819.3 63.606 819.157 64.7012 cv
801.165 76.6729 792.901 55.7354 795.831 53.0684 cv
796.323 55.5933 800.13 66.1426 808.838 63.3433 cv
805.763 61.9028 802.758 59.8853 800.41 56.8003 cv
807.008 55.0923 815.29 57.6143 820.394 61.522 cv
cp
0 .82681 1 0 cmyk
f
821.348 57.791 mo
821.239 57.8979 821.14 58.0142 821.035 58.126 cv
819.811 57.1973 818.438 56.4761 817.023 55.9351 cv
815.192 55.2285 813.268 54.8647 811.36 54.6938 cv
809.45 54.5337 807.538 54.5942 805.668 54.8838 cv
804.735 55.04 803.808 55.2305 802.912 55.5361 cv
802.03 55.8452 801.112 56.1777 800.409 56.8037 cv
801.267 56.4653 802.167 56.3823 803.063 56.3364 cv
803.96 56.3076 804.853 56.312 805.741 56.3794 cv
807.515 56.4956 809.264 56.7813 810.954 57.1992 cv
812.645 57.6191 814.267 58.207 815.809 58.8911 cv
816.997 59.4189 818.122 60.0337 819.212 60.7061 cv
819.185 60.7637 819.149 60.8169 819.122 60.8755 cv
818.741 61.6665 818.456 62.5356 818.331 63.4321 cv
809.813 69.106 804.263 66.7422 801.074 63.6846 cv
797.427 60.1885 796.415 55.4224 796.813 54.2676 cv
804.459 52.1934 815.366 51.7871 821.218 52.0229 cv
821.282 52.9863 821.499 53.9355 821.863 54.7974 cv
822.13 55.4307 822.462 56.0215 822.845 56.563 cv
822.308 56.9268 821.81 57.3428 821.348 57.791 cv
cp
822.618 47.0728 mo
822.194 47.6509 821.854 48.3193 821.605 49.0352 cv
815.517 48.7656 803.706 49.1943 795.597 51.4912 cv
795.249 51.6396 li
794.515 52.0654 793.679 53.0264 793.753 55.2197 cv
793.873 58.8267 796.788 65.5273 802.666 68.4561 cv
806.052 70.1421 811.509 71.0645 818.78 66.6895 cv
819.042 67.2251 819.388 67.7036 819.815 68.0654 cv
819.581 66.8779 819.681 65.8213 820.024 64.894 cv
820.374 63.9678 820.911 63.1475 821.548 62.3838 cv
822.829 60.8682 824.437 59.5649 825.953 58.3164 cv
827.513 57.0313 li
826.382 56.0347 li
826.38 56.0347 li
825.839 55.1021 825.254 54.2695 824.78 53.4072 cv
824.302 52.5508 823.89 51.6787 823.731 50.7305 cv
823.552 49.7871 823.619 48.769 823.919 47.7358 cv
824.211 46.6978 824.737 45.665 825.378 44.6567 cv
824.345 45.251 823.378 46.0376 822.618 47.0728 cv
cp
.167636 1 1 .0859998 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.2
%%For: (WINDOWS) ()
%%Title: (Black_Sheep_Hurt.eps)
%%CreationDate: 1/25/2017 9:58 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6qfCf+Q6?*P=7uTd?W*0U2m#`'"@sk<>=DE;Sa:M@Q-PrBf$m`egK(48ESJ0EqrVMiqX6Ocn/s0JI`7I')_F^78.`Qs3,]da
%n\sMIqY]FHr7Ap,5JE^(g$FtVorPT:p+"Bq^A-]GIlmUCo=8qi>\-od=/pP2<>I45k'<6BGgBV0FcA=40935#DU,G7]Y$5\I/_o-
%S6]BKrd*/pEHFDAmc[aIj_4@;2J6Y=^X![.8&rB\4jCIumJ?HkZbEsIG]YgLo8G0j[rh6!5/U[Q!.K+ahjtp^?(Yq^K_m\UhgU79
%5LV:I>Pdo&F*.Z"L8QNf;>]2Lq;611^7Jp-dUZOt].If&jn'_F>/Q+V;mr'Aq4BlgIQdXWFa8(OH?&q6^VY/_D_:_Ic0!Ierr>iH
%LHtYJI[huKmuOWtY.1O=E#!c5qJ(aZr-u$p5%2]K]$&AS\f!Qg$@c!>YE8<IiW!k"rtBk4Z[>gCF+4%,M9jOrJ^%e\JY0?^61l:L
%2.'6/EIr\sI/J)0FL<:-Rk1$JGeCl%pkrAcTVDm;VWW52=0ku*KSd(BZ7b=kB(0(%m]I';ZMFC^k4c&ls0apKfj$R+BJ-LFSGkGI
%>\.%rbHoFCs)`[t\bt4XknVD_[o>.?^:QAXS2$turTgd7"F`I#pfFWnq<7D$bnZoG`S!*Mj6Kk0TCVsRa4Eh2Cb@qFKD!t@5&JSp
%^A)p;l)Pem.18P-&iut,Qrts/.eB'+FTb3K'O/BMV<&=UoHPLD&!s3/St:E@,FuLt9]g<hYEu.7!JOrb<r@_B19[ER/MG^U)#2Y3
%k$7bco\9)Ock8V3]/T-q5C^3Bq!S(D'IQXWZeWhUm*l)urd9!5FTg#B?tB;Gq8[=A`t^0Z!(W@<p_Q1&s6:O&[]S'A3POZ:rX)b(
%j'Ve.]r'Q[2J_h<C[mn%GaYsaRC2@g1g8LU9jQd:F\Qr]5N$*qNL/TOr/6oL/RI#:G\c'n05ZX!XOm75H>P7i^0]h'lS[S<S`VPG
%O8,.@/)Dbj'03ui]F;i7J+596Q].5[_a36g]ESUpIqe7)*IKZ'$if3F*#/CkVKfDVBcIidV6T%cXN#8=;gD-K#C%*r%KGEFlS[6"
%Pc419dl`sZ<VVo!jjEZ"\GP&CIQhm\5UDcd5J.EFLjuZY"sf8"Irg.X%sStP;'=+^_`-TmnLo@/!AY_S?e9S)_S:=5NY2:H0H"/@
%Ek)GM9Ygnt]O6nQNk<ARO-fCtakZCLGlZ?>mM\<XgD7$`-1VSM_#Xn'iW/4d*]a7ZA&Q-,)<3c<OlqF:`kQa-%M3Lo/=2X?e&TdB
%9G_ddU_187c83Ts;TL$of^eBMs*3u-aZOjuGl`k_O1UI>an*&gDLd6"J$/CU:`6SWp,kXr`1$Z[.YlR#pV?1%HG_e-aU7?a0jW?q
%^dPas@$@\i!,\.i!"J:Y9IJX;VF8!G?'ZjZ_gJLOAd/5(h2t=krb9VAKm3Mt'`:,,o09b@(p457r3%[IH[+_'<Q3jrb!3R[s-e[l
%$Ldn2Z/G*0Sc?Onb9^5DGQ,'Tnb;Ous"aW#d<UBgraklqGPT8I3(@2\Kip'o?E]j@W6uO5<;9t0/skZtQU^$4HDqY/Ptb;r)#+F>
%&6+nu<iNNYM\*TV.Y)3h/dNk"UD@\M!,WE4VSIqG?<8F^=-M2#ddV>/'c)2K-+(F?a5Lr*%<-0A`o'c)a?'PfYCHuHHj5q>n/551
%=&%8GH<%lSg:V1*/.2=0A79^PeSG(uO>E6U?$[i`bi#hla\0:V>h&'DSdqMOp_VdBPEc:eOqHUW]GOLDf,C5d_72@MY4/DJe1D#T
%5sJP_%`VF":"B<]Q3cBf2PmkWF?miDh?fg?gh]oT7D!A;3;RfT,KI'!+)($=&a$fBeo1^BJHhH>eZRm$)8)39C<a'r??Ntg_X/i5
%$)q"nWeG_9CqBaO>\9^fB7u^lE14s^]k[*2G#^HI[:Ke+Q&V9!L8P5:h)&oYWM6r&g(GH)/fOSESTiO\FJ]??A2ML<2?C.BZ`Yn*
%MRG95CQskc7:<^c$6",&YU</m=r<9:Xiq6hGiF\Q3+!iC,?9:Qi5Q+AK=9JB!JgX48R!i(kSGBop'\._3k/s01]f;)E2jlj_2R>/
%TJ[^;M,OiH]5Esc`[cEsUs3ki(>(M.iW;BDG_YMg^p\idBG_]$Ud$t3[AKq@mW#.4i>=fh5SIs3(6;<]KC:KE\upqpT[UJ-eUlad
%&mdF\7:E2-VZit,Y!nd3SANhiH6XH/BeY;;GQTa,@L"JY(?63SCpDpm<\56R3ktnj$m6BE>+0S6+O8`L>pCo.D;a)tl-MkJ@40ZB
%5Aata0In!J&2GPH3RCcY0J4:-K>eYNlB6,e-r*5[6,:C'Ln@l$B&#&LIBgSkMhUViiq8;3YZThZ!OfnUE>kN@"p%mGSA:;,^(Hal
%1;N>:eC@Q)iB%U-'i$,QTG?"\b!h.;#&/`:;Rlea`jga:LBZP.gC.<<FbDha?&MVeF&FPsR&Ht51i_/:BRKnsbohu2]#fg5i8Xkd
%Yuh#*dAd;MZe.bP-r"!,9@i*Sjls[#iai7,`@D!\Fb;Q1DcgsVEU9+/(WMs)]E4T>LkjVS?m<r3co0ob?%\2@!ul?$-T#?n)d4N:
%ajSZqNU%>QNB\Qm@600WNMqS-7lV;r/'F6j"d97;#kLc_Ge#jRbZG,agf25P&-uE-"Ba.$^m8D[_"^Pj;4^rr_SB_<'X\M;NM>1d
%eceA\IOa;4@/qi%K3cH!L/']&(EkFgR3n4#LX,uX:p([D:5DHj%")XoLj4J<>-E_lBd)5_Zp;fC>YPT2Q._t\7MD7ZCg7>57#Jpi
%\5h/h,*eS4+.3rG^TA*O)rbp$/3k.ZA_:5)%(fb"<H)1I;2=BcU5CX4l8#J.(j5/6;hQMYcj>ro)BuaHb(e<!fqJIbd5[d2_"\)*
%RI9"W1M'!+!alR^K,Y5['0p.5D#=@[T=(+pF[J-LR$Ib#/K3d+Zqu=]1<m_V\5%M5i?H5a^dTInm)tIsjs!mb388&-n9TOD6I"h"
%(b^m"i$`#m%1b#X^+^7KdFa03n]qJ1W6&/hZ"jIfFEP\-UsH4@DS=(A0`311TAKqb(89)e/C*/b$#h(Qd3*I<f'^/1k!4\<0hiqC
%Yl%>E=<hPn@q9j/e+A;I>'\^j`(H]=5eooEA%GRH_CQ^h*2q<[Gc6;e=G_&E^1^1o5ljO3d1ftD3!*>ADRn9H3NbRZ+<iPj"3np!
%#9:o^Lq7UUbI*=>NGT?)\M+$KHl$TM_6EEcQYK`.)AXed9ah-@\enE*4U)QUD-N-Y%KJjU+afej7ADX9&hu(hGPF]r,OV&]\gMbe
%*g$_\6goVXUhc'2:(%gt9#.8H&;<PA0-Dg)Z@k+["GLu_^17ff4^90?"O:nI,7'i1Q(ukf/<`7K6Ke0p&2C"-djW_<#W/>C#^,GW
%<;`;j6,3LQ!FUL-LbL,u@>NB3!R$RA"DeI(#\STPV(!0B3eq9^efqcNR4K<q:o$ecG@/82Z!k.jR?;q%!6S6&4hM>F767T*_5/\\
%"KEFs(lpjM]'lnaX2:Ss8V\`8&dP>'OkN.uTHdsgOpRe<hjM3`GU<e'AH.?jmfJgS+pm^/dccD:;3SM+>j$7\VeP[J(a)Gd3%0Fn
%O.@TmQH4X9%]<iGkT.VFAl;=S'oshd36&DpnDncpS/W3jOiHWVLi^XQY`lG)9EZ@\cuB+I;`9^T'WOL$%LN-"9;Z_\2T.8c]'pG'
%!icHZ$gO>bmKQjI"4mmb0Bi#!eofXVK1T`\NS:T`73Erd/Cn?V!3O/m2%f-@TYhhdUfItFCF2pb,nphmiNV'-"Fp_Y*L]CI?E[4Z
%FU/@`Oi'T'/Kg4[>M!l%V$O><>"?a<ZmhkaL-NZ0#(JG!!rsN:gT1U3oRVN[S]-[-(7'fi==>RlOLBH&Z(JHKrLL]F?S$:4l"XAP
%#"f'C$Dd_(W=bXrQ3JrK+M)@J-*1HVj<m4&>#Z)1Aa0jX5oWc48:*)D<J3ES\bM2JFX(X/QtD+3XMKGX[1KYHM@4qf)2[LoWY'O8
%$E]0>U3b[h8[E59"X^npJE%sfkWX+"n<u-PA5lj@</]!6dNWEa'm:+gM3=rZbcJ"W)MQaMGU)IErh0B^(:+2mNa#!meI#$c2,7;r
%1-@?<^8YAQ%"S[gP,ZC!s(J$7EI2+b"_gN:BGuZ/9ni4i7.K%_#to,,Ns!?jU[\F@)B!HlYt,4h6<jamVR3-QTUB2ABLGRV%U61>
%%%VLK5ZeRXU(*%"6@VBh6CrhE,/n[3GZO?FTstVoD5]*_`Zm>T3$=A4Jj@V%<flK#"ImJuUd)#$;4q6Nl[.$bTFSY$?Kr*4>qi5l
%ih),]M.f6BWGm8f9&EajO?PYOaH4PsUM&R7L.pa9pj?^IBfqGBbYSGP9WHm3fjXuNm96S/89\4c,pR1S`X-rP@sJGM!;+j.0-R<d
%(pt3k(/#VgNOocof1B"Z5a;N<Clth5r[M6(:)M6holfS<f.BYeG`,ndZYShU)3s`?jkcQdKN;AV7(ucoT:dFYI;CQ#U<ED>GEVrM
%H#\#tX8=c%U#4^CY-("&AD]%?]`%g2DE'dL8*nD8ht(d:gE4bEiQ&]>?<i!VpAFm.b84MD-Pu50Z_&n3NoA.6&+BL5F+!Z2lq:Cl
%5/"Kj^"U\k:-X/L6W<<WUW^o@ItcYA/%iX;pG)Cq2t&CP5DBBPG'3fYc.U(6W*s%SFFH"BO/'lo@iGC;m-+B2E^i:g[U5[+*I^##
%aU5/*\l$^i/jFi;M5-R(Ra*.$>S-ijl;:&Q+(gG;c2#Ioh`?8SFIk#'2#69pO7+^H:-X7#%E::)o>ocoD(a.a39P0c?@Vr.qt]72
%/5-1Ri-l"u^:`HPp?!Otih6UmO8I[VHZXFSqWm7jV[o]G6gYE^mN8gthGIBs9X?qT`:PGWYl5[?nJn(_pS[1%E!oOV0QS$P5@Jrn
%m*1<\:KWTXY+mL7]B1[Vl'MakHF95)X*V36O"^=pjjD1!0S$?XL)ulcM8#@Z:4D#<#TGm:W-4KOo%E$`jbs.dq')<_]!Nl=@]10u
%;!Cnb)3h;0H(!:(eG)VsV)D;NZnds5Zmjp#1&KttipqX>M`Ne\k%<&q9H'Bl>;Ku.k$"5<RE7-b$erSgU:1Z_gu@pXoZTF2a392/
%lTr/%]ilrh[L9ri6/q>l([&,s0J728n#*plDdZ-\((XDT-sISY\BN)Xf/s4>NU[AFWBd?aI]@Fh$:6OJRhU9!b)ES[KDoIDT\dFM
%QU(s`fL<1JF_.g_X?\[57n(fDOI@[rX;:2dS3;1d08lZ0U5Di#RjD<u0aZ%r.U2.;^+*/qAQR66<Oo,1%?q$BQre6`Mc3`1BU;"^
%<4"/9'`;1^Vns2/rkeQU(V[>6Y0(%toSO$bN__qa)I=%'5s8@[T:h7tZN^$,Ti+7MZ'83='LS^IO^ZX6'U3D;Z9FNg`FPVl*+n3l
%$^d%pk,"gJYttkQ<WR9-_p%AAJf2d/WPAc!9baM3JGDXk%f4;phdE)k;"?Moq#YY)7;g:+'^-r-#&Z[8%S@0A/"p'q*_Q#!6:1cm
%s%eAa#";COGKj4)Q$b1@;p]kdD%tK'6/N*!ZgJh>R!eIS$\&oK;n0TQHO;mG=hDH<Jk9:ch^&[J5J`:9%B?"m\)FA3jgAn5"ah"Y
%:+q=K,n50$fC2tpMn4UD9s:jW79c7m+>](]6.)`5SH0:gn7k5o>JR;>8gq+t.T>GoY-JE,(]_qb-G1e$J[-gY>+EaJ<+oaKCBP^B
%nr3gte(1t7#"i=3bq/'>"oo$=C()p)5N'<3BX6-k&E%)VKu]nKMo(<mTaK/3!/U]W042M*K:\</H't/Wk!cHE4BHe4#dsq*BlsNn
%WHA@toQ1fdFBa;Gb`%*UiM+`d%.f',Z\!I:h;$MQqNWm!Q=e0k&`=)6m&UdfaUSC$rUL-kFb*09($n'.Pcb_FeXGWY&Ces,9efG0
%rLbi_)J2a<H./p(``ABGL+n,0"ge>69/?jk[0fN<1K[gCO,-1dQ_g1rK'#uL:fLjmTg`&pMe#l#o=BNBL.L+0H,Z1'-u]m`FU^.=
%F>M\0XM0)@I#*L%.1e$TK!^3ML'sit@8ig11_6B'rW1E@Ko_-ACN(1J+Mni1;*]]?Rd!LY\,7UM,ta:UN?J)%,g*o%_%8KN6j7Q.
%2mhu^XtNsQ$X,V-XW`3$\3b_me%3V/+:.?<=oo!,'p(>.@EJ:>\@qq[<<+2ZE.A>5U]tKl]ET2Qf#%@:0`)XJ4boHO@,@6#cTL*N
%Am;mXD?55+LV85M0Y`KWGi`NSOB)Aj!"n3NcMSZkI[4uFEMa%Ngg%al?.$A7/-#d;P^EF_(@Q>]6P[TUMV_7>rQG$@>0LZGL<F=)
%=Ul3(J,rXF4Xl:@V:ec3\3Pu2>IC;l>DaFNd%]2kMCg.3;B3-T[Apk61Je:K$8[A,[fZ($02Vkk*3^9"f`KtpU0/ulbmV=1=OM`o
%.-tJ`+o]Yn73G=6ll676<"iP@BJ]`CM$pDY]8/Ad).9ueT<PQF.^X'1RTgm^Jb=e_D[f'ga$ZVHBi+l.L/hu>:*R*Id4GX#"hk,H
%'EfnU3X+gf)?iHbs"(6oUq\cB(KgPd;<F-H'*+8N)$A$C6_h^-/^a.sBEloZ"]>+Bd!VMc!(97nigfdqJI<nbQ8h?$*4H)H!ohbR
%(MG8:W<+]9'?;iGHV33`BXpOfNH&N&'$AdY:l='h^s<GZ[Lt5]6SQkLO=#MTJH1Ff![4GX8L5eeLLo-q:9m?A7VABab@]k0b4&@O
%Q41mh6ZM32R!\$s"M'4ONF9a;!uQ9-0sm5f;OX<?+N3bXkc?pX$4iD*+S,)WK8B*&YT=8^JUrG=mUs<*1QV.QF3ZQOIJ!-eppj`.
%H0/6^r=$/aDO$hqT%."V']bGmb'G=Kk"`*.SS#,,h?DWP@SQ]QFrH)]*MXr5UW%abdPR3P)Sd:DBcAqo)m.^N<31'>MUYDU5YY`_
%:lR=PQ@]2f>J&l_J&2@A,`\XEm=M]\iiX\r@^00/%V,*YOMs'"@jJ169XZ.(>`r@#^nsX\X1W8gdTMU5BUEjpdORn&/!==<7U(r_
%M`4W]al43nM1gTdFUbQd$#Mu`*A3![-5'MM,d`M@gD.i=.,)"L<^kH)7bJ1qg`W(Dcq0PI@+:<TQEb61Gh\Bl<g.&p!`g6f+XiKc
%eg-`mZHe:"aZh&aMJ8hh\O$W6X"0&S"=CLO[7GnE.U6D^$Tt%F$+WNS\+Voo6/<07=u_Pl^gmVoKG/t+f#_qXAU&YK]HmDdc;Hp:
%"$am@%\c,D#_.J3P'NW3hB,BC;$2<I#6]mBrr4LVUM(>FNPD:bBkZ@hGG0ini>knf/i40ED?j1S$Vc;>Z%FO_KdHjafKg6rdmUCm
%+WYTFajI(iCY,AWZ]<:V\"T*=[8p1`>_pl\5dM[cJc';_/6uCU6*%lV$\#b\8-ipN<sgF3$ES_XlW=a8>r[Qh9K:j<g`@^rNKCQ#
%2B#tC92fg2l;!3Sfgp.hQ5!k<_EpjSfi$JZ<"Tr)_ShlJiuZ)WA=u@Lo!!g[m=\jo0%q&Kk7IH02BLp'<ZlroWjljY\:%5dbKC\B
%lVt@S2jC%@3qb89P&2lGL'$]D=tFl^C1jN$$FCYa2)gag>.XW9BZ0tZkgGC''\0#s5Vmqf$r[V4)_pFcg(?tW<C`J]q>ml9du_:#
%S'&'CM,oaE-7:gh`,[G#">raZ$V+i3[U#"AN285iA6eMu&=,nHa=0l!@C`ioHQ,Vm$Rb*?\ORp=PQH+kjQ5HeMfo%`-7;Hr=JDS0
%FkUn@*V!e$f>>B$S6^5/[PY3Hl=:$2OlZb4*(8guNL9BMOZ5l>pK_;-SooOF>=aVPWMLf<VK"@$PBnRl6EJ6TKpED>pFE!1Pk&a*
%%;&hKolaa)mB%s3Z><gScE=1<N4O%mC#^b!+HZ`VOZZ6Ze?tK,=TW1!dl>HJ78g&)S3c!WBp3+&clH=<CMo=m;`V07A#9m9-2f`f
%0M/u(gL'>a;8ub6K'c>b;O+^_jfqemi$!7mKT#5#V:[+@G!AXJ@8>7B[gPSF"64W!n/I2P5WP%Pg3XB3cASq!I#PU>6iMbYF1fYB
%(<!gm*M4%KR<q_^(B3S^%Tn8H3DR6ZhM9['m)JiE\1hhSSPOiqn\0iHj9+sLB]l3ghLN!,recu-3*PLUi.$aX@+9k?>Y'_QN4.$t
%@%;F,r"HW-KN-=]@SKT?dH)]6Eh>YsQ#O%br,3D7`7!\Ucsg1bRt(2-J#C(+J/3?#&A.%bD,O%%G(TqIQ'_dJDsaB.j!7ZkJ/]l*
%/k$t,P,S*FVf>`=YnMYP$$[igjiU^711rJk?BR-OI]U3\@,WEN<?r['\qK_q986b"FP]:V%+^G10"bgq]UMR_@9g.bOle;i]UU23
%ksV]?bBF#-'>kXdOrP?,e&-oP4a8s*Ze7<VVKH3=9p>nI%8iK=a;?`uidF'aYp<Kar!qq=`)Y#DL,_l&b9J<%9,N#VON+$G#;hdS
%5,?!ud::]&O?U#,'"'p3=;E1&Z)+`L*s7+47B@=P34;SVD6e/egR>cFg=[ZCB8(/Y+JQN'S0o[:`0q`O*g&rE5u'd_#temP`@Ufg
%/*A3pfkX,6=m#X=.$:cqZ$&<$d+7.DP.d"ER=nZ0]Tqio/=e/pG+QsE,VG=c>3GojYs/pKX(G(t>5"7sk<0PE.^##Q;aL4kr@0:e
%#0>^#*R:E5g*4!U)PlZF:es`tKQl1#g=[!=L+4De!m3q^B3SAu*Pj]s_SXt<fK(XnEU,19C_^lFTnscjs2"I9UDTmI@LZcQO0Qjf
%Q*YtHDP/30^g"N=+)$Jd3;pYG]bU>n$ZGX>4gnd%3LdMKeqIN%Xs;/#/V2G#Q08M5Dfob<>[\X]kqiP5g_M0'M135U#f9+^U(o(h
%L#<#b\hd<(pc#e'+g4N-]81)(YQn>_]EDPeH+S&s]Hu>+&pk<sUk\55A;qcdYLoQdK@gZF*U]S$M&I]+PEn$s_A#do8ruXW.oo>b
%5aJgR-SC5/0Vp3=S6#\pUb!h5apWfn!\.Y!oiM9;1scJ#PQC"L7RlGQ<Iqfe+WcHp:IhZKoerlG!*$H'Ye%QOmbC;9=q(7)^MNMZ
%%JoJEV["gIrI!AtK(YFmp`#pGn84YuZL??)1?])l$8l(s)18ke[eg=+7/,Rss)6sCN\#`SYIQOIs'Ws0<B+?<,1l/7Go4K7OEq]M
%ns4!MMFm^QYudXb;c$f0977/KiK9-*e4npd7+2ga!pb0,mBOAQ)P;28+/sa@1d@YKC&Eb8!'>W6d0!Mb'OLt.Jt`^[50._%%J`Y"
%.qH=i1dfh'76>&Y:c(Sf&LBJkogI`f'YtnH%'2%<^*jnpB&C;N)OFSG=VY!`Rk7mH=Y,mg0:B3nRFS,!fe%1e'JBYG0ZT)kF9kBn
%EJ2sb/HUGMK/S:m>6GQ\<+HZP]0u^1`'Km.h(8[\(8tjZfPM3k1n7&Aa@),`H:rg0c4*oSOAA0c5GO<"=o9ih$?84e>7pC3;>AHU
%2_Y9RC)>gIb<4s!%NntQE0gR,n\JMN"aBJL(['bG`#^c#aC8NO0X&VPH!0bCM,1eR[1E1='9InN[)?>k'#A;a3<G`kNfFrua[)79
%+<&bTq&#4sQr6?g5":>F-$CM%jhgG+(DsT$VuWb_W5+5)9:X6nWDP&O7Nq6o&`LAH<hD-oj-<m8*@j"PrWOluAH#,DEcQp[Yj*Y+
%2Y55`S;9bq'\=fA_-M*FX`J*Y;X2b&B/k^4:Zi@0InOG6(IN]0BTL^jr_":RBQ;.dHDPC)i0%D&E$r%1ruT<@6dLi;-Sj56];'.h
%M:Luu'^WZO9+&:!p)CR=GpP(K&10L9g#4SX=b8C`1s\4&T&'FjW,j'%WlZic-t(N/DYI<H#nF/8$[.4?Xn!bu)<Ac:/\c$EfaTAK
%Pn,8#Qh<ZF^Go1.W#-s5R]$AncFRBc&It,&g2J2%K#HT)W(09kORZbe0!Md;F[8s?U_(p";%HX*.LJDI6nu%ZZfOI,"U-,/6kbXt
%BHM!$_Y"G?*%0-3?t/'r6J&U$3>f+IemIK,'Po47PmsR(8G9n>6;'(cU^S"j-OXi$6.J%Eo+j.6ed#\'@]DtqQP>V9&EF4narI'*
%Tui%$=OEYI1kTJM0LU1$dG*4WBGt?D)9kiJoFgC6dRQ$X[m!KL"#Z2a!qdcSg;:0`8,#-r'>Xo$\'"mdfddkf;$83OXD=Ao`[+kg
%!r7ccQl$19]8oQ%#?X/TW)a0r+Hc0p6FB-V!oWs.KPH46"B^iu&ul[u&cdD',ZH8sC;Cf-)6+DT<=UHk44UTEeLOP5[OPI62eb!<
%Yt6,/LNn=56BT\o-`'DWU/TcBaQ^'*b,SAQMgS$E:PVI?5a2`XntZsk0qDd;;MINTERcL\;OdtQ$D^pPk_S4K1G3`QqCpUVcVj(]
%AQO>fE2spVm_`Xrn"]N/K4cKXG"LOK%\].1>0Vdh>4!;uBq59%!c$DIa?d5ZQq0&!6>ImWQ48c'LE7R<^l<`$2`%mY_F>I&K5D>t
%1C)]miR&9.j02_o]NpU]]QCu].h]k?'WEN`+X\>Q@CQr+>C"-I_M@/(]m5c.(gnCj@'1=r%;"]NI6^.odf6'."^d3FlA[MYOZVER
%?g!RCIFu':`M=39OnqB,EDUst+PLZ^lHu*R,W'&gEK3N->KiUP092BQhb5BOa9q)9<mL@g)okiV+/Sk:lMdH^0<0J&d:Y>OTob<X
%N@;PqWc=N+L?&s4eG5%K]ELqR,fu_ecP#$U.I\'hN@LI`^-]KoR;n^bA4tC/2Dh+>AP(%[,tWXs7+kVJo#7EATq8dm-7<L0.0rKa
%']-AIH%T[gf"na;=GufK7Ig[n&V#Z?3--i6k>?J[G$(f>:D-\@Yl4j+j@5Pk@l@BdJ'/d'];t_?N&R$aL/LZq(@*QK]!7JeL%^1c
%dGE$AG`Uhd`f22$"Z#q)EMH&OJW)d#gaEMCYXE\kBJMC6h?hWP_qk]K](,bnmR*1-S%69.*>G/qRbfZS`qbgaSL?;]@`s^g/F2`"
%TK"]erHCS>D"KD67^_N,r0LVNraZ@]q8/Od)CKQ_a.M?^]54L^F)'lUW80P+i%M04g%Ej+/90qBB'M0(cd8DW9^uGc_Q-6'%`UNM
%BTjHT>Lb"^d8\D,Nd/iO^2b:dSA"$74q7>0=3aHF31Om-T>eNa`Z=c02rY3h3+AD%X'tA^`B9&nd8MU;QG#r!0YLa7/qP<&IS%H^
%+?WN*L8\G2JaUci&)\0sfg:KX9Nap1?uceF&9Cr5"sonC@pn<nXNB5)E"VmRa8.40&.O^8A#LBB1h<,XS4=9Il6Sk4#%8G'Y&X1'
%MNn)D)#uX&K;(542Us&$_k]FF3uJ.-a?_XAQ(-EjB5#ZO2HI;N@7FZeSH:BtDnUYW(3lb(b3a'\d-:!5>.NIKJcX/@$*E"N7KJop
%LX"W/ei;<$.(qq.64&'dK2-H>AM:S[jhh*F_*RJj=#(T_-QBM*Nmci8FdqHESJI$JfP$&LA*"1m%&\1t<o_tAP#;;5/mCnWa(aNo
%*Rpt7%6(r0=)L%]'I8W80\`p7/iY2%TiP/C,QV/]@T"a*M5V]:P))c4^XaYcFZ,&MMlj<WFM#iP#+]m%@qDdME)s2)l)gbhMT/8^
%25mKD@MjjNX=/N_;#j&kX[,5YiO5U[$q66mTa.9On8Dme.,`(%34u+BNIo*=g'M95bVEdBM=qaoDfiHt7%5\>5>&[MT*;USh$B/>
%3r8i?m621]8tj5[^6\QNi),@0.]Gq7U/9LpP@ArjCY+1O_B"8p]M>!TNT1@37um4P(FIDCMR<gjbfTaBoVJBL`J"h'/j4=X#"M!K
%RPLQ[H=@OKP"")>5rPFZKp:Q-=hAXYJjP)@XVG(g.j(@]Bk8Dr2A@LFhuH1J/'%lCC;P9i5slAal32kO[7%\3b;j*1JeegCqMHu?
%,3locI-2&1`qZ20A1jZT&HsWiq^&mP]K,?7$/V8rnJq6+Z!V/Vq23nILU<;]8G>`i:TNEAP2n-Umn/0[`O@._>RI45V%7)M"f1iU
%1Z%]N3a04U'b^7='R';V@;Z/_X=,46GRIIc=dRo%aWrR"2gJ@j_4.St!lQ`aNU&\>6H<(=RT>?896<7>)!JldSG*%51JhW?osG0g
%>nbfN6tJAPNJ2aK1t4Js^EqE1&\aVQ!^;P:91K_LGe]mS5&1tCb"73'Dm4>4m3(1'4po2G&mTM[\!7KY0%^C%5K-1aJAF"jK*MjO
%_+gO4)_=@*^BY46+^Y/@_(t'`(`=k<)0Hi6>SWU.=.r;[lB+WM'srQjIn&_hkl+4<-)jqYG(ErYAa+MK;ZBF[PcepPo(t\19uep:
%obs)e8NfhJ2i?6!Zl$GUW@r%26CH?j)Yq_#K=a3J9Ijgd]FcX3#ZX&.d/$k<gkQ#Uie<,^Kn)tmj+SaTE*KE*KFA>[$3;a>=<U9Y
%eVP)GP'875)6/)4!pc%BEB'X"-nJ3/?Mgrn$7th+VJ72G,iOFi@$hTO;NRR_1R&SQ0Uq.*OqgjiO@.$/_.UU>?mT0***d`(3T67p
%9a^"gL'T[CgfKOY[T</D>I&$1G&rqOn=D;d"X`!M7/[etSRbN0O]b9<pR(2YIsTbFY+sh<kr\npn$6:p0aeO^&FEU67?eZW)spV*
%S,d7>+kn#KgN1!R6l?_.e9\T^-KUH/K3XLE'HSUspl(+5a4[/3TTuFSpQSdO1,1\_<$Q1B^%@3U4!Epr5!5q;fbo(E;bP>T`U7tq
%.CUO.]3"ESn*hf_h&6pPh<3i6Ig`!_#k5B?R0@k)cX$'i8*H`7G*IDGNSi\3FuQ:d'B:btagNB:ODU@da*s:d^RXD'#P3(+XmR$/
%id<1Jc[lCi0KHjJN]8o+3-H-C)TlJ)1L\D#[d]^7N6_^LRFGuoWF<ncL('E$Ebab]dq%WJqVA,a9r&oM_;'(9:rEi4&r4+UZ0l1h
%.r!#NFi^nJJSQF4>Xe'ImID]H<]SBs\>&>>EDF'+;%Br//R=_Vc2nW@N,g.$'Waa`GBr6pMk&ji><,1skN@a*0paNA$UpupJJ,"u
%SGB5'$bQG%YTaB)P0fpKS!UIZb)Re.K8_)"8.7>k7&,,@_Y.5@lQhfudE?MPhQ8)\FhpVtgX"sY>iP"*13l;MRZa0GZqEL*j43&;
%<;@X;VhQPW45rMdK0P+.5DB8*U(@lnZk"<5b0P2OKs(o=JSYbu!>l4LK6V(*_'"Bh+DF(H^d(4Q#(o5Te!^dSRIZ?n5.=:%5U@mU
%fj9L>0n#,#(=l@8!`O1%k]e(<l%9bm58Ji"%>C0)c#-h4;5)TF_C6.P8^sT\AT(jN7_b%!@)SW<:TMIE'lneuar5k-dsqsA%elZp
%NS>^dU)b7)Dsh3PeT8f&4for]G!WsY?0/F-+WpJjmW.@uX/7)XHhB5d.,E'-1[o<)>4fDR",-hJ0E?nigEJQE(p++]n!84CD:+e-
%[Ll)RqP7R*Z(UJo&q>('eEbAc=ScPggEU(7#$/5f#75L6:kq$__'dV"+V-d#5uQk?FBo_X)lMs.i=Db\c6[28g*d@r![0>&k4i<i
%J=DB.DoqDY8[js16=?Wt+>i(i2A7kaAhd`3X@ZP&0Un>;/V1/\>7it0L*Dr*2uk,S-C52i"=$5=_E%uhW6$O6>G=!#EGQWM&E05U
%R>.tB(_sBW52Ph$LD]I]f!,I:;Z]pIlh/]&!>,-Al*5%n)gisG3XpTF2H$fAb#Vm'lgmn=1@K#,m2C(TU:6P4n!FWBU82[<d+o9X
%E:`[E(m"bM]3KZ/TYSfAADku\naA@]pGCO\jS*Qkf[1d!cGU4'j?s)ga3!<s%Ih`'-pNf(#*PKA+TNY1"6?agpaiQk'EDa817cre
%ma_p`:j<A"o"1iUUeGqDZhnJ(*5f<s$53:a9L'GFN\Yf\\)"5[Z8&eJ!;Pb:+oIoWABmBX9L'GGN\"?jS%oekV(7UC@DOu?>KnoF
%C(YJBXZZKSfr&XqOti-eFCMYAn\g_VBBor2CFB-WaPJ>5)^T.W1<RI$<ZuCH$?iD=1@jL_AZ=<sJWcAefqb>YZl!Ucb1icD/dL"N
%fudL?NoTJ'L9+7,`hbfc,K"@I%oG^iEY-\-Js.Npo'Fqf%N1Uo"Yh:J["<iOL,."nVMcaSRqihb<O;SL`GQQNg8\F:$d#V_Ho?n:
%bEEbu=p3F3N6q?'8pQZ?@N=LA8992PSt2RfLc%2nG=KW9gUSW.Z:(LG+=HK7ZC1Ja%!(k*E:49R4HQ'W`eW2G/m$pc$*u?s33QSg
%gr^!kf&[?TSSOO(R59T!BQeB5fc@]#S2*90#\qU:5ER7YIqr+2G]95c(2Ymb2-#ke`4E4WafTDNN,UdDSG5pDeXU+sQ.n3U!b!A4
%%qQ%:gGHlhj)[2u-[,u0E2[8Q&[XU7#g)!I*(+s?p\^%2J&B\r+hO/:$aQO\r!hYIC^7:*j@T'"Q$5u\H]kaRk@0LX2gG9_c.u3B
%/Ne&TDKQ^(]8LtF,F@3/4,htGbD!8Q%69CPh*uh5OgpClV)mZu)K[$;E?B%=+:YrE&grjP"sXjtar9fg=X0YN_.M-N9NmoW@l)`f
%9U_DA9/A^]c.lpRbfY;CUg-D[UHNG*I!49Cg,.Ka.d''Jo*=Sne>/Te#<^Mq)/hs0Q.7GG1:NMQb^^3]T*E?F<c_gZSX_'OLYMXH
%E.PtYkSSL'mORDc\N3Zs`A,kB!F3i-!3<8]SpuejmP=cfY03oVoD%//%ttr[gnCbR`=:G["8/mQ$Yu-$#OJ-@8Nk#f/V#Z%!"f-[
%ePo%D#(Zi=@>6u^$k@/@bs>TmJ9\7uGc!6he/J4S>=7H2('OSdQ>8NkYu1ci],($DX"p9:qm:C)q9\^GB`*;A_mT&3R$5i2LnkQ=
%3NgJZl<uEn9iXAj%pbCS6W8P<5rXFF@>VG;;&.IQ#iP,C<JW,mW@E3B^d?Ye+cnlse9ZYbmXaW<)aRB30;c?^mQWdVN\]8ic&QT+
%+g=R+>9L1ZS!D,;NbimnIAdlWcU%2Ociq3:hXZ?Q+&C44S,EIsO3[6*g%al,6,R`9Cf%;3LV^J;k>$E22bnV*=n\cgaCZ!G-+6rR
%,%+HG-/4$I!Tr/E@]GM,kG9t9-l6NWl89pq%*(?/rB?G#m48Q63,jK#[C?"qhVTSKOY&PC_8Sa=>A<,7[-8o@Nb^<##N:UW2(:_,
%-].RG`P/.N+,N^IW<Z"THKk6cBFg>\c8CF`Bb:Np`J;!G%rs*'%rs*(%W^eTkRrntO[EEk_(O.*/j?[jGK\-*^.l#KoF*n!X:s$H
%(>2NYfJk3bd`)&j'V>n*\R6*]756Di^F#5*U\.h-L9`"W::t'[&0i0:,bZTk,AZ7i:<7M=__W/(F-d0%NHLBo]-2m7-.R'*@8LC9
%QM+`5*)oi4J<IpUO!Ug6ACAXldER*fCfGq)]p,<&96QGBQe"u.Om]q7frq]';7sEFAaQ4=ARAL+G@k!8$#\OiQ%`"_]Q1Wkeh-uI
%-:c7R$%R3F)7SnR-lm>u&6[9aE2Ohg?$RsSYn2d#[&/7"b2lJ.V&1aqHP%p$in[pVg-+!7SuA+O5?Z_1`&jJE^U%YKSd"TBHMPE>
%\[l[]eBo#C]"G@"g:uS%>sKchbH"2-9!5f_C=1c`3ODH-V3IfekE<YVgf'b,P#5E9OB?[6QR$47"DGi2f#;pqg<n=08US(l7hT:T
%6^2l;9$)?-fpEXdc.T%`qeZORs2r!2F7#aK3W<8mcm90-@aQ,:O^@ppF=G^b>)*`i*g`RM`V/;8*cAm74uT:KBMr[=%bKe*EgpU[
%bG*h*?$m(+f<Cme\R3J7'd$9/`CP!0DGP<._+E>g2J2-Tp/p!47PV_P$:g"ndo3*J\=$f=5uA%2%#ssGF>5Vld31%e49\t`EOC_,
%.`sQ0@Vh"2&`s-I`q\</j(8k#HR1CXr[2F4<"p'1bLISCUjQ4m./_e$LYd<IB^<Hu=eu,ne@M;75g]QmY-9epU9VkH6pn`FS[Xi^
%s)rj?oPnq-qpe]k'FNCn[IDOJjQh;l9iIVXbp[n%[f(L!-fg0sEMo!Mb?m:-]C@Nf"d0:I;KMshHrrkZ@b(7<5E`I1god4YV8q=!
%jAG:bjAt[W;B66G>t%UZ7HCglaPE.OTBRWtN1H8Sm$[2dh\pc0*%H,7VU9%WkTF?#*_N%3`?.>2!Rq.*cUYs;X6_/bIF=166MOjO
%&"gV<--'st.;>)3cru%'j+-HWVi2:AE:C7<@-?U2Yl8Q4#Ea^:m#%Us7?ik:FX]_AN-s^ULiW%]d;m%9NCIZX:H"BhALD>bfe%W]
%ajC.Jd.$\cf(`?*XK@[n93:;+FU,IBrjD\InrV'Ce@EKTr/uBIc(lb0d0\A_q9X#%&t<B%p[Xu&Z;C>P4aq%)5Jq:T78EK!oZ10H
%nX^fh,"?ap'(r#VL16!e1_I]V`JI"2=JFbfU/!8%-Z.[\ZNe^lMXi5*kAgsPB&ZcI"8ULPZ_rMa4+X.C^0icjmYgcbls1'I3^^?2
%coH;RC57Yl'bIdS+sUH#P+<O?8S6WE=.sUENE8!!@^Jt^A<(24)DU2t[GkG!.PFFMJuR11quJ4N@P8MS5lM6O5h=S`i[.Kr:l5#D
%!?-#31#UZ@I9JK=$^P.#;EME.9sDtW(E/B4mao[r"dU_Q$]$?:&6YC;,pCUnPgDDJ3>em8\]!&(Vq5hdUbc"JUu,"aF!p%ZQOZ5;
%9.ekOB0);R_lul[V^-DFnqP8T$oBINe1>6qEPrQH1<UPGX#RcoV=o^D/+As:XYVOEAG0^3N2QFRT[\?C:4YsF:Ch97p<"s8#!m6b
%2c9=Y;5YA4HX!It`9MuOZf7eCACu1#A6*^""Ei9A%EP:WX52>qE(`O9Y!kqK\l)orH/$b&3S?C#/o@pA"f8.+Km"_pIuC6VUEU[C
%Fs0E(;/q^c!2=GNDrLF=81C<3o5VO*Pmpq%fIgP:K<RB6Z)#1UTJJ,JfWk"81fD^k[NuZ;qe5:R,e71TZjE21+^$kj+JTCW%HX=h
%4q%A<Dr&Pbs8A*=D.0#=aaB.R8M+f.b%N;>6i$-Xb5BRgmRoSbNq:RL.JIXM)mM0@2;9B\BBf>SFKrE92)2c(<"<pAa7pY$38*+C
%.X_5QPXSP\I&s(Us!rN&U!PEG:l;3iCEcNX&LX3,KP*kO"XH]V*`A;$Bqr!'=ebq]2eq2$g]$\#79JeucF,sM9bBqXS[7\omlGLb
%ECOTq+0_#<TM8FLPl_/L@L$*d=S.+S--UrZ2K7IB<jAT*X'k'eg;l-J@!>fuiAd.YO*$^gF56AR4S8>kbB#r^"LsSaVef\O3t:os
%A0?SuH8=PuDnNP]Ph3fn&_)#PV>e5ms#]RT+?S_/:*SIO'3K@5S$V2=4pDGoI.-SAq=+0Q4s#2mc379hE#.&^1q%8U=hO8U`tQ]<
%g#s*/P[pQm,O]J5'2kMQ%8=D<D%UVNbC(/]me3k*,U1q".HbmZ6BR?::Fq*[.*f+<-T?rds)#1dVAg);7*`>6Hp/b1E@8fT\TRd1
%._dF;Nhggd?D\_d@@Nu^m]3R5A\__)cIt6l>*U@,P:6>gU`dX=Kf^8!cF#?d]kh76YY)O>,#\,t&$VCb_/rcfal&-h2i)N&`)tO6
%S$;IN'F,Y?a9l`H@+2u`"2",UBHO.p:@c&Ohj3JF$c<SSp/VobP=:(7ed7@:#M5CMj'3a%+YCmEg^5FGl)m?-@[`EU%D[fc2e%`-
%r"$CBN^8e[p)\<1U+:-R"cfb,&P`VgN>(RMe&p,U08(Tq_%]AE-H)eF7@!"X(Y?-^m-[_gpTfPp9BSq5.NX0`I1.hBSci;T0SYUU
%&A1SSV\-"UicBntU;`fN:54C!&rK1kq_#i,fSU\d`"$L16ZP^(T3=W%YW6[&EZlTADmb\udarSq2;9[nB,7t@2V6V484>i-L7DB$
%dN0r'YrFeJf^D43;MHYq\Z,G;ORcsK/uPBG"24=.UI-P$-A/*F=L['I]\@m"V>T29%e=di?sLi?3ARc**1X"FhXCh!-CgHB@`!tm
%33bj<-EVM&o=J4FVCPou\&g&dhP,:L9cBCBT7cTLiU3"VH]640j1B5Zo=Yl^ZUJ;XqUguf.I<884t5i^_EKF8PJTL4m$#:M.I<6@
%4t1+X:/!W%iP\YDm!/.g2\hnI/#'d0HiU>i_&t$,o9TA@#*?ED>.Te@:j_"J99KIUklPE$;C>`m*B)8=(mp#@"T<3`_$n-h_%+9l
%O!0bcXA/i,$bu/o7Q_R*'Xp:tK"+kr*>PKXc<ZZ6^lK<o;V[qP8!HQ70r'dG!@qWLfTl#@8^c*43hJJZk1>cLhhN=toTGg&P3=cc
%`#<#b3@WR'+BUT@=jfKW+W80qG!&f#?]/;!P'FRQ/Dg%:+=lbB4r&)Q5rVESp@:Y-(8PZsL+#A,Y!3K%O,#:QJGQF%=+`?G,ol5J
%KnM(#EPQ(85G1<@6fW?!KQGiTIn52VQGMTL(Y2<V[=n%[=MkGk:XFeX%T!k9NmiJIGd)3cR9`K7\*PoHBL'@iFLRrO_pAnGoT[_!
%hcV?n_%[AQfoRKoGWS[=.G*TS*.:Q_/U"YC=KL/D#`VS6Ou.88<c"N>0l?Cdd2Yn4DMJmfPVA=[R,rsoj%]qB',#RbEmtCm*^&f-
%!fgqT<i-&1QZURS8#b&Re=8l2<rfRQ0Kq@L!Nu5P!QnAMC!QOaPL`1%)FnpiQC6b'JLB.nH%NA[.kM_]5]cbl`AT38b[fbEYKUOE
%bA\#MmMm;IpmUuQ[2@RGqRK7fSulc"@2j=PcCL_4LLO?d-ghSc3Y]I=FQ+?=XM]g1Cl`%b:*>?'FhclDJsS-6*pe@9)$G&]3$78=
%nfdFo=(HFDDGI+s=uofqVR(>J3r*q^iP^B_'2D4\0a];V%'$f+j(<@teTZ-;]:6:JHeW@CjRr5B$.1'.G$\g*lgY'FR+lB.@1Dn#
%#]k3QfCF+1Trj5fffR%t?<D2.Z0_q"jb)f],Aar/kCl!f4"RS/@r2!ZkM.)hCnen7U_JX?c%TA@ZK1<35aiF[e]r&D3f6CNdtpMR
%AEQ/MUeq_Dbac9j3)8P(p91ts%Z3(N7?2XC\sY(CZiKXIHJ+N)dN>8V&B$<PO==U(RG9+5=.Bi<,sspA%PLD*&>)69-dfKs#F#4^
%EX<:&q*@A_$_R'H'IKS\Um]E*Xi]Oc]566l)0?U'/La/0qAc+l-g/chJ*L8Vjnhl'c<1_I3j#ti:lu<]]1aBaZ)&n%8.bIS.uFU1
%0h_qP,`'$>U/GA7&c^N2^R<C?Kmsn@1FC&4>R$Cf#C1Dm1%5=pq-=[Qr_>78\>CK5NTW'<T1*&,jM6Y"gQ,k10l<8+Ls<9_HMm?Q
%6eIH0lS4qFIrG4(C_NJZ/P"HS^$`W,=je'_)MF4K^h9'TkpDRH':k@$T_AO.>G$"HkTJP<nUs,%efAZL-_Bh,-U8=/-_KV#T1BHu
%M3#"--(r%i=PX'rFrY5F3RfB:f#Cq/fRFuZ?*Tq]3SMK"@bB>i7&BT'Cgeoj@XEBKU>.rZ@c:3qUhMRg'4kuOQ*H9HA[oB?Jf3U3
%AaE*W!A/ImArKHOYpEt9**p5Lkt]q\kt+EodL;r%Ye$QF%Trud9(@\LR^mfGQBGh/P+jGOae#<Y\48&E:<]!/R-[/?_C4NO$Nk`4
%QBG!VQ\2_%>OlRc\V9oQO*We>;,a]//3A0sV=5WcYrq-31lVt(UU-bNK)!nLD<l/f?6$Bi#OOB$3F586RYL.I+aZf=?3oAF!n+GW
%iqho>g+B"3]`:QiZ[k@uSfag@>6E<t?pIm9AIaQLdCSb9?8.fiTq!GD#@#/5G]C%G+C,6J=p"6LpsDJO"^HbW%>Z+6&+U,b&-Z;2
%7SbhuOthW3%/mE2,iD8roji_>%'GGm_9#Q4S/?G2o9*3Jreb=tXXMS4R[8\f<MYhIiq%m33H'`9N6`GXgj)9+i-@[Akft':@#!j1
%2&&ZoUsk(nXJ&`Z8*-7@o:BFZ@<h6>>>h^/.-`G$AAjlf?(hC3rt/nPoUX\k_M9.=!DIp^pdUiJPE$7ECt-!Ph(a3m5/>i5nL.h!
%%rh5;4@U1HaKp*=0b0Y$nr/PO'kVifPQs51=f=qpS".I?1"hNWguF0Opn5MQ+/D&ddbb*Z`CpP+X\DNhpX(rt;[TK*TJRm/OJ\gO
%L#gj;$&/]Y`JB:_mCqq7R%*i;\Q@UaSI<olKk]_eZu][0\M3DUR!()U3u=cb$WBIa'W""P`.Sd;:AieE#&Y)4dBa/7k/K"#+Zj`G
%5(IC^75s\s!?AEPJ@>N;h#K,YKY3/WFCV9=a8k;+/NV5JQma5;5oL]-[eDANhCOV!+ELDGfoeQ:Z6TUo:]CM%52j>C[>CGXpM]E_
%Z=Xl)9;NI^A#VaM<\ROL_1r1_W,)c(KXH$1JV&:VgVOI_Yu1S\T`\A:3I6hC-2eCn*C5MF!>p%A8eQrIL*FXRLq*8XfG9R9R'e1b
%;1]E,6HXZCSEWXEKG7,)N@L^gI8dhR'31%k\lbKj=[$%blfggdF:X6Xfkrrt</cm"E^l(TkZU&i>R](EMNB#.&SP^$=A4*Q9G&?^
%6Y`FinPZbV16K'F[*IG6gjo>Qrj\=TAh$2Bg$%qDL?s[IWLtkaMPa&+VEhsBV:=j^;i(",Qlk.89cCL,qc?(&$EA7DPX6k<*ec#=
%3*JnJU[TqR.6d<W5DLJ%U18(e;/kJ2)hB_0)d5pr\VWPILZ$[r/j0[l*.6e,ZLPunfT6WVF&uPn?fNAOBEi/"l+'`V,e`)uFJSH.
%.6qN;ct\!A:l#^HW$(+r'Tgrh([VmTpFIcACZm%KC,!e'a&-0V@tc>NL1HbP_*\*qL"+D#Kbbi?MdjulfWP5465%rd@_93A$RKdu
%ZjV.P>h>:ta$-@NhKp4d\n&Qb!iL/HV[@uIdBU;,B&psVYML^GKCN8PU:gaA70:R!MY1]hik0.g&d__]Gpq+dpoZ$^$ZKhGTh&C_
%]7Sc\*8ocdGp'[$AO'JDnrgYe)WW'dDVn(X=\)@h'r2+mS$e./X<$Em?L9k7/nkOOA(-^(Vdfb*@f[fW@QG9D3YlZq(3#n+"l,Gs
%n*Y=a?egil203--BEu)BmFkVhXuLF?M(;>+ET2k&aqaZ)([V`_^(49r#J";(K`k0p_,Eno'G<N^"A^2W;b6Bl&j1jNs)U1KVsr"=
%-RP@NE+89Tih%VEGW9\IofurG[MS)i`+uQFh_rPq,m*drYWd@*_ts31II<:l2Ur9%$]27%B'bO,HW1iOI-ucp8Zu)`#`Q[R@_j`-
%B^5l-7H&'D&[pea1'=qr(TeVkVA)oFFi0HT5tYoI5.\*gh&rP%;X=T:Fc<k,&sb<t-tg=tBe3g=aE19(>p1GfAK.CTn#=IR<+KJi
%9NG4^o]fc-4:Ut`#H:dQ$gQ9g&DL9^D@Y*4HLtu48*j'<=>CIbqM`pCeB&DO$UqO#o<KG!;Zd^eU,Pq'EuHAEdmFe&`C:=h$5Ms>
%ojX7o,LkpQM^,oJ-9r-WD@jO*'![qI=HAPtGfqM9hO&Q2*\k8MX'RsMTB[!%PkY]M_*0k!,)hGr>]kI(fdE6+=mUg+g4A5iC7eU[
%XBDeU-Een@HOtb7P,5"<.(e2Bi8"s8]P@n)$An\AUT;Wc;FUQb%@Dq_;S$F4^oe[H)eVTJ43@oh8=PL$gK9[R>'Zo_,Y@nUYm2QL
%59_VSZVVF6DZOjK80AR3j/f%i-`nd5((rpUm>EKIa<2/5Ya6RMN^C[u=NKbu-uDlj=X42o4NP.aTT15WcS*tRL@%gSH7(&ic8!a.
%=30*,d8o>abpf!&6!dnkB!I4kG):4?-''eDe]%Y7!r8.'nh_.k72%oGN?)ID,Y+7]FY@":1/0AV2@PIqCkW4bF,r&kG\^1B!Tg0K
%`!FIn'[%nP6;tm/%\-o:ap(H"T><\Rq'R:Z'-#UHh!"(6@ruSmn](o@>jt)(#%I)B#S9fTf#;,eTVH)27SZ"ThqV;hc?=/2b<Zs;
%,*-7ti(:L?$fNT++T\H.41T1J8'ngf>q<Cb91?J(LAd;-O0UU^T#iBR,:?JcI$-jb)T=5kr/q')`&lYG/$T.6r2p7];[#qe22@.8
%?,`qHZuu,!V)sUX/F;[/nNJ@#2/]&=_Iq6Xio2$7*o")cIr=QfWT^"2PGlY.W1./2&kAd(VJScZ_qe4_qoGem\'!u#kN"P6hq("]
%"D`90BC$]9?:<[Ek?%Ka/b1:TG-K(AV>nj0Q.mNgqOMM.Y"r5s-hug'OI;Qb1^8p2[`5Qk''XsBE\Gno:a3S]F/b4#P'EgbB:7eG
%_LA#/pZ9u/<3DH/p[ZKDd4QH"CC6Js3PHr\35mnG\"5<Fi<AeUHcf`]S2+2m&g8Nq8Br,qV[_'tdceV8*t?e^=6`7,F^pcL&PU=G
%Q7/1nGDb[M/1s(o4O.cuh#Z!\#Lh"ASF26um#6K2P8uDaQEim4hI\:nGok/-/^\9_`_]cSjH(J1[Sas_5*n\>20r[L0$K(PI9sYO
%L\a+@fC\cd.f#PT/tng]PunuKg.(u5#o-TTF^g\.2d..-0GZ0,]Ic'q(C0,KjV_a&YgJ,h6AlIu/6f;^^\q?Y_Bl;iJ]LIj61W4I
%LI`%Fbp$2YWU)?UZ3TfKlBtLMO^TCjV::>n+=R3-^]mh.#6o=ZYmqUORNr;![1mhF/HA,>"!LEqDR-[XGC2](J3aGG"ulY-HJ;]6
%g7X5'd##;EMfFG_%9gEpT`A:KdQScj>.jZ5JDm0Z/]Rq.%+j=^i4_2Vd&\@r94;S^5WP:@[chTr;h-#M>KD(/V\lDq<G@B4Y]KiQ
%3+TM@NM5.B3?HCr%I+"*/M\2TQ@+7*]2GK%jM@3$Ql@Nu\Uh."GO#0e\H;n`/QFd/XK!ft$-oR+)DPULR'E$%Q^/Mr:(8$L%kDeh
%e%C#Pg^BM'6?21^,s(Pr33!?S0'Xq0abH[O7G#EsLiJ\?)k'WF+;ZcJ*h]c.1!2f,g[?f@J%Rm,^H+OXp!p+q=;V#.o#:?qkdR(3
%qsin8C3+\"p$Bl`l-[P0o93=(rGM3Em<NEbbg$YO]9uQ<R!q3!bWO3N2(S"'!L1Q`?ZY\l3=`B&ro!8F$U4S,eG_W^B&Cl4oD`F/
%PF#DOb>7n[VqI,.SSNQF)XBH19.T,lf)mU&h>'k\+)f]JkY@]?Y^^U@M+U_0ki>VWZmRp$!q`:ok*/8S_F4b]gu+59b^mPhqrJ+P
%0$LuJ(j]]TaKN+kGn$=EeI6mX0Z'HRW@ailV_Zlq$5T_XrUj!V<;A`W,qnCGHHPko>0kA3L7^R[WKa=&mB;<!$r=3ANoI0ZK:Z]?
%H"LHmP)5M`P"Jj:^uojoKl3CYVoei^:SZ4#6Tp`-H!2u:h)<1"](89b;`1ZV_VU5b.\A5^O-oJ36]b*8PmkMm/#dU9\f$hI$mB_r
%Cl0CER]@>4FOEWV.2X8<^E.-r%l7rF02e1nN7.j7U^Q!:_p`-F-Yoick%0[7JU=A)V3da%Fkc7I/Qll[[$u&=SsCq.DO^U&-#f'G
%D4_oLPc#fMlF,Bd880<baCHb?7OE6f,B(T!pPpJ"3O3#-5u<\@49.]_BQ$fRg3as[-@"]@N%cdiW@lZPn\#r=A%24,k1(r3)c'tQ
%YLi;d8?U1bk6t\GVa9?'a*:e%STBbQMW8FHG-2Z\9c7-c=e[-tGc.Ot1QhcM*MP?QGRlC*";bf8eLRh$>Y#Y#GhUtjo.HPB4RF33
%.J,5f0qNP!;SnR%KE-3YmG9HgN0fahat.tdi&1Hj4J!c,9$F]3=162*YM@EcDW\B!)hRnV[)"6tf!$*9K)7<Y#s+(/J)*$O_JKO)
%/7TX3EWGhY[A:/r4&Vq>P0J0=$IAM%b874GX>GO'ku>ZhGL\f+rbZY#rV;(abK&+0oaL-#HC<%IOP\YD^V>/9N?;WKE`fGSV=IWC
%<!F%T_Q-b7!DKmTD-ZbF;jA5"_^sF2N<<1.j#Qdc3qEI-(:">_IQHK0lC>:gf2Yfic8SsoZHF+<U*sisjo?)XZIr$\f=ES[8%("/
%jpsIAZ(iY5f7o5:GgMYj)LjH8U5"/3kW#Knmk8*3\jkU]m(Am%A`\Ya!I&6+U&K2D^7'\oC#$?hm;/g6mC_aAPq*EdFR<['g`lFI
%VDKh2Q.<Q#D6&`OH.OpJi1pjCX#gh`j4cW$D'"Gp%6=SaUn3#1ea/Y&\0#%mUQ'j_=VA0[22VhXLpD=:2\o9(6fhc`kZ[$E<:dc*
%$<N;dZK?F*lMKrV.&09\+9lM]l@Mq!]<e:_giZGJ0'+eVIXSEum@YG4Ut;$1nSS'0D'$.1RkEjeE^Q(i@B%5tpBUBZ^>QH85`/7c
%?#X!J;h57S45dP4`iZ5_DRXI_c*a]JYJ/on:!4oPgQ0d-Sen7ck8)]RVNgMoe^i#^l[3qp!kX$_4NO$_c,OuLbuKAYgP8#C]tsD*
%[HrP=j7X@8'/Q,)nVSr58P+&(%g#%^$Yd`-gh9pdQ;kViLB,L_2nIg<.GqQK5GHn@R.%IWrsc$Uf-`@dD$`")(HW2=4(J!ilbGm"
%SPM<beL-n-m!OT!FZu!O#;T[:c&J(\Ajt)^o[Ku<1euh),48Gr<\0ALOniIc9to^8OrP?U\7]#o/G!GU;t@^BO?(dK(3seOJ5di1
%e)jO+lV9T.,-tIkM9sPVqP]tV0K0M/&An'nh>n@pCY]q(N[rA?1Ip.TA#$2HAX2F*W]ZSe'NPs>Mo23_B&cMK_f:0\9F3aVd]?,H
%dKca6p:Q2C*+'Zf`&HG?#AE)p,N*t&=)Mo:o,so@[^[@'qg5d%V`6>jWoeGd'n'm/9-qRNYd@<0p?c[ss&6-boIe,V\DEulM&s=B
%K>?Rg0%,/aYNA9VFDkm7TT_eY.V!:UB?6jED`1$lf7sjEq[UX_`rPYSp?(=rYe@V0[LXn\[`[d5LhLm.Q0Yu#egA-=qGeu=57!#*
%o?-3lRXOpn77h&?*Bj=qcnelTWNQZhkS_IeXqF[i80pA,.s!t+dKGH+9q??RX^E9Sg"_Zs%;LdCW"T!#o#at,mW'jfY,Sb_e`SV?
%Y,j,hNhBN*<HTlVW3kK.X[)1'Rd7<('^fGpJOXAuNHSobEU8UmIq^O=QD_c)V\eMdQ[d5n`k!g1.DX61XR0)q^V%+g4?`^ep>oc2
%*$8O;r9<5+#VZ0lp+L[T2u#lIUYKpaP9_od+791"@^u-XA'5HX?DXYG!c5tGL&.mV*jCN6g40<,pe&`8TY^+8'a'cTO+f;S>6<I4
%<FY1##:u&FW%=qu!c1k/]iE&S[]!K<Xq(Zh;K3dd7SEs=XEGW8\Hf4%!U#0)%F2iN!&f%,+ZIB4!a;-NHcuh$a.P:fT,637ccT6'
%.eAqV3lYB(AJp+YYFXMXAAs1%Lja!&#AmL6AQ]^%BF@>IbGnM_Zm#`H*sf5aVgpt\\[F5+D<3fpN8T9;FmXoq.Si"OH$C%]qWHG^
%o03>e"[CBHed/e>Z!r]>bltVs<T:^t%pWBqHO%EVa2$e?;q3)O@TXUOf"`%`BFDkg,,cuo6CM'b!6[uV:A8^ZWlPrD;^85U2_<l<
%!NMuTWQIA9V%`>X:mGH>m.k-Y'kAP#ElYRYS-c2gBcWDE-I87,Us%K^4d\'5#rcn$_$/g%.9Wq[J5Fjl+lleN1atrDL$M*,'s=hp
%,/o1N5?)!#N!(Qf<SCIL5!W[b80<eNaG)6Kk]"Y^+"e>7OlIQQ7dS@:K*)o3iLUFJ`1HuH^i^K0k#ItO(q<c7bGt9O[>t!D9I@Pd
%.G9:ak9UrHY&_\"<WZI6AkF_k&87'8cDk'eT[cr4HTAblCM?aoJ=oo=lTrY"<'Zp7Y+0-mZljcNo/b>A[-9,($>?ig%41`G:B>;]
%VC<7uA!g"q4%;fk;F%9gAPm$Q&gM=oP%<\Tg7iV&9p$4m\41SPg`$ZPnOR4gPS%k-ef1:=P[9>"R7olPaE1uJ<u"dL)306J7,QF!
%&[Y_$3)$eOY]Lp-#Is?[]&FQY`s"*,#dpG6V:&[<2Q-^;&K.7cW\=^u27iu"HPTmu`S)<e@reap6[d'e%\Afp<J-WKY-QDSl*T2=
%QVMEN$KY>Q#f`9PW*U<r*YpPB\]"hr<a$X5MYg6%2RH9_3]`[8kFuD&Z>l,?e5i%*beq=#(ER!?-R9YopO./Ag=je0-J=?/X/0,a
%OU6RhP&m3D?WlJc81mQ=]b#-O*nI3QMbPAcYVel;JQk*c@,[Ok\6:L;COotqf<3Qr!J.;Q'@aG;0lV3uE8e/`"Kln2;&^;#qt';*
%^b(3c<S6n5#;1fMH1#VjZrnCX/pMQ?X1-A>Ob:kT46B.7lr@MMYtT5"]mV5oM,bG:WS";p7#.cmB`X$iX#*FoZ<Vp+0=YQ"UZ%ko
%>31tehZp)2$gC$3*`-3Hl#<3DmUAd>`C$[6WU.jH_ZL\riPob`Ur">WGF'39/g3>,iud1Vqd7sQB@,/O(OttIZ,;(ejh'.%?^trr
%F#oU-5CG?bnfJt"cJcfFd)!oSGLop+o)qMd;f[05^#o+-l.O2?L<$E/J,/g9.f>*PY5\4'Tc_%n^5/X<^?"`QB@lR?Ir)Xum?r&"
%5+6i)Y=&(p`";om\fn"gbTM@!4h:DC@Nb*Mr>s1<c0;DRY""@>/ps\X1uH#ac9?Y9HE1p)eEP)2!T?IC240;Gs0Xl$>$P=)T0OJ7
%(Yb7!1oC"8]Dcu&HM)R%i0(/@A_^,UN@%t;?bX-9gRK@(DOql_lc*Z/NBc*HDB?s^k4A9!Qk_%d51OWEc!rcKrqOD$e^<85@rO??
%prSm?BIc"PleTtOc2)JPs/lA_a0;qrohRHTo8>P/VcUpnGZQ`;cZJ!hVe;b)QWu\:fPDLXg,4JOM<*g^RtsP`n_J0:@hNd-^2<6`
%$kBIe.U7=AEIE,Fq<R.iV[o]G@n&:i5Yj>1XW<?)EUdaaH$"1K3FXDqdO/?SmD[+A(S=L,`\!NIl3.JE2g=15bK]q;2j5`#(IOQh
%\U>F@iMgk:UrrXWW,h>[O$L!8qu5UIo;'S>%d'aU\IhL)!0t),[\??[Rrl24Q^`*-c6+H>DURWQI/-B!")Vr2+SK*5/"Vqg2ek%%
%UsCVNJ)?d0q/CFrnbY[8kRLJIH$=GFN<UGuEkh_Vl0Q`HrJsct5$sj32h+&7;(ElEk4nKpQ3.&3FT)%,l-]<93tC\fgcPX%-Y'[:
%aV1t\0k2%F2Oln'gi2f_rTDGU%Q$47;DsOjhhHkKj]_\85]i*gr![-PN934934l]uqY(NTop17bs)Bs:2X%;j.P1JpBlj3ioesTZ
%lfQ<D0d=-foC_5BUZ9Ugj.gU]Q<aE")FZPn@"=KnB1J;hIsegehjfbD])F9W2SekCCG3st?QIs;I,U@n<B+<Q//s-AqeiC+ZZ?W5
%<q/eC)odAg(rh%i\W$(=`Td3KlZ&eXIsJ\E]Q$U;[?DO>;WtZf,/*`BJ`eEDN#pC'M`R&g@im/8#e'6W2WI(3%_V#)0PelL[`N=,
%(t;m8PJ?3h`fTZ`(rieAh[Y3i)uqo[42(L\k]ElbEJWuN\[h^#/l/Z7I,%td)9b<&F$)i:pbi?B6a?-0\%2EZK/7e7da!)ppcRO*
%W4eRmHlgLVp;Q![c:3MPm()(KW@>o$gM$:'aJZ_]3*TX*2ZGqW;)dmsGRjU/7T_)M7[4j$ESYi7<V$flmd]B"lS05+(I"sAq-:eZ
%:/9,q`e6#cU0@BK`T=!.(M=Q!NY!?,:^q\F)n!\%.@J90^+kq1GYQ-BcC3QFLkgC;_H1_:,ksBq+<.^GnM"d"#93pE$oc2@)oLD@
%AuUh.bl09g1%]5<-'T"(]*F^r?j(dM#n!O4"cib[D=K24CrSr\5Ag2m-o/L9!@7,'5icldkD6rJXRjaT`(qVjS*c!+oCL5[S'BXK
%Gas6?^ZDH7f8OZrhL9kN>Fq5:/5JK[3]fCZI,(6!I<Y>J+Bd"1,A:tJX6h#d*BBfWS'?7$<V#\B!Ro(DnrI&NA/'$:3U1R.e8r\r
%3/Z*)Laf7@c+r6(+qjcIhqj>h;\*M`N#9e<YDt>1I,?6[0tUfmKTme[[bBT!$q>PmH?M2!@d!+B@!m(iqp?M?,_2,,>TI+1U`Y!G
%P6jc)L@Yo$Bc:L4ip6;_"hqaapc&K$kd%*)LD^,UP;.oHpo5\\`X!==@Z1A.nT88#4$DI@NS(7MHusQ0h8Pb;oB=W#)Uo$N'Fi;O
%r-K@#NT9>0s&=W`glN^D@XKONVcTdG+#Pm)ku3T,r8N+JORPZQlQ+@sae5AdT2`-V3^<R&WltG5=?Um5M:l38cQEk^pc1d;N#Bk=
%CM;&7Hne'am#ukkpc1d;N#Bjr0D/37C@@-:,L#rg(lC'hHoT*>4<=;:+^,pX/BTA-^&P>ca3Q1MA^"O/juLDTgja]M/BYf5SECoN
%UAbI.;3%8I/BX?rlp$Q"@SuiR^)]G9=HkOmg&KSW`M*d#k1LfJF,2P.UDDR7;"2@tSi8.sDM#gcAU$0S5Wid7T!AUI.XtmumFrrK
%ms+`FB!+M^?Xq<GLQYg&\Rf->ZHQ!am7qcJ:3:?k'MNUcU2(EJ3s`F+\qHMD>ar[>I3r_K7+-pl9iUM'<,E9!-=LbcC(jTo/lXFr
%#ebXo-iG2$[h2R.:ZVSHQI5)d;)p5'&Q:A8UM1TgQdLkls4Ek?G]r`"gZPg8cX\gf+sN/CpsZ17`9>pQ)V&r<d"k9)gjHce\hee-
%hD-BqH,q"QcQhb4R]14I2H'hZAi"[["/"QN)u*k8N8hEEcVHIf:X?KlA"0Qu:Re,[jXB%Uf07a35(CGV0/jF-TT[%E`1Elc07uW]
%1;5lF#'-2l0Dd(7]c2*IoteT7NuQC$lRL6H\AHAcYhq:qeo$iQhbejmn^GHi&F+_S*cW>#F/*XM:(OdVnA'H]X^KsN;LoFgZ/<"c
%@q'E878IMd(bpb^[`i7jl3T?:&S'H/b*7i.hsW:Y@3WHL+V2,[%!GH0nQ@.b]G7X-HffQpH$]/Bj5t*8,kb$Y,S/97EQ^4!mIZlk
%qX'":pGjLPSG^.D#UfZ@i64mohoYm[q0sEm6k?NI^)9L&-_KkVqg>$t5p)<:GOkRPTI-<"jR^'S=(L4]PKDuLq0`4d49G!/?]R3r
%j']sDkRm2F-$UbSh@Tre#IF-`*&Q%60j*#=@uj.#/)ngpZNQGlT5%>TCsL<YI_U/AB;`Ln\:P)p*Fn6c&Yn[Kn76k4#ekD/q&Y4Z
%Z#E>h+3BlCN?(\.ZH5H,B+`F%E\8o,b&;aBghb9N!LCFpk4JT4o[f">rdK05[^l7sEc^fr`T>MC<hIlP3h&fUO$BQTI!W)j%1[6\
%T2#$c@1H=tn:hq]pZ]`aX)7%8,qtH3T*ip2LuE0qi7gdq9m#b9Rq\1dUa<`E.eogE.8*]G?TW:UOD+[ie)hK<a5n"6^PBfEO>``9
%eunuT[=*N0k18AR+.ke@(hG#Zhst:[*5PjT\$n$np2??-09bAV&V`+[?A:r?UkT[uAmrT8Zbhh&AMUnlL6p$O1)XCF_olS83=*OG
%fabX4+U'Dj"sgro*igN(SAK?o(8U-%V=o1<`,7H4]f1mEaX6_D&j1q['4[1Fm!H$p0lYe>A.rImYj][\`Wr^85?Bs/^&%9_FK6;R
%&6\"64.'PN1,1N(V]Wgj1WLpXdsa!k>:Lm'_]YRM(8gUqIq"GaKfL3K^\np`Dp#dNARBa51i9sTqrYfDai3_piolp^8^W>cH=je[
%T@\8[&IHg]mHdWYGX`YeGr"BT;S)(kE,<`8[Sb=\%0(Q=9)nnhkKOa9dH0M$jPiB@P4nC=i_R,IIiqSd1[4sa6./,OlKsgeI=o`g
%g=ZuA.$KC/#TDDIA\PYl6c\]^-Y1ih"u/SdH:#/6("nC/r-irI.O`YLpLJou`sh+JAm@Ti^[S4W'C6R^+bfQ!a-c31LMb)9P9"/:
%"lSY`fJ1C)@BsB:G)XP'1"e9.43$jqb%/OP"?Qg&BNI^!JmB`%loF9Bmk9`^YE$oB^Gm5IDpJ+53&//C-Q1A&#iie<87uE:ZhH!?
%pjqJ+p,7->q=VcM?oe16<"b&_ihm\o2BS'%khXYLc2)JPs/n<Da(*WDcLjsj[e#D9=/T-?gW[<eOTVfaq=JJ;gle]KPjD2&L2Na^
%:Rl*3bdr1OH1>k_E9OU*)Tad,1R--SS7-G\0h+.6Ge-aGH%QSWDpT?H4/EB)*86W8kRie=[n.P2=GEH?Y:nd=T>AB(A>A)SaaQ!;
%;;HF:Db:Q2Lb&1%)+qrfjm79&f9d`JHa$TFS:\FD%H`b(]`O+@]5;3Y+dk&4LVej=]"1Ha4#D-_%d4cj'Lp%$*2"$.S'9N7L)G?d
%jo-]N\T&m5dcMlnDURYoD/Rearopf#&^o7+brl;KmMUb74YqM(7%T2:eE9;[C/X4AF`(+?-?X3(k9b>SK.4"R1Jm;T%:\3p3qJk@
%\l")?,aId^/hTnJ]f[3#=XSXc3TtP1/02XL^!$;5]$Kb/M%SIrPZM>:O#c=BI*R!`/p:f83$dcO--4^PZM"2*`)Sufq<N6;8&rAm
%1ZPKn:IiI'=+>T\b&7"MlAr8+<bcj7;dnM'PG/SB*/kl`D5b9L/u(9JhEe<=]B+n&HR%^[k,"\!CL[2195(M#_7ls1P<jL:l.bF>
%1Cn*jO$=+rhcKfpMpbC2#Tf[d1<eI1F#l(*N$?uh@uj.#/)nhDd3qRI\b`9pp%sMA]ACl\-4^p*g;TlI_0'[@Wpu&SangC5q>TT&
%1DXfkjWf'!^2X7?O-l<0s$$C+4j!lgYC%fR'=p>^S5=As3i1(=HlHcCNime>nS*8@"T7pP2rMG5Ak.ZP]QP"S+JlVQSb@@`'&>@+
%K-m19Dk=PLWU+0SXo@kTid<OSK'hI$a!.U,p(e9es-?5)g)m#%P)1NRkiRo<EGP?BKqd`GT_pp+]N^A1mq'2SfY*?1?j+CBD4=<`
%"p\JAa26PKgTF,fTUp$0A)ORC"\ph-I)!]UL6_]1KUcScX(;7@in<SHO%6*P23UC<M9dd#p#tu=lGLZeW:Mbkk.$HTD;UcAQndqh
%Eu`*UpRO=))8j0Ea'1#='8,*'+\fW>\a[U+Zli/"%IU:Do/IHFE8^8b]f8QAG_S5+DG2a)LqNb5SLsglO%Yu5b`X#%,pmpV&:HZm
%k!nDh3!^G*Ask/:T7"o.USX#]0MsHMWY,7Gmf'jD;!8IYenmD:Ta70qcg&,JCMgi.`&$3PpUoR^.7_C,0;;Mm,e^leP4@ftABFW*
%3Uc<_SgLfH:,6f*Cc_W($!OBL:d71Jm)QRHWV9^CQm1njOWMFKB>hNrK3:4D,7&Y2Ggr)_djK_CM&4Snml-U!e'$ob!-oh"FGN]N
%X.slKVVrZ!PBo.(ImF29pT`l$jQ\+i-L:!hj.?gEN'&I5S!UHtp>"'^Y7m?f24CN-:WsSM)B;'n%W6Rkq=<bIoD:6i.I85'h`<gu
%+KQVHWb3Z$hG0HpHgPZ*II&1ATTHYFm-J`Cbopg]\"tI-@]r#'&BdT/_(?0`qP*ddAT(Z5-iPeFW\[cMpA9d>+/'EAA+Rjn0/gS:
%T#\UYI.@._Bnq.bo>emq(MDqJ3r8d/k3B"6frTJp,+JQ%qo]f-044X<CE2@ICOUduo?q.fKY+cHCKoom+k%?Of6No9>IYN=?]OU[
%M66U8&,c.9i7!0Ah=%[Zp>,("s)0eWJS4rPe&rQ2b#4Mr4B)'WJj4=A5sl`j?Br+;H@/%bcEPa@[4Nt0B(]CX>u>/scYQ`PPqBFP
%D)JNg4MLSJf@tS=k=*gT[Dff,PtE*QQ"?9GW,Jj#I%KX*lZ4j@[4SrN;H5D"VWue-`X)8+EGCfh?>8Rk=W.!?Qh.5aL?B\^LU"X9
%Yu@Ke6i/01epK2Q(@XCmkphb)Kjq2YSp)g4LRQK"IGhAbHC4V&_rST#f#''';S(g.#6Uf\PJ0Vbl^JteI'F],eopr;DOEGT=88`r
%oJ*cA9kdQK`a1qmPpt-aWm'80/!DEa!)rIF`PkZ[7CNf0[,C5u.?3W1fYcaD=UKRMV_ef-^:5.t[d<^]h(int8o(@RZDoj[;109C
%<%;ZX3_QlOkO-K'8o%N\b1P"Y`DEm0[h%9]:nLKs<$0+$*Z*(!kZ^*E@3G*Zj\W9p[h%klH'9[/ZYFBbmOe@HhN,@oYanZ>Z\4U3
%]/#u+1:)$*FLlOu)/@`Eqp9?k^-7t5\DE90H<ci6W,KeB7K\K#Y(iCI\p\8$bSs@Bs7i)A'@:D<k'8g;%"R&?C(6uP5k7n<3PZr-
%+_@sL$D;,;I)8K5ccVb-$Z&4R.WHBt>)!aV/Ppo6/VI`Z\]pA-8KTe^Tpk/aGROf5Tk`q8;9s)cC"G:,:o/`"A8sb5\gGT?R'Zg!
%o'\\V<0c(^^J[$)=2?04'hrpd3\U:il%4<WlRf<?19(lNbu=kuK:l&NoqlMV(-F#JC,R#a;(I=>`^=g;YaSXncF["`lYN.YQ*c_/
%:nO).J#)3sB#&AeQ-Ped.b,O.Wp#GhWnuYBXJEE[P0&9tA-Ula3c9hT";J&7.M&Y[klB.R*dDk@:rX>Ne<r[#V1?F1'H$&.<8<JU
%#1ron"4D7=<n.TtN=.]6<2t5;W]Fmg(!.m\`3CnE'LX(+W/SqD?D0+m;H-fE2([Teg&f%neqA#5$rEb<-^GZ]V-Nk%ijpm)7Z]R7
%MO+l\;Ntaj&gSu%FBVj]]<c$6*it@F7Lc)&A[u,M^Gr&&&/c(-E1YfPH@pLnGu68S!M6j;5n!LPHCiili.i'jIjS0-%[6=+U=A<j
%W?$Tt%I/4E)t%`k\uRq//1:jpG:kfF6IW6"RgkWs%mk]og!FOlW87q&HZBPp^N^,ij]/<>J+6RH?Vj;a+$g:j>b5F\a31NU7>^m#
%D)V:7io8rK^$$H\_10-^4`Mt;(N3$_WLlGnq0[<Vrq*-TAS4FhK3hS=^_)r+>l`,7<TPkuD2un$&0!8r)QVbcST5oKd%gSdH$]%r
%2h/=A;)N^tnjP_=nuLFsrt4R2::hED\?=0'2HR4dZc1>^DndB"Sof+YCXK`%C/QPIX&9fib"?1M?o4/a-ruO&A-E[iRGm^\[nQRd
%0qto!2qL=CQK@Ri5J"g<ni+$gh':^_QDB,ZQMYR4P/b1[*I[O-N7t!\n<6i5,o$=_pFb=]oPdr\5T9I[hp,)Y5+2@qH$")<!VEU'
%iQm%g5bV"[<HG4KeS^9?mfM!L%33$^q"lT;67W[1LPdcVfSbfN"tUN`Q(bpHk+L[Y%a&,:'Op:@d5BJnHq+>Y-r^@:#\qM2nq:Vj
%J5&Isf.mr?H1D<]"H'tkafCWIX*O97JYXktLWQT\af@i3EfY1kQDCU:[bQ(f/9uguH.'a3/K07/Q97GKP.]@sQZ9,DIgpmKmDI`L
%GHq5,8$%h+1)p-cH_$Y?.<cpoTh=2a<Q=u7&\miP>$H_.g_\9Cb@h+TS*Q:qiDaYQXu70Zl^0`]l99Lh_?pUk][9.qbJ0EmpJT?L
%":gNgC>gul8[=@)odm!C[kl7HXXsf:MV&c%4EZq4[-7^\oF4tYFmUGnq?[&N!LPncO9d_bJdW24kuqK[8R(VpT8Y>db%oDfD8rlK
%n$9'9ph3AW\9&?e?N3B.^AJ>)+<%8!1"WerF'J8Qr@8R-1Gng<!o^<-5k]M(fNG.q`6"`]#nlSX+2^6\W@m<UesPEC5_ZC]5qJ%7
%s.%%[Sce;d!$KX04Dd\n#dOn-U5H_pe5ZOLIgde8CCNlE&l.,]/"=RZEoZKQ'<cJGGmhPc\Z*p;[0GWkC#6,CJ@n1:nZ/B^!(otI
%:ad_:JbF`iT7@bkg([:[/'FII+869h;H+d^jXPI5lbT&@<<:t^0f6HZVsLPs?As:dc5s%u1.fIrp95GNPS0%pln@7'>lD#i^:6:V
%l#oDA[d!/#1i;jO?QFfKIXcA5;)Y#N-j)6Nai1m:gZI8e/bJ'4*_Q2c4PX69jXVHmTYoA>Z<f1"c11>sa.Fue63O&"Nj+.,i=K)_
%/TIW!:3iQrX]-Q#H+kCJ.2rPpHrC>]8AF\[kM$!0+t;%>Gl!KGfoMWGpRC1n(?kbbkksLXP7ICp;Qgudp"n%I^>h.*WSTs4ehb*=
%poj>=M8m_shp3[TpeMHZeQ5;Bnu=BdNh<ZZ4guX2=K*8]h-GU9WhHG'q,kA8VuV4U@/aPUAgS[H&sAkn81n?pfbRGu#g)1O+h>0U
%81kr[81o&ma]0l;GN=&cP)W$;QVPD8+W7,A>ZDn/MO7WKb*H8NA9_coTInc5&RRDb2S3G(7H8U*78/Hp'HJoRluTaInuh.hTMl%C
%g__c6XC']Y%Z.WN!R^VT'k3l_o"!%\'31ar\ZWp9)LN'/fe+e\f(r&$WAfaeAYfCjfo.4(71LjgaX\?i!fR3=="r-*9#JNh6.m@_
%#9$-1e<9Wb-4W2h\ob(b%6_]s('I-]Jo"^nEk*4'YJQ@5UsMeUI&G":7R%CGYHE!c*qoZ_o_.Nr,`167/:1c]H3cY\JbfZUC,H)s
%MW@`"SNsm&\=?7;PGrhjU*hC91,Vk)k!.,?9Fsolc*d`fXU1ZWe4`r?VWQsZH^L6jRKN1Y(ib^@RpYii^4UT5^`@9$].F&;XhOQI
%Z2+scXD.iXXO4B(k^1nd01J/Cf4nk<_:ZDC677-O,T\&-^%q?`I4k_PP)Ui9o->b\P4E.%T'X^ONkLjtK)PBbp[*+ujo_-Sr\oh&
%jB;l[ctjnc_`<NJj`@Q03j.I4gqhM<9#.:)<ZlT1?#jD<(It%df:-ToUcD,n1Gjkg"?QAkBGEG(Tt[I_D0OtU6bsbXdgW;hSDH=i
%G&b.7ndJF?q#a1:_\;f)@e:m:d?BQ8It[#5[k[nNB5ULCoHZk$;Y25':K$g176cJ?c2.YBMT[4nR_OPnK)KVE'TJDnMUdM7eTjrJ
%Y/;LP+@U4(Q:S7_U*sMe/3?A2R<`@pQ#+,c/(g>R_JJkn(:SYE/`c"t$`T=<q-:fPrq:&h,:>KlOs;>7nkYGoF*f$L$RY93,Y(%]
%*(d+RI,k[uVhno*dr2dE_iW_9Y/%aKR<Gql%grrdKU#:c[JnpO@XhbT?8.@!(Jn^D2T'Vq#+eBt,U'@KG,Ic\>R7@3:suE#E[E1a
%X0N.:6LO7iZXVkLW_c7?$Ar232Hk^r*M0mQ`H-;[iE&O&+!f9Ca':fgM&(r#!_,;?BIC@e_<'s_X,D$m3IrUbqi^X.KPRW=!40mS
%bY+'m8sJBr6QO]d<@JaHMIXDaaoXq9>q2\L[K^SFPCO@91tFN%T$:9Z1,XllQ?HSR/Rtd^N`H^.OP;AN_!])/R(+pD.&m`IO.);!
%7aL4sG&WIb;"fd#n[^EsH<-O<`O!1.#`B\@LB9N5@-S(,d]*,'["D%FVejU<O^bJP\!M/oq2ojXXV<J>\i/Bc_V78%EL2Gn)O#$7
%7%G'M_LP0G]<9?4.,$27/(uM*l9nZS'OY".g(ZDWWiW<8]`R*q`3Af7nPO8E<5cO]>U_I#`)YBsmSndk-MSBlEtD*P>WH%<2>L]i
%+?`saK=GAQp*0(nZHArsEKOqDT)<)mb,@gMXm^YejGiIS?:p>@&hUIG/H)N01)U(jF-WrJW_.SK!97pYVj5@(WbAI`YKC"rUo,s'
%L"7OUIeb]dPd/?q"o4j6X5#odW_@s0CI@9[-=r:P3U2_TRA1e&c?65ULc2H80H.uQ*f+e5P^(t%ZYkJ#*"45]3GlFGKQOf6%_4+7
%Q;b-sW#34qW(ls)V/jIG:Glq,[dC"kE=8A*QCdM:'"5#0r0lpao'QR9aSQN,GHd\3^!6]$,*nue,6@nfb/J7Hj%p+t<`N9Oo:cW/
%;,GFe.J,TV3En_!k1)n$7$HGZ<D0P<K)=FL%Nk4RS/FRK<WR>+=1&XXLdl4/78se_3QRGNP*^_H"c-sB9#bV#9N56AX4i-@2em@E
%[0p.QTa+K;/LX;W=IJg@XId<bWR>CRb,>Q=2X5*l1`BDE%bgG7F-&oA'r`=QXPKI>9R`o:Hkmbk\LMl[Nr-]WRHF_m=$VVCou!30
%U=n(<S2F_KJ2*R*:$R#HN1XCc<HTd$Wo\#)G,pcX@%gGWY)\(d[;L.*)2ckro]#nC]f0eD,>$I@hp6@Lo,m&eL)36h<b5<s0fD?"
%N/_[jn@f5Q5dlcY"?k6*iVDkZg_#s^84(C8guEHNT/kq_,V,5&fJ>:7\>@G(bR^1%(0==Gbnli[>1hCc%-hEg;oHHQN6&RXlWFtV
%"gS$5$'DFd9F?cu'o%FeKM%cBq4RY-G76r4&Oln"'s"^s)>Ql\d/.8C`mQ<tXncGt5muEcLI(kIfUOI#8jW_L\.jY%$)8L;,+IYo
%h97s8Um4>Nb2(LTkIWH\N5D2gUo_NY@a;ijaYW<T>aEgki[c^OU6:[t,='E/ke+)64IJfZWkNu*PolD,^e7!l==5N+$*gH0(MYj%
%,0mQ5_<Ue#ZEQc%:3:/'[dqXqYUcU@4>UuT&OMquP6Acaj!:a_\'^BZebraQ8!RVV!KRL3gbN/f[%oM?n_[)Z3\PR8O1Y`9Q`_,^
%Fui3(MuU_,#`ZflL]N/RVa+i'Rs>+8U,l4edRao$-bkU9A]>.Lhs")8'.scCiB@`'<YP?FEsG46S=<E`^VnY)#YAeh[bM]KY@lul
%M2:!9?q+,6Cqf6W5c%d%2+<R\N>)=,[!3mn#P+RHNBSq1hNT\$0UT@YoD,]hX:c5EE:m1J'6Kb!\I4&@3%`?_T!SgA(SS2mM7tRP
%!CFP3;RPM;(u`QL6E$^U][)e/VMWO\'uTdk^@Gd?CC<9[T#Bi&*Q5Ifd"t?Bd&DjoHkcYriRHE2@"3pklm8IK>ShAo`^Q]-),d[O
%?#K;fQh)Oj$56">m!Q%*Oi!Mq`hZ&O#W'nJ6Pg[>&rKE:;@A+O+cVF1$3I4-)s]X#q7!fjQ4P:mG`0nOJIE,273ddApSdjMl"Wi1
%AYh5N[cOo34%@6D(An`K>^1M*gRgklFJ1ERZ+MMiC1/edejV!GE>!VY>51Fe;odT"U<Qu.`PRCXQ@6#_r=8W^SUim@qb;D91'6k+
%>S9G.:du&'OWR7c7=Y+b^fp@(rW"7]`eEHt9KN0K8jBhs%]/#TXJAOH$g>AX4QjHQm:[bd,@i#'NF?/'7e1_#A*De0cf64LW^=TJ
%K:.VAKTu=iOXQ`7RY6f=,c9sF,Ar_X$LMB+C[J=[0o4u'%O'UuTo3u"O0\9I,]G%qPTKpg'IrZB(W^LB@8QC9AJSa#L6;ur\QAb%
%o!&Z4.i"MhVi$CFjP.NsM<2_s!*gcoNT3lLU&9Y-H:^,1;8@f)0#^1CI"Y5)J;%nUBVgP"`$h0Y)@=;ROP2oUOXWZ:P%BVWgq(*O
%pSmKeSJ+O"2Ah=-0SVGr:I+o'Jk#jBP(7Wmk)d<*T(B-Hp1JC<c:nN*'f/Q`K*m&"-ugGEJYp2OYD+qDZ`\SJ!]jFAg&7kjAn=<S
%lBT\%!2jaW#=@Gt5s!G^E*C;ECQ)Mg:g?^p,&q5%Q6_AH,2o;]CC_&77oR\OUIHOAQtWjY;$74ZcD1cdAWks-<`PAD7k'jtO[G6j
%i_pBHHr!5ZSmW2mEBM7!DXK&^AP3_F[.2%+nGnf,a@MBDi/$)&8C]'0T)uEajd^6^Y_5E:7%`Q@!"TAKPE%s;m9DHE#[/e3C0a$.
%$-6+2"6n*rV8#n?"G<a;/qZFh)ce.\Cc,9]+NY>tj[/2t]/peoH*_ncnZtUrQr!)EJH`S)Gmn-U,i;fQZ"VV)4;,W'4EdP`jN!R!
%!aIh)r=u+H`Y,/9%=qE"1eV#>:CKT'%8)O;=Wt$TPA8q['#Jae&QBrg>?[Vt]BL"9#V@RPf+d;FCkC.Q$d85gJ'BoX(a=`3Bg,20
%OJALsEJ;D[)\ZW7nqDOKC=>G2N4Y]%p^oO)b+XF29RMq+S4J@J4MFNY*rH=a?8`"P0WPIn!Hi)^YfVFjB43t/rkR,l,-@?a%Yf)^
%L]@GpR;<#nZKCXY%fG"%ed*WQXiVpCMJ_@h+8Wp:eqNYj9c&Q*+]OoV''jT_,@=]L1#KtR(q5C!Z4aJ6XI+r$I1poQSlV1MYonZS
%MMa&M&dnrH$XL2iQ[tLW^<rJWG/;V0fK"NDYqiD'AmGBd%c-e`A8MP#YSop"C>BGf%A_8a6/!2`KOZp+=Bo)\Wn?3;L07Y&'U]:1
%=+6!bm&]smM8iZ.ZXpAd]391e[7\#_'(pbnK@!E7-'-jLaK@J'MAdmRK)[7Gj#Ut#&OQdF(D5REh>*tU=.PX=-`"'P!_b2B/k&o8
%A@:&FBe4]9g6:Z8o$kt(PiRdde2hTld=nDdg938_haO5%W=nk%FB6T&E1;Qnct],/%;CBD!s](J+,2$)DDmV5%PunYD6rohTaFoN
%J28&A.JJ698hj\O7bYpTd.'Md;ico1I@29\N&)_%iBF.#[5,U)=4PK]`)lQZO`\$3D+9tMdH-fhWL]9P4:<\($rS0aXBeutmagg]
%@UK.pjpPJW0S1p><\,b2G*kSO<QRXK19Gr78^_0Tbq1[m4O<&gF1Ho-RCBhLRqPPG73IV"QO+D8]lJ7q!`tsE-<8lug4G`XGdnEr
%Z'&OR%[gT/d\rAV3FMt8?A(XT.L2H&i7akN>NMc@UXWS-L8c\`3Q>Pa$%PWXM3K+"I7Ke2gI?3&OLI=M>JpoPefoldGpB=LV)h*S
%hbHFq&mnSc%BJHQbZ%]R#2eWpN0dpWK<<K\Yu95^1i/kj["^no^>OCkimu--d.3;"^QRS)e[%eHr9J-14m3uI\LmfL'#iF(s)ro#
%Tdc%ucC7@hP%;Rh.q-Iu%Xg2/j<dOb=-@1[Tp79?9O1S^Ksi,`MjTd%4%t$Ki%&1J]?jED4\h*od;f=oBL6B$^&Vpq2t;[V"WlnA
%7a!)hEK1@pfIW@F%Tj1(d@E=l$Vd+9;]$:=LqQT%.X``60.&LfK@>\%N--F=;ej5:&QUU:.ioSb.7W=Wo^5H)=8W@G3=q,iWj/<Q
%Pn,6!'gDP,r16.9,4@U<$cFV7dRa.hH]JG`7tKb?IEJF:3PTi#fKJ7A;,qAONod5.@O#jKK[.<[Gdh]MdN0[.MTk\81bOBLE0_G]
%\n0G6dA(q/"*#>nSrS2S6DL1!=Z^mjWBR$I/7g'c!Cr[@PPX1-eBc]GkZ?D>2WBDW[Uoop$H!g.Qm5S(`8-5`!u2Wu'&hLQ/#;i(
%XO:j&T?)CIMdW!7!JMY>qDSX3]60oX3E#1`*f%tLY+P8YAA[Af,"O(E"=\nDqTBD!:G+UjnQ?Qu.B8))SNj/TP"jQ;Zh%@,RBorT
%+33K&W'C\7b9:HJDNXHhmaUf9@ilI9:)BB)k7^0/.2tQU+.nn,3*)`X1i]3P?Y*ZmHp?_@cPUPuXMj`9M#ZL+5VhCe8I6H;,Ta]9
%B4JhB&=N:-3!CI:gQDi'c(>UeT4UAV;&jU!4=o,EQM3W5(^2N=hVB[%A9SShFdL2kXBFhn&4)JaD\P0"6I)AB,`2;>njX/>\d,6N
%B8'FhV"6;ILnQF'Q%+#Gn:ZJ'G^m#J^^lWRA9&n1)GANqg@M]fL@ncn2dO-qOS1ZSD&m\NUoT6@H^.0,8t<49CE-JKeufT)&D0Th
%7/6.BJ8i9TF'd&$?_LiP<q?n2N?dVJ[HD<W$nE[!hep-7q/[S1'/##nBB2j08HCL6O6gk(<D0DPXPu?eU!Ok%Q&JgbO_'T;cKn,u
%[S&ueU?<FNWCT]I.X+oIp0$_(LFkEq2739mSSO!F,E?lB1b@pC./2@Y>D$k<bYGY*]Q7Lsq61Oj0Va"pd1gK$fH8#T6[nZCc$*qn
%8daLHP/96$(Q"9$Ti_B,O%.l``.a-@9e!WPN2dK&T^JsUC^T'eq5H@]VVF0D<MDTlhA@&\b_tkB>X$iF(9^/j\@`%'QoSs<Jr?2k
%XVHR2K>U-J&cD'*BO"6Aqo,`tgTZOXa!Ah7ilJ[1fSOc.g9)^<9Qh:e8SOBGs%r.QU<j.oF(5DR^8*9%#1j16?!\AVckmK;H,Xr"
%6mV3kHs$11daXT7i#B"4E=4CBcF6gkFpnisE@eUE`7o[]CuKibf'=\&/]]+7XiST.[jK9XMt5*HOnuoi2A8u1jAsjIBB\-+Uq/Oc
%E/g9HfZGLZTeeE`2"A[Y17)_+kgtplB77D6<:bK>)\]$bUq?ohR,(]N"W'8`>:p=G#)A*r()l'[:G)P^[pC)nfkdEWXf/ggLXp-a
%4e^s$`mJIH+P?n97i);kPJr6K8YZamAN;\]LSQ1c<3^KO02t%hCu4C,O<8Pp?M(b>@5Vat@MTa1i#4CYV-e28F)fCVY[_X^&@"UT
%M5n'0Ghas$]it6b_D0b9A)-UaRu&Q>nks-s,cY^QDi`[@%#u*i31i$m37baiYnL#de#;%>E>_Wj0?*KjMiDT`DM5)3OU7^V.]$Qn
%)5H<(9>1VfR,(C2k9u&0g",_&-c"\M,Rp^i-M3HjIOW1Yc$#+:J3YO'Zm/4)7-\^5o6/p'\4['BX.3_9V$rPJ&TqMK;eXDM9B_P(
%jIK5^r_%'QfY#V8_*L(s2n6^7I5$d&QJIp2<1-sCDf#6:'"?dckBq'!@E7>G+lm-hBH<"P5F5E/\PPktF@p#;:L\F9^lH+:X=6/n
%/s.mL*lhfbCg*2SmEl&'ZrY@#:*Ef.:G*iH%Cf6g3P7p%rNfQlEG&`'%a"t03mGLW3L2`?<qJAVSh/)M\.5fQ_)SfA2d\[J7T$NV
%LFqr6&f8MVme%=n)-:s4j"@PDDqlP->mq<EU_"cXr?.#_#j(Ijn!k$X97<"Ek^%u>YH*"mbG>ZbFFdtQ9_"&nOK:.QUF2X%lg2uD
%A`Q9ZON*etCEA';+\jJ!eP!$fJHARns+<eh8I\hRWMX/\(:Sk;V0WF[@qVY7:V_\''Jb(K+Rm.F>W`&E'?>:;A9)g09Yq*e.f>K!
%eAm5\28G788;SKQ00g;k/Cb+i##QWo5[L3'k*9I1[%RX!N8gck4n21*9F)rE=Lt][^1NC'N&W9fNof>2dWg9!iV^&$P&X0n&RAB,
%R&T:oNY<!+,T:)a#Z3JI]d;E7=e')3Pg9fsE\!eJPh:5j.T%f,JiFHLDq#WGV0:[U*%"ACBQmV<W6n&+:a="48L(hLV,:h#(NCQ6
%"p*UP.+HRGS3gk$o!@D&(UOje>o5=[$?sJKda<jRZH>0\;Rq3S\Ee54KD%#jr1YqWFs6AqF($q@kE2SqMYu:u@k)0!&cmq\`-9bF
%aqVhSZufWPP%pul,/qH.j=GbE/KnC+E`UH&a_pp(g#.Kl6en5-Ni%d9%i*HUpaXDNDT,18?W^q:Ba'W9LeO4l)5q$e6'81_SY?EX
%Q]0(MeKZF=]I"+/Lk.<FJC8[\&'EL<MYMrTNa;0,U6Z)M(g3,o^i-[7RF@6,!bWi$r"+_6;,6tR%`=aRH$</^<*]6jPrkn'E>L3@
%U+`D#^lKJe:TNc7BA]un<VTR!k#\P-o(sQ,--35MaR"kfb=5s#gn*Kq15Xd\\YjNP*_LfkAAm'gn^bWq,S\Bl?8uXm,oS=TWAeA?
%5]P^U'G\iL=="UP,8]t>q*5KaJ3A6p>[SOp&c:`noOm9Nmb"@Fi%Pr,R%')r4(_s'OuZN;En$dD+1r%7Y7)o&GS(/N,/H-/kSQ13
%/oVJ`!=+gDJ`rIrSKrdqXE3D/r];]sR@B5LcY:7!r!@g`E2u+I;)Tu$!L.lJSjd),(d&a&KY<7QjKCpk,'H;733ghI3N,-k9WB7K
%rl!Q=3A&s=PjTkM2iV+jlkC1'8Gf,6-49:-"%MJ;f:'&o.o4$EP"8S16:4'/aR9cD\g`"7HG[-)B'/sC[`UI%W'<urV%Z$\#V]s[
%Z+/RcEdVHl,tg54`#M]'eu:<W7=Fn:rN(T"@=SEn^BT<gA*bY,r$*IO=aA+]CPL!.P8.(dbcXdKi<FQEBk]sDC`lLS8Lg[C5aI8Q
%MWNkrXV%b"ACuafXAPPi)//"n^]8Tk9->EfS<S]?dD>t4h@SQ1Edsl.Jj#V709;4Ua"J'PNL)R&dO*6Zs);^BSo8XKY1UfdhU(ge
%<llkS#ks$"FIe\?<L!h"Y&47!7t"pKM/8WeBkPd9o%1BD[fe1uDq1Kp.LCD@5DpVmnrf)/#K)lNmXJLmTg!1m+d)MHW7"fAa1;u/
%FJHh%MNDje*gn9`bATG#Em`j%<oq\N6^WFK+08*IUHujq,'?#_!Y6.JR)#<)r19]3aA8m,Oe`;n7]ZdN6+k01'8s-9NamuC80Q"<
%-[a*5Xoaq3_?B;sodjlJJd``L8^`g,f3XE8pUqsHe'o`HN3O1"cKWYo-^!.IrHBZH]3L;*;Dhc49"]4A"gKkKU+l9o4.2P!5u^Om
%r!H\3kLi]Zn^/5:4@?oR'Vg%VFFJ\YNJ12C;JM;P^aV,n`8+T=HQNDo2%DaaOS^C=M'"2TZR:oK-C%,>>>`^@Umrm%aCG7;acEtX
%p#JUjg"i#ir6n3#Rb2cF\n1F8d`1#"X:D<o$5&$V>Y`*'87!)UB9&#u:(fH2nKuOLhO?ED&:[#JMDW.BTt!%oqD:G0L%1lpimeq'
%o-(.VaJ7t4:+=[oIP*p]+a+b70,/;I`P74>BsL/%@.:a(;@Fq/>=URj*?cIBL@<dH7.F*c8IYj^&VlBGk&hlS3j"))]3pS#jqUA(
%q<8U.Ij65/oHemAJWH*E4SHmRB3DKENEQq/>&(]UN1TZiVt6,I&CFrZ8GPnl8KsgUJj)MW1blPoB'$uhhD6&0?g/oW#@4\,0[K2]
%[.o&Y&5X5,Di%0/:(t"4.XRDCE7Te(cZk3].9aU>_Lh6F9mW"L,#6q\1?-We;g"fkN4gejjGmN5:_iUHZ*1P-f6l4>i//A]A0^*s
%FDcA=%+E!VC.L_\dnl`k[7DN,/!<AG;4*+;jTlbJh!=rG/VpL@[%jJ0*;Ha'6<@rm0<upr`LkM8!i*[\^f<)e%qj7I;j`qLJuA,)
%:=aZ1JN.tdPgj4DL$W7m7R91G3%L-G"I%J_l]N8Uir)NXZeOte#_m^FP&8-llGV!^^>_PR19i#Lmr"p8,qd-0Ur(*h(<p[%90p]3
%R$!2c$&j<'\&_Pqi>$UUUqHXaj3fpj.F:sa7#DCXN/$tqBD$=*';p-*Jb^#tdff\K_RUrF0cNXd`K=dh/DjT$EFM>^%g"pCJshuH
%XB!=VR<JRl]%8j!A<,#-GE?Fu4lg`7Sq5%B1"KF53.+]f<tV%bibLMTS34's_W78Y_Mq###80XZO$_?\1&46[BiS439<humL^Fl`
%VSm5-FT>KqE>^ZNI]7,=ZXV<&6b-afpDhb\T4QJYY*+ArG)9C*f;neLBb"5'l$UoI6tYaEF4@f_Ch%,J-Zl4"H"CD$7%CkBi\IkJ
%l7H-dRaa1"L<(oIB`_98G8omVK"h_^&';m=,IE&3YW<C$&B5?.MYoY8m".erUu,f[7IhcnjKhEC:^Osar*pc;D)0uJBsOW?jQp3i
%$5Hp1)8,I,D-gg1&KV&?$@J<LNB?)l>j`0\AHp,_&'cme_h-QX9Z1b+3;!#5ME:[^q>;f<;Mr9]$S1r?BD>Ea<Qh1os4BKf'o,PU
%D)H6u`.[P>0@;Cl/"OA3>qc,I`RaNq<3[P?OaHHWa"'"BWABa\[jU0u.1M.7IN''N1q;GLkHf&gKmn_MAg:('q%V*c97VdjgTT]B
%,#T1Ik^A9FG7r-)pr\DP'AMZle`D2Xg2_-r=4bmB8-N`RP;#R-=F-PI:[sFT7S4h/+.i9gOYU8893f_456()AI-%sf:V<k@io*5R
%NEJOE=$=Ki7%!"JE=Ok?)"mVu$GTB_bq8NSceb73Di_VV$hF%05O4.Xr#6Wu_%J`Ee`>+K]<XUr'^%N6,%ndr5nZ4%`R[uEkST$D
%!l*AJR4rI6kgtpP[eY*\L%EEO]H32/=G(P9bVlrg6Kc4Oo3o\u+;Ai#D7k>1q-p*bF>;D4$sJ=ZqU:GH,/9$EJ@P6l19ScjNsh4c
%@kUKdK&dXZL?7/KI60.d^Eb>g'i5*ed+p2V-B#B+>uG1^"jH@?dM0RN`<ZZaObn9_C19KD$UX6@^du`uC*`*k92Ut^,F^p^COU++
%pPO@ZAt&QY4]0)*Kr"HsOZ]*Nhf\l+BPdP#":03MiAdKtpZZW*:oNasMS>M"j(r?s9*>Kk'dU'A-HDLqonLT;G\-7fK$lJ+\VKBT
%AY$%MkoT\ZfgHHOL([oKER"/4p9OKEjqj\M+<M=L'GB0q?c:iAZ]Tdf^[_^#G.TbJ*DT?Tr3N^U,0sVX82_g#V;fEX_9mY,k+(=k
%(bfW^NO[(r+(@(Dd#4\@"H5R/OX&7kaLHcUj-Jo(lcGA!)9>a7+FiPgq*sBb4'JX+9Bp_l4Ut5(QMV_g*$R<s\4%+;ZDLLB-1OQ5
%37:4SpcMogrq[8lEcoZ[_i.8t(Qo(KCK=Sa*[GM+6PeMu#$GHq$t+u$DYA(\Cj<'<i7sm&-HDps?i>)8rPR7goji7D+S4ZQF8(1[
%1FLLY9K[[tbF^kEN%t/+jY))n"*fM5EBsNokHNkQ\F\o8HXFjFb%Y5]<&j=g5%S\A/VRgL7q8l(k+GoX/C;uc(Drl]GMjr$)Ut#-
%bkLR(,GE,4Q5&k%b]D':p*IgJ[R!ZC0j!]6H^,id12HFCB8]JT5DV:>M/4l+%a"hmr(WR$UP>l2UuFj\>XGj>`tu^B=5l#_+u?Q6
%h$)D\TtHXFegJ-td0q&8cJ<$=:Q2#FfJSkiE>lF((T#p+S+c@d-qYr_H*Rgl9^n$as6,"U0pasH&#_"QMi::-`K,p:e[R[L_V>SB
%b(KLdqd;")Wb/)h&[JV%6)6-\(c$?U=`Q@;NcE&fCQO'@BJT'G)Z\_cWmZp"7JXcArc`/=UEctO6n1*KG!TU_M68DHS3h^:ie)(m
%EDG&tJu@^<nVg'h+'V=lcPO"qZUb,Bd3L0G9NH!<(EmeZ[B`3W9;dTpOOT.WnmDe!'8_mg6U)N#\S@,=YR]JPM&[YQE"aO=m'M29
%]>`%slO'2&($lQ^U#MbmH@\<gj2(e=W3]SdU4#<:,e+5@pQ2p:X[^M,Mg/S,,7V07ZW)1r.$]8jRpEXA.A"K*6@94c`8mN=fLU[R
%gP*n0q4Tss8eT0u-\e<,>G'!daecl%O5ih1%/eeKV$[JV+B1D8paREdXgG0L8t(#>UBG+d[&b]/C*:U)q<L\.DP&`jB,B#F(8^ng
%EZ3qt,LLB?guiI@P5oW'fYn'No_52BEM9\&ogQ5t^4.iNoF>2gACb.M)#$ikN)W\I"[s]">*$#J^WMqKXu<of-k@>r5+cn1.A2MC
%F@G-r9/#aSF2f#*m(OdH07hk/<2@N*AMR0Fm!,69Fq@(@D4g\ofGIu*37C!p(K["UHVT>YB1Msk73l$N!QZhX5;haTG)n9iKG.s:
%O*0#KS'CN$JX*de4CZW6%X4C7VD&*RI:a'9X\%UGfH:MphEM_h#bt',&fqda*3,q>M7IfmKZ==[e6`d5B^u"^/Kl&7!?TgFUKsQQ
%Rt1<ZBkVtZTigD./VTbFR`?j/SR7Ym#P?!;`engKW%lXa1r_Qs"(fUiqpI4GVg.tUN1Er49K1#`T\*(=Nu[seSO>u9),u30Mfc-:
%q&tdQO-?@ZEjP!:SaV4XRO\k@"H)q&Z*,AR_GW95mi&+!UIlEhdbL?a4pf8q=l.QeVXH"!"t_A\J\0k"0T.0*aFR)+"?8e$48_W%
%0Ms_T[2H[r?U'^;R*&]G!f4cI?$b_;5iXEE0H)ZU4hHVlPr[5:coEM;fKUSA@,-]-IEEBh;p'uH-,q<q7XB#A]4L3pe$5e`l*BPj
%I[<!AUjn=cm-30tKL%d+\%!KncuJ/*MsCVdC`nTNU3@!%!Cn<J3V?tgg4E(0WATI,5?q3Vk!Xs_;;OoMLG08_o-hb6lFISbJKbFc
%J\f5O@1$0m)]cGG8QiSj=KALp1$R0*Q#7^s'=C8o`3B3uX=LX&MAt*u5K$+_<313AEi(`/j=3i"C%[OIqkq-@b4)W\go_XipI;G"
%Sptm&&[S!WrGdBLg^gA[43b)E#l]A*,h5@H(\[U(b%1<8V9*>kJD"%HM9>?MapFo<,SG;:,Z7uBc3S.tU,%N2Mm`R72K<G1pUcns
%7c>\">))ru(+gH%720-hFET75;B(SP;AT^pj/i=`bS<WTF#2Q4P/dg5/If`mS&5aI[Q3RsV4>La>1%_pR7?M0:R_Z132B'(OPB$@
%+W,^0c:>hnhIMlgTcOAX1!ZQ*.NWC1B>4[L<(>r"[f35blu64hVDOO!BoEs&@")9.:RmI(M"1<O$F3j9rE$6QO6V1<'0@0_/oS)C
%PjNukQ+LI]N\8/EIP,8'DK1kIZC3U5)k/fg,N9;T>#G+&,#O)(_uPcrRDZ@9:'*TK,8eJ#HVOLQ'<QZ.7(<4)7jI]P^G2>(G5*2u
%&"9g@C%=jZ3EuFDBY0DnB-&(V*$%Wg;pQ%:e-.*1e-g?IKC\3:A4%.Ph)ZNjUKs,[$%1o;k)X(e:LTEK`!f307.tJibo9$_'W?sE
%T%LPEat/\)ZO%X^<5U>p_<HTTbV5u+=4:kEL8nu6^!%>!q@[kEW%.W!MF,[^9Gmk#JKAGeJ!kE%5Gu_1(fgq!`$bQ\I*&2PS5jn.
%0@P-^&UKJe(d0t!/CLj6J%!(DG8Vk#$o17=pZD%6;b/shF5sUJY6qUcKWYE;F[(Mgi=JdS$2j]M<b@nSD8LtUT*Yi7$i5HgE<*Ct
%/nkB4;HFV^nVBGMP8"1X,Ub,KP_(N_bG44b&10#C8:ONhr8ec^_=MU(EJEt%\S$iU`at`a)-B%#Yo+0'.F>I_g2=2AF3*U1(eFp1
%5&?FA*O\O[<S:C1j0*-VX@kHnYn?;XI8rQ&:4%c(?i.B/%Rg,j:(ud&lbRhY@Bk,5'%.sH=s7Jc0+5o@B84k>[J@g705GHccM\_9
%9gY>.WlO!YqoXuENkZcg]nB&?,:aX=Ej,`-bIubS`g9>b(90@:In-SbPd(uo`<B&D1`82O/eXpOUUo?j.%(6$ioU!9(To4AJW(LX
%4"S;2>iY-30i$RMb*eUBbNJ!);2lK$+VO:?B7(C4`,h!m?8G;4C4&aH#Zl%]e8I6:>P4g[r`31J;ct7l&@?;(^<UK_qkkh?hU\@K
%4/!h[k?U0MZGjTVo,gbgq/;,fD6&"Us$#9;6Mhm:Q_VGK.tc=0@HDL8f0!^W.Sg:rmD4eRr`G;teskK5LZmssYg[VuG6hji'jWg`
%WE,VihP?da]+VecN8b(Sl3A!6ar"pMk/k.UK`&Z-3+C'ZAW-q&`+OKQhUh-`RIO&Y6(dl7bR[?VY;CU>p;$E2P]5sP:$>k%%/U!E
%/ThP`*n$9QGGp0#jWj^1k]+V^JHa"eoC#opSGk_YjM1V^].fhjl5s7sNb:,^`d_fYjFNq-rNs,QdERI=+2@KcIt#Q$!dUHRb\\iL
%CWksL0lmhFbcH'?Gr!<)J[tVKPK0FPO6Jmd%J,K)O\(4djU%p065M+XmuT_;?sN[q/28W5X"%%-ro-X3iA>O!'=cDW];e9HCotSI
%VL4M"ClK5J64C$DF'i[>IMU:.q3uk!2>lW%(*</Fs6B,mcoVSSV$g(4\Idj12:>0IDeFJ6lL$-@Xj\RMo4Ra6AuA^m0%)9dmt0kX
%@9/i7:93lDS.u]&V;<:*HBH(=arelFFM"FjRFNBYg]&VjZ64[j/oAA=\WJT^Fuh!V=o-XGC@2[;AIdGcWG"q_(&k'sg'^X**1ZLP
%'6_$:dVO@1c5ghq%/O>cdm):Y9D@\dFZt!c$e!EC:ZX[NHJVJ*BXILaM\Xt9>[a]_i#(9O^#.R+m@9]SV<K(3\*(PHlMe+/itoW,
%lL4,se%InN3eQs3TTY:V2GC":EM_D:"T9"'>i63C?oNdFj?lVs#(<iSmrn"2Mig6p&//0b@*nhHnt852r28F6+Zap6(IO%)J)_n1
%O2!.5D[QCu'I^h1B@,uSn[S?!"\mtQ=bTNRS.kq)dnW<f-ng4-A4*h5ITgNqBEdt)+;jo!RI.,"mptEb+-cbnbrTP,G=c:hm9?-s
%6Sru`;knapBKJ.=jSTJ-Uf6qJIZfgB$EG,:iQ]:YSs*]%\ufRo46lj+c(#24#&<l*qF@+Va;N%0f_n+e4a$)WSK?>Ya.;qF+M?(G
%:9QfTSH#3hcPo^5/*gKhG%'S3c'/1iahK)scLH"H.5qJ0j3%((F0GVIC9qtDR4/pWR$B0@cWkY*VZY91R'.L"r,Fh*;GZoI!fI"6
%rVbLS!3/lr*jiM=QWE-_62fhUl\7cP?I3T!\+bBCQTZYJE6tbh["!"<s"@KOk%@nq(CI+=qtn;)$!\C(j'XA7nSAgjNURtN3to]%
%hMG'FSC,^_nAHh7:5A%VNkU.%rZ^b\4JcdhH9U?Z1s0j\2I*5Nf]'RSVt*@2RQo,:Amj7US"5MX6s_9'RBhgeFc;5'qS/1Q^)PnS
%9)0a#fJH[)=*WjBi(b6qIa1R)p*U/:=QA-"J,]%0j`,A:o`kZA>+9a\5WgPu<100Ir#FD[;ip$XM=?EHI3meV'HGd`?KU`I;#UF*
%hc&m(^[::#A_dM?Jer0,rj^0%(u7DiOdAP)=`AX_*B-'4Z[c$*-6`W(WY:</2G"TL6OrV?f09YJTf:"d-:7HqK<HTi5\i=jl[0b)
%bJ)_>J++PbfaEeS[g+*tCt7_F0=VrJRf$nIPQ,S#gE,^EDGV:Z%V_1=3X:FGqX6*(iV[V5Y3GI(@s!,ga0TK-r.?2mJ%'es1RbB;
%%NM>sX?YP>nskg":8JdQ<&nl8$cQ3S,i<^eRj?!A5bUFL,&<;a/&3Z,0u9+^@uZ0;.Pds7pptVaNr`_l)2qCC3a_SlO0#VR7f/Qd
%Ab`Vkrhnprg,n9c:;;1E_B,R\HT6&d_V`"B%Q\mdSW)G_3cp1:7(:@u=*`Ag7V?u$D>k]nQ58LF*a@pNElrJ#YHpHcn[TaTr:PQ]
%o8,j8s,4Q*5lI]OJ`ZrHr/cSm2iBdQLc%[C-67.>)nZ>MU7[&;1V5OEk?F_QWi@_r+T7eEIg:HVC=`E[H+<jCLOYr.)-OKK&g%$:
%d,=gF5Ehulj@l%FoHHtILrQ6TX[l(.":>lMYbD-T:[tl"0]&W*4k]kY,J_5b=#UI[p4?S/s#7%5GLYJ3m@J\RR^(V<UZ660`h)EC
%HN)7De,Gpfs!I/9GsBCdnZnA,%QL&-[C94n-9j^GIB2%<T:E9")dBq\YC#\C0hLP`)[q;LrrM3'J,&1k[T\lf2#$:>F40c3rf/8G
%FOXjlkMma<$1b[hcPsCGoC\BkoCcKK6"#s35.3(DP[r:+Faqm.,&5)H6/&c,dVRE2fC_GAh91*_'r.c4``CfHBq"EHqk3pY1[gq]
%Tg^l2.^I&sJ+u=7^SH^*rO(a7DtG3(+pbO:'`(%3*Y@ElZVOCb8u7\C+cQNL<6&07@+mU"+-:u<rH?=rZW(te/Yaqt1p!c3KkY+0
%.5En+"8\J0Ni+Add_7QPp+OqEM#W.uY[BnCH4[=]_S*K%)<mpJQZPP=LUM/dEQWtfE(!:ASjbb&'f6Jk5N"lRZIn`0e@*(ZH>RXm
%^/q[HNAq1pkOV@\A$LEL`,Z$Q8U(%o,Z]aIEAV9(*)e@_%2pNiK#*XQKn5@@i<.%@/`CQ(5O)(!EL;`"YY6Za[Udg69Tm_q>8<QV
%8`U(K1fjrV6i8%$(BZQ79EU4s__KB]5"TF'!k^3u2[YP^BS2P"$q96f@qY2MLl)]IQ!]FoRQr$G-:[(@i:)@Q&X55:+D:&7kR:LQ
%78\RUVc]b>LI=]aak9<s`IUhGP[Yo?\QUp)*]ir@!_kVLiH%:cKr$cOWQKr%gW:p'0TULm+mhCWA]ES09rfLfiPslr75tdH*sZY=
%M'i]V,T$^cA&]R,")Htn,K]ij@i]Yj)D;*g9MRAud@ub7&6d,2S;$O3RVgOL[:H'eb''a`@B9TsEf^Pc89f!mj_`erIN?Vk109#I
%?^q9c.hh*)/rc9"$(Y?27UuN##al,(=Q!<tK=c[Y_.'K?l^ZanfRsY\UMXNs``A'C&-6q]&"Y4%7tk&?P2sDS<>YuT0G,r^#UPTd
%*o.&%HN6nCLDQKopuD9srVA&S*UuTD^HCZPFFkFa6\2('o:QFPA;GQ##\?h.'20$H/1Lo4prgcgR@u$!D5gpJ7\5"]FO!]sH,=>Z
%9`uSD3ZtLW5M@MCL0$\a+<Y&G!a?d/=/`<-jAhc^)WqS#j;**>XeM?@Lf\"QhAn'EN#O6;'Q\;Qm"2<G=6]M>+N#"[2-OA(f$a\I
%5uhOuAsBSc2@,IJ1QmEO4li9#<G(SdHW[.2;1uu[>_!;1LchBl1.7KbQ`)dA/4)Ze(9MUSWKAt<7*`cDEL(;a@R'QG@j,F9TpA?_
%PjpbBas]N7fQkDg8]-:7fX)ek(<cBo0aP6DCPdR5q,&!M:F)nA"igda)TkniZrdb[i!Ti(hb0BrB>VqeJ?U<cL`\n7iK08?\?X\0
%1`e-M_j_JV9>kctFhm$K4OBX[(@LS09sA$&C24/!jkTc9%&[CO\5nhNe:^dieo.fcSl$:7$f%?s@4W'hc=]LUOBiraU_;Y]+iusg
%WAI0K4sUAj8/Mp35Qg--`IcSS9<:PE,?l/qFeEP$`^um)V6"r,i.8Gs$GFZ,Ei11m=Dek@AXIL0k5aUJ",7#22WDq1+]5GcYlI\F
%+ds<04eOF.!!QAVN\'8;Bm9Y7;2&\"&Q5m?`fZ*[8$PVUSV&p+-j7UON2&?Jjr'@:ZU1Ln@_/s8rsVfm=0+O3"i@P#^^T7b)7:hL
%B7$d=pY(n'IV!X4!Ptk*T4<1BqBR/'`1QRq9m56310]KuQ^rb8Ro:5q1]F1g8o&n+b\YcX_apse=16ZDIBE!cRdR^R(&Q.(m$6l]
%(AW%gDe"ZsbCA@``qiLl*rG"'$muXsi0X[&VMu.g[?`g,fg_rMRO2N3M0r8N68\[okJTUq%BM'n!]H$k(!2/a-(8DN2IuY<K'!%*
%8f^k<"5[O.G&C"kZTp69;P&agNL?!XJpDX8?e+?NDVUV9%6AlA@$SZK=g]s)R#Q5*PXoD/0&Sj+,/<6S-)llR_8UG$6h3HNp'ipC
%Rc4iDCn1FtM];W2O0+g;Z:RIak1$GKa@&\>RgAm9Z!g&cP3NW@$"Q]g9E^C_8&Z@6I`tGB.OMB>67fs/Yn?keNW.i@NC?=BAeF5(
%Kg^j\'e8EZ1&kWJB+?<BIm((?&ShASfCX!!!%!b9F,B8UOR\AGD%u^S"I!CcUH`;#5eqOS:g4_f2,^$aMUY+K[Jp7p3::/Qhot_&
%74#fJe%[n,Ib4OgA"I,+FmFXbB;E6sG;huOUVb49fF*-[K4\d@$5AE^\=c.4*jj49UR>NB<bB'i091W@LeD/r.7BLN7f`$o;@M>'
%&b[IIWMmeX8i1$mSASJCh&Ag5*K..&b/W!]E["3uAsLSUQ)$Ed.6l\?9(!)14C6p3RpiWZ4=RfEo>nhs#;Q5uJ*cpUWR%oK"jr;+
%ojf@5QuSjjPnZUaIl.%TrXhQZgk0eE=L*hn^UAF<^;;+jp@#A3(8Xn2Qb&`2$'pj%'"5*q]VX$U=0L,Xg"nCVG]@!bFbS=qIl.IX
%V8fqB^pcHIjN6E/j5blHr+L^8ZkTjiO!J'QWSB:u$Hk_H$A9F;2#=?'UNZ+%d6-BnFUPol6=K#+\n\TJqKqTcrk)@$qtEss7ig`]
%-RXPlmcd</1MfA(k:[h;Jn?J(CE7T0H\8c13T]_irL`W+8Y/UmmTOQ(l1a=J\6-7./b].VM:6O:nV?'@*H=+!PFtp'ceJJh5h52p
%g9X&DgM_LWn'(t^ht?[rZ,,6kDiY[8B%\Hgb]`mE$1DJ\N>B-5,Z=PcTW%*?R10iN,SQ])11iQ2s#M?O5?#)`qs8,"I=D]Za$*_*
%_it)I0>RR9.Z3(#2K>]')+o!14/VulF@-H4e^j?,Mj0"os7uogqgSSn+!RoSs-g9Tq!K<t&Sbr#qeSe%M_OOD10(0ri-G4rA#=\Q
%nVc`ae[R9Zn[[EN=(dQrEmNX3lhO1i:PVNlRMelfYjJ$iSA.;Gop=<=p6+acSaH-mH9Qq;rcHL1_fhn?Ndp]E-l'rX\,3(U<dP!9
%TYH4^6,N&V=N=;9Uq'"\ecdTOrR6\8]]XYh1Z;T4[s\2CEI4m1H;o1H*qm4D/eflVW4&C!-$.4jp2kW);;!=6\EC:)D7h&@R"!2P
%E0sGnmQ[d3HbVLpgHH8h(I]$=Z-mKupHSa4$X9pVKR$;X[*fqam.Qp$]h5?_m11\HZCCTJ$N8bsYjc;'c#2_*O34=Ff\ru&7liYW
%=Bup?ga*@ae%SrB;,o`'.pmX6s7];b.L1V*l1+D[*<LZ\UeM51Z^'s0RD7Lp)BQACLR%&IiCSCCq%(LM((P27OeG#&k<!PoY-n8%
%<HRpa_u'Y_"\-5B0ISO5l06;ED<m^GS3-]Na8aBim:'^.Jg$oIi:hD+Vu?(Jb3E<rUq,6rdJMc\JrF41B!Z]#g,s%M[ee%.c7#e7
%2ie9kLRk3hDR%p-3chQt:JWB%.\e&)l3m]0p9aP'\Mo7<_rLa<BH&,&QNXQXlFl4QFbCTF-%h`KCE&Pmkt+*$Z,oDDdm#J5@/5lM
%ShC#q,[#o)p0`.#k3&_BQgfk/Y5\;Dk:omrKChfbMl.Lnp+o`jm*E6BH[B]?BC_j-&B-;+h9I_kH0r'?:"XhYVr9k.;l3/*=b4nI
%X_k/1G.Se[?ICU.5Q18F8Vk0oSR/o`j9INZ$"Q6!pBffY5K4]393hdM=S';:Oe8qbg[$hFXnGo=251h%\%<0>-a]5bI]M-*G91d[
%aZ;i@S!MGCCc"b4MgsW8!KF'+U<!Zl1F4%2Ip_[<B`l]9a/@a%:.'s7Eur1^ZE:ACpX0qTQ!Q\qKM&-ieU3.^?("]qkmA$B<*<6]
%7IFCc7b&MK4YL5CnJJg?&DP&p3PUj-q3C`dFC4bQ&":0pa66#RC5EDC=%E^V"S_g/1Vg9!b1q#[CO=bf`]HD-(qX(jn)A5]hmDdr
%U1.MhWFo'0RIpMsR)rts!:;mBbUtV#YM-Sr00=OJrkd\ZadmTp@gfj@^-EYU3FupK14h4pM]IR#h<LR?cFD^(*,+oQkjJ9^oXlW$
%O7uK7]%`^&'ut[aN[fM/]OqH@@`RNh6+(c%d^IlK:$,,4:\nBIS((D)4h^T_?ns'kWi"tO(]/"%8m:HVY<G1:4h'>-BYQ:+Id-;6
%=GNH"??:_D2VOA@Fk9c';odsjrV]L#4\NiXE49n/e3#pmYB1\Ad`/*NXmVk9lM$A_"Bs!Uje?P1\9B7QmHi,N]kW#s)K24V!p[<l
%N%I\-_W#3;2\m('d3bA2-DjddS&a's=ZcUHAUVT(7pi<6Y"LXCS@G?@;rKj:oVJ<D_'<PV3Ss[/_Kti#Op3iuqMrj+lnM@.VmkPJ
%YMZ#B<p@92X<I$j#K*OjO.Ns[.>XS@k7siM3PUrTF-0bPd(R@Lm$[g5RY.f]Od48>4(%dlSVo"jTmLM8PLt;/USl!fBmZr29r$eJ
%hFVjnHT]sLpSLjdnZWA^N#9\+*#'8kM1%\oc<cMm#sQr5hoF9`(h[:u@8b^0R@"h6F?HXtSkjr=hGLZZ.:Wk]#/_%Y=-Lpfqg%:Q
%31MaLl_s)CU"7U5;jh:TZS*14c\=PR0B"q?OG#YTSR<e4>i[ZhV/aW/4%H:cnYj.DmN7_6JF(4j)(HB8/>t:%jEI$JSL(u(ATfa;
%:\8+gb#G5Hd90f,6l?7^ls.@^31*#.:a[oA$7-BU]5\^>Cp\7F:6T8;laY^G@iCqZVcI^q'r9@DUsmRO?=ulj@J2=!8gib/kK9G`
%`b?g&>I[l4F=)/LT'g3;$R^#%DSc-.OeRT+AAQ?Sc4kWm"&?.A*fhT^Y]ij?Xo^+kB'Z%I#%5B)c+WhD=E&=j[h33m:XZe0?'a:_
%BCXJhB:;Fb4o34$C$Guu(f#\`pXhQubq:%4n/Rl4%Y!,I9k=giX4cfMT"QT/c=P)8i!XcjpS,6)Kfr&:IIi-ekPMgW=&6<^hl-IU
%cSA*9+c9mL,YNeO_7],F*kK>7o*X)Bc1e<(4[XLCf%fLnXOQP0p"f%=<W%AQ'[n%RlmA.e`!FZR[PKQ8ZS&"oc/>ps@Yf0=;pg+W
%U:)R=USf49q@12_NldgV:"'BpDa6F!0PpKo=R9j>oFC<\jdtpD>jtl(JOcN(\a.C/oru3C6)M\*-rkFb9g#S#'UOiL]o3d)U5Fpf
%k@oM[eNZ50:KZ:?85#pEPs6#^;%"lpJ*+0+qSl!6)KbCoSE/[EFT:U5GIR"S>.VH#I!tm#GjXbnb48s=kjZk`n']+]9=O)ef/q7B
%n;;Ya@+AStZi";2hW*i!S^$o\+"n.">OgFII[jYC;04f(L5djGKA45-ji*;2S'-"o*tO]nO7WKJZb3enC#F>$4BX[hn8*1ADUdOG
%GF%[))V+-GK<_sFpYO8MEF\D$SbVUK8`S!LQ0@W5mFkEeF'.2L4up8ucX&e@CID61XaKA>8!W,SIdh<#ib2EQF?b6Mm+qQm:;-Mp
%lrf8FmX/-NqfV;Dnss4^kZ6a;e^Lq:ot>dBL>fQ6q:!gA`r:`pnOe#9qteV;b2Gqj0Rg&p&G^^Ud8HIkQLE\Fr^mBh71\]+%mK^O
%Veb0.)g`Nj<p#T!=)-L]Q[?#of?M!-RO7tgGH8.*1=,+JLXE$=]="]u[9G.WDL]C.>eg8IXkl7TH10k4bD2"X<q@hjlJ,S!h`R.&
%<Nsi/#G!B;mrU`Wgfs#L]mkHZE9mI:D0,U.2f.Elo&@R)OJ]:@00_#>HEHL'\!A'g0#U9KQTB-!0\d1SK@Ydgp%=?fL28^g%UTk0
%ip6",<>b)Yl-pN<FNEb;dbOcfp.@:#3g)Y=ft=n$hme%/e`uPO+?N/)j.3l20<Y%6hR`T)n(f"tHhdc)H`qXY[WKjP]Sp?GB4'>)
%4b2hSb1@SUhBD++^!/fj\GWkAd(F^BmF&,G"&*4pLQ=P)GG/`&h;:+7roM_E[Cbk)]<>6W8cSYSe^$">I\Sh-K3nkmmbM*\XW.!F
%QJ=a/QL6BnI<kCG:GZ30NV@P6ph?\Yb/8$%+7^_V\Y\KQeW./a>Ztih@W49[_u#RECVR5k4,ko&)Z'o'^9';_f<;:.h&"E*5%o>T
%=5,`OS^b*NZl[hBF9iSZ`?3rAVN:H-Y.jm_s"o@k+E%Qj5CUjI9=iZi"+P!&qMkI@eNF*cNSD*cle^aB=)pnMRAO-cUi*kNM-`DO
%>941_?UT)Z^UhahPaKb3dL"dCI;>[OIN4&RH0[oGHVhiC@OR[Wn^c.QgfgJR<e?+h%fN^TFC_%kG.56!\9%4FD<Km"kr:Li:9sqH
%J,6>RQdE/CT(];?WJuMpoQf.sS%EikUOHmK^KoY)mbVce#D:bsHY[=M>DYTj"39PMmF+GA3-TTGo,:0n;73\!-#Par+K(ZEIlhsU
%HhqaDnQLA@@1oM/]6e>d]q[O18LL%GqF]?l]ugSh-_!bI=!$^5?5crL9ge5[5AdKO^"T?oT%sRV$%r1<YPR;F*UVIQT5L:&+9/d=
%VRI>9-R1<Jg_fbZl^_J)1@(H[\#""JhKY.NCU&<Ng(Da)o,Bs#a1%?U^4#3X4a9ab/Yp-fh7U:InnIQk[f-#1A"aS7[OMCG?[lI!
%4-07Db:e&tRVStGZe%%YS]A3]@18ZYnY51Ag=iGDQO_j7_<52@V<s[dhS&mMrd$0qG\L7fm[_@C^X_.oG?8N`\*q(q-%\k?1sDqW
%*Tjtpn(te6H!T1X\TYS-NE!-/\pD'!oe&=qUKacP?U+#]k2s(kIP#@P"@;`_TRc@4HJ!I%\G:FJo@kARX6QIiZ+i*!NJBH!Dm*MR
%Ii&?)n!?E>[84[+i,l*PHFH\7^A!Vu4FKRVFMI<Hm,h(1q/>&o2OE,:X7NgpUW1I:CNCB2\ohXoY^.aIra@H+>[Ca6J*O*0#=Q"$
%o0:4hC],=.Q:l(1GV`Ft8@iD?f'D"Ur6lF2P^T.r>Kd#FYMl,:po!)_`2QG:[T],XHPHbEBc?#AjNGla=DIWmaI;BVMOS3(gZcCf
%=kgYb7]U1NCe]FXmAsIZ13=M_0P(-2l18J.=@1b?5"7-i]UT#n=U>?8dO3]r[DHg=V`!jhB0V?;PAo"3LU!GeX.H`Tb<T'^M!QYl
%FX>f3g;kJn1tdG?lt1u^iG[hU[IUDQ?Y,\Jk]&e(CmOd[j3&;%au!bJ945J3Jk0>%gLn@19V1pb!^_t8e:/`.ARgZMB5IdZn!.PI
%nWr"aj:GH55?\(p4^7#_0UZGSo_<5OUCG&a[/p]V\2/ba7\jIkhfI7_AKPK]?he<hJ,'2faJ`ApU-Ll2rFtuSG.%uhrY*[TmN2p7
%71c&,DEM2GS6UJKgHN=I>?QFI8^/@&fsaJP7o0F^4*nDUfY;0RLTB=ti;>MQXa9r%2"Hp8,`=a]@""u<XH,k%p,XXA2kCa@Q(<].
%[u)rFf^B!n_.M.i2PZ.5eC**'d*'WXQ:>[5^fnBFEr>=\d[#L.b:g'FJ_;mR\sjem)Wn.CR3l6f]=Crub6osA&*A2)CQI=gpI]pP
%^:/`-&%7hncH![W*o=JE8k'sAT[:;?PZom`Mm-@;4_V3@Y&9R!>0oNPOhJ'lXgYWWj*bF(%+PXdLlKX41ef31K>hDV^#po?Fe0RS
%TA@*YZMDbG\OlD=W4B!P3_^EcD3I`c[!o=WG44^Ird=Hh6So1LgNPm>?#0A2k0DFdb'SlA]K)nUWX%u3c//:I.(ip=<YZL1gG[T5
%l<aqY_olluMmYK"[;".[i1Xg&2qk-7=hD<B^7+:Be`d:jXO\2BMJ8OS`J=/^`r<='p-NEXh23EuCcp4^]pin<c=Bbcq>s=D@E+5+
%?_+g'CdHi;?MqGo\,WC1$h!GqeMjXY]^%Gk,,cCbo/H(FQ95PiokTUp]tQgDFGk-P'tYob_fVBCYS+5NenU1f7d&+RM(hJ-/^<I#
%OFD%2W\^u,]Q\/Yo;?qL@qG8Vf*P*()0>:bmD`1NOi]TW#2FL&kN>=Sc-;7'eo56NJt'7c]Na2b=s&BP?^hSukJ`opphOh]n#.0:
%lVnC_M+sbKSToGMd@9%7juL)=T`Dq7i;n4-gKre76C>2<d*"'pV*ZT>Y:R=jRQK&:1;L'[b9&L0B1lFaSu\c#bAbs-?4?6TIcb?j
%0C-H'>2O:*L=8(_CJU!m*iqc-.tP;1@[IbrLFP%+G9:VbihQ>9%m/Wm^%XOIGAajALC\i<,_/s7/ahIUN-T15djE:fd8RARPM$sg
%N]L_CgTQt0L[QnP\TMihe#1XPeOM,s+5aYMle^3A:5X77#Tm-^lD7/L+)%+e8YR0k9@'32FPA=GhRW:H3\f9PB8til@;WFFp"M>f
%On?g>?!I39^Nt=1p2#BVrVA=TK*#n*f,UuCrG[IlUtp.OnalK4N#\.rKB%2T;nhRaE5H9EP48WbN6%gS3L$%WfD>BNOE#7dcG[a[
%R5[C5f,o-*LYR4&I9EAUKp>F3n6MS5hELp$546Nn:<'d2^%lWrT1u!II6/WRE,]Oeg\k1-TB5ap>-`L&:fS$4h?Gb%^moo'fWSU:
%!n*p#K42"SDZ+H"YZC3TD!k>XS_g\K!h*ofeq9gnOY/_Oon3"jCHM3egPtLi^%pbO:VM!m&XHq!3+9!RGlAVYo=NQ-rPthDFJ4%;
%+3M,'@H,TrmHq,6jmDtY&mW%%B^h>5jgj]gdO-U!%R2ln4mF]O5CZsq8B7r1)]Pn`c_t\N3W6b<J%L/K\2I,tgY?_hp>YVse_Pr;
%!%Q%W_V<A,-O5R#e_Qd3hob5D(!kUZ[4C!IT.XJt^@l9AFoj&cmc<IO>l@9-R/R;NklViBeZ<lQB=G[MF0.snPJ'&e4IAo?CX6lV
%p/gDF[#[^h]q^``:Y'ErffC:Q9'p2>fY"WakfI.@mjPl?:JEp@RffOieZQS0EkWKXrc\6ZiNW:NZQGrJpa_ooqB[?3]oU@o<n&=5
%VXX0Ar2$D6h-AMA-pV),h:\tpH?<aPFP3nU()HRFQgXRt[81.d.(A%rI)"CHJ'BekD-Ydi\#t0_>95u`r8KlKNnKBO;SD\V($k)R
%c71DTjnSNtK"*=kKu<#=q_(uhbf</[d1(f9=oT&j=K%Vm+#_:,X#p9UZdN+W\>EW_Sh7[f>#:=:6)J^_LVp58&\5$H?X80]WRb:'
%d9O;qY3,;KS=]H"iEgYF3B_aslOl3:*nR"P/:T1Mj_eoCUt9M@XMsWElcXKYII"hT_Q[>#WV+:C:ReQF<m2!\*P0gKE:_i<h6kh<
%J26kbD!8l-J$41hYO>,_EdqRSQIsBqd3@9LbI2m(hSGIi=8R0TGC(]9Z^/J^cHH)lQg`cmIStNtnEB<*mWES_Q^8s6D@@[.CDgad
%1`ot/X4KNTcp.,oi(n-)4kAY'$u[fnkB@sYnLP`AP/iu;bq9]fUV(BTa#&!AbnC0Q]u0d+M*jM]W?7RmXiA6@j-qQ+:6%BS_-\c_
%,VYf#=)Zp%qaJc#rg?"M[.854jcu$nHso9kV+7.Re#eCD58<f"Q5j4J*SDFfR4E`Mfl(a)jB\[gJ*fN\0n[GHI%@Urrj[)1!GR'u
%OD#TOIVrIrX08<XTu0#:Ks*C:D16pm=$5$annI.Bo(t@VS'89@>P?(m>&`rhd0L%0[U86!j5K#7YDKMJQm^C4[go'r.-V5RDaj>6
%]md7_.pkLaXn25K`l"WLYC:l1qk::0e#VWki[3bN)k\GmmQ>UcB4OQogsXq91tq-"p9`^<:7mnL&*[2BcUeFKh5SBXo7JeqIM(t'
%IQG^F/du^pCFqZZfr.(&4`7@hmXJE/3">P<k0g.Q>CpLgX]N]f.'WrngMcK6k;Sm+hHYOn8RU3.efJ29+k.GA0C9!W9k3%O5!=7O
%HS;,DR^p2J\Mj1q4Y<%%;b5JJIl>P.!m(<5Dqjs1df"hP9T#0Co9[1'SSsZp0q</uCd9LS=Qq`tG<c'2B!_0sm1WB`<ZW'r?s5W9
%NT&D&B5+kKc*t+Jh;`po;pn>+Q,6i8^'_4=f&"%1eDtfP(oA$93=UH7TXM1Joi9tH=aJ44?@7<8HLhgT-/m&<Qd)p6-^XRK"fcYf
%REHP@L9U@LBDVPB0qnQTPq`_YBDX31._7rOkl',@O8UHjlL'&eCotM045L)*UoeK=SuQI?5IgXh?:%9BhR0?]G!M)qNeQ=NBpmM!
%C6&Glm-2u#iG0S.>,IsRN:nkO^sTh^^so!XVOqZ&_l#G3h&F(&1S+e_8ubtc`mWYK)fJcKD(RtTkZkiC2`KR'bM&l^JgFFBG*h7@
%#HP7CI<^@uo_Go*L\!1blG_.)^VhTs9hMOT\7NA)Bf73YmAA?OT/@_;q=]H[rR:JU?)2,W\UUrj;"u4Z$b%'j^Su=Ebj"N&[H3&&
%/n*JZSqE#NqD(R>47i>n#<CsY4.@B:(L6_$.nsZ)pMk'Ip+iT^#<."+BlKhjIC44ogS\41?i@+sE:/H$3LdYHh-PFSqRX.K?bZ=)
%15YJO*rmmAF8U"K_#m$f&+aSEkEcAm(f7qT%r_),>#s.SR5b*,GC:Nc2ebFQc^qnK6[NfWpeg!>O1I$Y'HLJ[GP:`6445uK$/aUQ
%rT<^pQ0u<==b$&-piDjeGp\jIY=uA3bB!"h3KA5?$ElZ"<k`tK?,8@Y)@p1n0:0>.>ArPmc`;,2DkFc4fR)Ln0!;XSh,l/;1qCe^
%Ksep7%G.%USrpm:ID2tlH1,<^7VuGC[8_L!rPRp5NCiOB2h,=DOZYk15Gk(@?Qg_skL>ggO@2aF4u=<Dr:#\+ABl(KTUh-dR*>&?
%XIjmpgE#T6fR$X#hkQH?EdM;qE=g\CjG#OERC:f$>J9^jfekNRCO;IBQf7V+`.*d,C^uF&NB,m:r7fW"4-+<6mr5UZkoAo"#NTAY
%T)H+OHII>PfR26LdTBWMEcl4VGqNn'/lhZH>.(8h*]2Qg,eA8p8QiTn2"j\2?e5(]I9Y>+GM]oI?[<$`Ho9Tfd^(0Nqp)6h1^u#4
%05I3Je_\-iZp)V%m5TT*G`rn_ll<c/'R3*IhrD-1lW;\/4U"jAD=6l%iFu*2]?(87P@sj]&Q)jQB`@Dih>8_#CGuG:l\.c?!taEC
%&O5PeWtL$.^DXZ[c<3Hr:4)6r;$MV67:Z5Jqo_An.nS-+HFSI/[b<G*MS6,.o;NQ#]B]]4LXk:4FZt-EiJq\;h>0H9Z2SW/U':Dc
%jDs;.b3G8BO'gGro&+WWH=O)Ol#l%(_1s.;h/se#DEWDh7!A:ZSEu"**8@%mYBLam1p@I[lBate/Y"?K34rC!CL2@Xa%EI>>MhQW
%<P*YC:cC;La1?9Ph4:3eBktgqWo$dOV*>g"h7R_h,.@@ef%T]NgO$WaPA;+1&G[EB@FTe?ei7r%V=qPt7d&C6&"g%Ys6j88r`>,g
%CN+lbdGVe,k3q]XVqmQ^EOT3m#u(8Z?qc4eDDg!/4mr(@Xi!I)W/\`rP#:UDVmlF!Z,1t.4<&tW)&AqO-be:(haqP-2-L@SmpH%0
%f9Ps!n+\Pa/qdDDd,/]3Cc;<,B2>YDDp"X8YE@-.mWmb#`T3@Ie)3C_%eoiIhom0I75N1nc^uKuN]NX(N2ZMo^>]U7,H^A,IkSK6
%54deqhS2e<YL\m=kg0$MCi4UV\!-Q5`Zp#e;gh>,ajGB>?C%"P[6A:'0a1[5-fLidSgdU\<*5LM*^Ae.5!<u-'44:X8*Yjc-Cus\
%`=-*L:2"XeLRRIhOT`cNH7)qfS,fX.X5E;<I3I[dG:8%JFb!QX]/)J6[$bQoe+MS][CW8#1b#PNO'`K;m*XmbrD",&5PK&j97u4m
%/=g+@#3)7I$S]`_$ZdHR%1QQ\*_YXbc?Z<'@3GTeF%V[G2CB[J`q5V5q=6K[_;cl!O?ABM\L_`soHa4U^.tEj'_30enC@.(!S3G8
%AZAkd52Cohl1[rEK5XG1I-3^CA3ZJj2*6H9;/&$hqIZp*AmRr(r_@+L_OjA>cHodYFER/`-"jkF+5PtXp3A<m9/GX$a/&HO`MM&2
%P`e/"5B]=OR**%W".L\*S\rpOh-RG:SI$m)?b^@E^?i6,260-8W+2DH<$m&N:$@X/U;C!cS?"4-&:Z6DCcdiM^)4;Hn99ac3N$rG
%7XI["X#V-^j"Ii:R_:kK175YEF0[BG(MfWL<e0]GW2AsVYj[b!R0I!WGK7`AVk2X',S<irp/a77CffDMlj@a7'/%r0YJYOe12QrM
%>rI$E#`9T!SJOj/I$Nh*J'?e9q,DId$6:GtVLOBl?"r4]qPTTg;Fi:5;RJs_n1nP$"-a&Zo]3VV5t9\5d)=T;4X.ti8KS&Bg6E02
%De`=a:&42f,gE))'6HWb)kOJJZ/?)HgiX*Qq-YtaRuce5PZHVtcPP(K<_e!K;3n_<[^"u@V)@HV(QNoiIoi?<O)ifuqMX!Poh;NL
%^.B;=J@=:W'!]Apij1q2)8cXM3]B(Hq]Ila`@(3FmdR#EHefckRt>sh?`SZ;p?ZjqpU,VL*lZ0FM\DCRW2DaUjl7iUK]#_a57=l"
%fN=CGPJn_REEYXs-d<An%9b]7s7q^9mTi[K.[rR*$-BGD)4FoK1^HLtq\/Xg4TqCU48nD5^<fZS]>Jce?iTGas#;V.^Jq.$`C@aV
%F]Fr8/r#^iW=DCT.qM0I>[:7,ANb*KC9<\7)JW9?[j]W;fufF6-A2j"``@^7%P'Ti<J0Rio-Qa25pnM>+L2T-B<!keM-KUX(fsWL
%g<+d_<K5ND*U,'*XI;ooasL2s7PV0$5#[@)%OUsGV,9+IIagtGLLD0&'TE[B2O9@aTJN9u;Nr,j:QoOPJrBDe<f"UmQ2)]*VR/T'
%V,\J]mj=m7BO<5Y-,-01:J6NE7XUKJrfW'UF^1cNe%1.@9#JU&c,9`]X`QGM)C(r-F-9MfZpAFp6-snPWlgK5[>?fWh?$k(m3j+0
%"Gof0DrPM`dS.#s<!T61XfeNLe;M.pW+lu2b=:-XTl,`'T@/KQXp-=LXokh98V>&g`),D[Q%h+ZQ;8TW@77_&'M?J]r\1_/?R6j&
%&E6&<i.,!Uh`*,R+/TrVRk]@o"dJ.J/23_1;fi][@Ffghd^CBTQR4BuKP7Ho)H]0mq>jE]\$d1n6A'8?U@7g%,*Y+;E`5"Onr/j!
%>)R(fH,#Sga\g3=)+]d:g1Yl^2YhG!e`DW[$'$kuTk`CYF%DKZDP%pBpW>:hQ+7j!f<9iM$&O:f96!G@BK@7^`>2r4U$QNV)(Cc=
%e^"FKC/&@UV\*EUTF"MhY:ut'-u1i8&Gi+\)3Y_B#bQ122,dbqjJD(A)-s1pk[--!;`[>)?5Q`'J5JiN*CQRMW#F(+W.k5(!h$e3
%V'a8R:5qihgoI.X81am?UbjLYWj8"UfaK#^Wa,\\%5pO(B0IYI$])5Wd\-i`.?I&9'Vi9/I<94u?InL!5g<_seLLEBCdZ52ciQB\
%!&t[93dO11MRqiTJ+VWmIB?HoKP_jm;UB<5A$Q5"M`"V,4[G3jRB+_E7N*j*<[nYR);6f;:kB5+OX+Xs(1Oa$W!jqM;'[rpeO\)n
%_(C:q\P7b*ehN'pKkfca)<64%D8[762LIqid4N-@<6V!YkXLlr8EY&I`Wu`\#p2`XBbUYK$#orE<J:!5<I&?,W)+"M@d(bie=UAG
%a=ahda$SVGr*p.2o-?:0&p#3&,8"Zf@/R!s1iR"i,WnVK#<9ZCM!U%aXc+q*64#uT&A!ri&Vu`R$oegQYp$VJ6iaJW1;`Z?8ONQV
%,`4)8PG1_p93Tj:D96H?l6S6rJBjV11bfE,&H(6;?Dl^(`,UBn-=Par.*.sh^,^0J&qPlsR[6GuOT7GNd#3S[OU>k/37c"ZEWHZg
%[YZGJ-4uJK<%J$:i"[t:Jc\dVEGWOg()[b8/br'H5Da*RkS@sSqp9rKjsjE+]0S8U<:8lZ#ou]I=B@5^!>?eg+/U2+(5[aT1;;+n
%AWWT0:'Nl_\R?*q,#U_,J?'tu%d?e5*>HYT6X3#-:X1&VQmu9Qo:i:I\5S-Xco_=Od*s/n9Ypib'M^YPj2GnlZm-3$"@44W'.C%^
%#>"mrcZ#c[OA_pJWIf7>^f"3&+X*g2V@s]p.mXnU3lV;fWM+%Ri\^j#\3$\h1$]/R25`1;#6/RtC(R>^162o]*3mp=gmr[b(sl-@
%/bFY2!5WLpE=;u$1G(G'*NYN*T1BW%CJDB^^b#j"%<FmGTLr)a$d"]^B2XHdknH\ppsIc'!%8PUqe1mckuu)%_FQkt.$naq'o>8\
%#YM=g$p%.fK$f9Y-ld,r_T$D>?eK'UXMd\]fNO%uWRDL-#]g51@fg:XBG@T3(=q659Tc^T$G85c8=q_aq(N3sHDE!P!.@RN+E:eE
%3oIQE<DX&j'QHlM.hPF2F9H'UehLpDOAnMCNkL9<k,OqdXCFdGip[_0"Q6HI=;CdrBI3c4A"dS'e4B3N0p[F9iB(N`oKO8N-6h&X
%bfU,-H\ot56>E52nI#sK,W09n<jP4].gV(b<)b!IUaGX><>[JQL!a[6mM6ZdX="%<5`7q!C$B-`LSQ=gZA:bSK.Mk45EYr2YXBW`
%(%]T$+QUjH<:+;kKY"Yf4][SMAY0R$72LcN:pb`'FJ3rCmZg2efE:WP1i^^gL5e2sJ>eQldR#phF/;0iYc5XN!otSC?Apgf%G:M'
%"\l?_Q50D_aeBB4Nm&SGehl-9UjLf0IK>/&g!D`]NR^X[jDq"1/"'MB:$#U-`^AWS_SrbQ(M>nAU9P!:O?h-u&/u1F%T"+5qd>&<
%P,+blK$fr>,t&Z`;P$b&8RS7L;MujeSjcjuPqWKLklW7L(`J-G"Bpd_.I.?ijNOtCOa5-MX@\Cb&7eCHE$D4l-ALK_8B9;_K$b_\
%;D^ol-<NMc7gTMrMrB_7A0Z/*6<(g&M7>:5"TfVsUPc:n-l)SuOCcZ>8eQ27+@1lOhX_ni$P?lEjR>0_YdT[l7L`XA4p:M7A>$0u
%1!GDJ[t,l6;UuULB;/X"@+#H;_F[J1)B:A,#[[ROh'`G,d=J1AZJ\)(@3jo)>_UBf[N5mrRqD5ILuZBp,XSas@SS!J(<.2B>_T-m
%Ajof6M<1^FAK1'9;f%?XM(4>m&KC?i,u)=f"PZM%9bd1C\1HRb+>oK:'Oc*G+UTFE6[0?'!_%1QLBJG-6+`e\VMXni"k#a";*qcU
%cBBn\:'?XjCsaVm:gFtc>*L1$3%O]g[R&-L8l4%Yk.4P9E/tbNJN*saK[cA@.N"A+f^!5YD%=Q)N,n2SX=n"7S`jGN&LQ/:i/E5n
%a%:#hJAJ]!%2"7"cpFFb!q8/4a3Z(+jFN->!+BE"![H[bY[GBL]Re03o2:-[:rS@l-N"&X3nU]jJ#&WKp7mJ]&s9CB$-<;i`8L2S
%LSWH>:DG%R'F'Es\e,(dTT>Ij9cAij:;e/hJgcF;LEfBfQlX+"F&6&H@85@2V$5G;Z7msmB[E-bb^R>>@k/Xq]K&X@`!tfF*j&&`
%*p`BjdoZpe_F1YC_WsJq2'gD;"V[kh`/jFn>g,SDq]E14LIVPml5Th=`4S@F%h+*+&Q=39ipg_Q+k5Jd)*BGr64a:-&CVFeBd<([
%aOX.OU_@nf&-fY,+r-!n="J8\`QY-WW4?"FS7!hC,LE-#-do.d'L';^E6\MUCY1_!1CG)-6n/g\LYX`@!nt[<Z9dJ6N8dr7hn]+T
%%>e!"KHlk/QnZAaJ4>\$$k'Hl>K]'-Js-MV*e>e_aQ=gXSRmIb\#J+)=f3\fb=P%%&Yj,t+>@AZ+gD*fVQ?m\j+>ep+<joOaU/q,
%hN8*-%f\:H;J8osM'.BglTNcH<!:[.FTGOE!(Q[U5Y].?U!Wp;Q9*=8[rEUZ(;V_`,q/Jq7F';B6I:=3_.qn]WOqUA"Bdb3E"BaB
%OC10"'#chu";[^kWk<_acIE#eJhG-u?G`F"QGLs8)O`'O-?3/-c6XuAWX6OuSK1IPYTSa`*F((VALaWWb[m<fOPQEd5-Q'HLduP$
%5V7u3eDR-S8"/chq(<:])On>]5hO2S-&>KN,mtQcA]6$Kk_NcC:qHcEp-cI0f9lGh!V7LuW?KGak?_PM,7WIfKI=$<.N3h;ETeAX
%(4P@AMn^Q=_?1'b[?mPK@Q726dT1W\8Ha1(!!,kFJA;H9T"i'%N8`=-!bMPN9CS]VKq^2`ai"ZUTl"U'V+'oO^]Q-6W!su&HONt0
%X@$I<0qSoSS08i?$/F$QR?5s7B^p0QRb&8YU%f^dK]ObJR'#6KY/sp=d"rUF`YrhCLT'1Nh2IKF0ufUeJPD\kJL/8ViE2DLT_,RS
%"G^l/,5,IKJJ4HuW7]c(amXC@QCha?7Kg+*/R^ou&(DJ[gEG;nE-BgO]+RI4U.pD.Dt)lllj>ebL5itgSMqS3V&=c]*>MBq0f?%s
%ppWl6#`!N@Hj\R2<Y,G[RXn5Q2b8I]BP4\]q)nbba&Y`re\'p5/11K#3s#G`(d8s`Pk,n2aG$0i"OE2&,<@]J$a%VX#truD?5uZV
%Z*b&2@:PuaG,eD4(lO6d<1'o3#ji\hkQf@Y+,C[Z!cWl&a,"A%5bX5)an1;s:6lWf#.'A1!87Y70nH7,q@<s3)[F`CKqimt=eOeB
%$Wlm]YqqPq$"LHC:aleYj4pJQ&h3bX&-g"4Pe5BI937)A!*:GCD6D3\E75ZO[$'(h+gV7FbonJ8/H@;T"4gb%&5:P@aW1Yek(;qk
%q[L)e\MP.Z*$I^eS;MS/6i$eH8Xj=e"l)Da<j!ei,9W2@0*\Ao6rE7B/uu@<:Zbj'gC^1^l[hFE<s8W^FQ<oEJ;\Mg[mBp,+H7(Z
%Mo:r)(P`P:Y`0lGWETs+!%C8JJq8?+J@nJK/:`p,!'6Z!8M_5OgC:\tS,uQ-;UE?:'Ih:9Ef1NkL2p;YKJkneYV<NH+ghtq2=-<1
%/)2gaT`LD@/9O-OCmu+kl!tu=T-4EkM.&e2"o+8!&Om,N(P':i'2_`O'?8sn.KHZ,7>/&c+<^;jCGYX8m&!VIUPLA=]Z6D=$jo%&
%`3HOHI$"U0-dkc];Bc:sZ=0#c2&H^;_AuhpfgL3#WEb&6Wa!..Z96C60X=%8RbPclX"b85U<5pk!Dr7qK[tBD3aY=4@:33$M-7Df
%$ZIu?Vhr%QL6hsfI`pu5\-?DqKMrO97+X-qR+/-l>@\-.kmp//LDA<-b9s(C*.h?E^,U"]D2\k9!*Zru7]/e8EKXp?%9fckKF6D5
%`7OL@&W0*md>!LV@_)Gin7C^Jh>X\GOkkfnE?)o;`_#O0"L(#*=?o>:\el[92u$j@?1R>T:jbE`.gK1qcGMo+M9uUK&Y(cc,Y6T*
%L92(5U&n&_$K]q9MM@+[&6poOP7RGg<e]Pcj5D3W]#6fV#AURIjjoNs5A>\mRFnXWAj=R#Aq)SuAMV8K2<bU"bm]&U<%Ql?K7_9+
%Gd7P__hlGo@>M6HF\WcnMVqn3<reWT'KSF`K>\N=X$:a0WOfl(@Q,%oE6Ns2g4YS\1WdIM_AC;?>N<Y=d5]*s)VNjGO%U#e_JtCQ
%Ud_OXPe)chSe'Nu/fnFE7hN=`XYZOtW.osD.Y2CPY,&qMH'qS!s4$$@_+f3nf2</*3YfDapgCn&gl4)%bY/=n9Sgasp-^9Zn8VLi
%fRqH8Or4`H'@s0dQW=OY'K-'-AF1*sAaLQ<nW`M@_)P"SH)J1t02_f_XMDOb">DOBE*8.MP85YL+/sEa,Af2Fdf<F+@:W0hm2356
%K`Bi%foBTmELb0L&[u;i"X!?8d>Tg$"`@[*RMcYK$\-rIMAm=j$*5am"C`5N3c)#sM_aYi1%7YHDIJ"Sr;/Nas#r^j@Ml7b!Aq3[
%BcpJ/m](d_>9rJH]K&<m,i%$p`]#F7Q_VNh'Gi$g>7A/M#n6R>"C_Lr].QY4&&Qk]89,UjR*>Y2/B&8=j5?HsBkg(@8g;!,TTo_s
%*7gDeXML5A>-oUPcJ<nn%sS0=67Ue^Z-f;cfgK^8@`r.KE'ts%"`0]ha<i6\rF(XMf@14,kj7Z1#*?7>L/+8:NZ/j-TM\%qTnT[D
%i',Ybs0<6s+Y%@Zps^OCMjP3Pa;ZtW<AW-:j_eNpR.XM"MCf)E&2jMMCaB`ED@m$tNW^6T'piM:"M5gXMU*d^I96mT&FA"ANI6Pg
%Wf+'Alta.@+;#=ZGB&k'T$HN<A)g@dcA1EFj&J?4^da1o%YN6ug&\W(*'h.U[bG7;8AlSo:bRqm$jF$A/W'XX?s(:\!pJ#Y`5>AI
%9KbqS@>bNk!)a8fLSo6c"5BoB?n>,"\%o%MQPgBn_e+9-#jB5CJ5$*lF-i7I&->-Y[o/LmCn:->>Sr9HM1*2-+uTdm1rN#a,(*`:
%)"H";2(T>5*1I$8=A$r?N;GLdp7CZqBTF6l)_&dV8I1[m@5#IhN5.`!Cl*gl&Ut2Y"0ir($\F^3<$qQ/N7="fal+<E%fnV)Jr$>B
%I6S_nfeu[Z+?a\;"S[/^14]%@352>F4YQD'Qq2CV>0HaIaA%=?d0m$#p0ig35WAeRMT)B3f+P=0NmIhRNC5Ghmi*jE&e>_o>P[i^
%s+k.>:I7QC+gD?%JJ/qG)<OmlU'Tec2hYDf5c!pAlES^'LH908'r3:jn3C(b>4FM-m94HVQmK]I`LDD/J5skt?4eFOOFRK-FKoas
%*1$83W&,U3#@l3WB*8^t$OIg4Mr23trkfN3%ODZG-63-.'F3uo-9NLl-8ga>Bc7*4a:a6j(J_sQ!el`!<$TiLJU-98E:iaA!8]G$
%A];.F`#'%p5b(mcQCT41=W<Ak@7r@I)64@1_D2t<_qnr49c?&M?Y-+1ThRr?s3g/$T6'jSd"'#bR3MrUd:3kqUTgRM2?P=EU4n4F
%@DXbe*;MV@2u5K=^*7%d3Y#@=d((GB.V+G<SdaBeTdAe#%2b67BNRP&&p"(gINZX\iW(!D7`6p56P#F)nODG\A7q*7*/8Kio.Y7]
%Xq$D@_cGI=L-;Uuef%nnRVcndH_?F3XX7hC6>7ak!!1)U_a:tUX(33'_iT)ZpWhPZ#,!Ldg(%I0Z_nb/C4'U7f-nkXHkYDV$)bq[
%Ki97)no2/JRRdq,66@0KJL9)Y/A+cVm^?-%lO/opWSBN`YJDZ-S8+H-&KLE36fI1%m_<:]8<#'99u';B!meG_oic`8.ZicPJD05F
%9Un,Z,p6,9R7C\>N>D4ni&jQ=J`&)ki:14o90b6pX@\LEA"r'95cdSf"&usuYOjEG;"2a!DAc=VL5_5.&XI;YEFSEWLJ"__UApk!
%GLqrsagO,#!TkCp*ZttaUD[b[#;K]/rsOLM^aSCELYoSLH$31u=*<&MqR_GI$_:\9LV&a^g\,2aW6O^Lh"1T=+4u-n:aRqEHa<V?
%$g9j6>[[\Xi"Fu>Xk^i8d+<R;iiqiAjhA?#5RU]\;bB*J,WQH*@BiMDJY.F1?6Kck4DfK0C]YdO)\8CIH0))'GieJO:.X&rYCi=F
%cMY3+2d2#B3a\6ASn3!#8%j+O1BUq@4kFi=#&GCch8i*--Sr/X;A%LQBkG/rnORN:`Js]+DnQ2CnCFpGBH>]-J*^7aj*,RO593oJ
%E^0<i.1HNS_=nZ5a5EoaaURInG2Z^+[53m9iW[%U(H6;'\Oa'm3Ql4WHJ]V9N9>puGQb=85m8KCZINm<[a&:&h:!#D-kE8"k5(L>
%;r$9>.5;,\hoBEgE6F+(^=V?;S:!S;dd<NgZ"Yom/7Lm.T/Us!Kml$t&s.+\SYM?dou;]1k8M<q9lYrB<-N1rQc@[XokK0nOIfp\
%U<fdLSaU<m_D4/aY;"$F\:gB-)D7)!?U6?T8`t[M#K5]0glgoNP-#'*g?g;a5N0.Mn[E(>jh/^7EMSS4#]7*o0F"Pj:'p8TT=Y5'
%LG(d$l,8ecmVU-J3%c.`0FFgKj]1(.*`o+C\"Aqf>fU,7s/8l!JHIakD:M1](I`qE4'a;S3M4[gBp!j]Nq'a39']8Eh>a%r8iubK
%oJ9N'LBiY+A7nF("CWc?!G@PHm1a]%W$H4BBk(W[Bq0>X6:p#N4nWu/m0M-S&jKXcS2>Ak1^:4!U-@h\BHk7[eXGWBQjd3f=(Y(b
%k<+3d(<0BFN=A'5f!Z&.gb<<tn$]H&piate>jlec6>5<p2HAHniL#f]]N&`:#cHY5GST!-jhXY!$".AK$)?qunDa$krS8d-ds='`
%q0-AOrBIu-q0/u+&qJHlKG9]gP]*m\M_oT[Pr8U[:0$]`1qIeLX'@\@/HjJBB_YagXi4*uO7[;(M:75rnXm0NNrQJ\L8XC%nA3jG
%XQ:Q-=&)/-O0oljYWp6$)s@gA[;_B_)n+L6c`QoZ[so\q!$('9/_imDFfqhE8_u7K@PG@'"J<ok^+gnUqlWReZ,<V!,62V&YON:H
%A%kVE[#Gn9^845YI0Q?eh@)I'_`dh?]gcRa?h)"TU(l<m<ZnE3/j8Tq1ESmFV5OB!odkj=;=E<6r;J3:EJd$Q#m_?K_iK>5PCmmW
%%KR!(L0"Pe::K!*Sm>DP0h3rk#gceUR?gEqnb`U9_3fQ_h+d1BAKs</>N5.YTpf3OWntR=Xp3n%5l>A@$:7XkgDgB-7"AO?\T^Z>
%Zc8QELJnOc283[KIlW+UA^:4E93:#O,p`uB=65Q!X]XL9@Xh]S/,@7jpC%.<_?"o&OLZZ)S)jQ+TFL[b'[Qp5!HPMP"uhGEWT^]6
%L%?(#6f",B"e9k3^^G(Qj&5m3'j)9*LV7`DZ19H#];Oi>UdR;&h6\rYSb>^2]=mdZir=;t9(q![`6lS[IjIY0G7YT1][`-.Ad<1>
%pNlNR'd^iU&J)'[@X\]:ON'EmolerB4Sd+*8/W?$3V0_qDck2uAhl>Wm.;"E^Eb^.5b3U3CDZ3%;$m%un=M$mWE"?ure,@P.J)u/
%Ad<!DLlJG=QoiY*J&th]$VqfL^[FAr9CH4*ZNCM_[ba3gb/6gD^F)[S[,rDqmfro1,DGfQAI57'WntY'O1@4U!E-5Km1XQ_1T,O0
%QWKb([!E6q>IteU8p)51q)X%_4iu#kO7nm(bGs%)3hEje4uF0^cfEB%B\R9$a/*'"0&u)^O$,`@?RpfSH>a1mQs_rT$7.cD4=_=6
%J*st5_gNe>Dg<MRh>n9U]U:+<`RX]\(<8um'Mr&%@eh<G70p)aZX[lS7D"HlL83M!e?:(:mO]k]#2"<mqfub9JN^c]%[nbSXV>2.
%la>>4JDdNW`3=*,`Sqt'?dW5'+OM(lB*H<8@Mm=RktYg%=nDT&%=Mr2n[m<[2mD+fZ'pgI8$"#'"<.XFk_U"uS8p@kgM@Li;a)QU
%FlKa,9cHL1\nOJ'1K8XCNhnnb$5E$:G<mQ]6=u6*n%,.96Kql4BJ!DckQO!s'En2dcb8E;CS%S&0l@%X/pDSp&`_*H#<_3\G'EH3
%q_)K:dl>&Xa/4K^n6*4PmD\6%"jhT%5am$@-TGXfWI@dU5;H"sSba4kg@Kl$[aNAge"QqFM&G^PL'%i5**4Wdk6f-45HiE&8\]t7
%s6Q-%>N<Dcl.HG6ok)=Y3UW=`oife:7OIN9D-32.bbT*$![1:(I]%V3/_q1VTB42>V(HJtbjpYZs5uoI7h)Gq@XI[4Is&=#pK(<E
%9Jckgd`Xi=W3OYA27Dd5*?(X@?Es1qr6&-!"c0oG'Ou'5LY'*DhC...kFFJM(*pBWB;232]rg$!GFBmXM/M9tc39ob"700b%$%YX
%l8cHl9Hm^L:BYdYLcTRqQrUZ!bQD*O]Ba4%*X8d\kPd#Q<%ZM)5WaTB?hXC(;=)=S)OqI+fNru_Q0a$%$8M7edB&d+f<]idc#E./
%;&TWaa/A/D!.@DS/C9\Nkdbr6'aLWa998O3=-TSRhZt">%"JOS<;9%;=k>=DL>="A2L*Ni[.l\=jm].?^+c*cod^n$).@AQ_!Oqg
%om+CO;0V9NXm/,Lm'XU3f_a-?*m6TWrt]W(PKGuZs'2?S1_t"bFhWuR_hCY'^ra*!FinBi/!4?3K>Dc-"=`=:358""'6D20J2<C.
%(7`&S);u".KfP$AYs):llUOX:=0@XLAc8GJbC$-RE&E7=2]6d%+afH$5?C>J8%-fD`1/iN"9eBL_cE*O&l2csM%k>0/[`<rDHE_n
%ICfI@AYYu`RWaaXADg`6R!W\boL\lBkBQgAs#3ciQD]E'ar^6B[HCB"l2shMjr?tP]0#O.aAgP0#9VSWGOc6g2YbB(J>h'gH$a$/
%CVhS23'Va^_M2-4CBgQ#odU3t,h`q0$X[=(T%?nO#YhckIHT+n</*DSL8u4Y;De;MbeZhrkm3h?kDp%830_KFF/hT`GSUT37o6uq
%P1&rY0TqH=V3E,'ia7F6/qVB3UiPWO;4>>*aA$>J[XOU(<-J+k_"Kl6k&4&LHXo-!jmp7(&U6,?b=n*Z,I+LR_TLs).d0TM$CT,9
%rUdL+`b(7%39-PLo]JX<DWKTLF*VbaN,ue5\Sp<QVZSm[p78;nhh5\NkASe#*Z>*5_`_jm&J4VjDs[%.G3L[+6;[5$qtj"F_sbo>
%Pq+BP+9Og--017YOsgbJg*Y#Ok+2PHX1I=U4OH=QHnZ?b"cd>kCM]dUSH_glfi!EFH8rp26a\ET?B>[[Q.mYgbRm+p28[8WQ#&Be
%H:jjkg(T=9i^aQ\@IERKm+sr;c7h%bNoqT(ltL2qLBIAWCZnp='%qSO<V^e()Fg,)Qb/F_*ugJb--/>lmT.Xhj%hki02B%E=)A:u
%CRu!K^Aa_l"$;qdI+5EmRI7al'29&-62%R]Z,]nV/(fj3NFt<b<dQJT$iB\O+%E$+Y?h1`I;]>T2p$37fS4EI5=6[i=#N>(NeT,*
%H[#8(1!kiZ8T6i<eFqpVEr[)aD9fWf@`r_1K!XTd8;n]q$[mE*Zt#q)erTW=pMN8U?tMM[Y9.Pk:X7CE_gRfM9Jnj(55`?*=YWI!
%B>'GIS4Vr+^JBn=Bt%EJ,Dr7;'.CXb*Y*FdUXf&QX`5suR90+G#+b$tlt\s1As-Up]s&fhr,j"Sg0jN['=4=W0)hP'rR\)F`k9j%
%A./gp)[O`4Au(sA4K32;b!&)G&nDhtFtk:=5-(d?RoO:c0"<<2m(1'_HBo@gjQH0&@%M]X%DhRNk*%0>-`T$rh2;Ko<K5?po8hk8
%4:R^UBAb'-6P#6R`PQ%E]`fs?G0K%k26S_9-Ff'aG=f[)B>>3^LTi'MNdRT`[F*V/EAEL8+S-NXZFAVrkNq2^aK[Fa+gTUn?VqI`
%_+,q=I8`[K'Z&rL'u/;q@;B*&&+2>XBg9PdHj//BkG7(MoPVUdWcAr>*%RL1a&ctA4"dfeWZQ\XSa3bHb+q%G'-87kKd3F8?m5LX
%@%@2,Eq:".X#WMV5>e-V'?iOK`S$76^u1@g<ghM4q'#sK;##T+DNOo+f'02h(#PrsAopfk&E34]Mu]W7#pYW@)&23K#D+I3-I#LJ
%N:eO]^V9.W*m2^l%2ITsMPi$NFe6Pg!qlSX<Okd"P3YKJJW4*i9i2*IL$n+dore;:/?''KSVjo#j^F'NC2KiXTKTf)r0Sk&R!Gn5
%:Yn_KH^]ul6C/2a)VuhU2^J@04"*S5oCJ4TL<@&:.^ap,@c4oJjRHk*:rE\=PE#RR+n*a3WA!L1A;D*afaK(lHaSCQADid@%Za(_
%YQcM\@p'0;>"`:19>>"p<6p_9l+4%C^(qKdp"c!YY6ESA,#>_4ZVhg9[4q*VQsnEUeZ[Q=eA\o\Xo.5Q37GnWkqS[kW84=s:3PB\
%mB\B)i3P"$0tMYV^,GFBCR;doH0P5<%E'\C)U)P$1'CJe1+3`TFrhC\Y!O*GK]j:T&;!XVRnuNUSX:0dRka<u$OH.0Z@ZH16iR]@
%O6<H9-l!2'-nV*Y0fQo;MR`rRG-/RX"9[]Y]N>%!Id!uQ4<QbIJqEM@bN+4o'k23<Q0Y^7+i:Jc)hb!La2rDj3M5Z5F$S!3'EAgC
%[a?;l0FIr#Z"gpO'<EKY]D$jQk#c1Q%2S4_'h01rTMW[M@/-,cS5LR<h6`<+[,6<YN5$u:=*cZ&#WK;O;!(P:4a)[*/^qCMiMuS_
%m2RiPqBH8&AOd_'[Si'7Y]6k?g?-J0oPbb';R+,)F%dn>FReZ>k'5bn6(G8nDa["dXo&`U(j%R&(%Lr-65<nkp&uJEm#7%CW3J:6
%KM[?NDquYeo+kg(bYXF>MTFK*ep+5HoN(_G=G(#2Lg#D5;N!>:cdQKaTZ"2_=Pe)b#t]n<J<4l\f,jlbT_dJQg0[DIroKa(rj?4.
%s4;c#8IW'0?=Mbq&)"V&+Tiu:S-Z9/Fb_mD$UMO._;,c">$mu%VZGle6h@0cn7@QVR2gE^>RWTm(N"dqV<>:kIg#]Yr$70Aeim8.
%e,FJ9BA\<VNke2LeZn`&]sp[t)I'6u=ZE.jl7D`=&<HCce4EV2@(.dQo8SIUmei(39LRZJ:_l(Fc*tb\(ko;sRrT\#*>KRHO]*<J
%_S=IX[j:3PW^q[d73P2YonP]XTO6O^a9L+b%qPsWkHD_nIq"9_NnDl&BZ61+#RJ,iTQ2uo&<tgU<rnbDYsET(3Pb=sBkGP9?:8<3
%I8Ll:2-H9ALWi9b:B9O:eOQFF"*]NHpgu0g:M'\H')eG<XLSji$3X&h7G(eTMRr^o3>%sU?+B3A"-e:K'g7KUP7Go>dfigrRpYj/
%fY`f%Z:L7toEdL6<JE5Rf[;RD]ei?)oZ3,&V%0e-4b/YWM&HAP*%Ju7;i2rB/dh;nn]B7rC.'G.mKJ\(8.5B"rJW<c`-j6npHeiY
%q0I'#XT)GDYXWp+$%g2.MOka<PlUpi@(etr8hL+k<Qb(oWpr#\e>Zm?f=2#G-NJ3Jh>t^%A)*=GlYqP7O:4fClc?-7QKi6UBeH<6
%9:T#>[]7\G"+'296PPOh)p:5ioqh-"-&Lsi_mdbu724?Ff$geS\Q^I!5dHIS]UQ6I5XF0:B(!,j$@d*OQ-S`2kaTX8$JP>;H%\<Z
%2Y41":f3#+&q=+6FdpEH<7okC+7"m+0%/U^4SW$#]J9tkIcr8Zm$3f\CH$CV7nF0]\Up't$$uEWbrht;Bko'Ci,],PfMrrlqI,MM
%;nZgK-!8b:>FHmL<_J79r&L!7n!/Qei_ZsaqpF_O1f"\/+[=M6nTL2=<6k6/ksS^E6E==.1W-*jQpRG)b$[@\5oFN';NpDO2XT.s
%%bbf3+W6H&eQTVHkaWrp]6B9u2;>,(Y*s]!h_9a['DjbAX<U.sF7Tm,?;$`OF3m,3ZQAg7TirQ[HVH`C!6Hb+*<qN[V=@bEWe4eI
%0W-A^51bUN?7)=m:5f#%MJONjj<HO(p!bEoRmbtQ?;YlJ`?P^$%AX8o70T<ag-;BD&Q6*1V'mP!oL`QZ<shuW.tm,-[G^hq@6d,0
%0,G3IUZ:\Qo"7He*&=i-!@+>P:63#?64Xr\$="D<-5p>#bO&M<![rUq6]g4a\tEk07\OijYq(2*IbmCS86H#AT4=&,6%O'].U3=<
%O*l/pT=Z:R@c]FeS9X<[EH/GnUpYpp/`MDta`Y>)Liu6R;DbiSDb?@JKSgB:Q<uuUI[Y8>@:.'Hr97f?(ceIg;C]:IB#aWeHU-[7
%&Z,ogS0*,/mg=`Q+*CYMalTtL*l1RVQ2K3eVPFOEh@bk+U[$=F:ATMp;g.El/UnlP'iK_E!fnUTd^dYBTR*'M*sjP8<6B!\hehBZ
%Cm"I+QA3btUD6hh]YiqI]nrDL"<-=OHVj<2q@l4qb-(:glqgPN8p#7X45mZ6e/!"(D*TOFGH"WA>iYe9>2ZJ;Yl_?tKB^TH%TR.7
%l1PnCOup!?74Iq.P\!82$?N0TQWIhAD+cCnd_mOK'u]e(hm"H%ocRg`/lD&A/.pAL5ing7Zm-Sg"TuE$b`(hpheb5Hc@smr;<LNa
%QQ/S/eXTb?$s!f#j\4-O.tI4dHXg*dS4M>DMTkrY:lD1-Eg6?_#Rdq(-#BIAk]&1W9U)HX7-&OJX+HN8j$c>\H`gtPLDD>pMYF&I
%7YiX[=4Jhq;J@M2G@?.`\l[qY3_I4AN6o^B"@G^Bg2l+ekrWrQ3rVnE3"$"M1tZrQ&)"8LJ?3(`B%-=Xh@mZX&@Sm&RCc)H/:Bh<
%+sY6Y]k(e=,$\+%\UNCAJcuk6F\;5Cpr11T]4[eE"_:]V6SVU[37bE&bK0%gf@kt*:CDJTeOR<paEJqCe+W,g1o\*Jb]<N:>H*(F
%7bI2+MCQKk+.Y2Pmk!^?L/@&5H%o48k#HVYl8$R*H);:,g&(c=U\6JaM\,=$.qmR!lO!hn52'TV3C0MA*f$$V^!m&U1Y<\Q7TJPD
%B=@!MpJUZZBYuHJ8?OiUZfo<n@0P@^RE;[;:=f0d_0YQ-D3Um=RgL4W8@#_3D.K;ckq6tck;Pu`a=9QQcC<UpZq'3?\C?"MHi'a@
%HjKDL-BR6bT)?56=dYSPSaW8CeW[7Wk'5O-!<3DnLK7=SXiP)AdRS^P@2)i)@uiIM$A:Z%Z<MWkA`@4AE^bG7D!tJkc&S=%q4IDB
%B>\8AG<Y>d8uWW3Dqc$@$S3L5..7p6Z*#5af^%MU[9t+Ir<r2Qfdkg`FaYq!j[>Ss5jrI4)lF1;0\rYM@#kpNas69>-?=`:?rV:$
%P?]h&I?p$?4rIPtON=>?PVpIFYFZeCiR=1[dtiFd4@,hL&?s,>J;`e`bi%&Nm)G%*KE\LimQ0Xi'0a@PB@O+9G1ph6lpfP6X[BAr
%!VeZeY.X3td,-glF[e)<HFGnB4ReG2rpnn=B7t#b^?+hV*.ZuuE<uB'aCC_noE&Z/Aj9\:.AMuFEYp@lR&,3a]S(mS4kch3NBOCQ
%:)_$'P`!2pIksU[?"A)Y"C_YMpq6sbBo:]..gic^%.;WQ*I;l,Xo0Q;r$+A4X(/1P`d5CXa[n$*PmSs5p7=FH:kWa/.&PVHX&?38
%B`Ps)m@'Y)&r^`9Z(S"m"K-=GA%1CnbZg]Ei!KRq3b+_Pq!K]t&2Rn_8C0-mDIm+ieJ!B8gG@+[>Z1Jb&VFt57K?-DbBV".CR%;q
%pRZ*^hY'Q<4+#MYB:-tfa!=ZhJ&3U46-A%)I<DM*>Zt`@A/Bfc/&NZcI.VGp:j\`O'VrR:><Po%]_s[lrmI\2h`pc5#M[3>e,SSb
%\N7FXVksQl[`K';S?Zo`;<6ll4.@W-Ao:,s!7KEIL0MNO$C+!3:gc*EDPNHUBVO[?j2d<#GaI<\kG:NlZ8)S6=omiOS8-INR_P'g
%5([7">T)?kFt0*gWfncZ]AbQrY%n>b*-A7V-8m%mcT`'Ol=7"X$<q.&D,?htb!-15OC2h3_][keH+!5LnX:bJ@0m/0@J!Ss7")ih
%$HpO#^t<&_``r<]+^sF05emk2*u3]i<Zii.p>D)?n'NYde9p$!-,^qlarL!/C92CA9)IMVf?%XEOp-15ph8$YY>>QfdrmuASchBJ
%XtlV2K1N*<*[(ULO+L'c+d-M,jcli;R5eD/BS[?a5USbg/'uX,\PN!E)%Y+W[L;&5BTJ8/=e^GA<O0h/@gbU7Cb@]6&+<I823R^X
%'tK]=$&F7S\+C=6NE7RQD'>N>e/U;$&u:]!Cn&[YjhHN,Pt;S!YS>?p/6ski&]LZZS4>gkgk+X&ZkZ2hP9)mIB<gqO@FU=8=$H#G
%5NiORBpGmZ@kdq*!)O?:8f+AVgdAC4(/n3AM-P`EQFWc`\b;,,4<BabSnIGc)&T(4h=Q2$=IbM8<Y56$KBA/cQG_l#o<WT4H1cSl
%Tg)o*T@`u':%;#&cf]0=Zd&9o?2KiQrAb)[4BDA*W;Iq5I#_'>_Zq5W6djC!^h6up'=,$$2!>qsBd!Z:;O_"o4J%7GOolV^TJNn6
%@0$TeW-IL5&4^eR%QdQh.K^BP1!I#(j2SNbKqkm&QD=qopDT\a4JMDZ1Y6NpKp/PQq)JuXN6]P2.k.CAljRmS?$:8J%8;U21cDN#
%!..2KXm1(??.]CD:;(@k9!tL]r`pi_f+f#54(@-a?.I/rebY$B\!M3N+:aXI[11%SDdPW[Xi-!MIEr0ZLs?!TI^_9;7@tG9j\]Zl
%+u=,k1J0rDKe]>HQ,58u)5Z?MrJot7>C+qiQVdaD4#X1G8p!?BEH#J\qMO6"#tHNd'[QlJa)'1&gHHHbci?;LP.s-armR+t5=QWE
%FXD6VN;/WdcUGtHh^nLaMmgiC@T]Dl_OV:5*8]tFSVt1!JAoOm<rnV!U[aVJ7=9eDn;=D*J^R#'!pm0nJ/oA4gH@%%c<#NZkGSB=
%YEf3T*C>:i8gj;B-[,aHlhh?&Y8(FSCK4^Z?dG"-fS^rd[f%;bld8dY<U09-Z^lbNjID:j6moX='q,T8`sT#Q8.$G%>7IboEfYTs
%_Wt*4*<in\&d4=#p4-Sni6%.7i0pO&_0,01K'W4>Y/^mP>>YA'Nu2+X[9FW'=)_GBpd];ZmM/s0R+Oi)3PfjPi1+4s_9HE=-+7":
%)dC?[Z1V4HNNl<U1JGK>XVG#<jn%$_MbIft/%!U(VBdP>j'D7cdGodTc"-!`.#`[o1PffSVXk^K*IFZC+pP2X'X)a;W>d!!,,gst
%AONm2!_r7fgYqm-;qC8p<H=)2SO_6$"WQZL6P?!L+n]Hm'sM*hX=U6.Fm?Z2I=YEp>>,#3YeXoT<U]A+,$`kfoLn:s$Zb.Fb&k&$
%qA,%knss+KMoJc1rUMrmI!(\OQ_?e$h_)&&YH+O^5UT,HJ]8bZ1:7'_j<g+["$MT&_]Dm3Zc%F"?19BjArIsZ[)NY6]L="N0MBl<
%<VEg:clHEolVYOoZaWR&cc(?"a-4n]S$*^r(,nXb7%t55J6$_t>%4p5\7u\ll)%:VV7'8dq6=;<#/3?$CQqYJTqdsKd7[+B`4rQ[
%QN-m!hki@<0Y!RNm0lORX*8)FNm[p#Q=G81(8dilNO1PAReNi/m9El&hg;VlNJ4R1]de+=nLWCT9UA6,%6o^&X(_NUD#_TXn?[21
%/HcciA%cuSZHbmt&9+=BqH5D";&L+,(*O`19bn:b[<+p4>#JaU]'UU>VU.$b^F_;?pL!"9g-aTg!ccB&qAr4bH%mt8;Y&0hg7);H
%p(TUiN+r!n:A(@AE?b+_n=P"sP&uu7@UIN:RFrSQ<iHoX-&n#n?J!9NQH#Jj]7W[?]#.+<j,lN(]p_pVnK4$8FmV":i*tN]n94C[
%5<]a3I6"_!#'mj.!rH+Eq6&INj3V<TI9u4s0,/dbq)lL$,ph=eCBgl0anF.=BX+0)aDed1@A%L2Z`$uY&quCp:tZZRCY"$j3C#Y&
%Y3Non-uS2lF)CJ_'6*#=]SsS.1'gT(!taaCUfUM=3/E=o>Vft;:1HE9/]:iWloW?5>EDU*B6)c@.AUSL!:@5iR=-?m8PeBcLXbjo
%eRWd:$NbA(Z_j``N5#Pa)V52B-%JVkUGcj<.\M4!X0NPglKDf+3Ju`.q]0=BoY'ZPj6Y1gk@8oPN\M(m.iV-]`@6(aUH"TIRj[##
%*$dj/8e>S%A%&@rdd/]&<\c0H@<Xsq-k"#m5kT\^OkH.&l<(:44t7[.Aae.=*>>Z0Li-:3r:&BulX*H8TFA(,s&K'ddY@5?5DtUN
%(s-5SW<`5jA\O(>SP9BjlH\u<APVq2TSF4;2B^[WHuRA1_Y.dWaqOr3-?#UAo[d6RpH8,eh'7]++(HJ3Ne.[_m4ZUqAX(G60:]&n
%/&i>-23&8!&IG4X@p'npU0pL7<aUmEguG0BQ3@gQ"4DOAA0^e5Hg+A0bO[7:%uuWPIH,q\R")ZeZ-0^M8*=AM:kPN^$;WXAZrb=j
%7AFh@Tt)Nt;eN]H/^d""3pF"jN&4K^rhC,9#.A1*6;Vc9Y']HU!I#@"kU>VXoGUkk5\4.haQa?tdU?+nH/N\70?VY.XqM_2(X_<R
%,.RL^!@gMnrRp9)[P"rk4u,]/EQIpUgg-=L=RYa1.NMA'&2oP(f@uu&P5g2(E;e.62^pL(V0<?CgE-%ZhPQ(J*L9CJ."dj`\8?FH
%*i&Tis.SJ$[E<sjUkruU9B<OLh.gW,5bnYn<QSEDa^WqGMe]kE%%=8jH$@6KO@-BKFmcP<;?iKj6a]$3+%EeF>uA(h2lb/fCZtu[
%o;1d\=*R(+$c9TB:QK5bTgY4``JVDXXY74-;IVi5X&j"5BBI.!;r;pt&/@=Ea)5+bcK]."O^]+;&1#^F`BCs,BPS/*_3jlMJ/WMZ
%BL.)bq+QWsC9OdiDS,[M>KNBp3CQ5'DUrhQY1Q%KNj.fiMYFQPZ8Q=&+!*iV&,K3OdN[C0On)VCE>^"./-!0EY%'BkTX,^'PUBNh
%*FKW4Vhtp8-)er*28]V"Fk2tX_TR:`PYBO`n:7-K+]MR4=\^am)(gi"/RRWbmk's9UW8@P8nahg\G""As!1bEdL&L?,ahVg1dJS6
%T`1OM1\/*%F=>J5:Rl?tcdR0A>;,gN5$&"<=q`&U06IEQU>F</I<g*%E=`of4C_sS'MT,[O-5Q1<=!YWM'J*kLR(5(0/1Ok<(R,_
%0bdKj'7/<dcJYL3WA(X98l85=_C9'Cjcin7./CU;3%M0Eb<t2ZX^gbH?\=etQ5@Al.nUZdV7K5^#b5tj$a8Z9oL$ai7Wm<!?@a&g
%^.ERUK@3EQX#1Tb;efQ/0t.+7ioa9J^TL=([&1:m=`CL6,+_H6Y:npFX)24><bSg!#<&\ui`8!1Y`\cDNuO2C4tC/["dJ-6-480@
%Bs11@W;3!ZA'(RJ4NFC?do\tJq;Q#B$YILnO<68PN&-*TVYBD(.dP8>UC_R"<Fk$WURTYO"J,(bT<2_!eLB&c9S4epHHX]8/s;*t
%C.2&8blYP!PTp*7VtUP^JNXX?gN?$]:Rt0d#%X0]^M-!9oBpj+>r7glY*a\"?p=!TL,cJ^VXesZq8:VPghTl5N7)NRZ82*f3m2RN
%RF)S`7m,-\YguM<(aUjH!><h:Q<4cqG'VrRK"*NQ-&$LJns4%4Xh.F8[1)/UZ]!@!'5oD][K%.6\p39G`E/GK3o6&_`OfF@aU%N2
%T<2TX'Vb<"6GcUlK]C_-k:N36+F6#q(BD7EBXTeVSu/E:'Uf,UaW6_NZ^&gmddgBFB&H)@1G*ilY!r0k(MU(B!*L3hV;Lc>@C*YM
%Jn+CM%meWh?sWVOE;e2j:8'`&=gEK89IbX<>=Ps+e($d0YJ,os5q4**0NhmoC5sg'D&T]O,cN(!P5a+J1]t6;GG5o=/lHB$E%bcX
%bGCt[2TH6#goI0aq:muCh;h/>/BRZmP%e[8e[$jm%Y'1t-2_)9?lo%U>*JAEjU6%sC.mb2fF+O&gMCJ).+PQ31+[tOK!bAeCR`;!
%GSdaLXJ?#='3EK8;P^BNJ97)@"LiW$[+8d.)p_F-[(H*GY5/#<S2otJA/hTsk<,o#JW2RD'@s5^!G/A&#Oe6(RWn2i\(tMj_%#eF
%<Q;YS9'N?t'AhSHR^SY&Q<Bq0ja/=0>A(-6Ug$EuK`;UjY&!Ei&HJ^UJ`W97`L%]%`$LUqYKFm2aN"7Bof-,DB^sb#e^(Iqp*4DO
%mr>5QP!"K^'FRdie!oh`'?OW#[T6J%PqHO#`:BZf1+k[k0%;S<8--QJU\]]r%t8cS8":dDSasj_>Ju/h`5]<-[#so7==Qes%,\SS
%4JU%PjX%Fh8\h=R@Ub6(d:"%3+8A%ZH=#-n?G%!&8,RHI*!&:/(WXUT7i]5@q^?/tRks+eWiBQ%`c?tMn4YL"(mf5&bMSP>!`lS)
%?JgjrW-7&kGLAth1s"Xc%DI2thP'%E0AG@XlERn9H^]Su*t#O?c>Gf:]cfV%c7h-Bg9_@6OF9OJh-#rjpTd"bJRR^M>j[6SPk#:a
%k[/R$^8G+M[qBM;,Ms.PKE%0]#U9BP+GlB.$+s=ZK5$Q=@sa+I[Hnbd%Utf54E;_u:EIt>j/\YC'(*b#c8D0Z&5/BheIf<06([XY
%eWlD&1!0n;J:E<@GA3(u)VEb#FMEg(XF,]d,np$B^eE;)]9"Z#)J*F#mSWA8^u(0h9N6lCbmlu\9638C&p<T*k,9c4Nl'K?ll:j+
%=cD%p_9/W8-&,Pqar.lNm5J#,\6>\HlsWo_bMd>dWOD0^],(s1'OUgP,rtA%f^NBgAmjmP^8FgW62R/.mK-Xr*.s]m[\@P"nR0ti
%est@SSXm<WdCNKfL(%*FZSCUV026"+86[t#Y+c:8NjW\P%rJ+?Y%ip/=!)P!C[,Mk9Oi'8%i(Lth+p1kjN"eT,cZ0hb6.U^HBiq[
%),a7H;L80Hh026tYJ/s1^GSWAYo%"u:bNl<:D":KZ"f^Kp(2@3.*7$'pR43k[\t4o_UO*:]J$;/*W[a0bck11?RETK7YDe(&"AKo
%I9hPI[OVnHb0-_i]H(L+Nr&]<el0=]U_?<j=S6t(;4`?ZIRMj8SUW_;iUTYgMAulf*X4Mh6ZO8#D1;@/]nko_X,;ufC#"](F'C.Y
%</Zcemlj=(]t.bWfU`UND(C$;>PgG4[MMqH#M&*`MV'o>X?bQt&+V2=Ag,du5``1C&ae@\!2SN5I=Hdarc_PHrX<afruq1$-hF_@
%cfSrVe_f#/q7lse?NIfT"Le3B"kgQ6]t!G=b#u,8[Rq-'%OfSH@C#aCN[ug%``[-OR=S!e.]9U1f*e!jn&=WOBlQ+X/n%_kiP)e]
%c*6mh-)<1FIQQI"^WO`JJ3o/eosmM2+c.KTn-)Ge!=m%Rht]4GpIiQ$s8W&qgAAEl"ok"</n:*L.5r4G_&G(cf4Rt\/BT(\/KI3o
%*^]S'JVb#fTqQo)oZ*)5_aT-;B":OVgdO@LK<?@PI,5W].'ARd_mn.8k>HRRCg0`R>VajYl*3Q.#Eg;L&']GsRo.P*,um#HG2S!u
%'RI`.r%32?JS]%J4*;khe5i(Af>]b'BjX!GEV?D8jtbl24qI\t5CP41qJI+?.H[VA"0AH-3_C+3l9!mI#h_oQd#f#.!p`W'bTAYB
%cKBXpqnM"-9sFL/ibjs\C:g$m8:7VABteVKfbq.#$V5>,2r-ss4KCG)91gI8l_"]LCo$)[GHL&ZTlsqTO5[5h3PLEX,S]C(BhNBj
%%_Qo#/,/.[miC?4?>)-'a1h;EZOM3</Fn>2Y?>Ai%$0O05PG\3jRuPop\&e25H]M/TNY$bD"]60Ti9/l?1&5Kj\;_cA\V/F7iqTf
%+-:W;qrk@5#dj`A.M2G>(S=#=l$Q,a[71(abl,(diP:3UHPO&hlEIeZTM5OoN#kHFJ'l/Q-GWoI\LrB,f@1X1N::\HHQbo,/)X`c
%2Od;mOL2>#D5-R?"3kYO;)CN$atQnR*U$LLVUD*U:*OUV!^I%#Kh6Jn_9'QP<9WGuf[I2=>sV0)gp7pVqcs;D#O!b&e^dZf\=?'$
%P5MR-;9s!?Kuu$Ejp5/T/a1F-ai(#F6W]B.QA$nH'^.aJI*5'lc+Psk&/RQgbi)N+G;Do#dN9gf5F6!"h2'3jPmN08!q_"JN8Tdl
%ci^!Tb(JMO_GESP)-L@*<GD#S8hUeI,NB14$M<dO0<'F?Np:C"f730Ce"5LGU%reT50ma<79QqZFCgBP0HlRn=oa&fdX/EkqMAin
%,&K\s:I_Kakr0X*(i'In,AL)\Nr(Ap/2\bQZ8I0lNE9`S3t9/D;oGDbVNkdI.(FfR_+YmHJ'u>bNjfAU7jNd7_7NqiC-GK!FAW6K
%k<EX`*W.m3=t;D]*V<_@NS`!'OEJ[WQ?mcnja`]ck9q7,3hLDCX80(7m6>kk?b1bP7tL./XsbEK1.V#E)fq<=0u*Y.UA,K[<Z4Q)
%0PPb><@<A]1s+dTfC)9.nPFU2$>Sib-%@)r)-0BoJn?De77:,W0L[a,^X&O-aa[(d).+=J53H+3]G2T2X+[M,cmX*PVMD0dnrEd_
%QDQDcZAf%n+p5l3UpIH-aKN_=<@77g@iWX:G0*Pe,"LIk3XCe1(p4)S+LlEX[brQH`D9k5C\ItSITJD[>u0A,`7_E9i(M_@'oAjh
%_cbhX8fVPVBBQOb(=c_Qpq.fm#TV8Gs6PED5pTqf=<rbMXd80JN.,#7BFcT2lC\[-%LNuD^Za;+#I)\:^Vg93*YH"o"suOl.fj*o
%8&3&s6[*Dt\*TO_$@:Due?2=6)q`Vo$DEbSXes[GFoL/5]^mDu*?g$@Qd\p26cmtG!4QPiJ?*c1s7B%#[On_efpBQI3@ZK-NR]_G
%GK&(7&pC':I+ho!AO6^VlKU5:C^&M>m<=WTH12&?.GB1G^b>[I,EhSU`?q`Bhp^VXB!*nc8ZMN"Ggg`jG2%73.#hJoGA.]@;rhuH
%)3\f2&h9M<jb!!rBH/Q@[tq+NU-'u=):anOD$Lp\U*Hqirp<ecg,jjpa%g7P7oBU"gkkDJbXm-C3J=lRTGfkDE[<,@_/n4CKgnk"
%Tnh\=g>PND]?!sE89]i1qR@;q7$5O=0;3tLkgKft@&c$Ma8YdjId):U@<)3X=uEC*_35W4X&uu!I!Td=;+879>]>D:HDJdRUl%#[
%E*B*Z(Ps<S?GNs)o^-YSYs6"X<HD^tTKWE/0;B*t-704$II*P[8aLr1?>A]44gt616JZWcZGj03,YKaUUPZgDB:Ce\B`:t%5F9SI
%;E,A"9K(+T`DM8#P#X'[R!:PGcY%ilaU98Q6UC`[_-qDCIU;q+n&,J0]A?/Ed*0O5!Wt3J*Tb-ua!1!%kKVg--+.>JF61hSn82ok
%Rj-0D`Ag;V5d9R_EY=c0IcAdt?I9+85J-Ka^.CUk7T;mkWOu5U1%T:B_q!5*,m<9Gc@IF%6gHa/]kq6!QXPV$;+L2ul*nB"97\T?
%TK`8h+Xg*WpbEpgF)fWW1VC7g@?Hu/?))/s?X54J1VAg'I'Hcr1XsB<iI>HO0V5;U%YG(1M7JA)7ujNb/+_o:$"=.=R0^OAUnl9[
%B^0p1698m-Y#_hR,"HRlb6HWKZ/toGcRKVZRB'"uj\aiY>P+dW1>%Fo()%XcO?`@sohfPqr3i8-oX[#o[&oPrKTs\ZEZV"u,3'dk
%mM,d</.C:p/C"F6:q*2sfKaSQm%[u)HCH*!ekeVgk$eM$nl]JNO5X]t4iCFHkkN+*^neesI(6VJ"[:(#!*0WRK*G#q/5'tP8e@)_
%Kh/<$r=KK"H*H0Mi`98uT4.;hcrO>2jadTdCo^,,E\UV:Drrr14#`gGS<ePR!41AkB`1G?1te^6/]%ht%A6Cc0GUe`[6TdD5ZHb4
%Cu!i(Ac,IB>l1>'lleR3j=bE6s$)3$kZ&Td5rG8-HspkFq$HDdLc=-YVqg<\9Z"9O847lR7!%jX68hW3CgJ;cPc+6WQ\`5dQK4,0
%q2^>(Q)-M.!7GrCD8O;q1WCP"ks.VV)$7fJMFN</^d=jj(*6Zk$<eOg!OdSVpq81Y3<uHC;0b^dM)EKpJA2?>Oi742cabr'e?ALo
%Z_KD#H\8kCfIPR!VIeB1J=:]uN'`SRU5g!=IQMft<o.!e\LJ@%R;;Y?El\TLO=mkD^i-qlZZc/5,b<!3(<pHGr'P]N;7DK0lIDoU
%;:W5,!W!GaT?BWS-7:c?%GP_ZZ8Hb=R\SS_=5YdH:S`&.&pAO\7%Pqb-\U\9NtjZB9)'/g5^g5WKOQ.c1!=#<=^MFSb#p7I8>QMq
%^J<2Y_#j<HcS9GBq!P#)P*rCFCaU7R/Ei3o[I;'Xj-<)0+_C-,'o`rlrqq#9'.TSq<6rsp2jMd1F&0-[^eQ_O=]Nh4U_&LH`<^Et
%C87J"'KrG+<I3["X53*gQP'?U8*NVU9huM27I3=hfb*;KUY7V,koDjokI`d:MH1ru801O==O5]0'.:td]PA$&HD6W7-QCkSY.0!m
%d9LDnUSLQ0]G.G1f,O<=#U\X,CA4e%`clSP>p)mY6!hsRGfq%9[n)*<4.GWlX87^%_RW2U1tmt:"e1%_@COX(+EIq:'E005I',:,
%gp;)bhl9DQlPY*NfQ6\id_<=1Rb].Ql"T&l]dcN4\"(VqL%\E;g!a1FBdegB"ajmg0,,:P(]E+m,6=RkAlU#mF%D[JqY>Fe]<]RG
%7?cUMMOilcW^WGc:/.$CJ'=YL[5??tC6dAabd]oL=N>g<?'LW[*oKDR,rYF&-g=c?R+E(47kl6_\(HnQ::8C6\]\I;<t&,SFd@A)
%GL.a5$E:e9ZqKete=iDOZ#%h!"s1[4>hKI\'Bdm@LKA;E4%%l7O-7--MT5m,Wd/5h?p>q21/qa)W:!`Fi(Z@m"+DU6#ImoTQ3T!C
%>W$"En]/<4e[h,KM(NZgXWjPF@qZAoM:P,2NC;L$*kmSu3u9ucG_mh8Pt6m18eo.$b"klnO6T3`A?h?:lk?p*rPYk)>N;,E)a!6A
%/>"KN=Ncr[YGW^"]c'K5kE0EB/a!N!8M/&Fl3;Ool"P._FM$^KIc.FJ7#9aLmrc>@^9\_9biPN]b)9jK.u!ZcNc$;\\Y;r*XjZEh
%hBOD.%nFOE)m[\Qr=i=lHR'X1#e;k-K""?1iS\m>pUfT=RriP%89V\u>&u?HM_sebP'i;\&Efj0'/?3c987L@:@8C7_G#%ZFVi2C
%<M<,;XL$#`2G)>n[J!%WO-:d92qjhtjfMV07qLU_03WuV:4MC@V$4,K8)/8W[-HZ95SKZY]uBP[DZT-(9)P2%7FXo8Sh)8-04!UC
%GI%kU,\$XKg=i?)"d-$s]0a`?0ae5@%dYoI_lg#sa,1plRGUY1eF9`fqKAj8:Y#?gr2fH3ep=f:*,rsLC4Af@Ci_U4o`B7CT/a9f
%TTc2r%=h.`/V7Ilh`Qhq#\[%#D]dV4$&#s^]/gEOrFu\;[o!(XG'[i04WeXVW0<a_HVB%#/'\O`!qG1\:T<'S/=S.S6Jt`&/MjDK
%GNgHDaV=$gc3RL/%EN$BX*Q&k3;6;\O/!hqD-J?C)4@/j'NK:8'Xh(Sek4&sA=tqrO"39B*C7;#Pk7*k*9WAkd!;fm/B$Z4NEYI!
%4Z#m\Y=GWC8a&NQ,3>hYX[X/iA%@NX&9HHZB\S!?3pRiZBd#KcF*LCT(L`>0M;^u0*5rOROuIb6D_cHSVd'5/\PrdRq\Cq4-*2+g
%5+hEr-o(iNa'J2(W.S"V[><&N#QrKSQne'lfcJ]"O^=GeE<jma])Ni"WK!]gMNhJD2G1%Mojl0G*kA6g8UPdp\S!cd>A9BOgV*=X
%rN[80Gh"S8DZ<]^f#"Xg-QLf;R-Ko=Q,AG]MXUYlWo>#!jqcW\?Zei@WS.FoC\:NMo>l$UFEmRJo*R+D^&jtTb+\:o1?*R#jsH2f
%=[>QW[Voee`k,M$D11OWao:Cn=iSF4+\GmdO7!bE;&Go8)s=ds:R4ff95'B8.fHO,idG@)Eu-D;#&]_jF^(g[N=aNSN>0[37g^8M
%<Q)Wu,?AaQ^-g/EVPFsh*<9:<M4,^CLsBA^KACiH^Sf=_j`#<eJP/CI#/0:(cl[aJ3smD_Dt#!ui4G]n8<b>^%AgQ3b4=h[:RK[=
%)%ht3cM(IK&221D^Uc6un!GBK$P,jT7j)g<94f>X%.<UQZ.)PCg^4R$>K"O-fWBOrWt:<Hfkp[C@i4++4EK_-8afLZbc%esH+t7W
%EJjhoX<.W8B"OB8^<W$K(Z#q0[D$Nu0+TFH[C.l?6]j)LgGnl(\8#Q3:@]frkuMr,([7Rej#-74Mh*D.b!a7kI7,-`V?7uchDH0`
%0VcCdP^gFt5tpPtREJKCT_#<STLLtHBHg=:][&pJ"b@RLOd08%6os(o2a4cT"uDsMYcuG*(;Gtc8$:l3n&6s-)<REs6RXL)%P<Qi
%aE&^O*9;;U[Q[#)\]d72l-"h@:?YqV!Z]gW];c8kKs-hs;r#o9FcIJ>H1,B!3<[(\@<\i")K3/F&U<8DF8"*VgkRCJOdI3WFlhCc
%qB!He14.8BCo+FB\`M[QV*'AKs1[*lCO$A>o5?K,N)'5F5rE7^nkOIBGokJ&/6k%.+<.d$=`lgVa;eP*^?k*]J($N`9U#2N*R`MO
%V?1Z'4R`-o4\DDJ2sgY(f*<dVoM#^(mgVEQ[PLkg3G(o>_5b&2&e^oF[P_[m1,ocL!R2`h9Ifjm9n5<IgUa:$Q#Y4"Pq0DC>T#."
%"s@.,30)S@6B0j.%3%hF/7"fAjGI3QOsH1;n5rni0QsnfPo3'.7q1CZ;It,]/QWoo^Lc\W+q;W4cHK=M0+0RY47b"Ph&lUL;;IS%
%)L`(Qr1?U&X4A-d80%oX7%Pe?=%U[Y>6NSik=Y9Oo`VW:8>t$'Ng%tO9lGf>g!6orVCj--pXAAW8kkpOpRX:c.-#S#$+PaL88D#Q
%Zcmra?0!j>?iT<h6'oOsXl+)CI\S`8^,>T"ScsaYZ"4M(_-%Hu)P/^*g<9(!,#0+:Z1'(^-c_,c$i'3lC</AM`\*CKL7K)!_ASDJ
%fAfYEjP0,TUMmXi51/cdn<G$mmm&N)%qQ(IP?(ip]^Zq?%%AlZ_T0cNW>G.a\r8g\jD[aj(P%bDCrdGIUSY7Y2=Z299hGfS77@Wp
%d9"N>@rQ<4!@Ih-DuHQ.Fl$Rk1LmFPg?gtmCQ_qc9.2T3PS-S7XAC-'eg9Yf]mS<`0e'12Ilf1"+>5dC%U.P'EHAhb7K/KPr;U$<
%q=E)8rjTocq6,+I^aR,[OhPm;j\_#hT.[9B9CVO.rTS(r2oV0Elb0A!1nl;Y3:6rn`Mf0`oJR:lQE<rh=DG+KN$jo4M`rP85[.,*
%9td&h:p.aMLRkon3V/'D*j(\hhT>/]?cLV>1R8L%ouVS13a1c^+NpVKW"!rPH>A9]15oc?7i?TK2m+7/I-&sKPmDk^ok!]pb$[oD
%TB#sok;_RB$VNOIQ`rp0_:G;?)-9i%:^BUGEA-Qm]e+F]rYc`.[r*i>E'KWU__qT+Mhs93F3Enk-`Q^X!0V(N%TYpJBiJqa:&<>s
%3mh0)Nf>ePNK.RG!%+X)J\HJ9)\N5DkK_:[qud%ZhPji6'uOLaq^:%>](K;e:E:g:1j7j&>)m0PhD;J*Q9W;LA97AkMaZoQ-XZp8
%s$^rt*D/XbNs_9keJWl2@^8`]JuIkd*`,%u_K5,g+"DjDnslSU9G).'[8GZ>cVK_/R".Y]V>kRR-%Xm:ZG)t&XVB:"Tk7p/Y)";H
%Ll2qCa`fDpqLEN^mEKiBAu:qljU?kDJ)n*sB5#W6@+)#@'RCE8N]:_@FG%7R?Ag:"7Q;"(fd\[sqkWKb?5_Z,c.<_gR=aIClF>KP
%UZ94jf9TP^cbi$GQH^L-1TtP!6/0ihRjY)YcAK*LnT7E4kmh%HBo?<!7ho0bq(8-bn7?HK#a6(t@eK4OBbrB3MLCtm.YcSJ&LR02
%?N"cDn`Ps,,,eBC4GZi^f6:$-C[.q=_BINBp8=@NAA[MY148!P"-u6E0pA'!g9)XE7YG215W\YT6q6m/RaO'&53bS55A<QuXcU/(
%GeonNfiOK%=pqFK890%qb8kRrP"!h&+HL(U_[k0fr57n8d4SIUqFj`6/\B-11dU*^C'^OjEmO5CU&QR$Ts0`L(Y_t*VoGl]GjPGO
%p7tE5p.D;tp5VO^GqjKcA1>UAh^^oAe$[[A@jQ0P;\',R=TBeVU\D:F?<<r!T"nUbC)dcr<3&F43X(D3Ce?<;&g0r"2UAtAPp8*#
%hVRS#l60_@TRe%p(P<kmZr`f:c7D2#c=AQh60J:hCem,_:/(N&**_gl(+n6N*J?=im4'lCC*bFl'rRrjA;YUdVpG=lIFtKME#*(%
%UJ(IrY[p7YI9PH6]7[iK$1=k;FX1TR\@+qiYjd'T?($]mFW`-AA,BOt1^qq6=(KYZ(SO$UW^o&oY4oK!eOR^eOh=V2oBN)/o*P!:
%?uID>[Wal$j^:?_6q/U&`FFBhDqMhUL9h+g<;?mb,g8#3)oXIsA$sXs-7rH.Pmkm-(9go?BYg[08\tP!Zhk'8GY)g"WA/&Q6t8!S
%Z:hBe[et/1hpUE,WW0gZpm4qEp,A6's'l]^DpMF+WAO#BD+fn\Dd:4L:YdalmTY^C/^7_T?I20mASo0XIc7fXK?o1A2+(Gr06Z'A
%Ib^8Rr%BaFq!!P5r3]2emC0k!-[4OI[nG1mH+44"J]u.%<RMQN5PU9=Us6"mPlSI&MMd$WOrUkH5SXIcrN[8J$?;&Z-81"q^q!YT
%>ur"[Y70DR]p#j&'Cu!\%)?>_bY;./[2kAP[@.nP/g",X)o_jRlL1?&MF<eI;t-Gc"_Zi'4+mJB$:juC5_ZE@hr^Z1`r\BcHfX'0
%o0f(43@>,ckS4h$;8V6dhP*0De.Ckh$h7AB#]4Dn"Z=-,<gBfo%81ER41RVPDaF&_\C9eYd9.JbgLk8@9@KM+[M]2f@NS@%k;&Sn
%Ep@h`I)k@7Rg]h`H+=X`orBL*Dg?9>eeB_m5Gd4sGfF97LYk35@akVk-?h>%Nr^bp-RPt4Q:6#f,P9?)m&t@OQ]s2+@<rGJ6BjQ.
%m<_q2n=(I!B.o'n25J`aeHpdKZE%QU<GDMWF6kaENfh5bD<#E6!b>_9TT->^MV)XVk@0gX`fX:'BRKhnA'HM2j50<G<s2>iNOsar
%7=rpFaursS[M]lprWl>\9+VZQ&tD&C7L1"'=pUV0Y`]'uY5jt`UZD\-V5)YQUe=!0Ck]`V'I9o6[KZ2BO7c_b4IhAQXU'^`oYjtu
%AO)g\X4eji^VW'qWT'a*$[iKQ]&Zii,I$5[H*=XlPY@`@G>Tdd=n0ZHcdCHm*4I>FB-a)!?k?3sA!9)lg)Toh23h"CY$k[B_XnX0
%"8fbAAl6NN%`X9:X5Tbkl'+sE'uOKuSA@.5,_EIBV(tLY"Bs3t1eIRo`B=55Li!Slb'/CINjHNfj<<62P-@=[J;cDLANpMa`.-S:
%;Br'1<7ccH`dZqE:F">T>#L-fYnqcET@]FXmLugF^Z=H\[CsRW/^M5HUp1qCPWh+"kHS3J!"eQ("nY_%+m4&NfPY5Ym,h+W`[u74
%1IlYV>GKCua:S(]db%fm0j\DnDFO>uk-!W$"5e['H6)BS8+j;9T"26)Z'l5]Eg`tf.DSM'%;`cE=OJTIfZeZN'TT+sEKJeE75!=E
%5+Lr@'t:i_;SX%kW1GKl><qEa6mKr?]5V@ej/Vp9#,,tW_ZK,.;`/=#Znct#WZB'i.ZQ#\n(?PV28oD/aGk)HH*9+q4(!`f@:56)
%M];>&4%J[l47q'!lfUpiM>upW=^hn>V][IRgA8NYnIa!"V9+'i'JG)D5F.ZV\rdYq=1R[d*#s[1m]WBGmI$Gb%S[SqGbhlrQ;`CK
%5a[%?*MTeS"<l%+Thm,2?<_s;!^VL=)Ih?G03mbDHDO;2c7=<VYI\bu`Ou0"n,@rprqAulI#UkZ(JgdIrtSjm$-(ZhI/t+q&?7Nt
%7k^V*Xg@g$cQ?\RO(nM(Gu^>rO&GQ-&OP=5%ASsQ>;9Sj!WCQF#gI&Y\_L2="V&Q:jBf4L^&3`U.^\7IN@P"8%5/!t`>d3.P5k6.
%,eOlXi].TSf$9d_n<TsNq<%UeekZ77I-c=3+b/(_c>;ARGoRO$'i/:E.j9:5*P*a@#I46?K-aOA(Eh<n$blZD6i1#W8k3nU*Sr&P
%G:AMUnolS@^/j#),^P^(PBVQ5:'tSScC-gr`BhIk8Ur9*Bh:8Hiq2",XX]+e-k2:TAML,FXqFK$_d=k/6@=tMLHnL%GUK81N"ikA
%hSZ`0*W'!eo=//+iqQ^ak.Ca)5%ckb9t%9Ol+Zf-?A'GQCHV3M'PIl&I$LG$,k!"h)D&_)4+7H9Mg3c^kt8Y=U)BXYOnFq%?KRBj
%.Y<u`1-YnZYfI.$@3fO[Y[lLe46RRO(3JsTm`cfpHZ#E7&2g.SUn3KBPCIXnkJ2/6NhUS*(E%?0SM4rs<G-rsSW@0@9.F<PAM+["
%Q!t-%)27NR;O%u4nH%m<N5A!>jU8#6DV=71^/+PAf/Z6oqEV"biWZ;Rr*K6fKM$F."keKp3b1><i4NPb'O?8A#B&nW/:Ce=^YNd7
%$Ht<Bk,G!O.bDA9Ne0&m!&:]DkVKa"S8YUJ2e2\hOnr=BV<8Q&Im@>ZPt)>Gf!drO4R:ai=jfeA6!#8am!+h6<e-g0Yk=gGEE+5(
%J_p'^lKme[WELiEC?I/>.Q._9:m(AIV7!>d<^q>pe-\NJX.s>h^4gO"JV+*3H*0L)&1%g8koM!iA53X5Tj?hBGj='5/ge_K[`Grd
%qaa->1)sr#6R?tFT'T4mV.siVW'Zoa6D&ZUNr1=\^/=%<+"CNr\"R,Lp5riaC8Na$HU?7]*qjnX`W"?3kU:$b3T.R9Hc+2IB;caG
%Ao)9:;0)Jb,M,D0%EBY%*bgY(9^F'@4-um70<Z7Qi9F;SQG9Ign4NZmUkg36o'[V<*9W*89Jm#S,`=1EIQC,If&9CmD+.(Da.1m'
%mmEi@,3YiO68Uh$96KW:B6!s3fo$d(ZT+-/atdj)"fQ1C,-M`%j!_2e+S%>9-t26h4UAdXeUB?M",(:_I-1@>mP<5F,.r-Mpi(LT
%IFM-LmVF/,/bAg[L"m5OApD^.;&$])HU.s:g0RgT=6a;cm!$WSrDfZgdU;]+TnNI1?i<Q*?%TeD.I'M1Y<4'$+%.#?#I`HZ*L-7K
%&RfIkAa:!/4Vrlf%/']Y`j")^p/[Wq&il?'"mg\I[Soe&Cun<.d@p/>;s@m`J7Ut;AntuH%28Tn?A<qQ&$,.#<.>\=8mN;A7(tu)
%&J43MMj#"@]_s=c3+"i8I"7`m76^[ehk)h00"dcJr*NL3ZIpsB=5f,(H_cF8*HM5>D#9##g3/b<dX>i,Gk<S.&5'q2K*4bkWg5=s
%SnaBl\jhi8rfXiR'&;rVmbjY`KkcO1'_p5se5fpQcZIuNSA:36B(!WS!+<\!Y0B36e<Q[3r:pTsrXC-u[<%u?ndW63O.PJi,-$ls
%*g-#TE<0sbA\s^7'OltHeVI\bo9i_o>h%Vb8@-e#Ud<M=lN\N$:Xj^Bj)ZYY&Jd!_Pq.S"C/=THcj5q7Xfa"g^8Nk"@8&R-p!,\a
%[.:#Dr:9[XrR(S5ADH?T$l?\C_>IIcRaLZ3$.X_n#K^o6-rV/rn3,rjONLR!Jr=tWR]%(9isacRjU;T_#!c7rqQl?,n3'TX7FGI6
%1Hr"RMiFg4gAT2[l_s3i\30L^gR_rMCjuJ#Bt6AD)Jf'[C?G+g`.'>O6nX8#f^FN7Ru%])SfoO5>"Oi9[X]k_$L6.X*UPD-Ebmt6
%,Ru)]lq&uG#?`j%a>O&b0X4jk\L9c@>HC/C!0!=DW?rcQnSGVr/*b?#7<"4;*-,oBEffjq[2KUHc:u;3"4Q48,+m#RN29LU_!dh7
%EaTHYq^h_"*;O(tq*<eM,C$S1rj2@fKtq0e.1uJqdHqd\gl7nQ_Y3oCo0i#SC@B!N%E(/O3(=ii/o)^C80g)qY"q^T92F;,d=mtf
%eG\EWd)"G-O?R>RiRPZC!j*+-2(,-u[@NV!Mfiio[0:n'NG3I/4hIW8,lm;bRenU-pdc3hC(?iE6;FH>='$<iD@<k+i8i%'W+nrT
%npJN.bg%2nT$8e']ZpQ"3`Oi=K:Ztc3)k5fb42]7^Ia_jXli7kfYI=p`P!*U,M%#I-bt9L#G8+RJg\QjMtY6mNdG+ZOC`4oo-=+[
%Abp\IJ,f7ZoG/!jRi#YsE?*BS;ABjB6XjB#,o.l?pOBtl*2+dIoCi66!pEOU^o%rp^'+Cmapn)iL_E]=?O;]1n.%o0Q:C'iEO,U$
%$N>B=`'<p#pkq2Z5$ntAk$[-9l^08XGb`15!\VHecFt*1"(>*Lc5:01=W\bOSSG4ar&jp$eNb?=6uoGW`U]<6h@i!U5'@o@SH1Ik
%$"klQQ^heR!`V:\LiY#QcI+t`_L<85jF7+!q29^h*]Z]S._kX$;I85oC'+?HF:3T`8Z56H@jjjq?,JDYj.p6IrK4iA#2S$f]'ec^
%_CKn+e7P[Ma_^1pH3K>A49V:kDo[Vr\/T/_o4,6,q5\u3SR?&Ddh%/*&S:`gn]c5Gob!?c^R*$mWU/,UiD,=,`7HR5%I\UD:?965
%%317mGT\fMkJk=7[u7:Nr)R_urM/'JJh;95^bc=]!f&u4q.kHH>r\+dhlDL%=V$UDP@.&ab@&IoA+qNP5?G#$1q%!.j?6b5_4iB=
%=i\m=gEZ6E+RnPir8Jf?QAcjJOY'@oB-m6=nilYlOOCB$!hdOg7F"H]@_+7?)JWLcZY/Q,h#6quP\e9EqdoaLdgrn?)5hBdLmTZd
%h8.Ke/hWj_X$#\)IaKg_%1Kp^MC7fU]an>(638J8ZSTT0`@*=2_]sID(M+[EdV2sFdK61&/8>A5NoQ!N6*_Z*YNSo98k36fCN:8B
%83="i-#s)m$(]u"?hA+Q76aUjSO'39hOuS_#=S#EZKE<?QPkcaEH[2c+L!;!=g_C17kTrf%2hPY`J3amXsB?deoR^.il-0bV1!XN
%NG!04+@9a4QQk,!N@.4u@FE9iIABq:QqXc,COg^X<:?lqhP4;p5pL?&#6k0E[%_;[j3`VA8q_1!Q;!4,'VmX+=)jU/M:9p&(l(lc
%FQs_,]X'fi.Npd[qt/O2JJHlD6KF8V.VY$VKu%JC;6_^/;J9p8Fih;T$8!$r6mg11SFo'VdZVpo7,FG%i&f4Ggb%qnn8:cST'9LK
%?!X/Np]A4WeUG.WMuPgnDTQ*t9Quc;auJf7^A3fEV7r9M'hXm@lq>G_U[=(q1&B39Nbqq)iX;$h;'$Dd6]6i1:Yk&u'G#f;5YfV9
%:f0iFb:X*4<*C5DT&3j:;^0P<q73GjF^:7&->2P_$X48#4kA=l&W"G9G1,YkUjPU<\\@M`h.O)QgQ=EA8rb]^X^$^d-WlioFDXWr
%;7n.^f<Ar@lBrcuL-c/I,,u#@rQZD-g-XQj;7b"OcK/#An)+LLr(T=spujNd1gY>d\3]^%!"j]1X9Wc28V:1YX-@sDo@0n-'MaNr
%>dSfYS)p$b%VI0#QuQ.YgFL`<TaXGP^,$).?6J-c8o)KL68rEmjWs4!S`j<<mdTDNdPSXLRPa".K*c*^(b6XnJ.4>M!rp8EJ?AJA
%V^O35`1uJ8;!*)'d]!`BD+/o]Q+i^B;D,pRIFip%7n-YVTha&mlP`BioRK(mEt$C4C7P!1"[?(KP'"ahpo[m(R8SBY,rD[]'uPC&
%N!KK5$H?F;f]6h(ZSa8tn\>tIi6&*"PT=Y4Ls`nT009[b#\R-:V"\IZ7eeK\=p!Z","Du?qGUit8bPQHAb)F,<Ia7H!=p<hl>)3n
%^@]]g"b8<^L7RUN+#OQm?nCfl(1d^UEViEN'tmqKon>F(*ATgZmn$3Ad3cC2M]R\>iBeU-.%0oHD9O=\3Z5YjkB(;0b!%V#H-YZ)
%Zh5'j69$&M#][#3f_V![M^pDdgR`P+]XSi-aP*dQD`#k)79b8A_Hj-\qc3Mc<a-!&#fZ<b`Ys[O#iRfPnPfk1%cC>1WeS^Bl'N$k
%l3c>&diad./@-W%kqQEK@+q>:4P47"d1K;h3uh>Wb"7EdC-'#ArM@O\#@4b`Ig?'L*b$'Y`^SYJ'MX&"QXUptR]VAC4>h#eP"^ou
%[B7HbN#sg!=\fU3>Y@_[%ZM:ad!hd_>47s//em>_rq1)WSZ0'H.ma3ALjHb\07'NiAhqYmW=*MLHSMYTV:)*4q.gJu(?hUCc(ETq
%>Y0@JIXJ%mbuI](PXO\kdth4HT>ZI@LC-s:XsDo@96@P+472:BO(8:bXM*_;;s`C<a@DMCbAgH&(btuq1`uZ'K(_3dD(s>[gWDeB
%3=qs:dE^`iCXpSuLKa'ZKq.c*_)RY)Ci<O5b>E\[ZTcDVZ`)pUb+Baogf8*dFNj#,A^)uW,]AD$Qdc'#1tEOB1Tf7$o8)[RJHXcg
%e,Z#YYTkiUI0<_b6ocho%9bH5UskL)8u:hXg_O""*-JKY31)>:*L[MrPc/jU5>UB+;R4Q12B+fE0n1[i,%MX:PoeI!F_.%GTFI)l
%#hJ]P"ghHJnCkaUY4M6?D`n/diYV%7;8_%0H[rm!qQX$7h:J"V2@iPg`6QR;aHPlfd7VRD^:*7TnH3b;;H(1r14fm#l(,dK>P'S:
%Di+f-eUY[R(I%$s(OH^e2K'>,.4?%IHA(q#Epl4*"GPPH9V*JGATsRr)^>m6P/-nU)465naI#b0q>*IF\sY(KC"g<]HC^FM`r<>!
%oO@itK?HsNiqUtW.lV0M/h9EuKDJHkI]9;%*(AS$W;>NZ*[*mm=[?\j,b147V&pq;"dN*cEO\8\`N"ZFE8.EV",(cs,)13^%MrO5
%,\BR;%[sT@H5'):&?t-aXqB>YFkMOWnuCphSHO:D)o.m`ACg=*8Fs)oO#_DuS_H4.#`5e#]5(\,-`X!YY6FUbI+\phL+Bmt!Q'%b
%Mgh4W4RRNn$`,^UBg`r.pWRk-Z_^\O7A+aF5MJ4;JLs_,EFmVm&3pe`,_%9M']>U3<1e7_`Zjat_pS'UNNJAB>jb\d%0/9"P*o33
%#t3sV?0L:FL!D]p5#q@88N=]II&+qilK2#'#>m`UV;P%j!i/S>KUU0B.1:EhlO*Q^oa5H?!OU&c#Pta[/s9[T?"M/A,9Onn8Nh'[
%QSLcco7m,a3[8D;T(NKe+E$,D7Y=tbPH)r:IKTi)ql8#(i(g&k^8LXoi=;%3dq:Bb1BWUmmlG!^P%Xn9EI1g3"]T6aP4X,[gX'VI
%enbRnr>sX20lEN/oe:^-Pj'=:bVM3phl<_>99%E-N@Rrp;tts"c&:\EWXj=@$p8E*_U)E@bar#'I77Yn<TI@9qoiPa,MPt4Kkn+Y
%>7uYfD";Y&EZV\"7kB+8(!i]BFgZ20jtM"__48@WAg5V6='09WY?@Ed!bHH#9sd8"rXV`[D'kU-g<Hd^C\;q4?IIh:m'$_e,V[_'
%^odYZ\<8R*h<3YLC;/<[RmE<[7:ACJY9eh)\JNiaLm0]pB[T>VIm?Sgk,&IJPrjElfJE*<;S]PAES&C6UO`s+'gFEa4NtRb(YLcN
%ZK,P"!3"VkGhPc`#)g)XT.BH6=75eIX0^0^j_L_c[#KaQ`elO#Bd4TDJI]eHS?'2n@ZK0SLQ*7a$SBZsUcX)UqD&G7G$J&EaMN^;
%-/GBR47?ibQUsbP'610>IlpLR)J9257j=-;Kt[\=0Dih<Y1m''iH\\o4-/bW_"O$_MQ@OA%W#j+1<Xab_t51M=Sa0bs6bjC"R5FR
%Sh_^j=A"%!?:TPrAcZf<dQ49J'&FBX"^4)L&tCPij=Yir/s\ooQ<jetN^AP.r.>CA@biokp;X8r:onX!AW/@Q1/u%$Ds.C8e$F`4
%iWl'Un(H,"U$rQ=,O!B/2=/'hQ.cjtg7hrO,VY#]>L85,ZUtsQfp7coQFOk74k[Uhj';s-[&R'666J/#-^>AITP`)!X_rE$0.6n=
%3_CjF]B.sqeDVOg[]T8H=d?Md>o($Ym9LKm,idZ"CRMPd,6Ynk9B^u<Q\T`cFuXi9[=$Mkg97p6>G_Otc3-q2QK'fr9fj!$30\Bs
%$58;Jb)uZ-eujSQ_rSGU9N8[Pdi@UmU/EcKE4V;e.@>7k0Wm5'TO=aMS<5h4^i+gG"Zl*R?!SUC$.D\_l6M/<9KIJPBT^$6eISG,
%FHe*1[",T*^K.e]H0-qNNZ0e7n0.V`l$O]VN2SpA,flFo6%3f*M1:3UI.h>-SEM8\Y$5J/2&qpdj?4M,Nbc37pZ4!a1i59,cA[R$
%D=NM$P-\DK:hAu:Xa<^)P\(;D@o?2YJur0]L<N^rf0;%O9;'"Z2"ZBQf`R#B_:8!#Z<&/TO$NHLR)G7e(=-\S)n7'u/@:*]3@9<7
%hM%ug`#_c3enIBC9mom2(Op`N,?H-[J)n`/AlMMA$/4S5S[f*_iK#-mW5;T#*5=Q!qjt7qYk=`uf,!f-YVeXCP)ZfFqj:[/OD0W`
%\+fi9!JpB;`$HUpq,=un!PS$b?)A,9(K(U1/N;N:]<d-QRf98[H&<51*5h;%>ssH5!AC7B,_i2M+tB\>o]O3j$5R_cOaWaHr9MAb
%f?W"I<k7@"PY9&-AjO/&T8Ys#L3-_%P45gPoLlo>(&"$k%%I`JZT;T[dLE\fRH)_ZMO"70"176OG-VM1HP#t;V=.+'G'-?!^fF5B
%m[GTf;4;Z@k^nSX;Q_'<JN[OCgnfQMV!NRo0:\IIQ<Ka;d"@!RS.B-=1U_1F3789ge1n\qPP1;UM]@Rdm<>'APAj'Zo_5fURR,G=
%+[U3,bui's<;bO*TOg"ATRZQsS,2g`P%!t(GOFecJ-qis&#\s4?Yma]":-E\%$?:f$qFAGE`>@OoQ3%qW&=>Ffmj%Zp$B(g\4Zlk
%FlVZNPCD>5Uin"Fl4Vnk#])N)pUq]1;un-?UZL3p-rW<ihh7BbcPQ;il.M-t4abgF"UjP@01qSX;18Sl-sI^'!t!&_:)d<7L_N'Z
%3QJa"U/cL78?aQS)-RgJUcPXX\[5MAkIQ\P;2lJ#n@j*LMFGnN3QB^a!fBs^TUb;==@WZugda2A\k(Aa0EP;D>hmK*:6h.YWq:%b
%AA-\;+S.m5"qioV1uq<0N!nMp5K#q%e1LB8rSm52V+9JuRCh#/:.#0--0XD^q[ff7mlcQ4&KAuI(EQ$<A?3fIlcs5r/o`k`CSH]/
%<fD7*4.;K6Q)X.bOLBP>8k+\.mtmN(e0Vf,L:<j5)FM(\T$9nWM3K$\qb1glq5"oEXU-1r=X<N&R&[^ai]72AnERF;HeH&O<O\q$
%>^c%e=]\6dV/,ZH]9oC[gI4Yj-`-qkK_E:rb8U71HdN?jdZsf\1sOti*cp"iTq,YblBj5=%&@b.J0VR=V%UICL5bT3>,"kN3Vh31
%<O,,g&"7blJp0,8;`Ge(BJXapM46P8[,@<bE\Hoe3o!MeIWCo>j2W`Y.*Wp,SOp)Uo6$jM<VHq+%V^fHl$cpLHe-s!QE$ihT-&@I
%]giufT`<`OZ_JGE<=7qNh\76_*[jGplTDI,3r(I@lQY38C),oUet;h>5l'7.lq[jkLYL\7#WpnKNP9$G?$0@nf"Tc$l7^+^V7Pum
%F5U:l$/qPTf11\51=n_V"O*GR.:lcm,W<bB]V"6VJ;L[((2m_3`6*>MVDDFchB>%%/t,o^-ld/J)Ie#NH32sV3r?Y)'ZJL4kb*ac
%?G]I7n=@:Jo-V.u=`g3\IRGPV)u*SiHVq>M_,>&m9urY@f0RTX47:fq#=ja-7l%0V/WD@@^BBU5^FE(N).oIDYo$;u]p@BN8RrgM
%D@_^)ge2)!2COpM4QM\(UKV@^6FR:W*(c:WJV4At`uo`kT(MLVCP?E,+'#E,(KM-i>ZigeI`#K\k>sOAq?uiVJN!)1-u"J1J*5uZ
%/$9B!f#$Nkn(L]RR`U]2[_6'T`XIrJT9elrjs#;Y(sa:g/q]at0Re[&bi><iH#CS$rJ&^pOMR+h0?m3P)(_F.NBHqZK7/[*nIpmX
%gY5%iE4Mi@3K]Ih>:Hk[F(LSBS*>VHE8"!"6$"T-_[q0c1mJ9kH+_K1)+VdmB@P2&F>B(TUK'mTH\AoGGM?S<AT'W!%;e!<W/l9c
%;USGS<!AX5MGohr+\#ZF$_i5Em1=L*+Q\_W[n)1kk?Iep$O/f@4LTa-3Vd<.f<91Yq9$;1hmhT>:?-2l?t;,UQ?RqsaAR+nbud#U
%iY5\!a/`H+1+<:(Ggg(q^,/^nS_L42I[-,kJ'rZ<)Y];rX^t7+/t,^$qajlG'lhd"m;1`5F13r1coHL7l,BHC(Q>Y2Qd/YOS\g%2
%5"#G_KN#:VO<-pS@c0lP=TGS+nrELuC(7H,;cf:e;ugraRaRY@eT_D8k7$cp<D2j3bOTRrkk:ZtMfSM#Y?c;=f-i2+8!3mRVT>l^
%=#+dt/XKl\hdeC!s06s'cgc<o>(YUrX,(>l@oq`koKKgS>a)eZ%iXX`W^K36dppbPSP<+,c&Q7l@"Deq;sW-kB9%S)l6PgdlmQ-i
%0@_m[G,*gD*V5l-AagY]O>'D4X4E-bPiW<Il\L.%UlEqVe&J?jcrJ!J"8,D*L16ea'"N,W.`Q:ZqM"OVQpiQ>fWjRgUirE5r7$\M
%OA9FPklgf#ah!_)X6FD-eLDh#RWgf_1C+jsj9:t,`ai$0`."f";Bn<r/a.q6n'5'mi[&8rh_=WWY4-Mta4<&!q95Y,;cECMZH_t^
%27]9SmCJ+&S@@bX3+SdQ:XWkhs.uF-:5i4dN*k&TiTds+3_I;DK[*D$Fh\Y!dCGJa!=H%J:("J*mXT83&#)<n1JoJkR!9Gb'[Q;^
%:`=:%4a?OKX+3>\<XX3.ctKT(H`t<Jm8r9?:FL)nIb6h3^s]\[T26mtH0uO@r$3WfY"IoMNS0Ub*-rjH]QYq@^qP,9k([<G1CMrA
%CDU\#fAp)o6g=m52+BaSR\_G(`DO^Q849<1E+P(X?bT.+p`j_E*d_jip_R$(EHD0E_.hnOR=IX?i_Z[OXaVm8EYijpG"l;s-/BWK
%"ouRC9f4D6me,F;G[]UqQI"BMD]*MhRsa'ag--ugkCmPW_7_[g8(>X%TPP\=bX8Lp`VLl4p9OiI#:I=PjH-rl^uu!c=#'/gbHYD$
%l&::u\>sSVM'^=_F78F0YgltnF`CTgmhN*Gk&;[Rp0*.BE8In%01F'pgNnFW_+&c?%nt>60;:,E/q18jTuYOJ^K@&R.@QU_T?lMk
%FuF^&DK#o$F;+j(`S==3Y/Vh=Xgc?KA?_1C_Qa93pKTjD"FDZLKl?iC1Xpa%j0MuA0A?4_53Z>0T'k<M;a"S?X>,nK6tf/85baa7
%n.;*mpN-EkFiD$b'Z"c2d@8V;>7!h]m=EAn]2D8P#:%lGBX\9;+&KH,Hc7p][_LbF/$QLUn?t*\[-PA>C36[G25Su+Q$q3lY7_ZN
%>Y6O:,@1="_W'S)TD1s$@k(0`"'`!NcQF_3:3Om%YHcMu),YsaT$qjSCm5YdZu(Z;p.Wn`LG@(;(/[/7ESotC-jb<$/n\qmP:-5t
%/Z:%`Du[CXb('H!3=Cm+:5eUPi1PJD19>b$05=o#l@+%n'[86pWNBMAk-.'UV;NF[h>;7o,$$4S)sLl&7OD=$Nh>WtEtIK=[+AgX
%cRkepSmS+8IQZhqOa>AW%]3kkLZa34Z5IH.**K=T:4ueVHWJb3=UD\E=\(0rI]UMWY31@Wf^0'+oQ5'2U38Ul=LoR",<t<&;"ZdG
%KaJpALMT<%H(jPO/n=dR":U=fc4'aKe/&%en%?hdD!smjDX>TK6)[sDT=I\JAeG>gUg/uu:sC\W##h`RC]LGScP4KoCPV8ee&aU?
%3`p&LlqY!8&c*L#ekW&[9J>Z%Er)PKd[sb*J#4.^)WR9Y<eGm9W5Y4?1'ZEpR"!Am'ekoRHd>5k?CoYm7aLM!?L8Yd't%96IBUdf
%XT2ZCq/(;5h"!hc=1^[2A.WD//SCdE]h1n:-kg;;57='O7CC_Ol;qZA9J$<*odVa/oOHA,^j;"2JrS0HKaU_WT&C6-j$)fXN9WAB
%.%0a/Z2MQ,KM.YOV;(jF>rl%c$o&qis'Y2h3UI=,$%WY2d!8e7".AM`?`n`59PJn51WDAA/mV'dWa7mIf`HB+j#&>4EGU>:eq3_k
%;mlSc8A3B#j\pdMiE3b\TIQN#bZS$EP7ng%qUJb%M;!!+e'E09mLuSiZ!MY@oS^+V1KP5(hCdjRZT('X[<J`_q^MgNnppU"LmYL[
%<?1fjfEq[]Z@sNu-aSLQMTU_<<nAWC)LsQ43Q>XO.*%nRP1G!WZG,9IILei0l;L!0EKGVSFR;eOo$9/S+\a934_AM`"2M.A"EB.#
%+KrB1=UWaYWUGQ@fP@hC\Ef#a5dlp!dHA4;[;fp,!/RYn(b&>\flc0cEiV+[l52A[_O&></gKthi>i7S^Xsm<dUE%0fr)eu493n*
%oSH&5F'LFU-Ct$:b(-@-.Bpca1"Y>9A2\cM(uccbLL<<V.S.9`'m*b^9?L]$>bA!O!FF&:Wk(q+]cPYqeC_lk1r*Y.3H+IVd2!=+
%XT"tI(hRek0V\V9GeqNKA"fJ:iEU1h/_r4P;E./#kISa%E`WpSf+Ni\lH5[`(_3Nt"eKM*aM;bd$Z_Zj6\sIW,mIoV&M6]O^.2?!
%M(@[*qOTcMR3YmT@b,m,6&)=cZDn#PA4>Rc2\`oEhq)cp+.sMb5:a2uL"DF]e814>%`h4X7U.e&C3N*;HM)9qeO5e468'ad#gKE-
%R1X,p(-IYPic=9k)\.^Ka"1(fJ$9m9D_*`0Up0d0R<:`:AkQ5ic?'\DB`TZ59XDt#o**J)1!qlQ*.FHlH%s.K,`a<)H@eed1:-n/
%\b]jd=4.e6XM3%O!Y(IP$@f/gc\OknFRAD.>a9T,+]NEMSU\3s4'b"q\iB_1Bq9Ad`SG.O.)Lg#,/*#[I:6k`#0uA-4Xrkdjk-PF
%h]%B\d_GP)<ls^36cR^^VQV#TrHqT8UGMmN8m]$QG8BdD.R_WO,3d1R"/q<os#=%+e#JtoO)oH(m-b'J78V^&s5(-aj@FeQ3SgZ*
%.o>F%f#q3^Ud`58q]#d$oWNTmJ9uZaX2Q=oSMXEk;nI<E)rD$lFK>,.G&lDd5Oc]7F6cR?Fh<9-O?$0_6Tl:iD-3!Fh-lkt,)A^$
%O]s[PrHK9ho!\#J9do8i*pI@RZ$DE6m0Zh&!s3X=i\780MZBTK!^1F3Z8@]AgU14@@@W[1q2jf>ago?:ja(WI`#3BPI(9[_<J9VP
%k7W$Y&)55e:>T6GT-:4'eR9s3,G?K*0^/G[]l'FTNLF:OXc9=,%^%4+N\RZlU1b"N6MIWVs8+@QJT;RA"EV+B<Tr:Hc$q.XkWab:
%,Sso?kl4pNZ=KRP`/Ck\3@D[H+!pTs]$l6*/_p%>@/J/7%aE]1HEZTLE`kS*HJ6a_pTt,K*+dK0Ud8Vl[dQX2glD&]G=qLHeTj+h
%JXQ*gf&Br[g@DMYEF#)g4,#P8L;;HF)/J&SU!Npo];HB\k$>n/Y_AlnHe>8L7WnX>`Hu`O=LI)so>8Terf]MF]2A%C7]O5S$XlZ4
%VfN95OJ:rc24Z%cG`R$i;/Pu2EU:^&37!&^p$?<N$DV3;[74E%Y?\QgM390o%OfF1DhZ6hK9=n)LSOfLNICQB_RRfsTYV3sgi'[>
%RDs4PPh@n6g0J3ih6l_S>Ds;3)kqi!B!%UaUI:8>4kHP`YokuT4KSA3o9ViNYusI#b6^PX<Di-5pekR]J'aQM?fF#,M%[l@k'L<h
%2STD(AEo=S#6a9mnW:?+^c;Ob))r!bemEmoY6\n`521t4SC#2iX3:_5Sko<-?jG_)pb.TjOjSdDKG5BOM9pW5:NX&=4R!nA7lY[7
%l@@+>G\Y+$31f8=Bdfl\3l*E?-bd]gA.Y"9'K&G=[;I^E;oHGdI2-p9XW@4dcP&$%)53dK-D.:5WCrE9;.N,nM@r5'BKq`EEf;^d
%)nGK=b!LsLC%HP9MBg3DXh\-(ME'`[iZlj9AMOX&o%Cml!,r[nDS97C9hcT)"c]d*dA8.Go4!Z_c=/!P'mIfhrNR7c[]%LSY%,i4
%h3IE5QOF)q5r3]O-I?n%qH`.RWA'/3j?"sM4W5f_PrO6<2<g4qoTTRS@H3iQP\O1sCdsl7*4=dc6i5+%la2_j%ZQRN?$$DNa1eEu
%`2K_9$9gt_06R6j1L7K)_4UDHMTUL\e;';eE'(3K3>hfQ+\"^M)F3mPf'u)H,X%sm4!@'L.`50mn&H6A6Cq2nI)Gs2NI[>E;4"F-
%rGYqH]+01&WIRbJ3\sG18Rt->M#Q7lqC9q;hh(hk[e63YH%Z)[[.U8-#+=T#/C)WbG(u8.Q;VAt?cL)c+*?YaLnZIkVg!Y!k`r;B
%Jbqu)T&l$PY_[XLp2DdJS"F_>>WQilnPkUDrDmXEh&&In>/H5FPWS#]ngBDOqaq3BII,@EV[67%YH3'fjf`Nh:^(kX91e'WYoP)l
%`]]+p/^fN*F^-%t$](+Qq:("N]#<`Z,bem%"Wf/lmlSs[!UV7p;`2mYj7dt&^(9FM0._fd6aR/7!eotG19<AfR]$GC!:[Qa;J431
%>FB2HCnWemT+t02$:O54h4HF.G3TM20o;#(fZi8.f@ZlQE[A(bdu:D4/j.M*Oq\A4KDl3nF]\k,cOC\@-ZS>53C[[e4s.euh?-.G
%L\4auPgTHfjQ")EF'B*9XbmO<-u16X3<jn?;Hk%LYZ>$DM3GsjOrtLrhD-@EECaY,`?BdJ##J97V8u3SEg\^uftG/?8I]MW%eF#g
%I_%j`g[R=bUI_b,WgN2cH*,N+6?d.ZDTQl[gut!o4FgaF)0V]SNqRl'R6RGFjs<fL60_(;3gi.+*l3t_V9OS8%.HA.+P0Yn[k/5,
%-*]d*bN((10ll8tV>$8FDe2qfl_H=[q%<V1]jrn`Zn2$`"dl2d*HSXeLhV_2k(*X&/M#p-rWH:L<"p6)YrGaIc1+,!63Yk[[d@^`
%>BS:V=lYdn'df!mND+nN/nW2G]&<CiITQp1m86?1N!/N+Zp+>pmYW&TW]AU6n(?*78A?9SDZ14OWGS2u=t-FLOX+<>7@dba+rp]V
%dG'CtHn9R[=2k86((^-!W^jZWQ7F@S8K\R=DY4s0-1]>r]N'8;9=W+bF=^k.j]"SfToispgqATiD3d(F`((iQcOt$@d)(5YU=#H>
%O8"g^6SdU)5_WTFmM)V!]bIdQZ_tN>Ju^qF"S7D%cuk%dh9$1N%gD)?[<?XJ1qMdU<mg__GKo=$--3=\/e,=OkSKJOoc>P:ITpqk
%6,?l-J'0/TUq[Y-Q)SA?!'jK(=h1A\fd)o_98!dF-kmtq;9pVgZCEIi$'d!aaU:PS#W.`0^a1@EDh5ofJEiWk;qI60!DSQE&W,+Q
%NF>-OJi?S4V(gAMHAf.)0K!)Bck(o1SkA+%L=TR>Gf'I2@okW(Z9)]f2b.t-5%d5i>&%^>E@]D*?`Pm#pIHiQ.?TFH*1u]MQr(,r
%3Bfq%iM?h1Cg;VVgj84"1prN^cN>G;rF!fJjIJ+`n]opIZgGr;JJ)"FV`,!fMhE:O#?r+sgt3l;q[X[:l>,t/q#fln&>P/f4H^L)
%,SW=E?=cY',I,4B;DU(Hea4e\eWqIUO`r\2?mEpC.g91Dpq4K&g$.e:#LFQX*o3HTYj??ujc\nMh[8He8QT47SR%4NY'R.6#N&?P
%5jpVk+S%sT;spA0"Euo8dQFqBE0h7b=#9#=(1WDum=6Dp@e>TjfR(E#&c.gaI&6G>5bK@G5\)RC2BeK,/iiE2))Na`E2W:>_aoMg
%5q/RDH/-r=^YA%`oJQ<9T?`(8cdb@fUO7ojApqX>9qI!R*m6O#=K0!AEOI@]EKtt]pF@pl:`j5(9'BC)@F5Z]c>"J4W0p462;T)N
%%ft%$aTOC:0c/cY17.`M>MN#p]6gc7d>+XiADC^DLc.rmn0e<'Q'-/MetA?3Xa(>^/^8"\l<[VW+rmFGG-(/gFO0Hg['lE^:^#H`
%n,I$WlA\D:L8ql++tJaHN"O`.0qEJLQ\FZ7Q+MGt_1Wt]0,d,XrZda:FNBf?9<`;*3A'Jq^<<jML%tF@)coLu4$otC(fPN>$e#ui
%Ml"!*5YT4Y6>_'`"!`;8<1?qT$X$?]cUq[]/ah?9-9\sCo/<:'b6Lbs^rR2Vo#Y,7RNl%)QGssh!)j4o'A&XZi$\EHBSTS:Yb)<6
%6pn%T$MH952j0I'<gh0$ElFkiY0a+!D9B#3@aa*X^[Ad=/m4f9kPC&Ie#o`L(WiBs\V8jLU'Z@FO$YjOl&IT++7Mr?%M4=VMU!)_
%5o\4cl_CPMP2u@W/Q2&fh=D>/n?1Z4R9'IEMY[8n6&BnAQIKlkq[[)o/C`@ZUQ/>I>^++hqm3Q"h!2s&'Vlkh5^^Hm=IGVQ`[Iff
%Y%V0>S3/*('fJ-7g0VqkpZNJ>nm2uH;n<d7OJ(N@=0]1QOdp(KE'YTXAEVLJ&1:^GXc/B9^+,.Zm'@b(lP4:m2AK@,FpDdIY$kMb
%HQnsc8ug)_j`cAN]B`HF%R6+r.qNNa67t(>*o[6<7_pp<^`ro!bl8&42sS<V%;j&#1>n/2Z=Y0]Hq(O]<J=NXfkA#LWE#2Z`U[/@
%_nlnjA>+(p^a82_>>Y]JIqn^1bu0@Cb?(+J`/;7=EpJ#<3U=U^N:X^gdAiAr)W4o0!Wl1^1.Cd\/U7<e++Oqn/3V3E;c7$>i%/"l
%oP)R^!#\MFH,Nf:X@G=sW]ao*:hS&<6I5U4(W3>PXaf@7bf\"DJDaRI'LGcDi^^S8CYe_c9c3o)X]jH]YH68dOM2ZE3O[2fRY:K>
%)3TScn%!`a>J5Gm/lPi\b0Xb5Uj`-FeN?\u7;#J'Bglm$s"\n*dI]5c[Bj8Q?VTTndt\JcW-kfH;,&jiE11a67CGb?;G%md]d3?h
%`nOHlK&E#2(f_lkF]6HS.Y3<iI<FGKErC=hW98&%ah!6?6Il$F#Y,eRl1gs?TK,'"Q6d?FacWP*+]sadV2R/B:&N&7*e"(gfR&r1
%8WGW!F$E'6#@&C0<(,iYCl2Q=\hE"-+R2\WJ*^ZW;$Xs$'0s"$Oc(Zg7AR`Cge:`?QiFm_k"EBmK7*PIiVq8Smp?SDpm$]r4*ohr
%,Y7ueq4=&(@1rOMjRJq5YA;3D0&5$4flaJ(/^Th)fe9]"LU^>bL$VjBj+SWYd9$sJYqCqXkkMfW8L=Q;P4E+RTK(E<[]s;3[J5[E
%S+SgjRdS[OJGeq2TF+8u`QAM+6CiJ;8Ss4i`*"tOo4M!',GiN"2/5^S6SeL!!;0F\jIj?*F:/a[VC?OX3GFm(o/X.OmFfTdSBuo;
%\ZV=^XVa;:qW1H,AZKX;AbsADJ@dq2-lsP0^;!D-i)nIP4Xa"u<LE?"gg$CZ9%*Q,PdNkFUJo(*eE(5:C`\"SnqjLUMT%*$6'-Aq
%[D&F\BW&TpOTHu7N[nI=]c2&g6>)BGi/"XQ!u9@[(5_^Ar3EmGRO(BADFC.:?d>-$B[hpl7Vf=Qaj,+%/026Z-!BkY7'rBHq"IU,
%Q2;+;/sBkjj'!$n&][RoIOh](hb60(=G^]FD_kt[m"3:/_uI;)]%GcACplgH%\FRt3!!Rr[;S!^M$_i_O3m?;#l_3hfY:frru6b;
%DL`h%QDqq9'<gfeMY]G^%j%=GA/h6GEj7460,"!"_fOl=--4&88"DfEZ7!JSO8&Cn?fIthnFJj>CbpLpEZ_dPkI^KO4oWQEn4t*m
%O&+>>cekW2l6fC"a2e2NnF0!hq'=[A$qno&?;E@TPp"e@IN^g]p%<9qXeVIc5HVF:@33,O3n@#2!p=Y[B;ih\->HjlO`%nmWQ[2(
%Kr';0o(_9IBL"1=GUjuq_/QG%m;]b9*NLofC/5AS6+ol>rebuhlc1eeB,XcJAiATp@R;5$hEfl54)KJPF!uGuea9ffCFS\I$!rNH
%kE<:cKqWfXZ;_.!$,j#qdhl@`BUgHT7C?L$O1QC.rS)iE?(i.tj5+X3H>iDW0n5S&=ub-fd%-TFdD%gc:nlDiCLO`6MHLV3:"P>7
%fU"jLlegL1^9n!8C%lI+=B2pf@,Zuf>KMFeDAW7>HNU+op>FYdeuQ0S@um#NLG8:cLV82+<rHl](%@aRK\5[R)KCA^j0p?lJR55A
%MTg(9">N<R<@lu#Ht'&Z.uL1,Sc"sZ8mbGh1fch"nm!Q,WbG0Y7>f-jFHcpWIY)9nB:,U2%]2+gP_PK5.?>:MF>bY%mWQ"VdQ-/o
%Bh9k@5jG>:'MHKg4Y.oXqP(Cq.[84+PS+E>9'[-_JLqL,Xc>%56c-&ol/?p?/<3OVY?6KV[;6)`AE+)Vr!lLN2%69L[nV5KW[Erb
%%O%"H<Mi<ub'PDIg52X"M52a$JVE$5,ABk&<C<$>ddTJN'1pr,!\#%m4GDq\.[$t66rNaj@K1<)3KgE<U.F#,7+-?AUj_.hOn=)H
%B`b9WG^7QTdqM;!9V&@;!ti>u1CRBZ1M#OX11o\@U(fEjRYb63W1>=1^/a:L]f7([r6:-Vi-q:(#4J+CY/Ur@h'89qb.OUd34CK.
%1YKK[F)Np?/,<qH*1W?!Z?:o;*.f+SB"UI"jQ;'#_c^+?U_O1f>etf)WDV(6l2^k'Q@_Z5F(H6I9'?;a2\#JSUbGim=)%>oO7D//
%KAmsW&m^!t\Bge1E?Rtu:-t6T)Hqi,M%HHsmTuO*8i._'rBZC0-(fX>NIDh?p'Q&Z%ON199$KM:V(Mc(X(p-F.2UZ'9j3%=AiH05
%m*eh(EU.2r7BKZ@n[a\>3H\qm&2#p/q'Ig_\Em\tacHDKD=IG.>r@(j7"uHdV%Q."@JpMH_q"PYj\WpcC1d@`]+&LS19:.lR\Onj
%O:&ukf<uDe;%MTYmP_N;I^nNXiBiUemZMARQ'rY74k8=TdCaV>'L%AqVs++sm/A9GIsMZb"*5qI2:HebRf]^(6=H<+iH8?Qd,g\s
%p5\_5mh,&"Ft.0ok[4j2WGQdVhd#rc^Zk!Tq_*<ms81]OnBqTj+@:E@oIP/t)'7BJJP-S2"P")ETV:oO3Y'e4WBq_h%hmBG<?]%(
%lC7EZasf=j5Yq\;4317g0A`G:iTIYKXE`R7A"^i!A2Cf9MVXb=^-9I?_2/(PX=M]-3XT4pPla,YhPX$DeO.gV=MKrHc)80\lq!5_
%.j`/CbD90aH-JIe$sWXl42g7Qr\'0W1=Nofm;ukPWlYuo#2m+]"jg:*8aWM+Q6?]8DJ=n%[EcFr5%lU?B"./kf#&&_q@'lb_a&Pg
%_]P@<ALk8'J989E=VL;#.Ch.XT&GRBg.F\TFSdqa;+>N4,P?^[W1q7R+%.9WG/gKrHS/5c%oJLdAu`[a?B,"+G$L^ofurF8Q"mZ#
%H@`F783X@^32(5Qr1ZC;WsisB*/8^CFjCq?d_)TS9Apg7c[`&8EIc=9Cs)\#\CWDs!>KMopG[bk4Ol#\c]RWm-N#'^'&Aj!8;_@n
%[YBs(cVhIo1PHt^@fS0"+Fjj06o]M[':jH6Kq-*T?"6qF9%3e-g1_YFQGS.nIbaNOPElN;Y,]],_SN04"becZ`(@Na[LAV5Cc`nZ
%Bq&Oq#MJGqW!tXHaF\!AOUcgT\*Cf:@8oHEGlVi$^6d;XgWK.ic8:d47X88?s##[gGQTa$<QoAIU<;RcDK\8TmVZeQ9<RN=a%PBs
%3JVu)CV2QINUL^(!,:\-B=a/Sp@']MoTW_1X`V8L,!e=k"pkX`MV7a(8#S`kptach<hJmareL-rGXd`R1FoZdmL'@(5Yti^YpO9;
%e?p]<runpHH6h]ul0/6(g,pgX\5]:O1KLTROQ4hQl9=W14*HhcQsSh+$)^^0]%:D>rL^J.rCn0idQ,9R:TWK$=pOcG`NugQr,0M[
%URX7UEu5(\H[BBiMN2`6-lCbG:hEra.><.8g/>e*k.l?\S_'T6:2g<=a4dY-hCDfjm4c?=a+^\MPC^Wl'Z9V#\E;O,"d7&g';`$,
%,UMkE]M:)1-DZ?MH4qqnSk5b,GChtQKLCW:g)6#?1c@MOSMJVLCE#gMI2'ps"Q#8>gbbs@&/3+G2lbd`F1&jm/)6os!G]fJcrDd#
%*Yr+Lh;>to0r+:)Z9+a\>NDqM3TAf0$0mP>bqp.6Y.\ZX_5DLQ4PHdBa<B.1j'0^<aTOjIm/rI&45?&FKT&)=I(]3R:]&ub?>*W]
%TTY<3!,$2&^/8sPpRMCP'r:8m#M+XDdVNLH"Yj#Xd@<R/Ur1#%h8&7ub$arm1c`@J95:1QN.7KNHt+*&nZ&YPY;4n=L,1\H:[`M2
%.ZO"7>IJ3.O!^nOXK1-E,nLM7hrnNP_c/=OCa(-G/.e_12aXLO*peb8QI-oRR'1pP*@(%u.9;ZQ>.C=l*-VhfBLXM7Y"=Dthh@cE
%OP78:YhQgA`.8Jg^kI=hiE6PLm'VKMV<3hQS22%l6/JiA_N>5cPShgiE?Cd'^Vg5`]bXU;bhL)?&)fE0P\5O'oT47Jl(0Sci20!m
%(/;)[7:bn\?*1!`0.^;6?71tt3X]i(cs&T,91thEjaHB)rO`f&-`SJ/`s<N'NaM,*hoSt$D$=dl'tD:DSCq6%(K[\*eY3.'U[[9[
%XLq2cZDSo.0.dh]0]1EO+iO#hdIB>c5hnC*r]&5Q1d9mB!p3E41.r<lS(&X]q0g0&JBCL>=D-W@<KE+6]>m5kmVI:64#V?6@M?:f
%l(N[&SQ1##kXg\K9a(gEZm_K/4'f";9JrO(eZGFG]1/_!\+G)3)jE7nam.Y*$\>Gl&i^0;nOh>g`GW.?kZh_!I`n.Z]f;?96GE=_
%EW(D[&+U8El.!mW+=_J_#?MgZY@F_$qc=!j]M'\pT1@ZD5tuV*,I+1SNhU2):]K$`"6Lq'c<>GiSBt4J0mqgq4E,=P<lc5>=hI.:
%Y*qhI(ffX"]>Z2-Ijs'XYbC=!>!20"/C=R/()$CZHl0$\2MEq.Tk>4N1(KNacnnS&$R4fj+"(T"i=$6,/U-8&2(kAlBa^LW%lmRM
%g$s=CB:e!T<9MY@5O,r5W4k-eZNJk2Sd&F^=$&iZ6oZ(#&9(5,6M`%V<H!6/,G@FS]Jq]S;)V2=KR(Cs\PZOF?MZ+hIVBd'"+4?N
%'ATggIX(W%Z.L,."^U0NqUG)*o/bDTT)mu0IHbj:MGc2"c+>iR!N_.gYoZCaK[tt<g=%+QZ?3!gK?LT;]ii#cn]2*@Q;aG38Pr7N
%j&GsKG;+10,Ql&hqX/d(mbW@p2"/*qI0cq-&Rk)?MUbd_[H*Y$iP-LWr*WM^F3Gkp$*GC`)N.GT3f7P_f59%-MsO]01^*EG359']
%oA)g!jUT?H@[U9KY7*Y]-*,*XQ7Aq>pN-hJ+=X)7);@HYl1BP=3K`Hp9a)DJ@(F15RQ$E'Q;]KFUn!6i?!!W0GnTB(KCZXHH"f(@
%\5CuE&hK56@Ie+"pZNo8KJ?itdbY"@b"]mrPu$F-4="G&h;4(e5W9OXEUZm/\SnE26"(--?S]Mt!ZVHDAE?!8*Y)0g[mD8M3<CNn
%^2(<X+te.4*8sI^0#(&pg4-JEQT`kiZAXJ)1uEYVc;j;RPY(0\KeQO1MGeWIq*s:AET0S"k&E3U'j=HT[62tnW"Ro=k!X*%h4VBE
%Ht-M9X`$;qTQ'A7ki2?II+E/poAr0Lc8b8.IsgIOq66M%*%ed8T.`+^bDJEkFJR!`6o(L!_-,:I0<[Ha0bN,S"72;B3+n1D`Vl7^
%n@1pPq/-CcaLmT[7p#D!*os0[0:!kDc`@=\%43S!?f5cFC_K^KlAZei_:)ujk)/"d,]U#R@K46B1L/!Z?2)J?<A"k?/!__qS,H@:
%UEC*6;Ol7V=T5N`ZR.L`-AM'R@C;Lm_0nXd9$Y7F,f+r54q?ns:L$EYbg_IEhK+gZD>4ap8q4N7j2qt(90]acGc,lEM!."iih-IO
%WdNa%dOXK)p2(Eqg`1YkN1bUp@W:ku1!*a9;0=MmN(?Z-.8E&)5=Tk.GLV%5Qt10XcDIb.fZh(qH^qg8/2__:#NXflA1;0uZqdKm
%)Md]IDUa:-&?Y:WlpKd0iAHH%7J`j-rS?j51$hHe??Jk!ksA1"e6tb_3"kS&l`<InC5+0PN%U4qLC?RU3Fs6`B1PHm)JZVbe>M-G
%nfHZt7nKkKk1KF867m=3h@kYYFo&46LfT6C"1[0QJf!,kEtT@:hhSkUUQT[RUZTY9%(XK&b*@&i;5l^d<#%QT0`!XJpE9%3/bIVT
%BpYeX''R'8+0B7TF+o4CcR@"C#%-\72cHf/Wm["t@8=WQ1k9tp]#5\UDb0[dDSi-bSFVYq*\'qV(g=cr+VpKjg7/dTXIAdLdmKaF
%[5?p8<X&lJ\r+jbMG;hj<"4%BPFE[KUZZD6BcQu><t$Qb&TDn.qa@tFpQN+)aXeb>jMg)_\M6a45*cF0!$AfL51K"UH)u!eHCe*V
%I@b/(i$J=>n&%p5@C)$Tk/\c3c8=NJ_Y6+llG(fOoeRT8r`r4F-UY<7c\?1!X)=//rl>'<$(G4.D_S]7Y=91[Z)pjU65)MlbhW>X
%Y%1:AKZ'BKjGmsXD)2#%=;uP/l)60a;8)eTmU:sSo>9c!MO.qscuL5%<AhnU4@;<++W?"bKa&sTLq_$lKM]V"Y357CUS"?Jd(gHV
%g&W@Al`5F.]jEfQrVs(af3ZeHS,,p<ah3YQC$Z$kd*!aO0T7hRh+7MOE3h<lJ/<n.&83#83Cl;KaS>8]Pm$%^VZ@<bn#^)AfZk#O
%>\;%'G,nW<=:NDRm2nBnfAl(6?$8?k<Gi2c@l!G^.fuY58iM1UX'%_i<E?d:k\HSS,8&dkN$<BTR[/-,NWJqL*ggu(!?,)#&DZKH
%NRlF;3DMgV(#f:t_CD2kM0bOCiLe9ZVRD]']A-E0PeY<g659V<_:"G/kM,Ph%>"&\g/n+1NEpIf57mKW4o#mQ7cqHMZKhE?f:6<,
%^0r]Q[kUp*q'*Rth'NDuf(M.)Xi,,@rOEPP8PLii\Z:SIj!nd&*`4jTs4!t8ekOPgP3e2`5Ws<XOQ/8EK;&k\/54OnBIn^#U'.EW
%bD2_e3tEdW(&RhX0I$+L*bU7CPaa_VX*Dush%\c4gf6T.%-^.oU6C@1kRT=!3ODm'F;ct"#r;&j'R[*Kj&1Rh,Fa.nC5:^ji<EI'
%j*@FW0-Xn`V6BBF)0sX[1mJc?IfLND`cBP=L"qa@VQnX+iJ'4i;ZLdGRea<VG.%"C]t`\A2AIs=Y3IMB>*8VH:r,kFOuo@Il!l6r
%;:V?s--r[9_t2=WVq1FBB;/]aE\3J&iIAmbR7HE&7\>^i/e_5j6dFEd-KVbn`Uf;o6dr^)"k\c"/m56NO4A;h#1Z<B6%]eT(hA7!
%P[VoR;jUU3s(+if?1$,Z5XKEs!"g-GU(mSh5cZ5jo"/ZtCmm,\&Zh^lOLldSh4m['L5VpQ+1KbW#-7S=Vt]*Fgg&G]QjiM.#54ku
%dPp\mI7QHe4u4CCK?K#;&uUlA#0mBC$5q2KI&#e#Bb2g54;L:%3UoS*-T%pO/kTorXuNfdFLhN=En:`p)oIC0Uo+pR8j`+idIK$)
%3O.+["dMOrO2!](-*i8!]<hRV(<+IE[62Q"j'fUE3@RTmEI*"X\nEGr@+9mZGYI9#6FC6)U7Z>RfB0I_T(jCW`tMfR(&$=me:Mrc
%r[pd6=s>1)OA!HaO1=VlY6[.ELQ:<1PYj6FYM:P2H=Uq?H9uR,f+C1NqbLE.m())Oa>?.trA5Yr4jg!RD7'(*q%V=jFXh(=Z1WTK
%AB`?L8E4P9G9V,sZ8.H?1'nHq3LhX8'>:qFj-+3pA4J";Qq;C-(lRYS(!s]#JaqkLOEVUkN@@9NLn%k6Z/^W.q6eO>fs)J?o3d@P
%8-;XO*pD+PQ!5N7:j$4-nK[QJ+Z7c"XH1MgTBIGpmU\6moatOYF2scK+-Dt@#Uu:hk^d4%oR_1[Sk9Gjd#M@?R/QqW^[siXSQEF`
%5lW<CFDO4IYOXB"b/9'0S<P`<L[LmnNf(78&-8H,W7=UGE.mAmUg9-948.S&F[>EmFcO4#ZC3Oma#Ak<>KpaW(8\%8g,jMqroG69
%lITp1IV)tc7EYGZ1UhpH>U5OLTf0cJ,eJ>]Z]?QAN\od?coZ2:A74%#msR[1k//;=ih'.tfbfdl@mRl-G]7TpZaAGHmHd/f>91E#
%b,;=s<r(l:aod77:%^%h-dB>T5dM^14nG4Z)kJN=8Y$qR5.P3>P/SU_LiN18?hJ3<"FL64["(J.=l;n;2A#GtmIOP^j&YQB9ob6.
%(D;"*jiDeV8-M>fX-0>H1hISjBD*$K<>q$<0Ugjs//f81]B'DHS1!,(J<c'=5(:s6]b'WrbC?ffU\[FGeS`q7+'qWSm"WT#)pKiX
%\J%fQL/^\VH%lR;(_9B]L_#FE[o</5jJYgei6GDYb`X5Qa*\qL:3n53.$hEdlBU"R\<NqfX6"?_ikmMc!6*cbbNG8uiEPPQ1V6^u
%,kQm+frq1BMo#q2R/?r;(^=2M1kD"p*u"9ILATTJ,_if6/=8fnJ__`6AgCf("*;Wtp>f^gcJfOi^4l]u/l1k\8K+^r_!\;32tCYa
%PE9c6G@$#`ob%p8*keW)1Wkk*3GZK&YTRaGG'PV,&qus/eQpL_6o5&J.Y\Hd[C92dI<n':e%+?("1Tl/LLp[]])8CZ&\"3CEccJW
%D3^FPD&b:Jp`qpgQU"ss\o.q5]*=eLi,3/6q:ik:RGE'R)#s`j%9`=b)"80Ueh!9@KL<PtSC2q1)7mgRg(b0Udd8I>V%pu1ML8f<
%*fPCeNQfH)&"n8/R[%RZ`W1`mcsQWTh1E^Y[,tjk'hbOFAXgOq%siW(WUDgXht8nhi`PS0SpBi'YJ\lo+JA66<+MsshT(G7nITa8
%EbNfk$t*]NVnl.kBSG%CFCj0L;/Q*OC#\Da.@?j[T?PW+3aeGE0iCbKSF!YXYoF(%cj0\>bj/.)[D`+kA4/8C*-$[kOo-E"M9]Y,
%'>#X8D\ecTqb6KNTa8VZ:mK2]DI5oYdFc__rl^ddD6[$*>2Sm^N)Le#:R`T8>mI$Vda1[2-RmXg]a/=ZoQ.3q=j]i%>P,?aGd7R2
%l*73%s!Z<63@^"u)t>("IrR:EJ%FS,Jp[*f]Rk_:s+k$8I`!-P=td59.-?QuF3M,TWcb^J0%@\kR^L!YQlKOnm2D]J50dgUlajf5
%+"F!'1e-SV8';?>.'Z)kd3oIXp]Pld4#1h\Ra;+*\0NG0)bm#lLhcdZ.E!BZF1p@48ee]0,]6C9"-DD1e93oklqi_!"fci<YjV];
%G?YoX:=l'U6BA'/^DYK3YX5Z<,B\Qg=25V+)IfO.OC:X!3&4nsZ!g.7)#B1n<8ask(QuR794WPDql7b'eN]4a.j,08=_3TrRgib?
%OkT9s\4G!*`;6jaSu&t4V\-DXg?RsS^PipS1eFZ]K#H'!:Wp[*Zli]?4K,C-ktqpg!5Z2c+=<bG&KV$Fc<Dn5GN9V&Bt<YQJd)E@
%/G[SK'/FO$]:.@dA660G97!p;o)_5dh%F94R^Kck*EquAXL.0'Z.b1ogFSYSNqSSVY##[mmaNA:f%NeU.09aR"64ZX"f/e4;ss1'
%X"%+QdUO#[_d3u.8u@rYKT?eB6_od\QP.kVenTb-Q7L6s'I\T\.$=q>=hmR5DjB\+ag*#_H$!+A!ZYp](0IhG4FA'W8Q$2ifgbNq
%8L!6!5n"pI(PD2GBtTMLQ.29B]C1#E<%RW(/`eBWLV>57VWoZOZ3G:#H_2-br:g[@^WSoT\/)D3$3u;>ga$O_r[jplVO+C-r_2sl
%gs#qL7^9a;eTT%ESDtdfD1N_'9G)gn$3&AH[K:2fJ5VUBQ42N+f@f5.C'.((ppt$"E;3e1Kg(L(ZXV_,U,iV*mPC:g>j4IDe;@&E
%\7#1Ml473@pcNG!:"Z2phb1,=I&S^V(d6;ZK;]T-]*M_&4b*N;!LbM>DmJ&e:-PMWI0-SjW@K=">X+dHrt$jt*[2h$9uWnX)-MqL
%+?qX,M;*/O9m2re#X(Wb9IeR(/H%b)5;L"eAua_]+H_$t3PAsWpar]*\)".phi;%q/fBQk\Oa&-+c-pl%9MBNNIKp:[OB'c55o[G
%\SZo!5$pTd2qf%qZig*'4Sm=&[.7(%nJ/j*blg;:Wkp*tA&Toi']M:#Bf[fVq.p*=Gk-)ah3USYXd[s)"Y%^d`m>[N/qk^R_ii'=
%V"=oEX=h)>m$H6FhqSV1Q/@7T/rq+[4+:V)7^),(eP.::P-CG+XC2_P5)X2&fV$luGHRmUAZWtN/Xt7QTNh,79j:N><`WP9\EG!f
%nR?]$Z/;X<DJMNZ[UFM6;d?d_98@T54/c\,pM@8W\t3SX6f_[KHHei;Oh0YXTF!^_h0nLtE&*W,?7,3.,Mn.2kUgu^RcH8&M,Kne
%P7b9F;F?mBm+l3@aKTkD>SQ&,s$GYUGo.hc/kk,=Vk)Qpnoee^qXMNm#`[F]\!p?AN]S9lC>La@H!T4fV//8/NZCU8.Zr*keU:uJ
%d[AT5b*7GUMIlt0&P;HXD<Dkqa5rM[RA31_,\)u%10Pj>Xou%d9l/o^0e6nkd%ae`6<A8S<j'f_*mDPC`W\<G,12YT>OO]h<o&`J
%32W'%\n>)B#cTJJ?@ud93K><VUJCua;kugmr+?P"ZHFq3VC<Ze%$"eDmg*&FI^2p.YP\`!eRdH47W,`#Oe'_kWf+sbV(`#Igl^$i
%e>&2Bc%'KR2i3:FdIU?O_D2jH8Vg+f-ZYHo0;n@\[Vj/apfq)EnpY[]i#\Hj&Hgk>6TfFN'Yp[gO(eZ'<@8Wb\JR"T9*"2;n^YL6
%k:k2PYSLrMAT!a18ds#nF1TO%F`SpO9"@CBreLo?0Lg$j9jLeEXBO[S'u!h.M<&5OUfNGu+C#,5N1u/?O[sUks!G:)AM,LFENA[C
%.[tADSP#@P>gMo_J-O]mR!j;6a0:K#Bu<JW/Lc0U<k-ZX(6!sDB[>n9Ab&_pSgCm`nH5u?M'uR@;UpSXP2I0h$FqLuZk4d'm%S<j
%=gKE5TVYD?QZI7HrJ1SW"K6Z:(1iG(5LJ6E1Y+B$+b+mol/g0,ROG09[_;kiYB^\h=X0=(Bc0si5LpG+02_XHBIQii\/rWa@V5hD
%+u;D?G[0FSoLr\[EB@FUr8u22i#:YB+JLLsE!rl.?jlG-P'eJq*I'r8`]60qT06d1VOND$QE3U3L9,itS@;0e]EJQY5+luNKT6;%
%\'/e12'S5nQ60_+o!b&T4&\1;G#fl.k\\h;@B>"F-mhoW:XQf4]VGR7!cI:p<Lnkg^>RKaW%PLNN4,3f[(rI*?Tc?g$_sOB1'SQi
%(%bNh)d4Gk(lJ1bGq`DWgj:iG_'FN(Y8"N4=PEuaplsDon;p!SN&BVDZKZr-h(kD.GD6[iT<$\k_mD"o1+eh0U5'^$3/au!lA`S)
%d29-Z\>3*=Da4$mWL(nJ(1@oV[kBWgkmtMH>U)%"p2)>A$jB>kgh0/QP<p9f0V/'?rJId08^#LsT\&VE<ZOQ67%>js@:U;J(ag4!
%S<I,4^J^*o7*'29a1-&He^V*FmVDXgSXJr9@5omIAL'ZDNM+I'.*/cUT4;`$dG$]Hd'bY*MII&4pu,:3gSi?g%HSit+%IZ!P1OC^
%9BtOm.oqq6^S]/3Zn]:+]V#q076R0S7brh7'[(?&eFK&*o)%j.?=XR0#eMm`AS$dDe"T!Xl",^M9TP1>F<>6EJeg=Y@QCB-5fkO%
%=>;SX)eXD/&CN0?(KY:la;"fK@:`'0!LNJf%lO[S3&g@b6(*<(l8Q2Z$iSJlnGA1(/H1]iPaVf>dW<AXIMq%u>q\h3)BgAr@+<Am
%0LfbEHVN=4B"u3SK#uG8KOmh,QqM1?K]"l8:=?kP1]1f5X,'ctarS5k3)\InZWS\HgK'Bt/05`$<?6g^#5@^koPD!VA:qES*lLRP
%bkJ/b75O4II\RY&iB385EsYPa6,LA5<rBBDqR+5O0;UN'%*e]o[,5G.BjJe357_6m\5G5EjM4YTi,u$K3Ke*C*?B\`Woo.YJeH1D
%[N%$1^2d\'38bPq0MZ2r9_jF0]HlTG9,jYC3:gH:Xt,6s*2r6c[Q[^bT!'s8J,R.^cV7J0aH\e!KC?4L$hKE/Bs?2qiDhL`._Y_@
%PP?oN?D>KR&@RO*?FWXbPDG,a;@YtMe`+S.*sUN=)2$jDPBjNPW%RPY:G1n@J$k.4JJuu&&,m;=ZEnsB<q1BU#QM,R'IATJD3ZcI
%<XQ0=4)Ak>dj\rEo"KqtBLWoLaTcm"<R.n0P#6g#<?jeu<nFXmphQjTKVnJFF_]WV"BJ.PRT\fhl*c+q*-!5t`d7l1IBsG[QY*>s
%.tj*QRdj]1-Eb]5jMN4;BJ/LG_'YF]G!3ZP&b?Tk=iEbI?fXFsDuUdIbFdSc+9.[:ah=Imn@F/Y1D.(:Q(85$<gMVBA9WI-%6na]
%:NuKh'MIktGGY:_O=G:S\b%R0G3B5d8BtKN0G+M)E_.1uDNm&d@No:U)PKTi_mJG604U[-lRX!;g'SDCf=p$6dfXfYap;I>V9osS
%q,;X9)gQ79qoY'`%5\6P`j-N!7FM"d/mM\l)CdD57`F?m?N%,'Gk4O(Yf[Y.m1EK)aIg$\l_#P(.;sA0lV1n,Zrt1&1aFs4aJ7#L
%7j5_">^RGMZ,4s7l`IqE+@7V]$#'[L>H>Wd4`1$PT'7Hhl*cJ:Yj/U6M.8"cV*$]M&i\;9p^5qS4QBDpCq&=.kRSUZbj"`&Q7F/`
%AcA\e4[9&(qP27XcBXSg'2,Zg_meh+;[P9IcHZQ!`B.>(])9NXA<&_N/M*$UAOI)ud1\J1M(QUhBf=VYN`B_Z<<]E?ml(5=HVf84
%Di-g2%BVcKi3tu!;WI4C2gs`HDO2rYkgdV\^\R_8P#Y(QD]a6[M0gfh#P(9U.?A%@-/HJ9\g"5P<V<$"4.:J)=iYQE,W(q,<_%mZ
%3/ZDLY!QN!8a;&?lrk&PM\Qk'#;mGf6\d4=<-qeRDg#I!X.5]+E)fUiL^_q@qW&b=a8<&T_K\bI9<?4AaoJ!/Ad>LiDITBN4P#[W
%/oPpu1Jf"a0=>!b+cN*K9Y9P,iY]2+W>@E*Ga`_Z8%snMGC3T+HC!&\p`tCgb:;Pu+/8=iV&cX<IdK/IIX&77=^eRnPj?KN<Bip>
%Tj)^+)XCA-a"pq_-n)2=<[EIrh5f,n@TB^6B2s,"X9u;PiT<Y5N\8pt*QO=lAP]9_Xf"VmoA/T<Jf1KQjTE($M14pR$H#ZgGCT3M
%DUC([MgSH+OsZdK0K#>E@&Ee^[5$d8O.Vtb3*m-goE;5:'[Sq?3pS$_`>DT8;G#;j29ng_V"BqK.Gb,!/i)-C^1g+l+Jb-)D[7^r
%`J.R%;SQd(Y6.3'G=RS/937Y:qr:pTY,=A7mgpgKdR8sK@PB@adUg+?/IMGXeU5#a?=taZ:,dL'S2mc4gjK<cbHN9n4dj`$aiKL<
%cj0$d+XP/hl;*t_Jstbr>XQgZ.5Ps/+GhW%^-&4QIjqa_$34F?nB;gK<.mPZVu[R>+0^o>VG\MFqq"#2?gHnK't$-UZZ^-EiLN+U
%ReR.oOb$-'=].?H]sHnPcMLstTj],Z;7;i>,E[2DY$h\PhIbERgT!A1<!,ug?4F;2k>3n(=\@4TC.:MqT1>T$^DU!c_<P=>]gRYF
%,`0X>*&0\q=W\1i]!g=\Y,$";g!5lp3m)hSQ5D:0(g?_AYd56'A:"fj/!3u)\7J%DGi4$k7K6r1rGUKd5FcTB^OTnjVe[eg&2hON
%6%GF'hqDQ3Gdi`q4*Wm0YHQ[]hO$2V:P"C&WR^YuqFkECm,u[f2#6sin\b@qgV3;ls/nZ*kE#)PD\_ZJT>1@Q5P"EH+]2pT$A<(r
%mZdKnPtmHrU]3mr.gf4,d1ro[1fHe'>r!:5*Luh5)8K'Wp4ER1CZQVjEV0aSWsAi%:#KSE291ZDbkoWu*WpVsa:ndh?*3*`V,LBQ
%K,s6]#f<0NrQ#uAot&>&D!m[G2dCJ9;ZDBD9DQo4jcQ34o'Edl@oL@5BdL`EG7RF\(,UN/X/Xbf@W#'gel"p@-$'_Kcc]`t")!@G
%<kKgP$]-=_0o`G8?X4mSAGrGaXVT@\/bL`5chgQ+qiP:kbQ`Ub%"7Lf!D[BF?9E$Bs'!"XU=,3_h7<JXjR3;.Z7&^0L$qOp!YZb!
%"[*M##P/`W1A^-G]1OT8Dpu5cR]>!;$?9H2k-o.\Cl`TJ]/qKd76#E%':4E#?VB3%a.dI-(W''Ef0^75-9q^7`&(l=<i-Q9$j_bR
%d9F>Ao$VFW$6-1#PP\pN!s4Wtg^=N`,gC'aC0+:r-0E`.]H!YrE!d67]);g,Y;k85R/?6nI@`(70_[M`Z).L5MM%D<e%q"HpqKC6
%VXPnZ=/"2_n_o?8.@%sh1ki^O,97,/.+";7&4!.E<tI=-UMq>^,B@<oQ0&iQC4D[2[&87#4hH;49h1pa[B:WXH?Qr%X)LT-i/*!+
%a`E$jAO0=8FZVB=n\\@0W5.RQB!Uin(anp?"574c'SpdIaSa>Z?WPA&^69a5f$p%kf9r$3WoRD/7-%cX(*FU8S"lp[^Zp<3Kh+DW
%-PZfB]JFaCJE-mF*5$Ec_)R:+Ufti17/9`@l6DL\W-c%X9irSi$uY`]/mDR\I/c#WIAo;MW#%Tl%fEn],]fGkgg>Q@+.RcfUPmp]
%aK;`m2ur<J[YM%tn-f@rQ`0Z?39tR72[S$b_js.=H:/"@hF?e_\UDZH&jW'30Qa4mfj;YSW%4<]kFbVd=bbp$a1qP.T<ju<D*:PV
%]+T^s>bM\pbHWP,(s$snNjsqS"kg\Kp+3EmgYAl<du5u$E#A%^%<t[]_g7qY^uR2/:*`-\%qp`qhO;t4UC_t@1l_B'I.e\)e:6aR
%6s%j>b_=P/r9dNZ-9Y[HV@Eo7I'&8CZo#)?8Yp,keF=A4]=$4BrfgH=Y'h$FR>U=jmeP:Qi]j[*]oRR<l`_>_\ct@,\+(09)\LI;
%@#X):C>-;EZ'4n5Rdn,*NtEm5kk:Ocp*TuHb>_"ObsGUEG64a\S+mu`+F7Pra>.u(Cj&2:6"3Kt6J,2*pl&Qg6%PHt&2W"P4=Pll
%#r&[%Pl:!QrghgAf4eB8NLf""R3kT*8.'#qq?[Qp%[M(&Aj'BhPgG!&qO&#pPIhOfQKpe>!5[nj=@_$@MP%Q::<S1qY5kT\#IHa>
%NO(qGJ#B5#:f##k:hW]5<EZu0?n>3:_?tPU]:7=q"IE6bf/mEMKaJt:([VTE'#614`oY+7q7H@>pkt*nhQ)N`_e2_$>MZU.KX)[0
%+?#<e_2kl7C.baV]NB[K1+Y^;PI3"f'^QXiHdK\em-*#ZLitCG.GKlZ(`gt=8(B^gg*"M&:ar<nXul:Y-1i0[;'2/-F6mlpmTjuQ
%@.<8<IVfmfW;;Jk3KpsdaQP#plug`[AjOT4>7qq'(^`)($<<X+>Cb]<nS8L^+YBU#]2pki*<P6fV'@2acI>_T[&uVuT6d0HVNED[
%8$Se[Y*A#Y^Pf4BNT5UI:!+6mHUgCnooP"Ph<nck$/`0[C3D3Ra?/;9_#jb;m46db+[.?klV-MN`KY]0G)c9]A90Tg5@6N^&3R,O
%"RDmB$(`5:6+U\i3+O3eC/QsE]T:(Xjeg$Jo4jT5W657tO-IY"/%+t<_g"HhhL;*hdd1VYrBX&(f]oN`o<nm[-NO:_<hu?gjIhof
%W5+tQK`#caU,2WnmCN5kp,Gu"X*sNe"8AY=3@E&3;(F=ul#cspU,pUC<!Acs-"I+kOt-16iO*o@1Y0e(ZZgbOU^Ha2M3=t^V)h,H
%<RFNDr?tVniRW(,H&"Zb=%HE@0C@bX2`nb;HG@#AdZdHM'9S7IpgZ`&;Q#4Fm<m@8e$rmZbF'>Q.S]$3#aJ_'k!5<X"Rg,c6_5.'
%S\]oQQOml#7:5IDa%o3$.$Dr.CiQo>jR4D6.k?3iMK<2@Z0h%KdQ(":*<YL\@o1JY(gJS(qgB"IPj;_,)%O@JUXTJVI':/lQdF@:
%\QQNaY-OOP3YJn/%tF7X9SXg0qbi9_pBXKP)KK4EmGJ==P/9fb#+e2?`pD+"B2(!412G(6XS]_qokVO=e;WsHo,I@tB`]utf1&\_
%@`MDE/K+jHRr,&_2bmFb!$sL6UruMd5.m;IFKE);r*T?;J4l4V!-FG`]g&%*MZ;H""K4.QdCh=(Y_U4keo>4#DMMYY+OK5<otA1H
%EcqaGY5W9][d=+a[&@-\7j/;%XHBG1G;Z5aB+%jXN/0Za[t8^$dN<XrQXY(IGK6;1\Ois_6`Be.E:aqiGs<':7n*.eO&dRQ.J,Wr
%s/,fn\>h:mH(?RkN5udH43%rS%.'X9GgU8b1gb.r@UJPOZU3,8*eJDa&9>oh)2gCLA._6_R:7\,!51W-Kb\gWZ$'5$)S@q's1"%%
%P(g8<J'\k<e9d8%#.=$'&^e9ImiFN"Wnc1lE]56k[=7rH'E@a4(Y$O-oaa^Z%e>SlXLQpJ5AY0"hA?;'TI>Oo>bqY0/=8@UR=-NM
%WI4UfSa'Wu90S4J:J`E0)+9$i/DKQm(nLZg^M&cj,RkHb8\V?h\N+HdSus,lm"/\1aIl%\0@D#m(Tk-]Ku_Nqr:gBoo`ZV2ePXm>
%^OSD;Gq8#K>ekNR_t/mk@4N]WC-Lc^E@XM%V=*LV0q"mR`h9Sr8$bXDS]3><;:o8ge7u/DN$BqBS0TmqAcZE7nU($P$5^W3TZ&7A
%29R`155POuOcS.!BU"QBnFnQnU5Lo.c*6^5a8T=@s5=dnpTOSrd<'g`0.NfuXL3!Wgb_WPgQ59c=eKF63!9E$k'hR&6mmXj+F5Zh
%I>@GK/cZrNK1hQ'7b[KXh1D.b\cW\6%25r>)3)$%bMkcb`@m:8@bTN;'5OIR75<_C2D6"kKfI>@[Q*'Ol\i;J7U5NDC,smPcfLn/
%Y&+IB$khK-T;XX(@T0-gGb:Q_qs*hkXr2C809aQ?P2`1*C9bf7H&P/o<bqo5Y2Q+uBDItMRM)e\p0Gs2nmT1C*Rc"UGPF!d_,Q>:
%]RJo,qi>09/)h*Q5?Z2PQ$(:^jEMou1!P+8[jPH`J=!&J23MRS[b`lOGHb)*J\,AOAJDEPCBXPa\fJK\"h@.9SC^W?;M$ijGDW8R
%VSV1kP#828P&8Mq*W!:6^@\B'j,K#pqPWHss(;eD!P@FWDnQXTIO(JNL>t!-:cClTdWQjb7J_Z@S)"/1I,4Qd\gQkfc3iB2)I;2J
%Qgi.60XNj_3@$&Gq&l$b,Abs2PR$c.MBhu2Y6U4fd;:\IM+$^1Vf;q-3VJ0-X@"0N<_),Z/Pj,JL0O$.,:YYo0)Z]VK8EntkddpM
%bIjSiTU+<Pqt$Y2oAem0j6q<,h9t90mB8ib%DrdSDFpmDc%B5tZ@SIc*s@!nO/8MF5e-g%WttElk45Da@YY[[K<H?l2<(;<FnMN+
%iN,Vk=J(A_^F(T1;j2la?c0E/PTVrumNV>j&TM+e$hk,X!9[/SA3[_?W[1JiZ9^+FNIE1mr&SVZFSWug;75e4TA07sbgVU_:[RGt
%KeBrb8tS,t?@cP^+DY#@>*&Y1=EOU"$Zq^RE?'n?C?"84rRqKEWq%nmN;p%%OMJVm'<IR;Yk+cGGPbr$#HokpJ]!c;oUA'>+9aB!
%?Q@sSAk9HN"b-0ULTR4eUFs&e>2/`7ic-NK\.L1*l]^"Or1[PF*LMa+kq<K&\./XEC%?i(IU/!\lYcrW,5hD>VnE=cX?2hV.dF)5
%,:(^FB^\)7oL=(aeZ4dYj^mbQFZ0s@AF]u4A5S?m#h!9B5C`M(7DJOW5kWK37)#SBqZ3>Y(&dn'g>K`M16/bn^_;$h>#nTfiOeD\
%*NG8TA?L3?a)U\:gcfD$qtIi"k<t=8,qa:ZIQ1nBneIV)b5@\@?+/>c<G=rT$!*I`/],>n5KeLD9A[Q\?X@Wd1i:'lYRo?tBkbJo
%A.G%]UAb\BCh_CE=O8I\Ie]LAHPP*mm7U'VibF(JW8p`TeG[KL4CqU/kdB67o8cetp9Xf<mk^Mc=WKCVl`hl"0R"FWgsD,LP-2\'
%JcJ+eI/H1q9/nXof+26\CR[rb.(V`313+^,brP@of2I7.YXHJ*+6?I0c4a>[@C+:qV;o=;2m4WN)p1kO8^fiqP\0%L)[582=7!WA
%!*6`6\_?*I-Si76H+TJ:B&\](Db(g;_:d+4!3[q6`d)(+E,H?F-e0&7F_IA;YBDt71-g%*SX`'krn4)D_V5JUSY>uNd@TT^IB48G
%ad-7%])s)A"`(r/U7rS'HTDODAK.)W@VL+UA?qG2=YFe5'?Z2<eFf8m,40\8XLTI44f?V^JH_s-]MdSVEH?37HOOm`Dni<JRIe'E
%G/Uj-KR-u^+XIL'1O'pk6%;b7'gJe=hP&SSPf1`HeR5L3/j"O;;INFlm_3flg4,;1Tj%Cu\%_)^GH9jY.;qhHTp[.8&/_cZG]R/m
%@edEj_o;,L@O@"JTRHPbj.0#KbEkXj<KCV:%otMH?qUlIUXr%m`PT^l_EIc-fnZTbPlQY1`__s_@T"[P\d@%_R;@O9`>t\CG<`9(
%&\I;dOSpU7Xf>dB&U]efB4L@:!T]+rG11-h'qA+SPP>C[H5MjCQcYqHJY1irGW.0ErLa8`'l7UA[\'11.48)ZUO5j&UeLO%\sHX"
%e7d^c*:\$M>*"OGXa<*uX51T2grX1grG?gU1G/oGM=<NR'<)Nq3T\17TOFq.!1JpMdIl8@YLTer"J'ta)2!=>29$bH^@M6!5hmT9
%-=pBbphgUQWQO2.b;g,h4d9/:iilC!Z%h1Po1Y)u2MM4\)Vc9?,`Bj[mej,MI'"+KV$R*dB*9C#*p%6Y``.J8AQ[IF@mL%iq<*(B
%2T\FWr@@Z[&tlLuqCB5H@m`d&<4M*a6JU&2Q[?6K^\WLL;6<KsPI0cn=Sa]>-@(NSQ^ripJ9n$!C1aUknl0hS[8=-W1c&$%lOV0J
%[Q6ik3*UD]cqW?MNCU%00fN"?"B.+!mUa.F"Y!j#&eIR#M[g":X3+;dV*[A6a4jFK?E>2s@Z@Z!GgK_L6]Cm8ZRb;X.mE6/?ZY>&
%^EXKMRk;a<G92F9HC/UL=ZO"llI+%7(L<#$,&fua;5b/5@eEUm$$O;fl'pRt$l+mY%PgedY5`o[:.Sdd2B3@6mjES]d2f\:3Oi0q
%1GcE>[T=Gl-j-3mcgagba*gPJEIt]g+sH#*ZsnP4%*_%@?75(7nl)-E9-'pX&E9$;n>-K<!%5hN9N'&X@V3;!?^-[Me\Xk'a(;hW
%UOZs*Pj7T#"P:gJ&D^iV\W.32jHQjd?5?he'hqY1E-Jm1M\GXje8\k$[I^hpd<"UdJCShM6Tbm4=t`sMQn?[PU^9a%Ef7LeT4E(N
%AC-`MlZj/"!]c>7<7odjU6PfT5ckV9P0cE7A?5YSh_E)3SS1alT`L8WYVHAH;T?R^#&[YK)4(l'r5!K.:s'u$8M09Ka(d,\LUA-)
%pU8nahWPXcD@tWq6c0jdfQi%V_Bl0s2V^;r8m4A&'%KVH"HQrco'muO[ZV\Bp=X(`&_eb-e4/_\MO5%^^esI*p,FEb7bp(/&DWRL
%nh$`D_N)M4#i;+1L4]nOK&U2NXUH.):u:I<"?k7N;W)&=\WCj'[Omlf(VP0mTDX(aTU(=_A=G_U-<8^87$DBP<#gs?[o,g2MgHa=
%]F8^ZHc8nDeSJpt5V?b%+ltYh)PWAK#o[<!Y!H(2LW85:-ji2_P4LB;3HH>nb7sW:?#nKoFO/-f]Xeh63a;fsRm$!fm"/'L7TPfT
%EP`0Q@)--Vg@1%E'ORs*I&/7Q5O#cfai2CTn+jd3"rC!#h62:afXpUt%5C]IE5Q?%ocM-`^s-W[Rbm93+`32SVRdOt3"9M!H6_VP
%cjtHQH:+6^f@/lSW0Sm#N&.-[7$.H2*fL5I,aaWRg61EqCpYr.>EVl9p4(Fsm$kU@IL>6)dY*[eN%da98"kt)@d3hm:$X;ShN"to
%LN,+t;$4X+<#+ljOu-3Sr;Lskm&[7JWNdB'RT%U$:fH\OGtd->`QmGUl+#$\gQ%pWOND8t=0rPB"H/]=TH+>K.FAUn&<jUH=/\5@
%RZ_(.?5_ODlj\u;5r?nQgXa1G33<c*6T!>IK%oC5;?t>p6UL%\j^ZZ#QN`]i;NC)'9elD)c.t6TV[.H*)Aua7d4EO^VVJX\XFHec
%lm!K!HQ?s770;3*S/&/.oTb+$FcH:/UbbKaBG'j_="-ptiD`ZnT/$PoQFU9<hP!'RdTP*m].Bdi1o91sM9sIAV]t$i_2,f42+NFM
%6nh%l=r&hHGkj0ag'k3gRm>(!X`h^%"tb'P-uF'(Vc;l`gZ*R;\l?Z9AqO7NYs?:em)Xmk/G,AU7QLX7G2G>1L7KI_-s^VKeRST\
%60+LGh`6=nW^o$Gj9Qsr-A77po_4j<(W>*nkWZ@>PsX\D77-."e%@[i3:06-h)b$u55rqTeJ?WpX$>`FLa02N'ahQ_T&Y%VQH:Cr
%&NE?UY+o7&&Y./#C-hs6S^bpF&!lE/!@o[SM'2;!;/g(jQXOCY([k&[*Z8a-Ja:q.3./4HZ)!gtrRGKe=h<`s=TK$@=/Ts1[`E<j
%&1C2CAi!;#/NMt\Z=!J@-#-IuFCMet_M7;4L21u)FRIW&OAck&7^7[(70MA#l"6a3ZMr2iUM?Q)`Ujh2DFP(K7t".H!`O8po]QIL
%Cu:sIgek&_W_P7C;,ZpuAm"=8_:mR;;rRN21iI(c&aC5YMW_#UJr6KNeT%)0:r?@-q_!f;WNfi&gheJ\+U=Hlg!na9'`'<ld#8XO
%Ff!X7Vo`]A]d]YiH>_mSV80\*"=5o=C5J\S<:>(G40_5=2m!XX(0md%%Z8Z540_)r)"DU-<a':/X5m"][fo/CQWM6THM<5;E=6%<
%6Vt_'l'q^EkLDWqj\&03F[Vmh7BaY`GQ@]:X0Ug-\1L:Q-H?bYJ(rsj&oEuZ(]kf0"C%F`@h0e@ET:W\AZ0(ic+.kn[dlbpP<K8e
%F;no]:'fd,jW24W&3n-p0B!OTQqY7UR*K,iDtfg3K=EFsI?"mCS9nf-J+@7uT-3Xo:9d=NU7gS=0"N^oD'Zgoj>[Yd1]e`$e_^t(
%964S$c_nUr]:RSHb7c"S07+^7dL9S`c-muXg(>lVZ\Aj+Zj$PI4l<\f!*g`'%=M58)8W\`ZsWWj?-M_W;9YZ`dfo.HHP*E5Ro#d#
%[]t?f1(1nh%<6i+`>9HI$7r%;EG$s*oIGb2ls5*i:WI8^GN8J@>LS[Zm/*Zr%Gs:9Z<,XMk[FhZ;]I,BRHQj(TiDP*9C(E*=)qh(
%Sk^i#6&KsOSmW8EgWVS)PWFeBSq*[9[>urG>3R):3;DJ%0j;:?n7,o+B.D,R<5E2],aKuj@Li'']DZ^8A'06^"'fU;/(k+d]f[[B
%n\A!&F0;G\<-HnrqoJWn4Ol<[4!O[bbU$mJVm8/:-DK$QH!FiVp5%<g-Z4VO&=PSlk8(3s!h!C-'3VTYZ><XB!H@j3iD%X?kCMX2
%NfB/@!n;1Q4,;NabptOQ:bI61U<9sL766gf\aiHPQ)J_>er#ADl)LSCK=mphQa;W4^r<U%k%0Dg$hA!D;KQHD0*SFgiF:?K](.Ea
%U"?P5%(&ngR$CeMl-f0G<5i420>6\%;17^%R^HTg=Ap3G3)_P5:#C2j/=sGg!Eu]9Zi'"8(a6Ud"b9#+?@I3:.#(;KrcfO>RU8-W
%qb'qU_/*fOFRWR[!@di&>Z4t^XJU,=ac=[4*UT+6XL?@A@;IIIR'P=@hcd#Tle,`=%<;i)E@kPLFXkMsOgC5X^n_%;"qPSiYLEH:
%$/]Ji:`#P2@<UTtZ,JK1Z>4qYZ<=&),PX*`IK$G%lXZu,0pQT+bZS<-i)]E!4?A(M;nNC8U-XL.DW5T]rH'O2@E4\''Ulo7'lbbs
%F0A(qL4e*Z8Z`b2L9.&Yk,sd)`-)[SPAC$^G8.e'#i"sS5R<@aL&q,-&,3=/Tdg-*l6O_]\B8(]3.E<j&9FI9eg'0MDZ5^s9/iLB
%f80!Qj?mN@L*S:6Qe@C/S*9^Aeb.5MZW8gr%#CcC5pYbd9nG7PkI^S/](>n#%eoX?!<I6`DZf(sSd6!G\s<73#4$E\MRAdNpSKbZ
%Abnb05Kqq.3e\`W1U$Dk[BQ7G3Jlo_"<Fj=1ssp%a,u8;/JrcsE><^hRMB?q;bF)@qGR4!*mPHDeQN[<X8;5a3gJ_scm:`:?>])2
%[bIk#;TXe2arZ'*/RcQmQWOsC=r&Dk)jY3Cpk1]Q`#Wji'XH"V'O1o=cT@'XAgPBje:],`P43-u?9cCtlI#9e;uE-&S^iO81M!@E
%T+%j3-X-I]m?T![[rMPH>T'rJiQ7=57m@nZ'J=GI%hAsTjXML9Z?Dg:l#79@j2&\$TSL=Hf':I`22_Fr^`oC6XietVbKba?_2MD>
%R53_og9-cYQHM/E&+pO:+NO&Yduc6Ib^$QQ90:qh*R)JjBu*DG'X(2F-E=Dpm3H/I%>U>!^l`Yr`-%NXOi1pGKO"2Noc9*K;+2Ok
%Oib6h,:*VYC-2$^]>[%3S]Tbs#[m2cf/FFHC#T>2Z-$Oi-hhXr&B](i*8`M_oNG`/Ws+p9C2#VF+KMuUUg^0Eb>D[-$="kNHDE-0
%HO];NbbL>;dBhS=fX+6)npC&nYnSY3X'$54@jLl:l.DVgXr:m;EiK=/"IF#g%km2f@Yk[q[[#CD=I&;t<]uDl.^u%&/QtFsbpqo1
%ZD4%6G*b]3Ck:nLJ)RqJo=:t*\/h]4=j*5";k9UiaH`q\1C:pN7Tm(c^]S`-m9@Vr#:#NCF'E&[e3*=]Pd!pf)_HYbl4Zk=E[>C9
%Rs+67<qha(dYMkFiub'%#j`U*1I?E*`Dn*T3``JF.BqH(1&-p5:KM(PfD`>Lnn^)eCCbXB'GA70'<7Y%dT8S*jiA$EO.DYC'3K>`
%eVFS?ZD4puGhu\-,`6o$DpbV^YBtI@"L1,?06"S"W_6tsX7u-;W'.>ba^6<tY8,kF.C7Wt8D)BTW%r`F;q8fp-c+.ds5SS,g6CX$
%<SR=:7EVdraXHdb\IcPLhSg>.Eqm5+>?57Vk!m:]?4#Y0O3&Ta-=E^?M3?]`eC/Y*0mm7"m]OlmZ6de>V!pf%TOj@j1OB,g!%m?/
%Ubm56rJjD34"#tD$.Ol6=+G?h\iR4,05$r*]?:shl:1Z5"1q#Q"'@s=''JotU9YM3dA5N5C"9tb&m0)kFKd^HiYJm&Wkhj7a[Q/p
%)i&A-WnRJ,cgoDXWaB6?o<h$0hmqu2iuKqPUA"HMNL#2a4P;Bua0&M5Qs(u2:O(F?dI#oMGQ/MT>bm9KiNjEe]',^ThYp=)&ms\`
%nUFlYE-L]\`XS:,6FMG"ZpjTo4\mkt"J/%[:[XXEB18b_X#m$iHZ/*l:GR.%U4hqf@iPCjW7:OA\pFqEN&KEcjtTk4&""XdX'%2#
%5n$;ToDiNI-:q^=i=D=+&b_NIOi8(=JQcd5_[rsljDQu;MO/nT'ges7/2K%6ALS>$!t0Q6PUiRKF#1M;#Lor81.)qkV-h%R3DuGV
%M'EUga-prQj03ug@T)dGN6X4(fntOq129bo?X(.2(\@L,gVFPlZnTPPWO1l_*jCl?Dg5sgR!eXa14l;gmr">"\NlK\5W(p`*n!Zf
%hGqnCi%e?'LVp%Y=(3LP7A9mTV5";5j'9:?GDs@*E*u@+f6(UrR2-.lQIiD%<m/"_6ul+@cHKJJYopFfBj@uPgUj1X9(u7T1[?R>
%mNOUek4cT]b+l.6>>H'^QFoKE"jl71gdbV[-[X:3<ffkd%8CAsP"*Sq.0=`fHUlHUnG"tYrHUKY%\1UpHcc2>L(R5A)DsNZ]A9aF
%i(29CBZAF3$1GA6(5\m#@L-Dq\m#"@!P:7WjQg%P'hN>VFm%H)m&)r;O1Rmm>1g1[fQ`Pdb[>[=X"j0R)[J.?!HHXOa17jd][u.X
%4@?u;niPP;VpLR4mBQ7S>l'dJTRSk#WtsF`d0iii9pSB?/+Y#@o\S=0Nq_di:@H=rcWD!.B5U=0E^pB,%;-eVlKtFm0XXgVgL`;>
%1U8t%Su8WQKX2pd0oqt5`QG_B-OV)R#:b5R5[#2J9d#(STc6WnPZhOg])>&7gPis>]COesCbX3nH&[rB0qo5J>rJ2U/#@"f\P'+N
%dVDTG[$EX?)6l-KP.(YT*Bh1rdC]<<5khu&pT;HN9W4H=YrJsd]tqI\AbOB(IH5VrFA*XJYW@+oB?Vu(?;StJk_7f5K7XE_RZ4WC
%FfTVkNQ;*:Ci\oj":blT;B@IL'GWWCs5fFRoVEGE^FW,n0%Bi<(+0n;)uTX\\qO]<d=+Hf7q!J/:D/HkXf\rkKhiHK"X":&$-`QG
%[]IU[%et/Po")CHee!6S0qX9eWj9Oar1'C$V_.pVGAO9LeBDfWA&E&TB*a7@\L&5GbF<q^!7Zf>f5j4^Aj(clm'k/4S$_[(g+N>M
%A?%$RZe+_:#Cl=@!<JSQ.p'-kHGEG_<W@`QGob0BX%J?uhY)OF(<OSE.CeNfi0N3!s/Ok"A=b>;qWiNrosmtKV*C%>pp2f^5Kr=>
%)nChK4s^^Bm\,T4'krPqV/7M#ri2bo"XjslS^%>!A[TNW=/jsSn^d\GoBCR,^csHPo&'K80EhfE:kD,FEclWQ4[SA:gj/C$:VTVj
%>c!@-Pe7"oUJ)0kYA_2OooK$PY+.D@/nTA]VPBukH9#&t;aP]*X`J.M[!H,"^4S$7or+b$heI!6!Kj`4k0CuWSrMe(b]T<NhI*^6
%fS1l#[0tY[Cf`i0g90[a,'g.U*]tk`G@!diW1`Kr1[-G\A`WM8RX(4.9!r"Ze4)*ZWP:VKncZ:Z=;hnSpp]@-Vc4r>OPFQ^eH8S-
%2i*Ki-D&12+c4.@Le6*5ne"pN>9g5FnY$XjZ)j21@V,MLTaiF8^YJMf2,3)-_/-hT2<jUomIYc(Ud)?7s%F%"2-)N*(4gs[HGqdd
%-9]89r8E\%FEck&NgsBm>#(3do4f0kUmb*iOhLU/<+>I-XnN`W;H1.[OHG6hmYpFirQN<AVUqi&3OQj><(i__g.<&CASIT^bfiCO
%LL0(Cdk>er""oE7?e77]logl.4C2VPF+?jDMkuA6]-WhN9?1/1aI>>^:):Dj=^.]QGr1<RU`=]R%qeHA6;'XZSS(lX0:@$XQ$saq
%ks@J$C6q0N*"_GlPq^-j,sF?PQVo+.C'&Vl$KTcFXZ6gQ2JeP<,P)>G[[Rr>[,CIV&d:bb)UUCKPfq"I\7A6(J%oqj<[rfENa=ZX
%J'&C4dS!#q.#7I9ZD!<YNL_(_EOeL6h5H/I)X'`DO@]I]*E*I173jGu%5?akZ&t_H+\4-li06_9iftOSe!3pNdhG;@=."uI$+VH?
%M2-Llg=&Q4><q3CRgN9VHk9<cDK$RU7S+D1oU.*]qk5ntj7QC;\\p:pb"j(kY73m7"6h439G@s7FV8EB"(\C%eSaVp^/1E.*kri"
%NX5%"*"b2fK?SAT4Q2H^A')*L,*P;/Pe8q&j"qfX3EoGS*O0#'FdQkeod=AQh<N=UmKu`""*[(F^t_O<>K1T/A&X2X3D2h_TB7CP
%'Rs5o%M`D7-?Y!o`2L\6?5r$#i7JDA#%8$].B+M'JTT@I]<jS#as5Rl&!jOmm(/7rPBJqP:Mj>CReuS3AV2"P<_8;hbX,/FRP7*X
%.6L^fkscF>!hLI7m5M[%94VnSqf,7=.9WP85r#_^ND96/dM>ZdmNX*oP\bU<cOYlIc^Vtd).0Z6O`3C!NuE@5,0kWM$!goOpH"lD
%)IH$EZRIOil)uke!A(Rl.\5D6k3:R$+sQkeHs0E`/ia&I:RAcEN[Hd7`Rn/+FrB]jn2g\BB^DhD_t%iH29"@/m]YZ5!k^tM<gG:*
%aJ#hIl,u"Z1>Rip"aZk\$=)3:]p-[LhsQ?9q<s&-d&#\^PK%`0Rqe#/8)R]HkI`$+k(F'U;_T@XQh#LNF*YQ9=t3Ph!ZH%']BL@U
%>Ji^*/R:qWIhOiV2EZETh!O^daEo$,h^N^lCq2-TgeY32oqXNdSYmH-kW,f0arl#3$jF%<JaCLBQ#D(loc,V#WJGUJ[&9E:Gt$Y.
%Op]r<Kl/JH<JUlVnHjYBRijtl78M*d"s:DC'#fJ5T&Padg/"c'EA51*1?I.ZP&RXf3Sh]\RqT9QB>B1T3Wm`*/NOL;YoPFK&_`(,
%>+@0D`=@7$EW$$7QHc1<aUH>p*iRP,i!In>cQg/4MO(W)+?:9B667C`$'b(;r5H8I`i:n*X*bR$9tZa_O_tDR_p*06#W8UW-=Wf=
%(s>>Dou!q7_MK%@gUYpCoDAWG&b2"f2%e5F*%.kg`%_^3)ICF;?H[e0&n\Mujcs.79+"gnq7$#.$B!O:gP/rGnFS>0h]LG<H@:":
%BFl[NXoB//_,Q_ur3Ml"@3Rf=Ko"ut8#7r[cI3fT2jVb%ni?+!G;aT+V0"TX08uYUNGZS$.5?en6MZ1eY_\<7HX9A-$Xs\1Y?XCN
%efB''0J1%359E:(3OC;B4+'4SP[U&@E"n?q?s]c@e3\X:KeB<s(.W(hYM='.1eh'T8RF>RRY$--;moZW2_Y.%eGm_%pLe!d^Y8tO
%cH%D<2bQ->+)*[GQ,-HM)H7a:1(gOh@4'PZ6pnG5c(fD:KQ$TCl.5GsiK>ESRnhLnp0:flo$W+kg75$T>]-$U#=En/<^/qU9l#"B
%:X=]]IOd6H5<3p/Z#S=cL]oW^f7UEl=[_:<:TRAlH=GLIU[;-*pStu^`2O43(pJI/TF`H.5f(`G7'Xre&LG4=736;,LE<&+TAl%7
%1[>&%'ZfY#iJ8joBLP&$O+%fZ!UMdpb+`,11RKm#=p*#FT`$;ZF%e*%)q!78ESoOYq,MqMf&pP9*g\VpA=jY_o<L>rqcp+gk_Vp+
%_oFWu:*79=rAXuEPZjoSUIGo(jZTUUpa0],2%nd*m\9qSMo9:\)jC\p*c26>-:d[T.%sh2%b2P[i<_qF1-GuIe.`OjT?M4t:n5NT
%ndcNb:g]Yqr"HB[I:l;hQkhe5rre-RC441R:#SK^4nC2$*!fQe+D@ls%4PfW$o-!ZFF$?Yd0q0G19o(N#D."Qockg;(mViZ:GI+Z
%&_EGcd^pV0G")_-OAV4L(s^'j$(bkNmdCqCh;:m:*c=<kY7\MUkn6(tOd0h+B<3nBDQtnqAp.f<S/Oh%8>$G.m!$kL'r)HZLf(KB
%:[Lr?lUr8sr_15s05t:s,Ed&P1:rUhh.9H16j@+k8G,Xor<aXlrUi2O[6u9!-`VJ7-R.qfQqJ2EME#07N:_l#S?"baNsIhDqn37@
%L9XYG2aL<M>>//bC)d>igE:),J0lT"N:42;$/bN#24*ggjuTb(C<_;\=JL>s0]>XN8^Y$B1@A8Hdtd*:$aL.6\t2;a8EVoZOtu6b
%Bs?++=Lt:b;Xl;71I14AD>GMS=6<`8FX8=:;0RPeNAJ"M.-roj`S"9DL-NC4pGI(1.'a>]W<:4Ej(3kuq<ecL<:_sK4"^HXMTQ"E
%d:UgG>E")*36jEunc?\7RK^ge.k2OgPIoZ2'_C62'tM^jkQg>p+dR'7?<kcpi)LsHUooA@:;C0RKXlFQ,R,1PUq:Ot0J(sGE0s>g
%eLGW@2Mr^[prkpFAf05ahu'&&-SObIZBX$.^Vis=.`0`%Bo-eI7WOiS%o>*X^8FYFD\Ml":&@n5coQ%),2huIX5S6F!U99_EjWm:
%KH+=(P>F7l_`CsCjN.k4S^#4`brR5h_F`9\j5>0s1B:G0,p-Ft`_?ZZ5,Xd&]Y^VIUhcg)pc>t@#FSAq=6ZT$I#A-lek#PfK8lB'
%QjgsUg6?9/4/:?ffn@IT>_emO*Xdc9Y2W*5BCtE49ZGcSL;k=;=I)@>(EEC%&j%WQ0r=3/Y[?D;/Wtm_/Tfdu(Qn3;oaq0S#8M=9
%8U\\1S`V`8E`Ia?%SXiA*_JeV!epd3r<URM*5C""(63pE)1<!1Q-Ul,BrCHE).@e`;-kqO=EXPACsW0t@d*e/_ecDq]"19W_joXI
%BU8MWnooGeC2[]TqIS'SP<.TW(nRE!'(YMp=nE"aXre_tY&cfam=$-Ye[!tK7>eqj=O".T)',cV;bX"T`_j0`#\K?:'U2L7:k]K&
%,Zqu:bFRDbMDt!k3LdIl0&!_.3;KTZV9U2c^hs<I]&orgNDP]c+-o`!oBD@oZJ'+m=\S9Vp2:OP=i]WVnXrj!-p;D/<MWLr@Z%h`
%Ek?1uI/[a3FuWD+aV0uZL(<mRH1D<m3^%_,37iDBgZd=Rk!9>\l^VZg.@(>DcXS<<B"AP1r=u9E.i`!rpuhs<^SXZmH!`#]eM^1!
%Q/3s9L@d)q@E<EtR7*c:dY9O(4dBd?3CY(cI+_@?Fb,1V`2pd\X);QA'=Mh6n/9=W0n\>^2H;QHAn6r8T?U>FZQ*@_Ru''b9dP1D
%k.)T?//_pLl8c[h17%!h/`9&<c5Q%?=!sCFXa&"+O%I`c(>9[VO?OQ8_s`liKeb;.i-hE,U4rR%D2FkTD)79\i)<A<V<UAC:-4lb
%3[0i>#K1<=pW<UMV4l(Mg]E[FedR`=!k#']cSrlQ0hZVD,batg\j9E3h`LO+\k_kB-b/8)!YI&*GBSdAO<6GgV/Gppj3(#!mQe@0
%E]oU^8`h;ShEmSBd.<_-R3ME_[\JTRG=*E',KadDfiZ)eC,er)k\L3a6a)B)0)48,S5aS!%?Ya3-_*CGStX)"!WX<nRnhsL5<X^K
%ZmOf\0B%g%Z.aU;*U8?IE(2pa+#GDC&abK)[7K,<PC_>4Qp<^DNl^s;*#GD]^iKdpD]B1lTuj@,ILL6golOB[!Kp(NYZ?7?&jM[+
%'C=\i$mO22#ET9daS8S764b[aQ4jV4oaH7TRpmF=)iI>qlTq*jOdtf>i&ma'pW4"bO*4IYWFXDN3'6$2C)o[u/T@n2nhGajJ6*\&
%7.m+BP76=$+=iX4Up6X*-oE9pGUR"/6l*]=;Au>(1hU>#0W!kl#i56,PKi3mfWULIb4Y*VG.@d;m^/f`<k"SB1)U7].SIQZ^ZsXt
%oNfLt<J_o]!p#_27X[ZXKe\)C\CF4/cIA8.>N:QYF'fEDHEGn%hqb2*QWB&:P`H[Rlss/F=/Y_%;_rj@/%T3"&P@P6eQ3NnPoX#1
%KjSY!mfLG^5@iN:2OTj/"b[lZ\Yl;!ak*`,o/+qA0[F*_"\5>`QLn/86jWjM<`hrqHmf'ufoHD)):l2=Dlfe5%3Qr-Od4i$[#ptk
%22!-kDG/W<^mQLj<tq:q0TJd?V)3*9l^RJ-Cr$>2%>q(Ul`Yg@G#).DNsZ\m$kYVEchmFsZWl=IV>B$YDO-g?WqWUYWa5@%7B'3g
%S1[Aq^RO>N4/;'Z-MVu/,d*fb!3I15V7Bf'Ken5OW!TO:RXn+pP2a@h5q6-:'s?[Y^5Q#N"f6#eH2<Gl1h/q>gge+r4-*31Q?Su4
%(YUCs?1nDCHV^F&[!JIT<b^Gg81>qVg\GG4)3_4ZPHcR:Z^4k=K&9=a^(.71[X]t^^_Ad;aSMkRoA&m@8m66P=*[(2N:V@_BG.JS
%P+*!b%^%OKj$sYu>]@f60s#->#t#cm=][V"k9'@7VlK&E_WF96JE))D"R8CR7<co5;JWk$qH/45@;SfTpRAFE[u2Sn+gd9D]:E?i
%7uf_]DLV>&#fIYp]Ke1JaAp>G<GE%+euV:IK*NW@*=1^9l@Zif`05GmS0R<LbadfFXA_2bMbpPO@TG1,=@bVuTi^I6j07c^m-gDM
%+H??bXJ;Sj6;Mkf!PPVOEji]TL2(l&M=V<tIZddAL=D[4/%8YVLrri4%^#$>IeQ4qE>NP[ML8HO1::\#BtaK1R4HFX7DV=/,c.k(
%<*dGMeCu=NPua"1^bj,teOo[@EXqN?<L_Yl5k^/p=]Kfj9"Ip[)E#tSaXfuGR!dB">_H-BfmFM8k.c7cVfPm55Z\(AnWfrg-Kk\#
%4Y1F2]93`?r-5MfXL:)O%$Tk`WLpZL(g-Sl0R[NqV`m^q_q4.ua/&T*)npebEo:"/N=U[B"1]_/#6]&tEBL[MC;Q1G'_\RuFg$mj
%7ed]iFEf+K-0copVXG8VG$jF6UU_N(@dg2PlfaQJgG_=dIaEL2e^ls<?kYYBM1?I3L:GJYmr<(O'/J$e.PMSgSpFp6:u<;i.OFGR
%)?Nh9XKk;95Qr`th0-_IQ&\UaPqo<WJ`!DaQ9Q=G5%>`EaIm$r[agIWIU1/lT>d3"%76TGGV:NQ;NiBmbG'5g8,ZX*#Z=WHL%jgP
%*p:os'?$&?Ti>S\_d(;GjsuLX:qtOu9#OT@fmGGd6+SpP;I8*\QhC5I-J%.Rg=-THADS7tcQtDTeU'`BOf7QTr-d<3j#](%=oN-"
%LaC@).U?\=X+]JtO).OQXB7SSLta_"1M=oEKsi%`Tk.5!ZXV$4&<"b#&g!s#-*#25`kS"*/*s\imB.YUR75WQ>X\*]`%q#4<qHC+
%R=jX&"RX*Po>Y8H"adA,oju(@bS1KmgDVbMpQK[f'hl'OqSRIkF(j[QA+Vi7Jj1h:p+JDUrs!"i>L93SYBlXM?;hFVJKnApK4qE_
%P^gr?G!Hl(HA%3#gOXl@%o456?D;hak!F"bj3<#D(\h\TI,$*ACo37Tm_c4*FRst:j.AL@T04p$4Be@>J=f$(T01Jm4S><MLJNNC
%B;+Ht9KJ5Z9tB\tGLodTN/6lCT%!Xk*`.F1lP7a)U24,l9`'V[%;VE%RV[@kEQe0I93J6nCBgqnKs$omHRQXM5Y19*^"=I;<K5i_
%:BjQE]ifNP#MrhgV#l\qHjj56+ZDI"+,0qFAeSM1W>r0'+kr\kQ5$).[<n-C<S04u$+Yl@85g12;.pQOOW_7VJk?Q8M=2kK;a_Y%
%""u'7Z&O?'6b$h'++si$:1'YafGN2-aGM3WT8c_u._lgL`]<!A'";PjEd>Tr$.q].&Bm@TW0ZQk1)\r7;ZGnA[HD1QD#:ZOX'O/Q
%Gj%5&;e[Lq2[^:)Y60kIdKD\&/umj;5u.>p!;Xg5h*9/[r_?mZ3t)G`V[Q@NGgWTX<HC06Y!MYE`]%F'"B#CfnVH#H;'8j];^f?1
%:SDm47+,[KJf@RQ-^)IS@>lrS8aB%qm>7VWE[m<V-^;o%6Kr4kV(I.B1SUrH!fEdp]LUCi,&*I*UokTc@QCDXNJ9GRk^+GS-]YpL
%U#N"EHQ5OW:E5q'QST8,dHu(`.`VsX5jIV'*S#4$;F:kl1Y3:3/S!?Ud&'P+$&KkjClY=ZcR=sZnfCC"M55>>W=43VUOYHV6672p
%*Kn8Q8R)-RP+%W4831UA(ETMAl$C^IM.r'$fPqCtR[kmnp,fOdT)NC6Wg%@rWn4L4U"&`sU!s:i/R:3%?<=!I20HRO\Up-jR+K\j
%Ut]e5?qbu\kZ/4#k8A'kWpdRM-.:RXLlV82=NofVf3FB7d2Ct!jL9AWk18=PD:dmn\$+Q'E8R0MkKBPQ^SRo6Ef_D`[A=&_Ee.4@
%#@`H>2W9ik=ja*N\[m/-KQ)2tN9atA\UA<0"fk%=O]9*;D0CqR1c/Olf.S4u_H4dt5E$bsrc0`chplNd0<QZS``nT3.G"Zmp<p4`
%NXWrgdAF*UKjj7@T6UPI`@b/9cTI[.6@l"Eg^ihL3U\IE'Q)FKLQoSQI`f[7Vbd\rbI[R,A\IH+a@`]K,/D=c8M2+KL'OdEdVi8D
%W'J9h*-\ED5P@b=r#\o%.Q\:-74]FVp5]=sdnL!PFY]5bRN)8&qX)*%Wqk>B/HEig8kW.W&^n=b7PFrXcul2+^]2L;o+m;rr^I+R
%B#0f-@f$]FQ11j,DMmMW)l<$q3'P=T:N?8AFT:tIOEIUC:@s&'\O1YPYOoGbVAPb^?O925#0i'tHl2V.>UN:G8FAd&TMkQ(jkp'/
%kJ$B_QTb*CrT>T@CAcSf.<KD*YZsUN/kR3==5I\HlRlLFD,PJ4;unT8@K)[Z]<:`ll&Lp#)&CUpm'uB/!,98C]L@"]"1T[nj4D#W
%%gIV$3odFR33ciD@BW(<475&.`ee-sqW_Tj^iN[eA,=eXT6Q+h*B+d[7@M[l8Phm@oQS*QJsEM\5<$@>!PR5fM.@cqV:Pg-[5\jj
%lB+T8p8<3-E');p>2[gr.YgA>K(0k0(A$8DVk3uI-Fds1lhJ&&Lh%l9!H6MCD>f![i"mL$mrk>6,oMTaJ81%HMA8aPI%UUJd4D-E
%8C$P(mQ<OsP(<EMdafBbA7FY_lqN_)okHWqk(b!,;ljqu,qBiA`t^_"4NEZT7#/(86VFG$CWr^(.sR>W/OJpsDXk]I/_g>OoI(`^
%dhZ=LK96`Gd6a<;2[C7bhu%nn6%N,W!$Q(sh'Ds2>_W##OuLNc?gQ7r:(`tBM?'5B`3pgFXW3*!,S+p,6]dS6_'OudNbPpAHPp:F
%D&6Mqi#LM/I5pU&fMW*ucV?C=QY4Yq"?]SX_n3gda>JXH,9S.<Q)BBBV^;i8<#j@u_>4X^fpcCg-BeHW&9hh-e?4[0rCm,sA@Hit
%_r.cW3>M1LKc!&V)*flZ?h(*MkR[H6NRP)l^?"r(!35BgKFK6l]d_s'>u_r>2eK6K"-Z)^Z%&+A=Lc4Q=M^'lokmR:O*c$X3V8UE
%Qn!)c2`N?h3k],-974mB?E/a5EPK-K@%.QrZS(0bQ*quN4p$i$?tXjMM,2,_g`0i-<.U%>n[(VsMX4N@2;R=Ils-G035fYPgL`RD
%\^MQ\-FX>#rK^bo442S'QWrUA<O.?K6"je%QW0%5p*\+*qM3>qf$C34UV<Kd%rY8A[Q7tGrf_]skDcr%.(=osM#/rIZdT-qX6s6,
%q(<enFGOIKdUHtGD<74U5IV44r67<(1NEZYkcp`3qGiTF?bugkE1T:..e`m0qV[sSldW6)>Q!FOW[f]27H4OY]IS_SD;+#h6]\J9
%c?<QRHq_9-E`9hBR(W.cnn$:ZC&#j%FLh:.0(+!eV;T2tpSU6slq?QSAD$5+QBYMiUVpnHLraaJUp8'ueA)WTM>2B0#WK].R;5-d
%]ZM6gb39ZjIl>\MXX-X9Oj)\f>Uo>C;K%P\$nat!GjG/YkH.g6qXhAe6K`)E6([$KPZ&T#.S5=SZ*['5.<Fjb,Td"leQ9H)5tB=.
%iK%i\N>19$7!Aa0a`53FHc?$,fhKm.8hHJFF:VAt=F1+d;#W"U/1Z`YDY)Y4pM+Z\2;0`fX[hH)@g68NMO^!I+t":0!r`e_,?kFu
%J^rZGAfk+ZA(q7qGpUqbqj=@2C%3C+j$!`_bDjkN;0?n$M8*XC+_"%(htSs_XD_f'?\+M;(uko'jt*pp-L9Hs&=/cfL8kf3M[RA5
%Cj*96TAX7V)YV&pa<#8gWK<Fke!o8U^XH"o8('bmB6VmN?Vd/EOTS7MNa`V^,<;c2kk%BO->ff^eYq63h&T1S6\B]oB?i8lUcV6g
%QJB^g%&H%sjbR1D_]%-QG'Kf;!+uI35fBqjW0ji\Z4#lR"k)VT]tT3<M^u('/gnfEMG=?8GNptN:2C*0^qbrJXjI1d/1jL3n`Yb<
%$8qOB_^ZEjL@\$9=/d9'_J6c>D[m=J]!?VkNM4`.FTi:\PV9\NO3,i*\`)j2bLCUoI^arn]HRJH).N@O2ELS]%]FV^+rFIbEbPse
%KRMVB+lp.CpEf%G2kMP-_H<KRDua4bn5Oc[C"4]m9tV\[=P$\*'H$f'BiMqbE's"rNR"<6WL#41.jBIJ:OTM$+0uA:=n9'!LTk1:
%NqW0H5q>m"^(TqJp%?:GrT:hn`F+bW"LX2*R;cK#ZB;m1S'[jO-A'i()<*D08@c%N&dsS_c\B1D6d$=C.k2t)>V/D7lf''t9C`9)
%B8)c#e@lA@7_jYJWRmmf;5?26a=/+e*Glr[)Lj\!pu!EAUa0q4gHgD)Nj-%0bqNYgqY]L,Tq$#u>grCPqhZWW2!sW&W#hX(4]a_Q
%TEe!*5:$P^l0u9<OJXn1a(tm)n4Jaid$.%m\ck[)V>e+=!r+,Tp.N<5L5$I#Q7I5X6Z9*e78'+TM?i%pEJZ/'oHYl%mZS9L*koa^
%O2L?_;IT.@>;h;d(B!ZfLP*`GLff=M/VWH"XeD-8e]?[57-F99Fj?f*PZF4DEVI5pML(%QV_`=r1tgKs3cVpd<LiSL,Rep93YSq=
%[%N@*n_P*PRtU7I%[[bV<>3A7Bud6;Wf--I>%8c>AVg;2CcLos4ZX-ZjB/s)Atr"Kq_fjm$6c:sr[S@PH*6EmBIBufjL]FbPctsf
%dWpcS=$CR^kL&X8S*XGc!HCQI\KL>ma%EK]k?OCH>kNIRbAsi.=o$m7L'<C!aAZ;Cc/<DGo]g'Xkc\\J_:U9BAhN0r2J)iYg.+rJ
%](rf;6(&&,bg+_1ADT$/r.3TfKd-NbPgY<PRN5g#U!ZF@98:W'<$L3gSG.;g#jtBL!!*CNq*3@j^ALGbRn++NR4$s;*QqFHoCPN`
%ESuj*)(Y\iJE;K8+to$u#]3i#<N3bhgSMP0GD<9;%tn,3X5.@R7$Aa3<9eD&0$5'WQVYb]mF9<*QZ'FckJL0)k9>7pVaBY=,O/cm
%m!6)C\ktoEbaZgM)%QnPoV+m_BZTc`7uA([GWcbXr--]kHehIS[k0$sc>/`PGK^F]6u@;I.&NuHld\,*1K]p&0K&3B@eDN-/?.mu
%OVmacR'`mf\I!Q8$f>44^C$pBr^Fl!qn%3nme&!uF583&=5bs)$k9+j=GD"ISX>aV>9]4!-hM+k*Zg1?b`<QF6+4A)5.OPbEa-Gl
%,e;Rmj%LIVSg70R*6,3]D3JSf>-2(MN.g8ifqe6Q32(['Z0E4XZu(-Yr8Z.qC$NbM\fX@M#STJB`Q]"KO0DuP=`[<#5?(\X,Nl4_
%>C-*?F'qsLbT5Q#mN&o>Tk7,F'=GpT"eqTTD2d#LMLuZT^"dk__Qm`%q%kFjNa9%cacBW`*$UIrK`T_@@5-B?=Va-;(R!6QD-F2T
%(lsj=aj*d24(2@+Ju1\NQ12MUX6IWo/=i6aOTN>u6O#Q[BP5b/-ELNfV9pM9EIjIYo66B^P&[<Mp,tQ8GFlcnifJa_T98A[Ej4gi
%dbr3:m0lJ6%693)',lV8ac;el'@"NnJ4acJq1d^[D:B:`oImd5m`6#^[jBl*aTaE7ZB5:a>okbAc`(s>r`()dbP5iO[(5!t[$shO
%rTO94iT&GHc<:GEVRVF<E(d6l]Sq*<4.C:a-[Z5KLb7c3&#s",k=#rc8X.jMT60ugSe"QZaueS[$sU+EQ-cSDqkL'I.%\q2`E7S[
%FFj41j[P8M9!Vco!,/ce4Jep&g^O$.rHd*;dR%;r18+I+>F88bVm"tTROj[J<,,IrC=1o"@3=T^&,haZr=1mbmke>K$o,,=(HqE4
%oPFK4l.OCO)Wd=cn\9S%DI^fr3f*BN1+Tji*F&!29,dsWT*+3>7lmeE'475Q<$Pq;g-]ut:obY\BAol2Q#)#F[X29F]^TsLih]d5
%RQN6$:]/J$@^3NCQsP@XDMoG=(SYj=\/S7[Z'7Iga<G=Ld9oW>USYp`\%]q=?i-ZEdJs5]IP&2t]D2sGF`GP[V$u#$\7.m(@a@U,
%_JF*_T]C-[6ppXl%8eWIG5#V$P??NiPA5pg9A-GZjhm[;oM*c-Knrs8s$T1jO&n8dBXHWW1W(M;\um?kr5^!9I5h]].s#`=DY847
%>p,D3]`llcL\5kjX]Q)b4V1c-hAS?iE]F*P.GFGI!GJKI2Hl!'q]5]kEOUD/.C>F&:L,hD8840O7TrA@@M%hpqbOXCHM92boTT1C
%415+S5/0#T+)g+aKD]VK"5I('qJQHrL`]cB)jW#"j$@aj->/H,NEY$b>A:0McD(Sec0FV;oEK(^#4Tf@CAQK\Er-cq`ap<Hh2aI`
%4+->3f@)Oc^j`9WGTTpZMU3,<AUd+ZWS'dLs"RP`^Ko"sR%JinmlZidX01.-?\/'@J+VMWKV@2HfDXK4>c[]PoT;(.L*9%MM9g4l
%U"1s>@o/*ekRT>\MQZ@"SB<6-_m^9Pf2XSMh$hkk6qM[mUrddmh,\'ZD%T&eg(qBTI4K/VfOleR@VdqrP6F_^Q31-dFKVV&057r?
%e#/<6?^.u:\;d0\20FJ=C\uHr`DY*LKnKR=&J6+,q+Pd<(-mn50S'r2r^"_Q:90VI?&4boqV@;ej&JG\XSmBEB`p50CH(fmY1uKM
%A#>o_8ugh^b_"!DgR-nN\c\$.Z)>S"'^Yf12lJW=UtcM[C?^4QQl678TQ-qL_d^_.V$/_oEh<o0n>!s9T?=CO%iK-3^L#$YkO=@>
%_of_D;2+Y[QAW,aA4JJq^]dfVDBCdehhIWs)Me%DGh9aB)mDI8B!:)*rQ76!oC;2lG[ImdkP7t;r!,]qBE]9Q<d]g*E#I6LG/l0_
%dj;\)/65qQ(e1;+&JipYo2PiM#)lK2h;plfq:p`\F(C^"<30qnC)$4!C7/^o?O<Z>[OFdsT'&hg<,BI9J>kgC^uqXMPfI<IH-DZG
%C6pcZ*9:jT`XVe5PIpLa>P7%Jro<HnhVI5>.D4/L.8_&HQbTgHPV3l"[$*-$g$m7FR\7)s*t*BA@^C"Y`V0`/P\5aq*X!U,+$jBt
%7?kS\h?A!t#N99UcNE1a'.Wk1L5Om7Wg6WLl(;AO:jque",IW'Y?3ui)9R)DP(AUld#io\DD=`kP4"N8,]?(D6oYAb?C:TZ%)2kd
%F@-T_e!ttemMAK2$MG5_4H<%]Jj4Y3YC/sqn`p4`a9MP#kL[@T%@h^hgJLQ[n`u;cOh+ob2V*[SNBGWV$J\8u0;`'KSp/RVmP@;*
%oHO!+1,I+FF.@aL<%cGh,j-<8f[&IICG,fc84%`5b4uBE\e$:fMgU36-D2K'W%IZC/rktf]$b<rl#]@N%d:QIS/,%Gag@"oGq6XF
%No5I)1675.&k^_i,gV!]ONB".>!Wrj*UXHqoP6+u3l<Sl*T[R'^>keN*A15TX-pr#Y<.OnW927M'&M-F*"43g>1+pb5[J$;_2JZE
%LVNT&^ZGlOAB@pHf$Ba]PS^#rU29Et>X:s0_4.?e"HQYgnukc:YI2u5==hg@#G(#5^ormrY_KZCR1=mW*u<%(^6T_%OE56PrUUj(
%g?V"[-UM[[f$/D=[Z;=f%f:??6Cc&k]&=cU3M_Z!'k2'P*iMZ.-rSQn9fYu:_hc`/@(QM*!ZGM2@f4Q4l1:?6!ed(S8a,K<0D_N3
%iS>gU%uBtc`J)!XE-C()P\6NfOqrU"ZRJ:Y@:]k*+kgUCaG4;sX`KC-99Qf<5+bCpOJg-e7d>uBB+-Q/oHQc13;Gp+q86(?Af<'"
%iHmd_lXj5#S4h>f9Bt_sWHKQ`kUTM=Lnh"`FISeeSAgr1TQ<-H(bU'm-^/f"(4#u"`42)34mm9XYt1X3fRfff&0RN*18t><R2).^
%-,"?u_r;@[rlSh]AP)IkMC^>0_:2%3cY<&`+<.YAi-:1e>N.#LGS-ZR4gU*!3\P8A'8d[;4cZ]rn'V3m(eVL++DKLIBV^I!-f)BL
%God0-^/3#nc]%p'j]Qrc0:&]6WfaY,_(t8Zp>6k86hSI`&t7iM_Mc4F"mos"^8W<<6Po$TZ/!RYo!aO>,?%%Zlunnng"tsQZ/2=I
%72(n^pg7Y6$"-"L4Uij.F!0bC[-2\W?:X=<UOQSkG^:$_be7SSXMY^^^iDX\b*qn%FGDrW!ad6/Y9.c42-,@EI-$KBlR<N(o,1)X
%muj)Z?`\DZGI+@)Z1aZB6<<Q-;(TE$E=<O!rh*4D?X5$bbM\S&q1ZER@X(F11F+Pa=Vf.:!.f.A$M'g_Sp59d9P=u83*9AN#]#S2
%#_F^O_n;^B[UK_#]/;;+[:l#i*hPk!`5jauY^9cZ1h,1<:Uir\Ipt#97GFW4(,a);oqeP4<IHuk-+52ImI_=.Oe#*fF<0Q[iW(cK
%SE*dFoH#8bTo$O[j9.kZ"l3p3c.eiHaV4Tri\;if"ih`Sof.[:+2[OapZqjWMgOtjopC\P\TY]k`1E9FUd^5q]<B"#Mk-'PdCPYj
%es.<.UQQsGADNA2%T:T[_A.J/9oS0BV\J\_G3H;"j^:S%Y.S=8ObN[KkU44,[K7F;MtEnI41P&$!k&7YTah>Qrt:QLe=PNU'sP&X
%B:dB."1(BlS0$WTSP]^uQlk]LLZR"!>oa3Ka,5RhR?F#5dNq=F,2o&n5=gH>>K%oU9No;@'=Qo]beqRM%,,sJ%804ZNaa^;M5hd!
%@aJqpG6-.51[eT[R:_iG;_9Ajo&ND(lFKIMbB-UcM`B/\r>7h^Y?W>*K(5]J&3l\[^g4T%a]m@aTNIXK=&#TA4+%%pAhI4E`%"SR
%8-onoZ>mj]L_VkYA#]VBqn2UA&m[q*;"qQI3?#!bn5NR%^+a775]LqPi*'Z'+JZ'MPD7Ne,>r2Dl%i!gTbTk#Pl&,.Dhs'%,#>oU
%O4*nX#A?\J,2,=>Q&o2M-I*\M_Aa)+RuO0;$COD<W0.Bnr2g02;WFAtah6^ciH%H]e$jh6d/7oT]D<tbeY^5DAT//gTQG[);/"Km
%oCde@Fe7P(gB8!E=9,F)HP34"Pj7]Cp6goJ;_?eBha*.G-u;7TWSScS6qA\3eKpl1/&(gr((6lZ-$uJ#L]ol;lL,f=#!Dm3T1EIB
%,ODfrX]R+q-c/Uk3I*2YG_Y"Tg3eTJcdNe(<KjY<U/UZ$`i3mu\8uni.00?sc(3+?,rZRXpQ>#2A<Z*tQ`FB"Qd?'PdR^T-fqM>"
%$:mjB-4%P>chj8S>b.ZPaX$L(ZZX$3Y<M==l[-s5U.iar$l*H69[%Tm/bk3s)Q#!Z]-EI3VA\G0BHp@E6noW@!S;kRa(a3GZ6iQ[
%:`,^;"roO^@79#f?B(2KL<)%(\[V!(^R2%`Mp"t5;^o[%Fuu*l$/-D4<jS28'OG#ZmG/sAgn?<,6'nWm>*%tm9@\C.h_WU3ikR5s
%<DOL_7ZsKF9"%s`$mY\l/fj5.S^4N9OhkmF!_f8ujBq(^B&T:fKZfIMTrP1]TX*q0kd<$RDa]hb0"EBP[:E@R%B<MRbus"7(t"SA
%c7@jBs5R+R:h]%H&+XM/MrO\%$AZDdM8IWY=o=#]UJ:?m(d(EuD2o.CdnbUBMl!+:7%E^D9MrW^NL4QVAmiJ3O5[cQ'l7`?*5q1%
%PuQ<K*V"./X6^8:pTn^h(O&e@#ekXeIJhl/*jWD.SX#'52qV+%R0Fu$cua/N10Y)A[,.LZUUf.Q)KP,G-eb;k0Fup>-!djKkENm?
%U$:bR2!EfL]p9)TT?Y;V]u.bMJ?%-1ZYNe:EVajG5FlSIGr6,YoLq*6$e;nR!:c$5)eq4VZoKO(Q^0PtHsk^K]=.'lLm?1U5'Ros
%V=-?7TJX9HB3iHQSEu=E&_F5GSkcT_[TGA3RlP7TL9r5R\D_Pm86KZ,f']Q*oA!2@?ip3j6R1ua%UDjh9!TT1<2^$p&ObKIW@,NP
%,7YHt&,:Um?bbqU8t?8C7jrX%:B7mkITH0'q[+Er`1t.e,4`It?KA"J*C-^7ac48kQm_Rr$uR5lkp]-b!P;u+8'U.7!_Qo4TgJ58
%N:r$!F92Xb5fi9DK![@N:\$bJ\iDCmA$ZFoH]aT>oNdP<+I#rWID>!.6d4=1'a`iBfR`)1_K$:J(q-(X[S#'3P-LNXdm0<h`C2(-
%[NlGDfg@*MnRg)e*L1u9^d;Q=W'\S>HjngcOjJjE183`mlW@132-p\dV4nS$V)Z'_hms(M`89#P6F=r!0Oh^J)<><J??i73LO2fG
%:n$<H3S1$0#DJVA%Z`)U`+$`k\kO!4.bY-'3IU>=\R`20?&OJqlI&]9fKo_[oJ7jNqM+k_aj@a6M%K3aQgn,#Ggt*6%\b.RYf;J_
%X>ZX1]@AYmfTO?9;t`1fi6AmiF4:tZEmM?TG+h>=f=r6=P@aO!M*[en]*/QbV\RITG$akpHPdpn>e3R%m&]r))$b)XYu<[mQkR$g
%BcK=rMMJdF\S:=rZpas/2R\UgNObLeV@NuL]GXEhbdN-,#nL%TTp!?cfel8Yr*We4T25==k2hjqd*t>_mGSs8f5_'1DCmYImu4*B
%5;!&^l3=Li&!;=uXB*<^8=WG_)TR.j7=n7H/>763Or<5'iPnU$krjIV)RRFb0c+/)-)Mhd:_H@nB$A7%9+VP2;*=S'*/$RAUj?a?
%U1tVlQ!LKZThQo[OW6=B!XcIe7S2iH59eJe@=>h"T]:ua;MlH*_4hVIWEo;_`[-Nn:Ykn),.KIr0N.'tEe.LUC5UK6-]:d@"Mr,-
%3s>5Zp]5>/4D2O=XEeZt0S=ff%8hh$doX)i?;i.'@IOYPA\F4aX]9E@Q>):N4@NkBor?m$c9\NtP&PBanp3]XF]:GDR$NI)gT_gj
%Lhaoq-?*rF`i,)@S8s^iBokZ;C@N&&qZAHJPTa2bka@V>&RpLA.G^XbI5p$_[oheXMlXIsH,Q&lM.93P&h+#"gpIurG_B[[=?pr!
%`hc8a:<c,nB'%WXH1/^2,V;$-AOJ\lrEtC``Ksdp*/_q2Lr)a-8JJTuV]AC<76qL?7L]mi%o\4GR6_Y]Uf\0u:I;Z68[(VVq>t$F
%(V!fn9.ogr<A:9nV.WR=C9.%0O__spO_Vn,+-,Ge(t8WKETpl7gD;uK"TC0V6$`3BP[,A0X]c308nT$0F<5.?q5PQP6ni5S)Ac,b
%RSMd`%20sbiSfW,,F/IHMOA3+/OK+EgM`fJgh"NHL0[-ln<fOFVsJ5!b,:n!H+oo]h]mhBT:.YsZgqV/8`8C"R_ad`%7`A)a1)_J
%^IB2MEd.=LKYB_P0\J9SC%q`keY<cn#:_GG@@ejLY:jF5HPidEa2nT%->B?U!3;,W*$4@A-kl&!%eia]D5ZnmC)"jhC14bCiQ7?'
%d!S:`Qk<9rc3TLp]IV.+B.V,Ki6n;bArA&r_@X6]!*,p=<CNOh-hj^TKh&AkT:k$n?V2h1cJd=C`hTe8.b-O(qZ!iiPj=Wp)<mA#
%HZMUri!p9Zkt]'Q8hZ4c%D.<tAZjD.8*rfP^&ukV:P4-XWODN]8dK'Flhg87WOs0.M9g)^UnXU1?.f<'Rs$Ol[4/0+^49eGAZ/Jf
%"6i,s<tdNEj['6f7Z]7hTd9TceK<4'"mERa3"mK?2.LO$p-k>>Zb.5&lrW6?q<_g@pHu:M"ce>HB_EKP?uIFYpOYs6E>?;#D.<2"
%Lu#@N0sRgi;/'Sb"2p97^e+V_.^pFsPEJj6lc/C6DER#GJR&oaC6q2kVCimNR^oj[Csst1\:++Y,BW:ZD>Z/*CSLmNs(\1#)+LnS
%q,^]qFP16RM'adqPI8QVF%.X:-b<!GHZ;$_IW^u7$9`X+0."?UKm^s?r+DuX5On1!r),fa2e,"Z$7c\5>GnLfaU&MRcJ7;5_4I$N
%O6>hm'Dkjg.f8ga9>;uH`ND#&"p@<J<aZg0aUg5oQS[2Q#WG>E;$m1HgDR"Q`H_hLk\?"5k7^peF0.5n.2__UTiOIMA[[iD(lc9e
%3[Kl*qPD-O@Su#Y6`+eI1kP2o^JRcPL#6a?2>55'54.<EZof8?*-NV<BM3(0rUiPO;[.nb?(p#7:+#^Tmo$r0<5KPARth`,aEP3I
%=[]t5cC+\)dcK&`@O9T@>5@`4L2J=3?^"j[H1_jX9?r#GiR7%2phDk,!f&hKLRN@cB>(qY(p1FBIHKJuX[A]jfU/^Z!9Y/a_eD'2
%npZ9[>=s%EkIA=%@gYT'`@qu,X4\R1kIKk<KNpr,%&GM(,tDu$p'Dc-lW+pYLX?co)YHq'`*iU*7\*a=9#G"gB7TaC$LE=J`(=mj
%^"ARV;\rB;Y,^=lB4s"0:IVBiqL&1J:7k/K:)_S@Y+au(:hT0b,C&4.4\g9,XL4B9<6X?p5%D]gR]j;e[r"?\nYkEI<Eb6L$bI*6
%GC?Is:NU6!0Pc4n-p/:%@PN#"A0cM7<#`JY;>06lfAN*0VA5.WEh(ACR'?"jaP\Us)u&lOKK?kh33\.57Nj*4,bg.i:>(-uIC-sB
%FS7l#jE"b(Z0bHXUsHD@28i\;U/,^a+$.WpdH>Vqe7>6p^paanb8HI0p_+8+#>Z.#IIe_Kb*fAW[U_=Dj"8]rBUV:\FcdaeCIld9
%2S1@q<Rc!^QLIe]P$jRC?hN3I_QDZDUS9uU;/_VjM%kuL5&8-fdnG+cRS)S.<]^+n-]Ltc]<t0S?2]nrH*._iHB#$7[jJ'0^"8N2
%dS(H/$&0F=8AF4U_8"]/TqWAdHE?=F$=jl3Xet=1EoN=W0^TBEg"N,4VfJOaak!%a<a@1;"A,(M=%QdGFc59_M6:'']XYG-oJGWb
%5%G\;/Oe64l`BHH&qb<:f@'%`P,C61QWjkiL6R$mk%;CZ6cFZQ$qbtFK.8Kq_>C[:OYUS5ZA*O3:A<SK-2&OlV6jIT5%hr/O]B7L
%9fl[lN1:&,=hCMf\*VL-Af3U/r+&2Rd.4@ScpbKpT("E\s0h2!?gMPn6oW00@9hFu'E39Dean*lrBI4R+V@O&!4k%#A.Ton3_,m#
%"c6(03NBJCgXX[Lg_r0L3]5S6Sn+WZ4M);&N\'p:3>U.=V[06H<K41N:?JdIp[D#i4K?@C.":/`EbG;aMYr.L,-]6q.1@q.FquZ"
%%,$rIfQUtuf!(5=.3+hM&5aeI1.4_YfVYmf3`Ce$80pg`)D""iA?%deFt.W;f08^mIk\M6))(oYPO&)C8+rQrRdq[`o0eDi^XO6u
%TI]M+'e5(V?XIQJ`-11na?###da>.VX0QAC'G3R5[\cL=-/6]@dB,RtbC6o-ajZ1CnYJhHm-uYiEMH;oOYboh"ja;se[[P'#WG65
%K3GK-0HBmT*=2^>]5kU,nbBKdI"_3,,4r<?R;ncc*)a,GXep<m4JbtC\^+tM6o3-<p[2DMJV&`B(O;&f/CHuaAe_>9@9#ojWR/hN
%<gB<:'SlEo3"jQm/^t:Z^hgdBl!9a*S#WZ$QVL2'PkZ3R*_s&`L@d-sT@[[*=]EjD(1F-c!1!P>4f>@9Iguk$)ph=#=6_4,YX<8$
%GgGE_1rZQ07(5YX7l!b"0u9"aM&mNhlRC:J!S<q2DS.)]k\=ko)@uoClRWpZVg4n@#'^((n7,&L\4][#Cll<_#?&`10]6g@546<g
%YRW<L$sJ!mSdUq)?'O4$'9A5(>MU'.Y$Ch##K9Z:j#s<TXkA_:cic#Dk/u>i5n-OX\f*^8Dlu_`7"l$L.h-K"q`,blMS9H@Gi*Nn
%A:6*oB_j.W/_6[da$TJeU>oe(d"=iq5^62SP%5Ick^e9?A!*X55gh=2OJO]Yb@_tXZWW)tdYuSg*l0fkC8PWL&h5[d^T8$+PX2sc
%"?gahj^USVK"rgCOBV#OdRm=jbt*J4(`ms8<(p[r1n0PDRS[BR1T"LVD#A,Fe0oA=M;tqfBW]:_"@*)F:::JaQ]3@<B:*SkELf:-
%G%_hl2<Js6lHLPj@Yq+*-C!nkQJ**E/k._K?Y7L+\a/h*BkdM0PW?U3fNi?-l,DOAFCsKI.[E&-$F!X%`@'%H/O&R@Qi0*/^VW^.
%@-eW7c]X2aDQ7!*E+?g^V0oj+NSk\N+YjfJ$XZ(8R\&'P3HU2892p+Z/GWMMcrs+C1n($/FfoeI_-/T_WS+-@k3flq<lo<)YBi_F
%f2XL3(II;LKd=M[j9uC%PuMDW[6Ej%l=m8sLAi;O$S*,/m9"t:?Q8p#Ij;1e4c5"*Rl%%MD#*+k[fX2s6pP*M!&cZ*-l@7pI:(\S
%b"7>i<Iu6K>7G`^,@n$oM%JCk^RcachqL,or,*pX/<L"n74cc'VHHWfkaE9+o6k=qmXaArjOBJ./nbW(!jm2IRp&Bk=8Jj6SbA@$
%'(r84j!8m*b^sd7U7R]-ZH89;/[QlE>PDlb%p=;-hjHXRRRDNg-X94:$S$/AW"j!X2I>AY7O*P<6]gMfn640FJQ+!oYL*GTQdh]_
%2>kP+[XK$pakfe.5Kk]0A0%6u_Ouar1;@8nF-L5F6p\#5MHV5A4X*B>'WGOJSV.CE\]<`q\]7%&SZ;hWaE2`Uh`p[`hk*0Qo6C<6
%oZf1l='A3%7C,e&$"gDGcfWa!!Lf<']VkY0ht+.^V#$b9$sgEG9F(U&"M.GLeLB#;S,M?BliGllQT*$!`&C+c]>k1&:W_m2bdP1G
%)(B%"GL"ZVZ*H<<Q*=,_eX$MiY!b-%%AH4kkoiJ/3!DXTI.u=l>-h_O-\o3eZc"pD`$o+rXkMV7I0Btqn\i3i#=EdsN51E8hF6bb
%G,)g\&J/G.kLd57OQorS6Io$W4V#B$SUkio4Yk>[Ya0@&1LKGp@Hen\FYe0ZjRd>6gtU'ILsOO;H1&4&lr-q#YTN+ONR^9`Wpf:O
%-ZRgF;LJRLX%-HiC+%Vdp7Q"'FoeI,>DrU\U\8ulH0lRt&7mdGf7Ha!>CtZG_qLsojVq_MNZS:Ib&>U1\'faY=(4uM7nU0%8bba4
%ij:>BW>pl.cTL1m8@NS^P:mBIS^!I/pPI]U/s2$$42a/&.P.+&\&7R^Ec17f^>BeYC+D2^?adN[F,f=Hi3EOE25hb\[g&=YAm1l[
%/F#$o(PbD<keZNJP'Oj4dIeQ=T!,ibeI*B15jhY#0#5>)<[*G/&!%WahWN5plVg]lMXBc[mo`teR?#opIW+,@;0ERWct+5+e60p3
%._0EP6N+I<KslCaq272\Hu.M]iUMMH<bS#0A8504ggXquZMSR&']IC]Gl6f9*<SL<6<>Pj'jIbpd*ee`eV,mrVVAs4=@]kX[I'Z!
%Q-g?ehemhaDasr2\p";)3*BN1\]#ZYhWHDqBdG#:fk5Lh7LtO`X_D4pq5Q<QO!>umAAqGQ3`6>b5$cBS-oGaae3@shgigrPiPW;d
%4Z0N`GI,mB)%"tcCVL/dnh=<T%mf2k8"f"'W8T"6Kk8)0;4$T*dpA!@*mUdbIFIC`D1X7HN;3H)jZ-9nWUjf+-JE'Sa;E:oW[Il5
%?%ma*k$4J1#,dIr?N-EC:T@o@4oDrc7`'*^R!iQ\N5aJ.`1g?B28ZWY5t41r=k2j/+Tjc;&q,c7M[l@8m__`F*HUSF2m6A-L>mBF
%Tfl<ASu:jK3K>acNU!AaO42+#7-GN]1m^i^FOB-s4)90NpJ-&6ioKO!<mG)An(hRW<2u`*o?An(U$:F*T:'(dL3<f2$SbK5l1M&%
%)na5b,tp;G=gZrr@mB@eC>Y$==IFF$bXp(U@^/EJGK5jL+Jp[]N(B!W8Jb-gdqM$p>r.?8@9&'N7Z(i<7dgY^qbG#fhbBbNrpD]6
%gHW'[I.lZ/?bZC*laJNRg]ft@e#P-.s7u&_^]3?egQ+Sqip0\GIf7Bh0>HQ\?N9WjVbb$OqtfW.IJ*=,-XZo@X8alj5@+<Yl)10P
%nb4,ToKRk"Dt3~>
%AI9_PrivateDataEnd
