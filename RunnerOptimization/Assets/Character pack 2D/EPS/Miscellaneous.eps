%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Miscellaneous.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: WINDOWS
%%CreationDate: 2/6/2015
%%BoundingBox: 0 0 419 331
%%HiResBoundingBox: 0 0 418.6729 330.5606
%%CropBox: 0 0 418.6729 330.5606
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.1 x399 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 104 8%%BeginData: 10711 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD37FFA8A8A8FD15FF7D7C767DA8FD2CFFA1A7A1A17DA77DA17DA1
%7DA17CA1A7FD08FFA17CA17DA17DA7A1A17DA7A1A17CCAFD0EFF7D765176
%5152517DFD11FFA8527C7DA77C767DFD0BFFA8A7767C759A767C7CFD17FF
%75999FFD06756E7575756EA0FD08FF7599759F7599759F759FFD047576FD
%0DFFA852767C7C76517C4B7DFD0FFFA852A7A1A17CA17D52A8FD09FFCFA0
%75A0A0C2A0C2A0A075FD16FF7575759F75754B7575754A756F757CFD07FF
%A8FD0A759F75754A7CFD0DFF76767651765176767C4B7CFD0EFF52A17D7D
%767C527C527DFD09FFA175C2A0C2A0C2A0C2A0757CFD0DFFA77C52A1FD04
%FF7575A099996F9A75A0759A757575A7FD08FF759F75A075C275A099999F
%9A75757CFD0CFF7D517C517C527C767C767C4BFD0DFF7D767CA17C7D7C7D
%7C7D52FD09FFA17575A09AA075A075756FA7FD0CFF76754B764B7DFFFFFF
%7575759FFD06756F996F757CFD07FFA8997599997599997599759F75754A
%7CFD0BFF7C275251764B527676527C52517DFD0BFFA8525276767D767C76
%7D7C527DFD08FFA16F994B7575754B7575997CFF75A1FD08FF5175757675
%764BA8FFFF75759975A075996FA0FD0575A1FD08FF759F759975C2759975
%A09F996F757CFD0AFFA84B7C5276527C5276767C767C51A8FD0BFF7D517D
%767D767D7DA17DA77D76A8FD07FF7D75759A75A09975759A9976756F7DFD
%07FF7D51767675764B4B52FFFF4A757599FD0575996F754A757DFD07FFA8
%FD05759999759F75A075754A7CFD0AFF4B7676765176517C4B7652765176
%52FD0BFF5276527C767D7CA17DA17CA17676AFFD06FFA16FFD04759A7599
%6F756F7576FD08FF764A754B764B4B204BA8FF7575A075A075A075A07599
%759975A7FD08FF75A099A075C299A099A09F9975757CFD09FFA152767C76
%7C7676767C527C767C7652A8FD0AFF7C527C767D7DA17C7D7C7D767D52FD
%07FFA17575A0759A99A0759A75757DFD09FF524B4B754B4B4A4B4B7DFF4A
%75759975756F7575996F754B997DFD07FFA8FD05759999757575A075754A
%7DFD09FF7D4B7C5276527C517651765276527C51517DFD09FF5276527C52
%7C527C767C767D7676A8FD06FFA1757575996F9A75756F9975FD09FFAF52
%FD044B264B4B7527A87575A075996F9A75997599757575A7FD08FF759F75
%A075A075A099999F99757576FD09FF7D52767C767C7676527C517C767CFD
%0476FD09FF7C767C527C767C527D7C7D767D52FD07FFA199FD0575767575
%7576FD09FFA84B764B754B767675264B7D4AFD05756F7575756F756F757C
%FD07FFA8A07599757599997599759F6F754A7CFD09FFA14B765176527651
%765152517651764B7652FD09FF527C5276527C5276767D767D7676A8FD06
%FFA16F754B756F756F756F756FFD09FF764B4B764B757575204B207D756F
%7575A06FFD0875A7FD08FF759F75A075A0759A75999F9A6F757CFD09FF7D
%76767C767C767C527C517C767C52765176FD09FF7D5176527D767D527D76
%7D7676A7FD07FFA1997576759A759A757675A0FD09FFA14A754B7576764B
%4B204BA8759F7575759975997575759975757CFD07FFA875999F999F999F
%759F999F75996E7CFD09FFA14B76517651765176515127524B51527D7DFD
%09FFA87D525251765252527C527DA8FD08FFA84B756F756F7575756F6F76
%FD09FFA852204B4B764B4B204B7DFF7675767576757C75A0767C75A075A7
%FD08FF76A076A075A076A075A0757675757CFD09FFA87D7C7D527D527652
%7C76FD04A8FD10FFA8527D527D7DFD0DFF7D7C7576757675A1A1FD0CFF7D
%4B52517652A8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0BFFA8FFA8FFA8
%FFA8FFA8FFA8CFA8FD11FFA8FD19FFA8FD13FFA8FFA8FD11FFA8FDFCFFFD
%FCFFFDFCFFFD2CFFA9AF84A984AFA9FD68FFA8FD0FFFA83C608460853535
%84FD0FFFA8FFCAFD14FFA984A9A8FD14FFCAFD27FF9FC7C8FD0EFFAF60FF
%FFFF8B3C1A3C60FD0DFFC8C8C8C9C7C9CAFD0FFFA87E5A5B5A5A54A9FD11
%FFC39AC3FD25FFA6C8A4C0A0FD0DFF8461FFAF6161133C1384FD0BFFCF9F
%CEC8CDCDCCA4C1A0FD0DFF7E5A5A5A305A30362F54A8FD0EFFCA9BFF6F9A
%FF9B9A9AA8FD0BFFA1938C939AA89A9393939AFD08FFCAC8FFCC9EC7CFFD
%0CFF8560AF678B353C1A60FD0BFFCFA0CFC8C7C7C8C8CCC6C1C9FD0BFFA8
%5A855A54A984A9545B2F2FA9FD0DFF93C3A1A176CA9AFF9B94FD0AFFA193
%C3CABCBC93BBB5B5FCFC93FD04FFA7C9A0C8A7FFC7C79EC8A0C8A7FD09FF
%6085858B613C363C35FD0BFFA0CEA6C7C0C79EC7C8CC9EC1CAFD09FFA85A
%5A3053FFCAFFFFA9305A0754FD0CFF9ABCB5939A9AA8A1FFCA68C4FD09FF
%9493FFFFC3BCC2BCC2B5B5FC8CA1FFFFC9C7CECFCFFFFFCCC6CCC6C7C0C0
%C9FD08FF84858B8B8B678B603660FD09FFCFC7CDC8C6CCCCC7C0C8CCCC9E
%CFFD09FFA9305B2FFFFFA8FFFFFF84365A2FA9FD0AFFCB9ABCB58D93CAFF
%9AC99A9AA1FD09FF93BCC9CACAC3C2C3BBB5B5B5FCC3FFFFFF9FCDCDCEC9
%CDC6CCC6C7C0C19ECFFD08FF5A61608B618B613C1A1484FD08FFCFC6CCC1
%C7C6C79EC7C7CDA4C0A6FD09FF7E5A307EAFFF53597DFF7E362F2F7EFD0A
%FFCA93B58C8D9AFFFF9AB5FC6FA1FD09FF93FCBCBCC3BCC2B5B58CB58D8C
%9AFD04FF9FC7C6CCC6CCC7C7C0C79FCFFD09FF853536133C616113421384
%FD08FFC9C7C7C7C6CCC7C7C6C8CDC79EC9FD09FF84305A7EFFFFFFA8FFFF
%84365A2984FD0AFFA1B5B59368FFFFCA8CB58D8D9BFD09FFA1FCB5BCB5BC
%FD04B58DB58CCAFD05FF9FCCC6C7C6C7C0C19EC9FD0CFF8436358B353C13
%84FD09FFCA9ECCC7C6C6C79EC7C8CC9EC0A7FD09FF7E36307EA9FD04FFA8
%2F5B2F2F7EFD0AFFA88CB58C69A1CA6FB5FC9368A1FD0AFF6FFCFCB5FCB5
%8CB58D938C9AFD06FFC8FD06C7C1C7C8FD0DFFA861603C1385FD0AFFCFC7
%CCCDC7C7C1C7C8CDC7C79FFD0BFF2F613084A8FFA9A8305B30542FFD0CFF
%94FCB58C938CB5B5B58D93A8FD0BFF93B593B593B593B58C9AFD06FFCA9E
%C7C6C79EC7C6C79EC7FD0DFF84363C1384FD0CFFA0C6C6CDC7CDC8CDC6C7
%9EC8FD0BFF7E2F5B305A2F5A305B2F30297EFD0CFFA18DFCB5FCB5FC9368
%8D94FD0DFF9A8D8C938CB58C9AA8FD06FFC9C6C6C79EC89FC7C6C79EFD0D
%FF603613AFFD0EFFA0C7C6CCCCCCC6C79EC8FD0DFF842F5A365B305A2F30
%2F5AFD0EFF9A8D8CB58C938D8D6FFD0FFFA1948C9393CAFD08FFCF9E9F9F
%C9FFFFA6C89EC8FD0CFFA83535AFFD10FFA7C89EC19EC19EC8A8FD0EFFA9
%532F072F072F2F7ECFFD0FFFA193688D68936FCAFD10FFA8CAA2FD0CFFCA
%FD14FF8535FD15FFCACFCAFD14FFA97EA9A8FD14FFCAA1CACAFD36FF84FD
%FCFFFDFCFFFD1FFFCFFD43FFCAFD3BFFCFCFFD42FFCACAFD39FFCFC9CECF
%FD40FFCAC3C3CAFD1CFFCFFD09FFCFFD12FFCFCFFD25FFCAFD09FFCAFD12
%FFCACAFD0EFFCFFD0EFFCFC9CFCFFFFFFFCFCEC9CFFD12FFCFFD17FFCAFD
%0EFFCAC3CACAFFFFFFCAC3C3CAFD12FFCAFD0EFFCFCDFD0EFFCFCECEFD05
%FFCECECFFD29FFCABCFD0EFFCAC9C9FD05FFC9C9CAFD21FFCEC6CFFD0CFF
%CFCECECECFFFFFFFCFCECECECFFD19FFCFFD0EFFC3FCCAFD0CFFCAC9C3C3
%CAFFFFFFCAC3C3C3CAFD19FFCAFD06FFCCCCCDFD0FFFCFFD05FFCFFD0DFF
%CEFD0DFFCFCEFD0EFFB5B5BCFD0FFFCAFD05FFCAFD0DFFC3FD0DFFCAC9CA
%CFCEC8CDC6CCCEFEC7CEC8CFFD1EFFCECEC9FD0BFFCFCECECEFD08FFCAC3
%BCBCFCBBC3FCB5C3BCCAFD1EFFC3C3C3FD0BFFCAC3C3C3FFCFCCC6CECFFF
%CECDC6CEFD20FFCEFD0DFFCFCFFD0AFFCAB5FCC3CAFFC9BCFCC3FD20FFC3
%FD0DFFCACAFFFFFFCACCC8FFCFCFC6CDFD0AFFCFFD0BFFCEFD09FFCFFD0F
%FFCFFD0BFFCAB5BCFFCFCFB5BCFD0AFFCAFD0BFFC4FD09FFCAFD0FFFCAFD
%04FFCECCCFFFCECCCFFD0AFFCECFCFFD07FFCFCFCEFD26FFC3B5CAFFC3B5
%CAFD0AFFC9CACAFD07FFCACAC3FD1EFFCEC6CCC6CCC7FD0AFFCFCECECFFD
%07FFCFCECECFFD25FFC3B5B5FCBCB5FD0AFFCAC3C9CAFD07FFCAC9C3CAFD
%1DFFC8CCCDCEC7CCCFFD09FFCECFCEFD09FFCDCFCFFD25FFBCB5BCC3B5B5
%CAFD09FFCACFC3FD09FFC3CACAFD1CFFCFCDCAFFFFFFC9CEFD0CFFCFFFFF
%FFCEFFFFFFCFCFFD26FFCABCCAFFFFFFC3C3FD0CFFCAFFFFFFC3FFFFFFCA
%CAFD35FFCFCECFFD13FFCFFD2DFFCAC9CAFD13FFCAFD24FFC9CECECECFFD
%0FFFCFCFCECFFD06FFCECEC9FD23FFC3C3C9C3CAFD0FFFCACAC3CAFD06FF
%C3C3C3FD1CFFCFCEFD12FFCECECFFD06FFCFCEFD25FFCAC3FD12FFC3C9CA
%FD06FFCAC3FD1EFFCAFD12FFCFCAFD07FFCFCFCFFD25FFCAFD12FFCACAFD
%07FFCACACAFDFCFFFDFCFFFDF3FFCAFD80FFCAFD7DFFCFA8FFA8CACAFD7C
%FFCAFFA8CFFD7BFFA8CAA8CFA8FD52FFCAFD29FFCFFD52FFA8CFA8FFA8FD
%80FFA8FD7AFFA8CFCAFFA8CACAFD7AFFA8FFFFCFCAFD70FFA8FFCFFD08FF
%CFA8CFA8FD4AFFCAFFCAFD23FFA8FFFFFFA8FD09FFCAFD1BFFCAFD2CFFA8
%CAA8FFFFCFA8FD21FFA8FD05FFA8FD21FFCACAA8FFA8FD1DFFA8FD0CFFCF
%CFA8FD04FFCACAFD05FFCFFD1AFFCFFD04FFCAFFA8FD21FFA8FFFFFFA8FD
%1BFFCACFA8FD0BFFCAA8CAA8FFA8CFA8CFFFFFFFCAA8CAA8CAA8FD17FFA8
%CFA8CAA7CAA8FFA7CAFD08FFA8CAA8FD13FFA8FFA8CFA8FFA8FD19FFA8FF
%FFCAA8FD0AFFA8FFCACFA8FFCAFD05FFA8CFCAFFFFFFCAFD15FFA8FFCACF
%CAFFCAFFA8FFA8FD07FFCFFD17FFCFFFA8FFCACFFD1CFFCACFFD0AFFCAA8
%CFA8CAA8FD07FFA8CAFFFFA8CAFD14FFCACAA8CACAFFA8FFFFCFA8FFCAFD
%05FFA8FD05FFA8FD13FFA8CAA8CAA8FD19FFA8FFCFCAA8FD0AFFCACAA8CF
%A8FFFFFFCAFFCAFFFFFFA8FFFFFFA8FD15FFCACAA8FFFFFFA8FFCAFD07FF
%A8FD07FFCAFD15FFCAFD19FFCFCAA8FFA8FD0CFFA8CAA8CFFFCAA7CAA8CA
%A8FFA8CAA8CAA8CAA8FD15FFA8CAA8FFFFCFA8FD06FFCAA7CAA8FFA8FFA8
%FFA8FD30FFCFA8CAA8FD0AFFA8FFFFFFA8FFCAFFA8FD05FFCAFFA8FFA8CF
%FD17FFCFA8FD0BFFA8FFCACFA8FFFFCFCFFFCFFD30FFCFA8FD0AFFA8CAA8
%CAA8CAA8CFA8CFFD04FFA8CAA8CAA8CAA8FFA8FD0FFFA8FFA8FD04FFCAA8
%FD09FFA8CAA8FFA8CACAFFA8CAA8FD31FFCFFD0AFFA8FFFFFFA8CFA8CFA8
%FFCAFD05FFA8CFA8CFA8CFCAFFA8FD0FFFCAFD11FFCAFFFFFFA8CAA8FD3E
%FFA8CAA8FFFFCFA8CAA8CAA8FD05FFA8CAA8CAA8CAA8CFFFCAA8FD0DFFA8
%CAA8FD0FFFA8FD05FFA8CFA8FD3DFFCFA8FFCAFFA8FFA8CAA8CFFD04FFCF
%CFA8FFCACFA8FFCAFFA8CFFD0EFFCAFD56FFA8A8A8CAA8FFA8A8A7CAA8CF
%A8CFA8CAA7CAA8CAA8A8A1CAA8CAA1FD13FFA8FFA8FFA8FD0FFFCAFD3EFF
%A1CAA8FFCACFA8CAA8CAA8CFA8CAA7CAA8CFCACFA8CAA1CAA8A8CAFD11FF
%CAFD05FFA8FD0DFFCAFFA8FD3CFFA8A8A1A8A1A8A7A8A1A8A1A8A1A8A1A8
%A7CAA8FFA8CFA8A8A1A8A8FD11FFA8CFCFFD04FFCAA8FFFFCFA8FD07FFA8
%CACFCAA8FD3DFFCAA1CAA8CAA7CAA8CAA7CAA8CAA8FFCAFFFFFFCFCFA7CA
%A8FD13FFA8FD05FFA8FFFFFFA8FD0AFFCFA8FD40FFA8A8A1A8A1CAA7A8A1
%A8A1A8A8CAA8FFA8CFA8A8A7FD13FFA8CAA8FFA8FFA8CAA8CAA8CAA8FD09
%FFA8FFCFFD40FFA1CAA7CAA8CFA8CFA8CAA8CAA8CFA8CFA8CAA7CAFD14FF
%A8CFA8CFA8FFFFFFCACFCAFD05FFCAFD46FFA8A8A1A8A1CAA8CAA8A8A1A8
%A1A8A7CAA7A8A1A8A8FD14FFCAA8CAA8CAFD04FFA7FD05FFA8FFA8FD46FF
%A8CAA8CAA8CAA8CAA8CAA8CAA7CAA8CAA7CAA7FD17FFCACFA8FFFFFFA8FD
%05FFCAFD1DFFCFFFCAFD2AFFA1A8A1A8A1A8A1A8A1A8A1A8A1A8A1A8A1CF
%FD16FFA8FFFFFFA8CAA8CACAFFFFFFA8FFFFFFA8FFA8FD17FFCACAA8FFA8
%FD15FFCFFFA8FD12FFA7CAA7A8A1CAA7A8A8FFA8A8A1CAA8FD19FFA8FFCA
%FD08FFCFFD04FFA8FD19FFCAFD18FFCFCAFFCAFD12FFA8A8A1A8A1A8A8FF
%FFFFA8FFA8FD1BFFA8FD09FFA8CAA8FFA8FFA8FD17FFA8FFFFCAA8FD15FF
%A8FFFFCFA8FD14FFCAFD2FFFA8FD05FFCAFD17FFA8FFCFFD17FFA8FD48FF
%A8CAA8CAA8CFFD16FFA8FFA8CFA8FD16FFCAA8FFA8FD46FFCAFFCFFD1BFF
%CAFD17FFCACAA8FD87FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Miscellaneous</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:CreateDate>2015-02-06T22:57:36+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-02-06T22:57:36+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-02-06T22:57:36+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>204</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AncH52eaLi3Vov0b9YMaS&#xA;NCbe5PHmobiW9cD9rNKe0sgP0h3A7OgRzKFl/PfzZHI8bLpvKM0fjaXbAGleqzkd8mO0Mh6BT2dD&#xA;vP4+C1vz383g0KacKioBsb3oeh/v8f5Qn3Bf5Oh3n8fBlP5b/mb5m8zeZF069jsjZNaTXPqW8M0M&#xA;gMUqRUPqyybcnp9nMnS6qWSRBHJxtVpY44ggvUcznAY/591+/wBA8q3eq2CxPdwvbpGs6s8f7+4j&#xA;hJZUaNjRZD+1lWfIYQMh0bcGMTmInq8xm/OnzVC0iySaaPSLLIwsL1lBQ0b4hOV2p45qh2lkP8I+&#xA;btD2bDvLZ/OnzUjcH+ohwKkfo+/Boem3rY/ylk/mj5/tX+TYd5/Hwauvzp8228UM7DTWt5kLq4tr&#xA;kbAgDb6xX9rGPaUya4Qp7Nh3lnX5X+dtQ82abf3N6kCta3Ahja2V0VlMSSVKu8hrV6dc2WmzHJGy&#xA;KdfqsIxyoFmmZDjOxVL/ADBrlhoWj3WrX7EWtonJgoq7EkKiIO7OxCr7nATSQLeEav8Amb53vJ5p&#xA;Z9Tk0uAgSGzs1hCwRueKoZWjklkkPtSrdABTMU5ieTkjEBzQmj/mH58sLoXNtqM13Eu72mpyrKsi&#xA;0O1FTkh90f516YjKQpxAvcPJPnfS/NenNcWym3vLfit9YSEGSF2G242ZGoeLjr7GoGTGQLjyiQyL&#xA;JMXYqtkkjijaSRgkaAs7sQFVQKkknoBiryLzL531DzD6i2Vw9h5fB4p6bNHPdqa/vHcUaOIj7KrR&#xA;j+0d+Ipnk6Buhj6liVve2ekzfWdJkl0q4Q7XNqFRW/4yp9iVfaRT9+QEiGZiC9i/LvzlJ5n0eWS6&#xA;jSHU7GU297En2SeIdJVBLELIjdKmhqKmlcvibDRIUWVZJihtS1C203TrrUbolbayhkuJ2UciI4lL&#xA;sQB12GAmhaYizTy67/MTzhqLB7N7bSLSQB4F4C4n4ncF5WPpAkdlQ/62arJ2gbqIdzi7NjVyKGHm&#xA;rzxES48wesa1Eb29qy/KkcUbf8NlI1+RtPZ2M97KvInn+71nV7rQNUSA6na263YnteSo8RYIQ8Tl&#xA;zG6ll25EGvbNjptT4g3DrNXpfC5HZnOZbhuxV2Kscn/MjyFBqB0+XXrJLsN6bJ6y8Vc7cWcfArV7&#xA;E4OIMuA1dMjBBFR0wsXyJoNS7kDb0Yd+39ynfOYyvTY2p4ZPrF8URmHOtQK7mJDkgdgzPVddFw8X&#xA;GN3/AHMf2FLU+11pgim3oP5Ef8pUpKlSdNv6gih/3ug65n9n/wB5L3Ot7R/ux7y95zbunYd+bv8A&#xA;ygF//wAZrH/qOgzG1n91JydH/exeBag7i31FRDKRzuv3gjYpvI+/KlNu+c9Dp8HoZHY/FNL5JG1K&#xA;QIjNSOOpUEjq3hlUD6WfVJ9YB/QliKGvottTfquXY/qLXL6Q9X/5xyJ/w7rHtfD/AKh4s3ui+j4u&#xA;j131/B63mY4TiQASTQDck4q+bfzB83aj5w1aaSC8MXl60l9PTbVWdRKYT/vS3Fl5FmHwV6LSm9cx&#xA;cmSzTk48dC2LmF5ecXrNHNVJTzZnjlEbVG7c3Ug9dz179qm1VhlEq1oVYEq6nqCO2KWe/knex2nn&#xA;ae2kkKrqVmy26djNA4dl/wCAZmH+yy/Cd2jMHvGZDjuxV55+dmuy2XlqLSYCVl1qQwTMOoto15Tj&#xA;/Z/DGfZjkJmgygLLyCwZiGjBPEUIQHbevbKHICcJpMjKC8gQnqtK/jUYLTSceUdYPlDXWv52D6Rq&#xA;CxW+qNTiYRGzelcdTVUMjCT/ACTX9mhsxy6NeSPV7ll7QkXn7/lBfMf/AGy73/qHfIZPpPubMX1j&#xA;3h80iWS3X9zNLaCJlNwltK6xGN6gSIoPGlTXptvmhekpEypePMiyXl1JbMj+oGnkAB241oRXv1yP&#xA;Ey4ER5M82HyrfxanaWiTTHT5I5FZhFEHmaJucrUrQGOtBucysGXgJLi6jB4kQOT3X8s7/wA4ahoE&#xA;l95nCia4neSxAiELfViBw5R9VFa8eXxU65tMJkY3J02ojASqLLctaHh/56efbqPWE8pW9y9nZLbr&#xA;PqTxkq05lJCQchuECryen2qgdK1ozTI2DmaXCJbl5Fd6pYWkBWkTWwXikKEEsT+yFFRTxrmK7LZ7&#xA;b/zjl58k1zQbvQbtibnRiptOTcmNnJUItTufSZSv+rxzMxSsOp1OPhlt1ePaNJ6cMxLEViQKP8r0&#xA;lpnPZA72HJfdmQXd7xkdBzHwqxA/ukwx5BsI3KrclxJEFkZP3Ef2TSu5wRT+p6D+RQYea15Ek/o2&#xA;/JJ3JrfQHM/s/wDvJe513aP0D3l7xm3dMw/821LeQdQA/wB+2R+69hOY2s/upOTo/wC9i8Dv/V+q&#xA;6iRNIF53f7sMQv8AePtTOehVj4PQyGx+KYaiJP0lIUlkj/dx1CMVB3bwyuH0syN0o1gsNEsKE19E&#xA;gnvuyg5bj+stcvpD1j/nHL/lHtY/5j1/6h4s3ui+j4uj131/B63mY4SR+fHkTyP5ieMlZF0y8KMu&#xA;xDC3ehGA8kjm+ZoFVII1UUVVAA8ABmC5yyYH1YWXYnktfmpP/GuKFts4aeUr9mRY5h/s1K/qTEqF&#xA;aO9ubPUbK6tLmS0uoJJGhuITxdW4AbdjX1KEHYjbDEkIkAX0p5B12817yjp2qXoUXcyuk/AcVLwy&#xA;tEzAVNORStMzImxbiSFGmQZJi8k/PoH1/LxpsPrgJ+YhyvJyZ4+by63ke3kBhbiV3oaHqTTqO3bK&#xA;W5F2s7SNM00pPEKxZyT44pClqtvG+n3QWJXleJ1QUFS7KVUV9yaYhBfUkMSxQpEpJWNQoJ6kAU3z&#xA;KcZJPP3/ACgvmP8A7Zd7/wBQ75DJ9J9zZi+se8Pma9nFncmOMf6Mzcmi24+Ei/IhuXzGaERt6U7I&#xA;aS4mNskHIqqM8BNd6FSI+R+lRkhEWt7Mq/Ky3sr7z1okdzbpPERMxjkUMFkihZlJB2qjDbwOZOlH&#xA;rcTXS/dbPpXNs6F2Kvkv80NRtdf8965fwzrGIbk2UaSN1WzUQMR/rSI7CnY5h5jcnbaWNQYemkx3&#xA;MRurqQx2kHIuR9punTKm+k7/ACo8z3Wl/mVojaZF6Nve3Men3EK1JkguXVG9Qk78TST2K5biNFxt&#xA;TEGL0O2/JrzytqIBpVpHPwVWumvm4krQV9NY2AJApmF/J+Qnns2fn8YHJXf8lvOksjyS2dlzf7RW&#xA;+nANAB0ESjoMP8n5B1DL+UcfcW/+VKecuQY2lmSBxBN/OdvDePH+T8neF/lHH3Fl35afl95k8v8A&#xA;mNr7UoraK0Wymto1gmaZi8s0Mm/JE2/dt3zJ0mlljkSTzcXV6qOSIAHJ6hme69IPPmi3+t+VbzTb&#xA;DgbuZoGiErFEPpTxykFgGpsh7ZTnxmcDEdW3BkEJiR6PLpvyl82TeoJNNsiJSzSAX86gljVtliA3&#xA;JzUjszKP4g7Y9pY+4rX/ACj83MxZrC2ZyKcjqd1Xbpv6eI7Nyfzh8l/lLH3H5obUfyj89TwRRDTb&#xA;EwwqUWFL560JBB5NCvTj45KPZsxvaD2jA9GfflD5Q1nyzpWowapBHbSXV0JoYopfWAQQpHu9BvVD&#xA;mx02IwjRddqsonKwz3MlxkDrumnVND1HTBJ6Rvraa29WnLj60ZTlSorTlXAVDxZvyO88xgLFeaZK&#xA;AAAzyXEZNPYQyZR4LkeMhZ/yZ/MISLSCwkCNsy3bgfZIqeUANN8HglPjBF6R+QPml3Mmo6tZ2NIY&#xA;YkS3jkuyfTDV58zbBftdq5IYWJzJ3p//ADj5YiV21bXJ7pDUolrClrQsFDci5uSRSMdKYRhDE5i9&#xA;M0HQ7DQtIt9KsAy2tsGCc2LsS7F2ZmPUszE5aBTWTaPwoSbzR5Q0PzPZx2urRO6wt6kEsUjxSRsR&#xA;QlXQjqOoO2Ai0g0851j8ibqIl/L+qeoppW11Kta0A2nhXYbdDEfnkDjZiaUWH5OeeJLl0uVsbeE8&#xA;P3rTPLQqSaqixgt17lcj4afEeg+Wfyq0PSLiO+vZH1XUImDwyTKEhicbhooASKg7hnLMOxGWRgAw&#xA;MyWa5JihdV0631PS7zTbnkLe+gktpiho3CVCjcSa0NGwSFikxlRt4rrv5DeaWdxYahaXsPxcGn9S&#xA;2m+JSu4RZkagbrVfkM150RHIu1j2iCPUEu/5Ur+YE/rQvDZRo/wrI1wabinL4Y2b36ZEaObYe0YV&#xA;1Zz+Xn5SX3l7WI9a1S+hluokkSO1tUb0w0g4l2lfizfD24DMjBpuA2S4ep1niCgNnpmZbguxV4n+&#xA;ZP5B3+ra5c635ZuII3vnM17YXTNGvrMavJFIiyfbO7Kw61Nd6ZTkxWbDl4dTwiixiP8AIT8xbzTT&#xA;p8qafZqSA08ly77Bg1QscTVr7kZWMBbjrR3PQfy0/IXQvKF7Hq97cnVtaiB9CUp6cEJYUJjjqxLU&#xA;JHJj8gMuhjEXFy5zP3PUssaHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FVskkcUbSSMEjUVZ2IAA8STglIRFnYJAJNBbb3Vtcpzt5kmQGh&#xA;aNgwr8xXIwyRmLiQR5JlAx2IpUybF2KuxVj1x5ruTqV5YadpFxfvYusc0yPDHHzZFk4gu4bZXH7O&#xA;ZEcHpEiQLcCeuqZhGMpGPclupfmNJpEkS6totxbCZuKBJYZn6VJ4KwNAMnHScQuJBcbL2xHGayRM&#xA;fkyjStW07VbJL3T51uLaTo69iOqsDQqw7g75jTgYmi7TFmjkjxRNhF5FsdirmYKCzEBQKknoBiTS&#xA;oEa7ohk9MahbepWnD1o61+VcxvzuG644/wCmDd+XyVfDL5FHKysAykEHcEdMyQbaXYq7FXYqhdR1&#xA;TTNNt/rGo3cNlb1p61xIsSV8OTkDJRgZGgLQZAc0ss/Pvkm8nWC112xlmc0SMXEfJieygnc/LLJa&#xA;fINzE/JiMsT1Ce5SzdirsVdiqH1DUtO062N1qF1DZ2wIUz3EixIGY0UcnIFSemAkDmzhjlM1EEny&#xA;Vo5I5I1kjYPG4DI6kEEHoQRhYkUuxQ7FXYq7FXYq7FXYqg7/AFfT7F0juJCJZATHEiPI7AdwiBmp&#xA;mLqNbiw1xmifx0bceCc+QS2WRddvYLcwzLpsAM9yJopIhJIDSJKOF5AbufozAyyGsnHHUvCG8tiL&#xA;7h+lyIjwYk2OM7CiDXef0MX015dD8wfWIYZGsZwRMsSlgFYE9B3VxUexOcV2H2qMGQGZ9PI/oLtc&#xA;8BmxV/EOTL7XzZok9xHbGV4biYgRRTRvGWJ2ADEcdz753Wm7Z02YgRluXUT0WSIJqwO5N82jiOxV&#xA;g2lX0luutzxGk13qlzGH7hYH9M0+4Zs44hLhB5CP3vMZtVLEchj9Up1/pf7WE+ZoNZudYkuDZyy2&#xA;sEYWCRSjA8vikanLlUnbp2zMHJ57UwlPkzr8prPTk8sC/tpVmudQkMl6y/sOuyw0NKcF++tehGar&#xA;WSJnR6PY9i4IY8A4TZPP9TNcxXbuxViGo6jBexm+uz61kWK2FlX92wUkCWUbcy5FUU7Ab5xvaXac&#xA;Z73ceken9aVcyT9MdthZdvgwGJ4Y7S6n9A7q6lL31KT01Wa3VbWf9lQOO1P2KAdBtnKT1XHxDikA&#xA;edVXyAA+5zI4Bex9QUTfXHl26hvLJi2nTMBc2YNYyCOXKMH7LUGbHsntXLpsnBI8UfvH6/wWM8Iz&#xA;AiX1DkXocciSxpJGeSOAyMO4IqDnpcZAixyLz5BBorsKEp81eYIPL+g3Wqyp6rQgLBACAZJpGCRJ&#xA;U9OTsKnsN8twYjkmIjqwyTEIkl5BHFrnmjzLLa2UkV3qsYH6S1ydTJBbB9/QsozsijtTdupJzeEw&#xA;wQs/L9bqQJZpJxfflTqd9pLS2etjWGtjLElldwhY2eBzFJEj8yI/jjIFQR4+OUY+1RxbxoFul2ft&#xA;sd2JeU/zC1bybqdtbzySz+WLglZrKbk0loVNH9KvxLw6lOnXvvmTq9FHIOKP1Nem1Monhl0fRKOk&#xA;iK6MGRwGVhuCDuCM5x27eKuxV4b5i/NCwbW59evbKPUtHs/VtfL1m8gAeTeN7oxlXD+o1VUmnFNx&#xA;uc189UOOqsPY6XsORwUJGEzRlt8o3Yr9a/ynca/aeUtdbTbx10lbiydby1VI0W4muU+vxWSlSFhW&#xA;JgF2AVulTyy6BPCa5ODqYwOWImPXUtj3Aeky87+bJbjVdT8o/mHp2lte3Wo6DrEEaTLeSmeWC5kn&#xA;9GOVGIqEZ3RCo8a9smSYyroXEGOOfTylQjOJ6bWKsj7y9Ky907sVecebPMGuax53TyVo2onR4IYV&#xA;m1TUUAM7NICyQwlvs/BRuQ3JNNu+JmykzEAad/oNHjhpzqckeOjUY9PeWOala+c/K+qN+ivM17dr&#xA;0U6k73lvKtPiAEhJDIT1RuozFnlnjlzsO2w4dNqsVyxxgf6OxH9rEfMvmDzvZzRTyeab6WeYkskb&#xA;+gg403EUVEA36UzHnq8l83e9n9j6TJEjwxt15vQ/yb/MrV9eurjQdccXF9BD9ZtL0KEaWJWCOsgW&#xA;i81LrQqNx8s2Gj1JyCjzeW9o+w46QieP6JPQdZ0ia6eO7spfq+oQArHIa8XU7mN6b0Pj2yjtLs78&#xA;wBKEjDLH6ZB5/T5xC4yFwKR23mK8ls1meb01cEUPE9CRsabg9s88y9ta6JOPxCenIffTsjo4XsEn&#xA;1HUSYZPSUlEUs3YtQV+7NZiw77ufjxVuUX5M0T6/eNqd3IGW0kCxQr/vxQGBPgq8qr4nfO19nezY&#xA;z/fHlE7Dz7z+P24faWpMBwD+LmWe52roXYq8t1ry95/0lp5NPFvfaaZp7gempadfWlaVuSO6A050&#xA;+An5ZtMOpgQAdi8rrezMwJlH1CyWP6j5gvJ/L9rBMypd6ijSysgK8LXkaHqaF1oPv8MzKdHlycMb&#xA;6sp/KfSNXimudUINtpF1EqRQOKGd1PwzKP2VC1AP7VfYZrtbkiduoei9ntLmxxMpH0y6fpek5gPS&#xA;KF+rtY3Cx/3hicJ8ypplWcEwlXOizx1xC+95/IvPTLOSPaFY1Bpvsyjjt7UzyKN8Eu8T3+PL9Pze&#xA;lxmpkdVK84vPBHG7S8UqRuRU0CH/AFitcpxA77cyzw9SW/MJEGmW1u5/eVqw8AoZ2+6oGZRH7wD+&#xA;bGj77/b9jXhPFMkcmf6JFJDo1hFIKSR20SOD15KgBz1bSRMcMAeYiPuedzkHJIjvKMzIamAfnSkh&#xA;8sWMi19KHUoGnPYKySRrX/no6ZsuyyBl37nD14PhpN+TF3aW8GpW7kC7S9kkmH7XpTKDE3+rsR9+&#xA;XdqRPEPc1aGQ4WT6fptt5Uhvb+78z3L6X9Zur5rGRLMQIbu4e4dQVg+sMTJM1P3vsM1kYSkaA3c4&#xA;yERZLwLzZqCXl487J6TXNxd6g8J6xpO7sqt7/vPwzqscOCEY9wdHxcU5S730t5NhuIfKGhw3AIuI&#xA;9PtUmDdQ6wqGr9OcrnIM5V3l3mP6R7k4ypml/mNbx/L2qLY8vrrWk4teP2vVMTcKe/KmRlyLdpzH&#xA;xI8X08Qv5vjfUJp5bK1k5F0hRVUDcKqpxXbwGc/A+o2+x5YAYomI25/Zzevea/P3k+H8tbDyj5Ym&#xA;+tySw2qzsisixRqVmlMjUA9WRgQyjepNc2Wozxjj4Q8T2V2TqM2sObIKiCf1f2MC8qXl1f8An3Tb&#xA;aJECXd5ZwTJEoQBIrqO5crxHVRD1zF0gNjzeg7chAYZGz6ImrPUgj9L63zdPljsVeHfnRouq6J5l&#xA;XzfZKX0++jjgv2oWWKaMcEMngkihQD2Ye+azXYTfEHuPZjW4p4zp8m29xYZN+YN9LAkRRT6IKxh3&#xA;ZlQE1PFdqb++a45JU9VDsjEJE37+TFNS1O4vZ2kkkMkjfab+Ap2yUIdS5hMYDghyes/847eWLxr+&#xA;88yzIUskhaysnYbSyO6tKyf5KemFr0JJHY5stFjO8nhvavXRkI4QbINl7dqCTvYXKW/9+0TiLt8Z&#xA;UhevvmXnEjjkI/VRr3vG4iBIXyt50ula/cyLa2mnzwhVVDNOvpKoAp8JO1B4ivyzzfT9h6mcqMSP&#xA;fsHpDq8URZkPhumMvlHWLGOM7aglP3vp0Dqe44uRzX3rX2zP1vsxmiAcZEu/p+Pxs48O0oSsH0pj&#xA;5C0zUrOK6e8geBJREsaSUDEx8wzceo2K9c3ns9o8uGM/EFcRFfbbidp5oTMeE3VsrzonVuxVjH5k&#xA;60uk+T76XkVkuQLWIjrWb4WK+6pyYfLL9NDimHB7RzeHhkep2+bE/Jf5eXOoyrrXmSH0oH4tbaUw&#xA;6ogpGJgRsiilE79W8MytRqq9Mfm6ns/siyMmUe4frepgAAACgGwAzXPSOxV2KsTvtC1CwlkewhF3&#xA;YuxcW6lRJFyNWVQ1FdK9B1HTfOI7U9nMoyHLpzz6fjYj8U7bDq4yAEzUu9KZL+e2J9LRbpJW6EWx&#xA;WppT7QDfhmkOg1o24eH3R3+G33OWOGXOYr+sv0jyzquragl7q0JtrNCCIHFGcA1CBTuAT9ot18M3&#xA;PY/s/PiEsg4YDejzLXqNbDHHhgbl3s/zuXROxVCavpNjq+mXOmX8fq2l0hjlToaHoQexB3B7HJwm&#xA;YkEcwxlEEUXiXmT8tfOWhXP1jTbeTWrWMH0Ly0kMF9Gn8rqhVmPvGd+tBm+xdo48gqYo/Y6qeinA&#xA;3AsQvbjzTPcJFLpWoyXaH90L4XlzIh3+xHIrEH5HMuE8Ud48IaZYsktpEst8g/lBrWp6jHqfmWB7&#xA;XTldZntrja4uWXdUeP8A3XHtuG3ptTeuYGr7QiAYwNnvczBpTzOwe9ZonYuxV2KvBvzP/JrW4NSn&#xA;1vylCLuzunaW70laB4pG3Z4ASOSsd+A3B6Ajpr9ToxI2HtexPaXw4jHlPLkS8yby952lf0E0O/SU&#xA;niUWzuDJUddigpmENIb5F6ifbeEj+8gPi9j/ACY/KLUNEvh5i8wRCC+RGTT7HkHaL1BR5pWUkc2U&#xA;lQtdgTXfpstPgMdzzeJ7c7ajnHhYvo6nvex5lvMOxVZcW8FzBJb3EazQTKUlicBlZWFGVlOxBGKY&#xA;yINjm8W84f8AOPPq3L3flS6jgifc6bds4RD/AMVTKJGA8FZT/rUzCy6O947PW9n+1EoR4cw4vMc2&#xA;vKP/ADjvwnS581XaTRLv+jbMvxf2lnIjaniEUf62DHo63lunX+1Mpjhwjh8zze0WtrbWltFa2sSQ&#xA;W0CiOGGNQqIiigVVGwAzOAeSlIyNnclVxYuxV2KuxV2KuxVD3mnWN61u13AkxtZBPb8xUJIAVDgd&#xA;KgMaZISI5MJ44yqxdbojIs3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7G1dirsVdirsVdirsVUJ5pUdAq1BPt8Wx+EfrzXazU5ITiIx6+Xq2PpHd&#xA;32a5d1tkIgjdXBqASKHwzYRNi6prdhV2KuxV2KuxV2KuxV2KuDKSQCCVNCPA0ritOxVxIAJJoBuS&#xA;cVAdirsVdirsVSTXNW1K0u7WO2tyUaQBSzLS5Yq1YI6VKsB8fJqD4fCpFOXJIEUHY6TTY5xkZHp/&#xA;pdx6j3/zaFnfvqzmJmeNHZDGzAFo2oSpI6HiSKj2OXB18hRq7XYodiqXz6kkeoxw8v3YBWU9gzdP&#xA;1ZzWr7chi10MV+iiJdwlL6flX2uVDATjJ6phnSuK7FXYqhZ0lMjsitxoASrUJpWtADmn1eLIZylE&#xA;SqgDRonndC99tt/hfI3QIqiilACgDYdhm2gAAAOTSUI8chkYqjNGGB48qA0pWgJpmny4JnJIxjIw&#xA;EgaugeV0Lr7t75t4kK57ovN00OxVp3VF5MaDYV+ZpleXLHHHily/XskC28sQ6g+7pgIV2FWi6hwh&#xA;PxMCQPlT+uVnLETED9RBPyr9aa2tvLEOxV2KsB138x7PT/zC07R/WAsFR4NSlr8CT3FDCGPQFfT3&#xA;9mPhmFk1QjlEenV6bR9hTy6CeWvXYMR1MY/V87+xn2ZrzLsVdirGNbsr+W9vLm2trgQ+nFHI9vMY&#xA;ZJOJYuyIjrzIV+ILUNRtyGxxcsZE2OTuNJlgIRjKUbsncWByqyQa3F7d+9cxJIEijgjSFQkSqBGo&#xA;FKLTYUzJDqZkkknmxi80+7kvbp7eznms47mGX0vWKRuUKNL6cTOEYVB6gDlXrXbGlCXFsNrdxizQ&#xA;EIiUoiZiRfDZHOrNX9+1cusqBqAR0O++368ynSl2KqN5eW9nAZ7huEQZVLdaF2CD8WwSkALLZixS&#xA;yS4Y8/1bq2FraKqxUkAlTVSR0NCKj6DikEt4oUHvbaO8hs2ak86PJEvisZUNv4/GNvn4ZHiF02DF&#xA;IwMx9IIHzv8AUhtVtZTE80MsilRV4w54kDrQds5r2g7PynFLLiyTiY7yjxSojrQvY/Z5N2nyC6IC&#xA;Ht7SyfTy9Go4LsSQWqlem2azRdnaTJojKpVP1HccXpvltXf067ts8sxkruXaRbSSJ6zSyCCpEUXM&#xA;9u5pTLfZvRTyR8UzyDFdRhxnp31X2UjUzANUL76TbO1cF2KqcdxE4WjfEwrwP2h9GYuHWY8gFH1H&#xA;p1+X4DOUCFTMpgteWNKc2C16VNMqy58eP65CPv2SIk8nRyCROQBAJIFeuxpgwZhkjxDlv9hpZCjS&#xA;7LkKU9uktCdmH7Xseo+7MPVaOOaifqHXy6j4i/dzZwmQqIiooVdlHTv+vMnHjEIiMeQYk23k0OxV&#xA;Re1jeUOenVgampHT7swMvZ+OeQTPvI7z0+W+zYMhApWzPa3Yq8+/NHyvqsmk3WsaRql9bvbI015Y&#xA;JdTCGWFRV+CFiqMqiuwp7Zg6vFLhMok+63qPZ7tDEMscWXHjkJbRlwRsHpZrcfb5pP5c8neRb78u&#xA;pbsxXSw36NeTvJIj3SvaF1PpsFVDxPOnwbg75iQxQOO+9ztd2prcevELjcDwigeH11z3J7uu1bNf&#xA;lJ5d1DULVtYm1PUYtEDtHpulm7koVQ8S0jR+kKBhQBVHTw63aLEZDiJPD0Fp9pddDFLwhDGc1XOf&#xA;AOvQXf2kvWs2bxDjWhpuewO2KhL7DXtMvUgEcwW4nUMLRtplqoY8k6igYb9PehGVxyxk5WbR5MZN&#xA;j0jr0+f4KYZY4qGu9T0+yKi8uY7bmCUMrBA3Hc0LUBIHbIymBzLdi0+TJ9ETL3bu06+S+tRcojRo&#xA;zuqq4Kt+7cpUqaFa8eh3xhLiFrnwnHLhJvl9otE5JpSzWdCttSEbkBLmMhRPSp9JzSVP9lGWA8Dv&#xA;lWTEJOZpdZLFY5xPTz/hPwNe/kjrS1gtLaO2gUrDEOKKWZiB4VYk5ZEACg42TIZyMpcyq4WDsVSe&#xA;88safdagl1IKxs3qXULFmEsiikRPI/CEq3wjY5TLCDK3PxdoThj4Rz5A9w6/PbdM7tZGt5EjFXcF&#xA;R4Cu1foyjtGE54JQxj1SHCPjtfw5uHjIEgSgE0FAgLTv6oGzCgA+j+3Ocx+yMBEGWWfiDkRyHw5/&#xA;aHKOsN8hSK06CW3g9CTfgTwYdCp3zc9i6TJpsPgz34CaPeDv997NGeYlLiCKzbtLTryUryK17jrl&#xA;eSHFEizHzHNINKcUPpuaGqcQFHhSvh88x9PpfCkaNxoAeVX9m7KU7Dbzokqxk7t19vCvzyWXVwhk&#xA;jAnn9ndfv6d6iBItueMyJxBoag8vChrh1WE5IcINGwb7qN/sRCVF0UQjBAYkHehp/AYdPpxiFAkj&#xA;zr9XVZStfmQxdiriQKVNK7D55GUgOZWnZJXEgEAnc9MiZAEA9Vp2SV2KuxVKfNdvqF15dv7LT0D3&#xA;l5E1tFU8VX1hwZ2PYIrFsqzAmJA5lzezZ44Z4TyH0RPEfhvXx5MEtPyKsktInuNbvP0pCgWG4iKr&#xA;FHToqoQX4iv84rmGOzhW5NvS5fbCZkRHFDwydwbs/Hl9hZV+Xuhan5f0I6HfFZBZTSfVblPsSQys&#xA;ZAaHdWDMwK/rzJ02Mwjwno6XtvWY9Vm8aG3GBY7iNvurdk+ZDp1G7t2uLd4Vmkty4oZYSocDvxLB&#xA;qfPrgkLDZinwyBoS8jyQem6TJY3crCX1LYwxRW6sFDRiNnJUBAq8aOKUHb5ZXjx8JLfn1IyRG1S4&#xA;iT53Xfvey681q1tdRtrORlBn5c2JAEZ/3Xz325moWvU4ZZAJAd6MWllPHKY6fb317uvcu1ixmvbR&#xA;YYJBDKJopFnIqUEcgdio/mKgrvtvvUbY5IcQpGlzDHKyLFEV32K/a3pmlpp6SJHPLLHI3PhJworH&#xA;divFV+0dz779zhhDh2CNRqDlIJABHdf6zy6eSNybjuxVbJNFFx9R1TmwRORAqzdAK9zgJZRiTyC7&#xA;CxWvLEjojuFeQkRqSAWIBYgeJoCcFshEkEjouwsXYq7FXYq7FXYq7FVA2kfqgqAsZqZEGwY9qjpm&#xA;ul2dDxAYgCG/FHpI9NuXfff1bBkNeauAFAAFAOgGZ8YiIoCg1kuySuxV2KqD2xaf1AQtKGtKnkK/&#xA;wzXZNEZZvEFDl0s3v+jb9VNgn6aV82LWpXELSrQMBTcVFd6UzC1ullmjQIFcrF7s4T4VRFCqFUUA&#xA;FAMyseMQiIgUAxJst5NDsVdirsVdirsVdirsVSSTyvZjUY5LaNILCT1G1CyjqsU8jU4M0Y+A/tct&#xA;vi71yg4I8V9HYx7Qn4ZEjcxXDLrEdaPPuru6JzDDFDEsUKLHEgokaAKoHgANsuApwJSMjZNldhYu&#xA;xV2KpJdeX5JtbOoRNDAAsbq/pc5TMhZWJJKjiYyq+PypvTLFcuJ2OPWiOHwzxHn1oVt9t2f12neX&#xA;OuSvXtIn1OBUjmSNogzwiSMSL6pUormp/ZDHtlWXHxBzNHqhhlZBN86NbXdI+0tobW1itoUEcUKK&#xA;iRgkgBRQCp3P05ZEUKcbJkM5GRNklVwsHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FVlw0iwuYhWQKeI98BSEq+viKKN0eR5VIFwrk036jfpv0pkOJs4U0tp1n&#xA;hWVQQG7H22yYNtZFKmFDsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqEiluLnm0cix&#xA;orFQOPI7eNTkQSWRADdle+u0kTU9SIkEr0YA0qMYytZRpFZJi7FXYq7FXYq7FXYq7FXYqh/0fZmY&#xA;ymMFyamvSvy6ZHhDLiKIAAAAFAOgGSYuxV2KuxV2KuxVxPYdcVQ0t7bxyenVpJf5EBJ/DImQZCJb&#xA;hu4ZXMalklG5jcEH8cIKkK9RTfb2wsXch7/ccVbxV2KuxV2KuxV2KoZb71GPoxPKimhcUA28KkVy&#xA;PEy4XRX8bzekyPE5+yJBTlTwxElMUTkmKV3drKly7wweosq9iQA3ckZWRu2A7IqwsY7aMGlZWA5t&#xA;/AZKMaYylaKyTF2KuxV2KuxVRnvLeD+8f4uyjc/cMBICREldb3MVxH6kRqtaHxBxBtSKVMKHYq7F&#xA;XYq7FXYq7FXYq7FVC9laG1lkX7QHwnwrtgkaDKIspJp999VkdmTmH6nuKZVGVNso2juN1e3EVzGg&#xA;ijjPwsx3YV36ZLcm2GwFI27meCBpI4+bD/OpyZNMIi0utLvVLpnMbp8FCVIAG/htXKwSWwgBH2d2&#xA;ZgwdeEsZ4yp7+IyYNsJCkTkmLsVdirsVUbuf0YeXHkzEIq9KlvfATSQLS62uLyDlYpEJJU3VgdgD&#xA;vv8AfkASNmwgHdR9SeRnmulkf0KoHjovFh13GRvvTXcjdNurokQ3KtVhWOQjr3pXJxJ6sJAdEwJA&#xA;BJNANyTk2CGM88p/0UKUHWV60P8AqgdcjfcyrvXpLKriOcKC32HX7JI7b9DhtFK2FDsVdirsVSKG&#xA;4Nkzs1GuXajowOw8eXvlINNxFomynC3xiicSRy1dyF4gN7ZKJ3YyGyaZY1uxV2KuxV2KuxVJWb1b&#xA;WS4eeQXCE1ArwBrsopt+OVdLbeRpMdOmkltEeT7W4r40PXJxOzCQoohmCipNB77ZJilsmp2c3qQO&#xA;SqOCBLTavyysyB2bBEjdJyoV+JIIBoSNx9GVtqbCe8u5WjtCIoI9uf6sssnk1UBzbee/smU3DCaB&#xA;jQsOoxsjmtA8kvaZ7W8kMDUAYgeFK9MhdHZnVjdMdKjmPq3MteUpBHuAa1pk4DqwmeiZ5Y1uxV2K&#xA;rZZY4kLyMFUdScSVAUpVhu7ZgpDqw+E+/bAdwkbFL9FJW4nSTaWg69djvkIc2yfJESafP+8SGULD&#xA;M3J1IqRXrQ4TFiJBHIoRFUdFAA+jJsEl1C8uZ5pLeIExoaMoFSeJ3JyqRJ2bYxA3Rltfz3EZaKFQ&#xA;E+0C9O3QbZIStiY0hnvnu5LYIQp9UH0hUkU7lvlkeK2XDVpxlrU7FXYq7FVrxxuKOoYdNxXGltZD&#xA;aW8JJijCk9T3/HAAAkklVwodirsVdirsVUrtZGtpFj+2VIXAeSRzSSysrmaT0X5pDWsg3Ar8j3yq&#xA;MSW2UgGQKAoAGwGwGXNKVa/cmKGJeglfgW9iCafeoyE+TZjCjBcW72D2yREzcSTQA178q+2RBFUk&#xA;g3aTrcD600PgAR7nINtbMh0y5h9KWWSRVdjVk2UAAbUGWxLTMIbVdUtpYkhjJJdupFOgJyMpWmEC&#xA;EsZ0Xd2C+5NMg2K1vcW3pOaFpf8AdcqN0P0YQUEFPNJvPrVqXJqyMUY+4A/rlsTYaZiijMkxdiqF&#xA;v4LiVUaBgHjbkFIG5+nwyMgWUSF9nFLHCfWIMrsWenSpwxCJFpjYtKJC6eqn7QYA/I0OOyd0QCCK&#xA;g1B6EYWLsVUobeOJpGUbytyY/PtgASSgpdEjaQtHIY1PVaV+7cZEwZjIjLezt4APTQcgKcyPiP05&#xA;IRAYGRKthQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUBrWl/pGz9JW4yoeUbHpXpQ/PIyFs4SosU&#xA;lbVtP+G4iZR9kOQaH2DDY5UQQ5AooJ5pppvUApJ24V7YGVKg1G6AoaE+JG+KOEIixWSaT6xK3LjU&#xA;KPfFBZFd2On/AFEMHUyKuzbHn7UyZiKaRI2xU280l41vaKzMxoEX8foGQAb723ZvpFh9RsI4Cav9&#xA;qQjux6/0y+IoOLOVlGYWLsVdiqXazcvEkSD7Lklx0qFpt9NchMs4BERvbtAssixohG3QgDwrQYRS&#xA;DdoO1vrWG5uFD8bc0MYoaV70pkRIAsjEkK9rf/Wb1lSohVDSvc1G+ESsoMaCOybBRu0le2dYTSQj&#xA;Y9O+/wCGA8kjmg7CWVrnjGrLb8asjEtxatOp3yMTuzkNkyybW7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYqlnmKye70t1jFZIyJFUd+PUfcTkZiwzxyosLtJxBLzIqCKHxylyiEXJfxyAoh9MEGsjDt&#xA;7AVxY8KDguZYCShqD1U9DiyItXfU5mWiqFJ79cUcKa+ULWRruW6IPpopQN4sxB/Vk4BrzHamWZa4&#xA;7sVdirsVQ97ZJdRBSeLKaq3WmRlG2UZUkT2UytJxUyJG3FmUd8q4W3iTCW60wWziKNRKV4hCm9ff&#xA;bJkimABtE6XaiC2DMOMj7vXw7D7slEUGMzZcJJbqR/SfjbAU5ca8z3643aapqzk9KRbX1BMhBMbg&#xA;7gDswwA9FkOqNybB2KuxV2KuxVTuJ44IzJJ06ADcknsMBNJAtShvlklETxvE7CqBxStPDAJJMUTk&#xA;mLsVdirsVdiqw3EAk9MyL6n8tRX7sFpor8KHYq7FXYqkup+V7S7kaaFvQlbdqCqk+NNqZAwttjlI&#xA;S+PyZcF/3lygTuVUk/jTI+Gz8YJsnlvSVthA0XLevqk/HX5j9XTJ8Aa/ENqUflPSUfkwkkH8rNt/&#xA;woBwcAXxSm0MMUMaxxIEjXZVUUAybAm1+KHYq7FXYq7FVGS0hdy3xKW+3wYqG+dDgpPEuS3gSnGN&#xA;Rx6Ggr9+NLZXsoZSp6EEffhQkyyXliRBK/CHfg4UN77ZVZDbQK2Oe0SMzpK/109dvtEnwpShxsfF&#xA;NH4J4pJUEihI3GWtLsVdirsVdiqX6x61ISqF41fk4HWo6fxyE2cFAXZuL22diAnJgsa7sD0+L54L&#xA;ssqoFN8sanYq7FXYq0wJUgGhI2OKpJDURzWUqok+7eq5pvseu+VDubj3ptZzGa2jkYULDcfI0ywG&#xA;w1SFFWwodirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqnP9X9P9/x9P/LpSv04DSRfRSg/R3L9&#xA;z6XPtxpXAKSbROSYuxV2KuxV2KuxVCx/o7603p8PrG9ada96ZEVbI3SKyTF2KuxV2KuxVA3f6L+s&#xA;r9Yp6u3WtPatNsgavdmLrZGpx4jhTjT4adKe2TYN4q//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:7D2ED72612AEE411AA85FFAC5438DDAF</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:7D2ED72612AEE411AA85FFAC5438DDAF</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:7C2ED72612AEE411AA85FFAC5438DDAF</stRef:instanceID>
            <stRef:documentID>xmp.did:7C2ED72612AEE411AA85FFAC5438DDAF</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FBDA86E81384E411BCEDA968A3005EC0</stEvt:instanceID>
                  <stEvt:when>2014-12-15T13:11:20+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3E54D4792387E411B4A0BB47E8257443</stEvt:instanceID>
                  <stEvt:when>2014-12-19T09:05:16+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7B2ED72612AEE411AA85FFAC5438DDAF</stEvt:instanceID>
                  <stEvt:when>2015-02-06T22:40:02+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7C2ED72612AEE411AA85FFAC5438DDAF</stEvt:instanceID>
                  <stEvt:when>2015-02-06T22:57:24+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7D2ED72612AEE411AA85FFAC5438DDAF</stEvt:instanceID>
                  <stEvt:when>2015-02-06T22:57:36+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=169 B=245</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>245</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=201 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=29 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>29</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=123 B=172</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>123</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=189 G=204 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -330.561 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 330.561 li
418.673 330.561 li
418.673 0 li
cp
clp
[1 0 0 1 0 0 ]ct
395.194 47.8848 mo
391.686 47.8848 386.97 47.3184 384.426 44.6201 cv
379.838 39.7539 380.595 37.4092 382.453 33.3516 cv
383.347 31.4053 383.426 29.8945 383.536 27.8057 cv
383.6 26.6045 383.671 25.249 383.909 23.6211 cv
384.735 17.9873 391.694 12.7666 397.944 10.9727 cv
398.609 10.7813 399.289 10.6836 399.964 10.6836 cv
407.095 10.6836 411.614 20.9082 413.179 27.0088 cv
413.271 27.1523 413.44 27.3867 413.582 27.584 cv
415.021 29.585 418.013 33.7471 416.131 39.1572 cv
415.218 41.7813 412.46 43.8232 406.91 45.9844 cv
404.563 46.8994 399.895 47.8848 395.194 47.8848 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.513573 .708705 .720485 .659541 cmyk
f
412.743 29.5391 mo
414.073 31.499 415.843 34.7188 414.483 38.6387 cv
413.724 40.8291 410.884 42.5684 406.294 44.3584 cv
405.233 44.7686 403.763 45.1689 402.083 45.4785 cv
402.153 44.3984 402.233 42.8086 402.233 41.1387 cv
402.233 38.1387 404.233 35.3887 407.233 32.3887 cv
409.493 30.1289 411.333 29.5684 412.743 29.5391 cv
cp
.400641 .76553 .799405 .522972 cmyk
f
412.063 28.5889 mo
408.273 28.209 401.993 32.4082 399.493 34.459 cv
398.374 31.959 398.644 27.8086 399.624 24.0889 cv
400.153 23.8691 400.684 23.5586 401.233 23.1387 cv
404.134 20.9082 405.434 17.8887 408.163 19.209 cv
409.673 21.8887 410.813 24.959 411.483 27.6387 cv
411.533 27.8389 411.753 28.1582 412.063 28.5889 cv
cp
f
399.493 34.459 mo
399.294 34.6191 399.124 34.7588 398.983 34.8887 cv
396.733 36.8887 395.483 41.1387 394.983 45.8887 cv
394.983 46.1484 li
391.163 46.1289 387.513 45.4082 385.684 43.459 cv
382.354 39.9385 382.313 38.3291 383.374 35.749 cv
388.533 40.0684 395.054 35.3789 391.983 35.1387 cv
389.253 34.9287 386.163 33.1289 385.104 30.6191 cv
385.374 28.6387 385.263 26.6484 385.684 23.8291 cv
385.783 23.1191 386.023 22.3984 386.374 21.6885 cv
386.653 22.4688 387.783 23.0186 390.233 23.3887 cv
394.394 24.0088 396.993 25.1582 399.624 24.0889 cv
398.644 27.8086 398.374 31.959 399.493 34.459 cv
cp
.377905 .720027 .736446 .372778 cmyk
f
391.983 35.1387 mo
395.054 35.3789 388.533 40.0684 383.374 35.749 cv
383.563 35.2783 383.794 34.7891 384.044 34.2383 cv
384.644 32.9287 384.943 31.7686 385.104 30.6191 cv
386.163 33.1289 389.253 34.9287 391.983 35.1387 cv
cp
.337835 .614618 .613886 .146456 cmyk
f
412.743 29.5391 mo
411.333 29.5684 409.493 30.1289 407.233 32.3887 cv
404.233 35.3887 402.233 38.1387 402.233 41.1387 cv
402.233 42.8086 402.153 44.3984 402.083 45.4785 cv
399.923 45.8887 397.423 46.1582 394.983 46.1484 cv
394.983 45.8887 li
395.483 41.1387 396.733 36.8887 398.983 34.8887 cv
399.124 34.7588 399.294 34.6191 399.493 34.459 cv
401.993 32.4082 408.273 28.209 412.063 28.5889 cv
412.263 28.8584 412.493 29.1787 412.743 29.5391 cv
cp
f
399.624 24.0889 mo
396.993 25.1582 394.394 24.0088 390.233 23.3887 cv
387.783 23.0186 386.653 22.4688 386.374 21.6885 cv
388.233 17.8789 393.304 14.1191 398.483 12.6387 cv
402.333 11.5283 405.724 14.8486 408.163 19.209 cv
405.434 17.8887 404.134 20.9082 401.233 23.1387 cv
400.684 23.5586 400.153 23.8691 399.624 24.0889 cv
cp
f
400.296 19.2979 mo
398.544 18.3145 396.52 19.8965 397.941 20.5742 cv
399.363 21.2529 402.877 20.7471 400.296 19.2979 cv
cp
.377905 .720027 .736446 .372778 cmyk
f
397.738 21.458 mo
396.729 20.8105 394.802 21.4063 395.854 21.9766 cv
397.501 22.8701 399.075 22.3135 397.738 21.458 cv
cp
f
395.892 19.1572 mo
395.175 18.8145 393.925 20.0752 395.294 20.1816 cv
396.392 20.2666 397.046 19.708 395.892 19.1572 cv
cp
f
390.754 84.7334 mo
394.474 81.4463 400.61 80.8467 404.234 81.7178 cv
409.234 82.918 415.138 87.3184 412.435 96.5186 cv
409.857 105.286 397.034 111.519 393.834 112.118 cv
390.634 112.718 386.138 111.414 376.834 103.118 cv
366.931 94.2695 371.512 85.2168 376.034 82.7178 cv
381.57 79.6582 387.427 81.0859 390.754 84.7334 cv
cp
0 .947082 .892393 0 cmyk
f
389.347 85.9668 mo
390.597 87.1328 391.347 86.1328 393.069 85.3369 cv
396.379 83.8076 400.563 84.7607 399.314 88.3154 cv
398.065 91.8701 391.725 98.5 382.885 97.3467 cv
374.045 96.1943 371.836 89.7568 375.871 85.4326 cv
379.44 81.6084 386.764 83.3838 389.347 85.9668 cv
cp
0 .612512 .486122 0 cmyk
f
409.787 94.8486 mo
409.884 89.9482 404.407 91.1016 399.699 97.3467 cv
396.892 101.072 392.034 105.116 387.435 104.116 cv
382.834 103.116 380.634 101.116 381.435 103.516 cv
382.234 105.916 388.108 110.26 393.108 109.859 cv
398.108 109.46 409.656 101.555 409.787 94.8486 cv
cp
.0859388 .996887 .939239 .0115969 cmyk
f
379.334 85.0156 mo
377.147 85.3281 374.642 88.2256 376.534 90.2158 cv
378.678 92.4707 382.234 90.5156 382.935 88.416 cv
383.478 86.7842 382.134 84.6162 379.334 85.0156 cv
cp
0 0 0 0 cmyk
f
384.034 90.3154 mo
381.935 90.7158 381.634 92.7158 383.634 92.916 cv
385.634 93.1162 386.009 89.9404 384.034 90.3154 cv
cp
f
382.312 81.8359 mo
380.302 81.8359 378.309 82.3555 376.387 83.3799 cv
374.361 84.459 372.128 87.127 371.704 90.6523 cv
371.363 93.4844 372.063 97.8496 377.334 102.559 cv
384.17 108.655 388.981 111.494 392.474 111.494 cv
392.889 111.494 393.288 111.457 393.696 111.381 cv
396.646 110.828 409.204 104.848 411.715 96.3066 cv
412.744 92.8057 412.552 89.7969 411.145 87.3662 cv
409.192 83.9932 405.539 82.8027 404.06 82.4473 cv
403.136 82.2246 402.04 82.1074 400.892 82.1074 cv
397.113 82.1074 393.509 83.2998 391.251 85.2949 cv
390.943 85.5645 390.476 85.542 390.2 85.2393 cv
388.228 83.0762 385.352 81.8359 382.312 81.8359 cv
cp
392.474 112.994 mo
388.538 112.994 383.561 110.121 376.335 103.678 cv
370.581 98.5371 369.831 93.6592 370.215 90.4727 cv
370.736 86.1328 373.485 83.2266 375.682 82.0557 cv
377.822 80.915 380.053 80.3359 382.312 80.3359 cv
385.525 80.3359 388.583 81.5596 390.81 83.7148 cv
393.341 81.7598 397.048 80.6074 400.892 80.6074 cv
402.157 80.6074 403.373 80.7393 404.409 80.9883 cv
407.935 81.835 410.863 83.8857 412.442 86.6143 cv
414.064 89.415 414.304 92.8184 413.154 96.7295 cv
410.471 105.857 397.532 112.188 393.972 112.855 cv
393.473 112.949 392.982 112.994 392.474 112.994 cv
cp
.233646 1 .995453 .17557 cmyk
f
26.9561 106.621 mo
27.7793 107.485 28.6836 108.35 29.6201 109.165 cv
27.6602 110.677 24.3477 112.749 21.6436 114.108 cv
18.6279 115.613 16.0674 115.165 13.7559 114.421 cv
15.9561 115.222 24.5557 109.021 26.9561 106.621 cv
cp
.00030518 .256962 .942687 0 cmyk
f
39.9561 113.821 mo
42.5557 112.222 38.124 101.933 37.3242 99.9326 cv
42.5234 96.7334 47.2676 92.1328 46.0674 90.1328 cv
45.7793 89.6611 45.124 89.3174 44.2197 89.0615 cv
46.5479 89.4053 49.4199 89.6045 49.6836 91.3408 cv
49.9883 93.3008 46.0674 97.373 41.9961 100.837 cv
44.1074 104.757 46.5234 111.845 43.8037 113.653 cv
41.1563 115.413 39.8037 114.453 38.1953 114.133 cv
38.8838 114.205 39.4756 114.117 39.9561 113.821 cv
cp
f
33.252 81.2373 mo
34.6279 83.7334 35.7959 86.8535 36.3242 88.541 cv
34.9717 88.5889 33.6914 88.6768 32.6523 88.7725 cv
30.0918 82.2451 27.9717 78.4609 26.0596 78.2217 cv
29.6113 78.2217 31.6436 78.3174 33.252 81.2373 cv
cp
f
44.2109 89.0615 mo
44.2197 89.0615 li
45.124 89.3174 45.7793 89.6611 46.0674 90.1328 cv
47.2676 92.1328 42.5234 96.7334 37.3242 99.9326 cv
38.124 101.933 42.5557 112.222 39.9561 113.821 cv
39.4756 114.117 38.8838 114.205 38.1953 114.133 cv
35.8838 113.886 32.5791 111.757 29.6201 109.165 cv
28.6836 108.35 27.7793 107.485 26.9561 106.621 cv
24.5557 109.021 15.9561 115.222 13.7559 114.421 cv
11.5557 113.621 12.8994 106.117 15.6113 100.686 cv
12.6113 98.8857 5.35547 93.4209 6.55566 91.2217 cv
7.75586 89.0215 14.5557 88.6045 18.9316 89.2295 cv
21.1953 82.5967 23.7158 78.4209 25.7158 78.2217 cv
25.8281 78.2217 25.9395 78.2217 26.0518 78.2217 cv
26.0596 78.2217 li
27.9717 78.4609 30.0918 82.2451 32.6523 88.7725 cv
33.6914 88.6768 34.9717 88.5889 36.3242 88.541 cv
39.124 88.4365 42.2354 88.5176 44.2109 89.0615 cv
cp
.0252689 .0267033 .940825 0 cmyk
f
41.5098 100.266 mo
41.2402 100.495 41.168 100.881 41.3359 101.192 cv
43.5303 105.268 45.4648 111.647 43.3887 113.028 cv
42.373 113.704 41.6055 113.916 40.9209 113.922 cv
42.2129 112.178 41.3662 107.868 38.2559 100.233 cv
42.4668 97.541 47.6807 93.0449 46.9189 90.25 cv
47.9805 90.4854 48.8486 90.8359 48.9424 91.4561 cv
49.1123 92.5488 46.8799 95.6973 41.5098 100.266 cv
cp
39.5625 113.183 mo
39.2441 113.379 38.7988 113.441 38.2754 113.387 cv
36.3516 113.182 33.3008 111.393 30.1123 108.6 cv
29.1934 107.799 28.3145 106.959 27.499 106.104 cv
27.3594 105.957 27.167 105.874 26.9648 105.871 cv
26.751 105.852 26.5684 105.947 26.4258 106.091 cv
24.0361 108.48 16.5723 113.741 14.2178 113.742 cv
14.1143 113.742 14.0596 113.729 14.0283 113.72 cv
14.0215 113.718 14.0146 113.716 14.0088 113.714 cv
13.8379 113.65 13.7188 113.428 13.6484 113.252 cv
12.8408 111.229 14.0967 105.398 16.2822 101.021 cv
16.457 100.67 16.333 100.244 15.9971 100.042 cv
11.6826 97.4541 6.55078 92.7969 7.21387 91.5811 cv
7.81348 90.4824 11 89.7158 14.9639 89.7158 cv
16.3164 89.7158 17.6514 89.8047 18.8252 89.9717 cv
19.1865 90.0293 19.5254 89.8125 19.6416 89.4717 cv
22.2207 81.9141 24.5654 79.0898 25.7158 78.9717 cv
25.9668 78.9658 li
27.3857 79.1436 29.3994 82.5352 31.9541 89.0459 cv
32.0762 89.3574 32.3936 89.5498 32.7207 89.5195 cv
33.5283 89.4453 34.8125 89.3447 36.3525 89.29 cv
37.0117 89.2656 37.6895 89.252 38.3643 89.252 cv
40.793 89.252 42.7451 89.4355 44.0117 89.7842 cv
44.0273 89.7891 44.0439 89.793 44.0596 89.7959 cv
45.0342 90.0781 45.335 90.3721 45.4238 90.5186 cv
46.1436 91.7178 42.5898 95.8115 36.9316 99.2939 cv
36.6201 99.4854 36.4922 99.8721 36.6279 100.211 cv
36.835 100.721 li
41.1152 111.208 40.0049 112.91 39.5625 113.183 cv
cp
21.3086 113.438 mo
19.8145 114.183 18.4482 114.398 17.1719 114.341 cv
20.5146 112.756 24.9385 109.463 26.9316 107.673 cv
27.415 108.161 27.9229 108.639 28.4385 109.108 cv
26.4404 110.553 23.5879 112.291 21.3086 113.438 cv
cp
32.5947 81.5996 mo
33.7539 83.7021 34.7314 86.1992 35.2979 87.835 cv
34.4648 87.877 33.7295 87.9287 33.1445 87.9766 cv
31.3691 83.5117 29.9102 80.6445 28.5566 79.0488 cv
30.4482 79.2178 31.5869 79.7695 32.5947 81.5996 cv
cp
50.4248 91.2285 mo
50.1045 89.1182 47.4248 88.749 45.0605 88.4229 cv
44.3457 88.3213 li
42.9346 87.9443 40.9229 87.752 38.3643 87.752 cv
37.8613 87.752 37.3623 87.7666 36.8643 87.7803 cv
36.3105 86.1191 35.2207 83.2549 33.9092 80.875 cv
32.0342 77.4717 29.3975 77.4717 26.0596 77.4717 cv
26.0586 77.4717 26.0586 77.4717 26.0576 77.4717 cv
26.0557 77.4717 26.0537 77.4717 26.0518 77.4717 cv
25.6416 77.4756 li
22.6387 77.7744 19.9014 84.2021 18.4229 88.4072 cv
17.3389 88.2813 16.1563 88.2158 14.9639 88.2158 cv
12.6719 88.2158 7.2002 88.4736 5.89746 90.8623 cv
4.26465 93.8535 12.374 99.4648 14.6475 100.957 cv
12.6426 105.24 11.1992 111.161 12.2549 113.808 cv
12.5889 114.645 13.1162 114.986 13.499 115.126 cv
13.5059 115.129 13.5137 115.129 13.5205 115.132 cv
13.5225 115.132 13.5244 115.134 13.5264 115.135 cv
14.7344 115.523 16.0762 115.857 17.5498 115.857 cv
18.9141 115.857 20.3916 115.571 21.9805 114.778 cv
24.4287 113.547 27.5146 111.652 29.5859 110.125 cv
31.4326 111.691 35.123 114.518 38.0479 114.867 cv
38.0479 114.868 38.0488 114.868 38.0488 114.868 cv
38.3311 114.925 38.6045 115.003 38.8799 115.08 cv
39.4941 115.254 40.1445 115.438 40.8994 115.438 cv
41.8145 115.438 42.8818 115.166 44.2188 114.278 cv
47.5723 112.048 44.6475 104.409 42.9365 101.019 cv
46.665 97.7998 50.7979 93.6279 50.4248 91.2285 cv
cp
.111452 .461891 1 .00277714 cmyk
f
25.7637 82.9287 mo
25.6758 81.1855 24.7197 80.7588 23.8633 82.3291 cv
22.6641 84.5293 21.8633 86.3291 20.3633 90.5293 cv
17.0635 90.2295 11.6641 90.9287 10.2637 91.3291 cv
8.86328 91.7295 9.06543 92.8906 12.0635 93.4287 cv
15.9639 94.1289 23.4863 95.1602 24.9639 93.9287 cv
26.1641 92.9287 25.9639 86.9287 25.7637 82.9287 cv
cp
0 0 0 0 cmyk
f
35.1641 99.7627 mo
35.9775 102.206 39.4814 111.13 37.4639 111.129 cv
34.2969 111.128 28.2969 105.63 26.9639 104.43 cv
24.8301 106.163 15.5176 112.441 15.4639 110.629 cv
15.3965 108.362 16.3633 105.563 19.8301 104.229 cv
23.2969 102.896 29.9639 101.796 37.3633 92.3291 cv
38.7305 90.5811 43.3975 91.1963 43.0635 91.9287 cv
42.4004 93.3857 39.7637 96.8291 35.1641 99.7627 cv
cp
.00030518 .256962 .942687 0 cmyk
f
94.5264 96.9453 mo
94.127 98.0898 93.5186 99.9453 92.8145 102.113 cv
90.8457 101.625 83.6621 98.5293 80.5264 97.5459 cv
84.3262 96.9453 93.127 96.9453 94.5264 96.9453 cv
cp
.649317 0 .262638 0 cmyk
f
106.526 88.9453 mo
108.326 91.3457 111.326 95.1455 112.326 96.9453 cv
105.927 103.546 88.3262 118.546 87.127 119.546 cv
94.7266 110.746 105.526 90.5459 106.526 88.9453 cv
cp
f
109.927 79.7461 mo
107.791 82.1934 105.654 86.833 104.639 88.4814 cv
101.143 87.7539 97.9023 87.7695 95.5264 87.5459 cv
97.7266 82.3457 99.791 77.6738 101.927 74.1455 cv
104.727 75.9453 108.526 78.5459 109.927 79.7461 cv
cp
f
104.639 88.4814 mo
105.263 88.6094 105.895 88.7617 106.526 88.9453 cv
105.526 90.5459 94.7266 110.746 87.127 119.546 cv
87.7266 118.042 90.6943 108.649 92.8145 102.113 cv
93.5186 99.9453 94.127 98.0898 94.5264 96.9453 cv
93.127 96.9453 84.3262 96.9453 80.5264 97.5459 cv
80.7266 95.3457 81.7988 78.4648 82.9268 74.3457 cv
87.7266 73.7461 96.7266 73.5459 101.927 74.1455 cv
99.791 77.6738 97.7266 82.3457 95.5264 87.5459 cv
97.9023 87.7695 101.143 87.7539 104.639 88.4814 cv
cp
.384771 0 .0554818 0 cmyk
f
92.0137 114.376 mo
97.5234 106.501 103.401 96.0225 105.954 91.4697 cv
106.212 91.0098 106.426 90.6279 106.61 90.3008 cv
106.818 90.5742 107.032 90.8564 107.254 91.1465 cv
108.712 93.0586 110.487 95.3887 111.388 96.832 cv
106.924 101.354 97.8818 109.303 92.0137 114.376 cv
cp
91.5029 108.63 mo
92.1963 106.471 92.8994 104.282 93.5273 102.345 cv
94.2295 100.184 94.8359 98.334 95.2344 97.1924 cv
95.3145 96.9629 95.2783 96.709 95.1377 96.5107 cv
94.9971 96.3125 94.7695 96.1953 94.5264 96.1953 cv
91.6963 96.1953 85.1055 96.2451 81.3486 96.6787 cv
81.3789 96.2793 81.415 95.7891 81.4561 95.2256 cv
81.8242 90.2588 82.6621 78.9189 83.5313 75.0293 cv
86.2715 74.7217 90.209 74.5332 93.9824 74.5332 cv
96.54 74.5332 98.8291 74.6172 100.688 74.7754 cv
98.8564 77.9893 97.0605 81.9961 94.8359 87.2539 cv
94.7422 87.4736 94.7598 87.7256 94.8828 87.9307 cv
95.0049 88.1357 95.2178 88.2705 95.4561 88.293 cv
96.1416 88.3574 96.8984 88.4023 97.7119 88.4502 cv
99.7412 88.5703 102.041 88.707 104.488 89.2158 cv
104.793 89.2783 105.094 89.3457 105.387 89.418 cv
105.187 89.7725 104.938 90.2158 104.646 90.7363 cv
101.858 95.708 95.0801 107.801 89.2217 115.7 cv
89.875 113.699 90.6777 111.2 91.5029 108.63 cv
cp
83.9121 97.9639 mo
87.0674 97.7598 91.002 97.708 93.4766 97.6973 cv
93.1582 98.6426 92.7637 99.8447 92.3281 101.185 cv
91.1289 100.79 89.1133 99.999 87.1387 99.2217 cv
86.0469 98.792 84.9414 98.3564 83.9121 97.9639 cv
cp
105.109 86.0791 mo
104.787 86.6836 104.498 87.2246 104.255 87.6523 cv
101.911 87.21 99.7324 87.0674 97.8008 86.9531 cv
97.3926 86.9287 97 86.9053 96.624 86.8799 cv
98.7168 81.9639 100.431 78.2119 102.179 75.2021 cv
104.554 76.748 107.356 78.6699 108.869 79.8525 cv
107.467 81.6563 106.121 84.1816 105.109 86.0791 cv
cp
112.981 96.5811 mo
112.175 95.1289 110.194 92.5303 108.447 90.2373 cv
107.972 89.6133 107.521 89.0205 107.126 88.4951 cv
107.11 88.4736 107.086 88.4629 107.068 88.4434 cv
107.039 88.4121 107.009 88.3857 106.975 88.3604 cv
106.919 88.3174 106.861 88.2861 106.798 88.2607 cv
106.775 88.252 106.759 88.2324 106.735 88.2256 cv
106.431 88.1367 106.116 88.0527 105.794 87.9736 cv
105.989 87.6172 106.202 87.2158 106.433 86.7842 cv
107.528 84.7295 109.028 81.916 110.492 80.2393 cv
110.623 80.0889 110.689 79.8916 110.675 79.6914 cv
110.66 79.4922 110.566 79.3066 110.415 79.1768 cv
109.001 77.9648 105.195 75.3555 102.332 73.5146 cv
102.237 73.4531 102.133 73.4209 102.028 73.4063 cv
102.022 73.4053 102.019 73.4014 102.013 73.4004 cv
99.9316 73.1602 97.1543 73.0332 93.9824 73.0332 cv
89.9102 73.0332 85.6377 73.251 82.834 73.6016 cv
82.5322 73.6387 82.2832 73.8545 82.2031 74.1475 cv
81.2549 77.6123 80.3809 89.4346 79.9609 95.1152 cv
79.876 96.2559 79.8145 97.0928 79.7793 97.4775 cv
79.7773 97.499 79.7881 97.5176 79.7881 97.5381 cv
79.7871 97.6074 79.7979 97.6729 79.8154 97.7383 cv
79.8252 97.7744 79.832 97.8096 79.8467 97.8447 cv
79.8779 97.915 79.9229 97.9756 79.9736 98.0342 cv
79.9902 98.0527 79.9961 98.0771 80.0137 98.0938 cv
80.0176 98.0977 80.0234 98.0986 80.0283 98.1016 cv
80.1055 98.1719 80.1963 98.2285 80.3018 98.2617 cv
81.792 98.7285 84.2314 99.6885 86.5898 100.617 cv
88.6582 101.432 90.6201 102.202 91.8652 102.61 cv
91.2979 104.363 90.6846 106.273 90.0742 108.172 cv
88.4854 113.118 86.8428 118.234 86.4307 119.269 cv
86.415 119.308 86.415 119.348 86.4063 119.388 cv
86.3975 119.427 86.3848 119.464 86.3828 119.503 cv
86.3789 119.567 86.3896 119.628 86.4014 119.689 cv
86.4072 119.718 86.4053 119.746 86.4141 119.773 cv
86.4424 119.862 86.4863 119.944 86.5459 120.018 cv
86.5479 120.021 86.5488 120.023 86.5508 120.026 cv
86.5615 120.039 86.5781 120.044 86.5898 120.056 cv
86.6348 120.104 86.6787 120.151 86.7373 120.187 cv
86.7539 120.196 86.7725 120.2 86.79 120.209 cv
86.8105 120.22 86.8301 120.228 86.8506 120.235 cv
86.9404 120.271 87.0332 120.296 87.127 120.296 cv
87.2236 120.296 87.3184 120.272 87.4092 120.235 cv
87.4375 120.224 87.4609 120.205 87.4883 120.19 cv
87.5283 120.168 87.5713 120.152 87.6074 120.122 cv
89.3594 118.661 106.556 103.975 112.864 97.4678 cv
113.095 97.2305 113.143 96.8701 112.981 96.5811 cv
cp
.805173 .295903 .281132 .00967422 cmyk
f
95.6348 76.1533 mo
92.0342 76.0537 87.6201 75.752 85.835 76.9199 cv
84.4844 77.8037 82.835 92.0859 83.4346 92.4531 cv
84.8223 93.3047 84.334 86.5039 88.7842 81.8535 cv
92.459 78.0137 100.236 76.2813 95.6348 76.1533 cv
cp
0 0 0 0 cmyk
f
333.995 92.0684 mo
335.347 93.5879 336.747 96.2119 337.627 97.8271 cv
336.995 103.964 334.643 110.756 328.396 113.804 cv
320.556 117.611 308.643 116.196 302.331 104.372 cv
307.635 113.188 323.699 114.771 329.859 104.804 cv
332.747 100.132 333.755 95.748 333.923 92.0361 cv
333.946 92.0439 333.971 92.0596 333.995 92.0684 cv
cp
.0859388 .996887 .939239 .0115969 cmyk
f
337.523 89.2041 mo
337.827 91.4355 337.979 94.54 337.627 97.8271 cv
336.747 96.2119 335.347 93.5879 333.995 92.0684 cv
333.971 92.0596 333.946 92.0439 333.923 92.0361 cv
334.146 87.0039 332.803 83.2275 332.459 81.7324 cv
334.523 83.668 336.195 86.8682 337.523 89.2041 cv
cp
.141085 .249424 .221775 0 cmyk
f
332.459 81.7324 mo
332.803 83.2275 334.146 87.0039 333.923 92.0361 cv
332.971 91.7002 328.291 91.8516 325.459 92.1963 cv
325.563 88.5479 324.835 84.8438 324.459 82.4043 cv
325.859 82.0039 330.459 81.1318 332.459 81.7324 cv
cp
0 0 0 0 cmyk
f
317.659 80.6035 mo
318.995 82.668 319.859 85.0039 320.459 86.0039 cv
319.099 87.5078 317.323 89.7158 315.915 92.1318 cv
315.347 90.8916 314.131 88.5723 313.259 87.0039 cv
313.228 86.9795 313.195 86.9551 313.146 86.9238 cv
314.699 84.3555 316.419 82.0117 317.659 80.6035 cv
cp
.141085 .249424 .221775 0 cmyk
f
317.659 80.6035 mo
316.419 82.0117 314.699 84.3555 313.146 86.9238 cv
312.179 86.3232 308.299 84.8516 306.035 84.1719 cv
308.043 81.3721 310.146 79.0762 311.459 77.6035 cv
313.795 78.2676 315.923 79.332 317.659 80.6035 cv
cp
0 0 0 0 cmyk
f
315.547 103.732 mo
311.419 103.74 309.475 100.068 309.259 97.2041 cv
309.06 94.627 310.946 90.5479 313.146 86.9238 cv
313.195 86.9551 313.228 86.9795 313.259 87.0039 cv
314.131 88.5723 315.347 90.8916 315.915 92.1318 cv
313.595 96.123 312.282 100.7 315.547 103.732 cv
cp
.0859388 .996887 .939239 .0115969 cmyk
f
315.547 103.732 mo
316.883 103.724 318.451 103.332 320.259 102.404 cv
324.195 100.388 325.355 96.332 325.459 92.1963 cv
328.291 91.8516 332.971 91.7002 333.923 92.0361 cv
333.755 95.748 332.747 100.132 329.859 104.804 cv
323.699 114.771 307.635 113.188 302.331 104.372 cv
302.003 103.764 301.699 103.123 301.403 102.459 cv
301.274 102.115 301.155 101.764 301.06 101.404 cv
299.371 95.2998 302.556 88.9961 306.035 84.1719 cv
308.299 84.8516 312.179 86.3232 313.146 86.9238 cv
310.946 90.5479 309.06 94.627 309.259 97.2041 cv
309.475 100.068 311.419 103.74 315.547 103.732 cv
cp
0 .947082 .892393 0 cmyk
f
306.467 85.8115 mo
305.516 86.7637 303.567 89.3115 302.667 93.3115 cv
301.767 97.3115 305.567 90.5117 311.167 87.8115 cv
311.997 87.4111 306.967 85.3115 306.467 85.8115 cv
cp
0 .612512 .486122 0 cmyk
f
332.067 93.3115 mo
330.883 93.0957 326.799 93.1738 326.734 93.6787 cv
326.602 94.7129 326.567 95.5117 326.067 96.9121 cv
325.716 97.8955 333.167 93.5117 332.067 93.3115 cv
cp
f
328.067 113.129 mo
321.979 116.087 314.031 115.671 307.973 110.377 cv
310.55 111.671 313.546 112.401 316.646 112.401 cv
316.647 112.401 316.647 112.401 316.648 112.401 cv
322.62 112.401 327.668 109.776 330.497 105.198 cv
333.061 101.051 334.466 96.6338 334.672 92.0693 cv
334.802 89.1572 334.417 86.6582 333.998 84.7627 cv
334.892 86.0625 335.698 87.4902 336.402 88.7432 cv
336.799 89.4463 li
337.007 91.0352 337.271 94.1064 336.881 97.7471 cv
336.881 97.748 336.881 97.749 336.881 97.749 cv
336.881 97.75 li
336.333 103.072 334.359 110.06 328.067 113.129 cv
cp
306.645 84.6094 mo
308.446 82.0957 310.369 79.9463 311.642 78.5244 cv
311.701 78.458 li
313.435 78.9961 315.091 79.7783 316.553 80.7471 cv
315.269 82.3057 313.767 84.4492 312.506 86.5342 cv
310.554 89.75 308.276 94.2207 308.511 97.2607 cv
308.781 100.848 311.277 104.478 315.545 104.482 cv
315.546 104.482 315.546 104.482 315.547 104.482 cv
315.548 104.482 li
315.549 104.482 315.551 104.482 315.552 104.482 cv
317.098 104.473 318.797 103.997 320.601 103.072 cv
324.188 101.234 326.074 97.582 326.209 92.2178 cv
326.3 89.0479 325.773 85.8232 325.389 83.4678 cv
325.361 83.2959 325.333 83.127 325.307 82.9629 cv
326.603 82.6631 328.856 82.2773 330.625 82.2773 cv
331.096 82.2773 331.509 82.3066 331.844 82.3613 cv
331.884 82.5127 331.929 82.6777 331.978 82.8564 cv
332.459 84.627 333.354 87.9219 333.174 92.002 cv
332.979 96.3076 331.649 100.481 329.222 104.409 cv
326.671 108.536 322.089 110.902 316.648 110.901 cv
316.647 110.901 316.646 110.901 316.646 110.901 cv
310.87 110.901 305.504 108.188 302.993 104.019 cv
302.993 104.019 li
302.993 104.019 li
302.992 104.018 302.992 104.017 302.991 104.016 cv
302.705 103.485 302.418 102.894 302.105 102.195 cv
301.985 101.875 301.874 101.547 301.782 101.204 cv
300.476 96.4785 302.11 90.8955 306.645 84.6094 cv
cp
319.548 85.8994 mo
318.452 87.1445 316.708 89.2813 315.267 91.7539 cv
315.266 91.7549 315.267 91.7559 315.266 91.7568 cv
312.181 97.0645 312.493 100.505 313.762 102.688 cv
311.104 101.766 310.134 98.833 310.007 97.1465 cv
309.85 95.1143 311.228 91.5293 313.788 87.3115 cv
314.967 85.3613 316.354 83.374 317.56 81.8896 cv
318.122 82.876 318.592 83.877 318.984 84.7207 cv
319.188 85.1602 319.375 85.5605 319.548 85.8994 cv
cp
338.267 89.1025 mo
338.254 89.0078 338.223 88.917 338.176 88.833 cv
337.71 88.0088 li
336.46 85.7832 334.905 83.0176 333.008 81.2227 cv
333.007 81.2207 333.005 81.2197 333.004 81.2178 cv
332.992 81.208 332.982 81.1953 332.972 81.1855 cv
332.889 81.1074 332.792 81.0576 332.691 81.0244 cv
332.685 81.0215 332.682 81.0156 332.675 81.0137 cv
332.152 80.8574 331.463 80.7773 330.625 80.7773 cv
328.228 80.7773 325.245 81.3994 324.253 81.6836 cv
323.89 81.7871 323.66 82.1455 323.718 82.5186 cv
323.774 82.8887 323.84 83.2871 323.909 83.71 cv
324.283 86.0049 324.796 89.1475 324.709 92.1777 cv
324.588 97.0205 323.021 100.146 319.916 101.737 cv
318.442 102.493 317.079 102.893 315.839 102.958 cv
313.623 100.669 313.86 97.1592 316.563 92.5107 cv
316.563 92.5107 316.563 92.5107 316.563 92.5098 cv
318.104 89.8662 320.014 87.6143 321.016 86.5068 cv
321.236 86.2617 321.272 85.9014 321.103 85.6182 cv
320.898 85.2773 320.642 84.7266 320.344 84.0879 cv
319.817 82.958 319.163 81.5547 318.309 80.2285 cv
318.309 80.2285 li
318.302 80.2178 318.296 80.207 318.289 80.1963 cv
318.26 80.1514 318.218 80.123 318.182 80.0869 cv
318.153 80.0576 318.135 80.0225 318.103 79.998 cv
318.096 79.9932 318.088 79.9893 318.081 79.9834 cv
318.081 79.9834 li
316.207 78.6162 313.989 77.5439 311.664 76.8818 cv
311.39 76.8066 311.091 76.8906 310.899 77.1045 cv
310.523 77.5244 li
309.23 78.9707 307.274 81.1563 305.427 83.7334 cv
300.614 90.4053 298.902 96.418 300.335 101.598 cv
300.437 101.98 300.563 102.355 300.718 102.765 cv
301.055 103.521 301.352 104.131 301.665 104.714 cv
301.667 104.718 301.667 104.722 301.669 104.726 cv
306.07 112.97 313.186 116.476 320.008 116.476 cv
323.062 116.476 326.058 115.772 328.725 114.478 cv
335.634 111.106 337.785 103.607 338.372 97.9092 cv
338.373 97.9082 338.373 97.9082 338.373 97.9072 cv
338.791 93.9971 338.485 90.7129 338.267 89.1025 cv
cp
.233646 1 .995453 .17557 cmyk
f
247.325 78.8887 mo
255.396 81.7373 263.813 88.4658 262.149 99.7373 cv
260.35 111.938 248.749 116.337 242.35 115.938 cv
236.293 115.561 230.597 114.041 225.772 110.489 cv
231.429 113.729 239.189 113.249 244.35 111.737 cv
252.549 109.337 258.149 101.337 257.35 93.1377 cv
256.821 87.7051 253.829 81.6494 247.325 78.8887 cv
cp
.741848 .544213 0 0 cmyk
f
251.173 93.7773 mo
251.717 99.3525 247.909 104.793 242.325 106.425 cv
239.501 107.249 235.533 107.625 232.093 106.593 cv
229.637 105.329 227.693 103.098 227.053 99.4736 cv
225.413 90.2168 233.549 84.7295 237.661 84.0977 cv
240.589 83.6494 243.045 83.8174 245.068 84.417 cv
248.997 86.417 250.829 90.2813 251.173 93.7773 cv
cp
.127871 .0455024 .0131533 0 cmyk
f
251.183 91.8506 mo
251.62 96.3447 248.562 100.729 244.076 102.045 cv
241.809 102.71 238.621 103.013 235.858 102.181 cv
233.886 101.162 232.325 99.3633 231.811 96.4424 cv
230.494 88.9814 237.028 84.5576 240.33 84.0479 cv
242.682 83.6865 244.655 83.8213 246.28 84.3057 cv
249.436 85.918 250.907 89.0322 251.183 91.8506 cv
cp
0 0 0 0 cmyk
f
235.661 83.2979 mo
239.629 82.6885 242.725 83.2168 245.068 84.417 cv
243.045 83.8174 240.589 83.6494 237.661 84.0977 cv
233.549 84.7295 225.413 90.2168 227.053 99.4736 cv
227.693 103.098 229.637 105.329 232.093 106.593 cv
228.725 105.585 225.861 103.241 225.053 98.6729 cv
223.413 89.417 231.549 83.9297 235.661 83.2979 cv
cp
.741848 .544213 0 0 cmyk
f
242.325 106.425 mo
247.909 104.793 251.717 99.3525 251.173 93.7773 cv
250.829 90.2813 248.997 86.417 245.068 84.417 cv
242.725 83.2168 239.629 82.6885 235.661 83.2979 cv
231.549 83.9297 223.413 89.417 225.053 98.6729 cv
225.861 103.241 228.725 105.585 232.093 106.593 cv
235.533 107.625 239.501 107.249 242.325 106.425 cv
cp
247.325 78.8887 mo
253.829 81.6494 256.821 87.7051 257.35 93.1377 cv
258.149 101.337 252.549 109.337 244.35 111.737 cv
239.189 113.249 231.429 113.729 225.772 110.489 cv
222.437 108.585 219.837 105.385 218.949 100.337 cv
216.549 86.7373 228.501 78.665 234.549 77.7373 cv
239.813 76.9297 244.021 77.4814 247.325 78.8887 cv
cp
.607568 .296757 0 0 cmyk
f
261.407 99.6279 mo
259.737 110.95 249.079 115.616 242.396 115.188 cv
239.037 114.979 236.02 114.423 233.297 113.514 cv
234.194 113.605 235.116 113.657 236.063 113.657 cv
238.901 113.657 241.919 113.23 244.561 112.457 cv
253.111 109.954 258.931 101.617 258.096 93.0654 cv
257.741 89.4189 256.445 86.1377 254.418 83.4854 cv
258.616 86.626 262.571 91.748 261.407 99.6279 cv
cp
219.688 100.207 mo
218.814 95.2607 219.873 90.5254 222.749 86.5146 cv
226.031 81.9355 231.227 79.0059 234.662 78.4785 cv
236.244 78.2363 237.777 78.1133 239.221 78.1133 cv
242.12 78.1133 244.748 78.6064 247.032 79.5791 cv
252.417 81.8652 255.995 86.9609 256.604 93.2109 cv
257.368 101.058 252.01 108.713 244.139 111.018 cv
241.631 111.752 238.762 112.157 236.063 112.157 cv
232.223 112.157 228.793 111.355 226.145 109.838 cv
222.631 107.833 220.459 104.592 219.688 100.207 cv
cp
247.575 78.1816 mo
247.575 78.1816 li
243.904 76.6309 239.456 76.2266 234.436 76.9961 cv
230.805 77.5527 225.218 80.4951 221.529 85.6406 cv
218.413 89.9873 217.266 95.1143 218.211 100.467 cv
219.06 105.295 221.466 108.875 225.357 111.112 cv
229.881 114.435 235.424 116.258 242.303 116.687 cv
242.599 116.704 242.901 116.714 243.21 116.714 cv
250.465 116.713 261.158 111.597 262.892 99.8467 cv
265.009 85.5068 251.703 79.6387 247.575 78.1816 cv
cp
.920867 .763821 .0757763 .00680552 cmyk
f
227.622 89.2666 mo
229.855 86.1475 233.396 84.1523 235.737 83.792 cv
236.812 83.627 237.854 83.543 238.837 83.543 cv
241.112 83.543 243.132 83.9873 244.842 84.8623 cv
248.105 86.5244 250.287 89.875 250.675 93.8262 cv
251.196 99.168 247.547 104.378 242.186 105.944 cv
240.474 106.444 238.52 106.72 236.684 106.72 cv
235.072 106.72 233.576 106.516 232.236 106.113 cv
228.481 104.99 226.23 102.458 225.545 98.5859 cv
224.948 95.2188 225.667 91.9961 227.622 89.2666 cv
cp
231.949 107.071 mo
233.382 107.502 234.975 107.72 236.684 107.72 cv
238.611 107.72 240.665 107.43 242.466 106.904 cv
248.28 105.205 252.237 99.541 251.671 93.7285 cv
251.248 89.4365 248.865 85.7891 245.296 83.9717 cv
242.66 82.623 239.363 82.2236 235.585 82.8037 cv
233.115 83.1836 229.314 85.1855 226.809 88.6846 cv
224.693 91.6377 223.916 95.1221 224.561 98.7598 cv
225.307 102.975 227.861 105.849 231.949 107.071 cv
cp
f
241.818 95.1045 mo
240.742 95.1289 239.668 95.1846 238.596 95.2734 cv
238.561 94.8701 238.531 94.458 238.504 94.0439 cv
238.405 91.958 li
238.349 90.5596 238.302 89.1494 238.15 87.7354 cv
237.813 89.1172 237.567 90.5049 237.37 91.9072 cv
237.186 93.3174 236.997 94.7012 237.084 96.2236 cv
237.084 96.2236 li
237.189 97.0654 li
237.991 96.9316 li
239.311 96.7129 240.623 96.4424 241.939 96.168 cv
243.256 95.8906 244.575 95.6025 245.883 95.2012 cv
244.521 95.083 243.17 95.0762 241.818 95.1045 cv
cp
.906798 .794705 .510521 .615442 cmyk
f
233.883 79.5049 mo
230.629 80.1348 225.255 83.4336 222.804 87.5811 cv
221.092 90.4795 223.186 90.8506 224.225 88.7461 cv
225.137 86.8965 228.225 83.5459 232.691 81.2793 cv
234.768 80.2266 237.092 78.8838 233.883 79.5049 cv
cp
.261662 .00851453 0 0 cmyk
f
237.357 78.8799 mo
236.439 79.0674 236.624 79.7461 238.824 79.8799 cv
240.304 79.9697 241.424 80.0693 241.892 79.7461 cv
242.409 79.3877 240.624 78.2119 237.357 78.8799 cv
cp
f
151.956 112.339 mo
157.372 114.979 164.308 114.274 168.828 112.827 cv
176.315 110.427 180.732 100.898 180.004 92.6992 cv
179.476 86.8184 176.557 80.875 169.668 78.6992 cv
178.196 80.7783 185.204 87.3223 183.628 98.9629 cv
181.987 111.163 173.765 115.763 166.308 115.499 cv
160.9 115.299 155.644 114.57 151.956 112.339 cv
cp
.0476387 .289616 .988342 0 cmyk
f
165.884 106.986 mo
170.979 105.354 174.46 99.9141 173.964 94.3389 cv
173.468 88.7539 169.492 82.2266 159.796 83.8594 cv
156.044 84.4912 148.612 89.9785 150.108 99.2344 cv
151.597 108.482 160.796 108.618 165.884 106.986 cv
cp
169.668 78.6992 mo
176.557 80.875 179.476 86.8184 180.004 92.6992 cv
180.732 100.898 176.315 110.427 168.828 112.827 cv
164.308 114.274 157.372 114.979 151.956 112.339 cv
148.396 110.61 145.492 107.442 144.364 102.099 cv
141.364 87.8984 152.164 79.0986 159.564 78.0986 cv
163.612 77.5547 166.948 77.8271 169.668 78.6992 cv
cp
.0252689 .0267033 .940825 0 cmyk
f
182.885 98.8633 mo
181.259 110.95 173.287 114.978 166.335 114.75 cv
165.521 114.72 164.738 114.678 163.986 114.624 cv
165.729 114.407 167.46 114.053 169.057 113.541 cv
177.195 110.933 181.464 100.656 180.751 92.6318 cv
180.411 88.8457 179.187 85.5977 177.229 83.0635 cv
181.732 86.6396 183.793 92.1563 182.885 98.8633 cv
cp
145.098 101.943 mo
143.574 94.7305 145.839 89.5518 148.006 86.4775 cv
150.875 82.4082 155.452 79.4111 159.664 78.8418 cv
161.016 78.6602 162.323 78.5684 163.55 78.5684 cv
165.709 78.5684 167.689 78.8525 169.442 79.4141 cv
177.157 81.8516 178.903 88.8262 179.257 92.7656 cv
179.919 100.215 176.032 109.729 168.6 112.113 cv
166.074 112.922 163.195 113.366 160.494 113.366 cv
157.364 113.366 154.602 112.794 152.283 111.664 cv
148.488 109.821 146.07 106.551 145.098 101.943 cv
cp
169.846 77.9707 mo
169.845 77.9707 li
166.899 77.0352 163.397 76.8271 159.464 77.3555 cv
154.857 77.9775 149.879 81.2197 146.78 85.6133 cv
144.44 88.9316 141.995 94.5117 143.631 102.254 cv
144.697 107.31 147.369 110.915 151.563 112.977 cv
151.564 112.978 151.565 112.979 151.567 112.98 cv
154.838 114.96 159.513 115.998 166.281 116.249 cv
166.48 116.256 166.681 116.259 166.883 116.259 cv
174.02 116.259 182.659 111.797 184.371 99.0635 cv
185.812 88.4248 180.382 80.5391 169.846 77.9707 cv
cp
.111452 .461891 1 .00277714 cmyk
f
173.964 94.3389 mo
174.46 99.9141 170.979 105.354 165.884 106.986 cv
160.796 108.618 151.597 108.482 150.108 99.2344 cv
148.612 89.9785 156.044 84.4912 159.796 83.8594 cv
169.492 82.2266 173.468 88.7539 173.964 94.3389 cv
cp
.00030518 .256962 .942687 0 cmyk
f
159.796 83.8594 mo
163.804 83.1865 166.836 83.9063 169.052 85.3789 cv
166.94 84.2744 164.188 83.8027 160.692 84.3945 cv
156.933 85.0273 149.508 90.5146 151.004 99.7705 cv
151.644 103.738 153.708 105.954 156.261 107.059 cv
153.308 106.003 150.819 103.667 150.108 99.2344 cv
148.612 89.9785 156.044 84.4912 159.796 83.8594 cv
cp
.0798962 .451698 1 0 cmyk
f
152.474 89.5088 mo
153.331 88.2051 154.409 87.0391 155.651 86.0791 cv
156.888 85.125 158.31 84.3457 159.834 84.0586 cv
161.394 83.8203 162.98 83.7617 164.526 83.9941 cv
166.07 84.2188 167.562 84.7695 168.823 85.6533 cv
171.377 87.4141 172.864 90.3848 173.285 93.4053 cv
173.775 96.4297 173.014 99.5742 171.305 102.082 cv
170.458 103.338 169.367 104.431 168.104 105.25 cv
167.476 105.656 166.787 106.008 166.104 106.259 cv
165.379 106.523 164.64 106.715 163.885 106.871 cv
160.885 107.461 157.611 107.34 154.946 105.89 cv
153.625 105.165 152.522 104.078 151.772 102.761 cv
151.016 101.438 150.606 99.9434 150.419 98.3906 cv
150.019 95.3115 150.742 92.1133 152.474 89.5088 cv
cp
154.428 106.803 mo
155.888 107.654 157.537 108.103 159.182 108.277 cv
160.831 108.45 162.492 108.361 164.114 108.064 cv
164.925 107.915 165.734 107.708 166.51 107.427 cv
167.324 107.13 168.065 106.75 168.778 106.294 cv
170.194 105.383 171.405 104.172 172.346 102.788 cv
174.245 100.028 174.986 96.5 174.382 93.2266 cv
174.081 91.5967 173.511 90.0146 172.648 88.5967 cv
171.789 87.1797 170.616 85.9424 169.214 85.0625 cv
167.813 84.1797 166.214 83.6592 164.6 83.46 cv
162.979 83.2607 161.346 83.3701 159.762 83.6563 cv
158.138 83.9629 156.692 84.7813 155.375 85.7109 cv
154.065 86.6641 152.904 87.8301 151.965 89.1641 cv
150.059 91.8223 149.233 95.2227 149.581 98.4824 cv
149.738 100.094 150.144 101.754 150.946 103.223 cv
151.74 104.699 152.965 105.962 154.428 106.803 cv
cp
.0146792 0 .427955 0 cmyk
f
158.828 80.0508 mo
155.574 80.6807 150.2 83.9795 147.749 88.127 cv
146.037 91.0254 148.132 91.3965 149.17 89.292 cv
150.082 87.4424 153.17 84.0918 157.637 81.8252 cv
159.713 80.7725 162.038 79.4297 158.828 80.0508 cv
cp
0 0 0 0 cmyk
f
162.304 79.4258 mo
161.385 79.6133 161.569 80.292 163.77 80.4258 cv
165.249 80.5156 166.369 80.6152 166.837 80.292 cv
167.354 79.9336 165.569 78.7578 162.304 79.4258 cv
cp
f
163.35 85.5986 mo
163.271 85.6016 li
162.436 85.6621 161.855 86.0088 161.584 86.6064 cv
161.413 86.9766 161.402 87.3779 161.392 87.7656 cv
161.386 88.0117 161.378 88.2451 161.33 88.4375 cv
161.221 88.8408 160.987 88.9883 160.603 89.2324 cv
160.471 89.3164 160.331 89.4053 160.187 89.5098 cv
159.183 90.1035 158.335 91.168 158.108 92.1367 cv
157.887 93.1104 158.277 93.8594 158.812 94.7354 cv
159.244 95.4336 159.83 96.4014 160.255 97.1162 cv
160.436 97.4258 li
160.679 97.8369 161.183 98.6934 161.18 98.9287 cv
161.15 99.3076 161.15 99.3076 160.85 99.3906 cv
160.828 99.3936 160.78 99.3984 160.735 99.3984 cv
160.572 99.3984 160.444 99.333 160.336 99.1924 cv
160.102 98.8906 160.015 98.3076 160.136 97.8359 cv
160.315 97.1201 159.98 96.5078 159.283 96.2754 cv
159.065 96.2031 158.844 96.167 158.624 96.167 cv
157.74 96.167 156.974 96.7559 156.671 97.668 cv
155.966 99.791 156.78 101.794 158.745 102.777 cv
159.076 102.996 159.252 103.131 159.301 103.432 cv
159.344 103.656 159.303 103.899 159.26 104.158 cv
159.203 104.492 159.14 104.869 159.235 105.272 cv
159.317 105.663 159.612 105.975 160.044 106.119 cv
160.19 106.168 160.343 106.192 160.495 106.192 cv
160.738 106.192 160.972 106.131 161.19 106.008 cv
161.63 105.761 161.795 105.391 161.88 105.133 cv
161.979 104.832 162.014 104.512 162.046 104.202 cv
162.075 103.921 162.104 103.655 162.176 103.436 cv
162.256 103.195 162.426 103.016 162.71 102.871 cv
163.938 102.44 164.817 101.555 165.187 100.377 cv
165.333 99.8516 165.395 99.457 165.035 98.3145 cv
164.862 97.752 164.397 96.9629 163.897 96.1357 cv
163.307 95.2266 163.007 94.791 162.326 93.8047 cv
162.025 93.376 161.909 92.9688 162.003 92.6826 cv
162.115 92.3467 162.468 92.2529 162.709 92.2295 cv
162.701 92.2461 li
162.576 92.5498 162.447 92.8623 162.448 93.2744 cv
162.469 94.3418 163.503 94.7197 163.843 94.8438 cv
164.003 94.8906 164.147 94.9092 164.301 94.9092 cv
164.713 94.9092 165.283 94.7627 165.536 94.3506 cv
165.727 94.0117 165.823 93.8076 165.917 93.6094 cv
166.048 93.333 166.172 93.0713 166.539 92.4648 cv
167.132 91.5303 166.929 90.8037 166.807 90.3701 cv
166.773 90.25 li
166.605 89.6045 165.496 88.833 164.491 88.6611 cv
164.327 88.6367 164.28 88.5654 164.253 88.4922 cv
164.217 88.3613 164.314 88.0068 164.386 87.748 cv
164.433 87.582 164.476 87.4248 164.497 87.2813 cv
164.589 86.7305 164.503 86.2773 164.247 85.9766 cv
164.101 85.8047 163.827 85.5986 163.35 85.5986 cv
163.35 85.5986 li
cp
.0798962 .451698 1 0 cmyk
f
162.315 85.2656 mo
162.237 85.2676 li
161.401 85.3281 160.822 85.6758 160.55 86.2734 cv
160.38 86.6436 160.369 87.0439 160.358 87.4316 cv
160.352 87.6777 160.345 87.9111 160.296 88.1035 cv
160.187 88.5078 159.954 88.6553 159.569 88.8984 cv
159.437 88.9824 159.297 89.0713 159.153 89.1758 cv
158.148 89.7695 157.302 90.834 157.075 91.8037 cv
156.854 92.7773 157.244 93.5254 157.778 94.4023 cv
158.21 95.0996 158.796 96.0674 159.222 96.7822 cv
159.401 97.0918 li
159.645 97.5039 160.148 98.3594 160.146 98.5947 cv
160.116 98.9736 160.116 98.9736 159.815 99.0566 cv
159.795 99.0596 159.747 99.0645 159.702 99.0645 cv
159.538 99.0645 159.411 99 159.303 98.8594 cv
159.068 98.5566 158.981 97.9736 159.103 97.5029 cv
159.282 96.7861 158.947 96.1748 158.249 95.9414 cv
158.032 95.8701 157.811 95.833 157.59 95.833 cv
156.706 95.833 155.94 96.4219 155.638 97.334 cv
154.933 99.457 155.746 101.461 157.712 102.443 cv
158.042 102.663 158.218 102.797 158.268 103.098 cv
158.311 103.322 158.269 103.566 158.226 103.824 cv
158.17 104.158 158.106 104.535 158.202 104.938 cv
158.284 105.329 158.579 105.641 159.011 105.785 cv
159.157 105.835 159.309 105.859 159.461 105.859 cv
159.705 105.859 159.938 105.797 160.157 105.674 cv
160.597 105.427 160.761 105.057 160.847 104.799 cv
160.945 104.499 160.979 104.179 161.012 103.868 cv
161.042 103.587 161.069 103.321 161.143 103.102 cv
161.222 102.862 161.393 102.682 161.676 102.537 cv
162.905 102.106 163.784 101.222 164.152 100.043 cv
164.3 99.5186 164.361 99.124 164.002 97.9805 cv
163.828 97.418 163.364 96.6289 162.863 95.8018 cv
162.272 94.8936 161.974 94.457 161.292 93.4707 cv
160.991 93.043 160.875 92.6348 160.97 92.3486 cv
161.081 92.0127 161.435 91.9189 161.675 91.8955 cv
161.667 91.9131 li
161.542 92.2158 161.413 92.5283 161.414 92.9414 cv
161.436 94.0078 162.469 94.3867 162.809 94.5107 cv
162.97 94.5566 163.114 94.5752 163.268 94.5752 cv
163.679 94.5752 164.249 94.4297 164.503 94.0166 cv
164.693 93.6777 164.789 93.4736 164.883 93.2764 cv
165.015 93 165.139 92.7383 165.506 92.1318 cv
166.099 91.1963 165.895 90.4697 165.772 90.0361 cv
165.74 89.916 li
165.572 89.2705 164.463 88.5 163.457 88.3281 cv
163.294 88.3027 163.247 88.2314 163.22 88.1592 cv
163.183 88.0273 163.28 87.6729 163.353 87.4141 cv
163.398 87.248 163.441 87.0908 163.464 86.9482 cv
163.555 86.3975 163.469 85.9443 163.214 85.6426 cv
163.067 85.4707 162.794 85.2656 162.315 85.2656 cv
162.315 85.2656 li
cp
f
160.763 102.977 mo
160.59 103.497 160.639 104.154 160.467 104.673 cv
160.374 104.953 160.233 105.172 159.961 105.325 cv
159.688 105.479 159.396 105.492 159.137 105.406 cv
158.878 105.319 158.651 105.136 158.591 104.847 cv
158.443 104.224 158.776 103.625 158.662 103.034 cv
158.582 102.542 158.256 102.324 157.912 102.097 cv
156.007 101.156 155.413 99.2773 156.018 97.46 cv
156.335 96.5029 157.224 96.0225 158.123 96.3213 cv
158.562 96.4678 158.858 96.8301 158.715 97.4033 cv
158.49 98.2813 158.831 99.6563 159.922 99.4424 cv
160.433 99.3018 160.504 99.1494 160.545 98.6309 cv
160.585 98.2451 159.944 97.2363 159.565 96.5781 cv
159.14 95.8613 158.552 94.8906 158.12 94.1943 cv
157.646 93.416 157.272 92.7383 157.465 91.8945 cv
157.676 90.9893 158.505 90.0234 159.389 89.5 cv
159.976 89.0723 160.487 88.9316 160.684 88.2021 cv
160.823 87.6504 160.676 86.958 160.914 86.4385 cv
161.159 85.9004 161.711 85.707 162.255 85.667 cv
163.021 85.6328 163.176 86.2383 163.068 86.8877 cv
163.011 87.2666 162.731 87.9063 162.845 88.2979 cv
162.938 88.5508 163.138 88.6836 163.39 88.7227 cv
164.354 88.8867 165.245 89.6055 165.353 90.0156 cv
165.459 90.4287 165.721 91.0469 165.163 91.9248 cv
164.525 92.9775 164.592 93.04 164.162 93.8076 cv
163.971 94.1191 163.352 94.248 162.946 94.1348 cv
162.313 93.9033 161.827 93.5635 161.814 92.9404 cv
161.813 92.6055 161.918 92.3545 162.039 92.0615 cv
162.219 91.7217 162.197 91.4502 161.72 91.4912 cv
161.153 91.5225 160.736 91.7822 160.59 92.2227 cv
160.464 92.6025 160.557 93.1191 160.964 93.6982 cv
161.637 94.6738 161.935 95.1064 162.521 96.0088 cv
163.008 96.8125 163.461 97.585 163.62 98.1006 cv
163.955 99.166 163.896 99.4775 163.771 99.9238 cv
163.444 100.966 162.671 101.772 161.52 102.168 cv
161.094 102.379 160.868 102.66 160.763 102.977 cv
cp
.0252689 .0267033 .940825 0 cmyk
f
86.5957 175.792 mo
86.5957 175.792 86.8125 180.172 88.4922 181.853 cv
90.3916 183.756 94.5488 183.76 94.5488 183.76 cv
94.5488 183.76 90.127 183.932 88.4443 185.61 cv
86.7637 187.289 86.583 191.711 86.583 191.711 cv
86.583 191.711 86.1445 187.112 84.6865 185.651 cv
83.0967 184.058 78.6309 183.743 78.6309 183.743 cv
78.6309 183.743 83.0088 183.616 84.7354 181.893 cv
86.3711 180.259 86.5957 175.792 86.5957 175.792 cv
cp
.0254826 .0263676 .951934 0 cmyk
f
68.9824 143.259 mo
68.9824 143.259 71.957 146.479 74.3242 146.692 cv
77.0039 146.933 80.1943 144.269 80.1943 144.269 cv
80.1943 144.269 76.9121 147.237 76.6992 149.605 cv
76.4863 151.972 79.1836 155.479 79.1836 155.479 cv
79.1836 155.479 75.8984 152.232 73.8418 152.048 cv
71.6006 151.845 67.9727 154.469 67.9727 154.469 cv
67.9727 154.469 71.25 151.563 71.4688 149.133 cv
71.6748 146.829 68.9824 143.259 68.9824 143.259 cv
cp
f
65.1045 164.247 mo
65.1045 164.247 67.2871 168.05 69.5469 168.785 cv
72.1055 169.617 75.8086 167.731 75.8086 167.731 cv
75.8086 167.731 71.9482 169.894 71.2119 172.153 cv
70.4795 174.413 72.3252 178.434 72.3252 178.434 cv
72.3252 178.434 69.8467 174.536 67.8838 173.896 cv
65.7432 173.2 61.6221 174.95 61.6221 174.95 cv
61.6221 174.95 65.4639 172.847 66.2197 170.526 cv
66.9336 168.326 65.1045 164.247 65.1045 164.247 cv
cp
f
104.197 143.259 mo
104.197 143.259 101.223 146.479 98.8555 146.692 cv
96.1758 146.933 92.9854 144.269 92.9854 144.269 cv
92.9854 144.269 96.2676 147.237 96.4805 149.605 cv
96.6934 151.972 93.9961 155.479 93.9961 155.479 cv
93.9961 155.479 97.2822 152.232 99.3379 152.048 cv
101.579 151.845 105.207 154.469 105.207 154.469 cv
105.207 154.469 101.931 151.563 101.711 149.133 cv
101.505 146.829 104.197 143.259 104.197 143.259 cv
cp
f
108.075 164.247 mo
108.075 164.247 105.893 168.05 103.633 168.785 cv
101.074 169.617 97.3711 167.731 97.3711 167.731 cv
97.3711 167.731 101.231 169.894 101.968 172.153 cv
102.701 174.413 100.854 178.434 100.854 178.434 cv
100.854 178.434 103.334 174.536 105.297 173.896 cv
107.438 173.2 111.558 174.95 111.558 174.95 cv
111.558 174.95 107.716 172.847 106.96 170.526 cv
106.246 168.326 108.075 164.247 108.075 164.247 cv
cp
f
86.5928 179.771 mo
86.5928 179.771 86.7012 181.962 87.54 182.802 cv
88.4922 183.753 90.5693 183.755 90.5693 183.755 cv
90.5693 183.755 88.3584 183.841 87.5166 184.681 cv
86.6777 185.521 86.5869 187.731 86.5869 187.731 cv
86.5869 187.731 86.3672 185.431 85.6377 184.701 cv
84.8438 183.904 82.6104 183.747 82.6104 183.747 cv
82.6104 183.747 84.7998 183.685 85.6631 182.821 cv
86.4805 182.005 86.5928 179.771 86.5928 179.771 cv
cp
.00534066 0 .10367 0 cmyk
f
71.5332 146.313 mo
71.5332 146.313 73.0215 147.923 74.2041 148.03 cv
75.543 148.151 77.1387 146.818 77.1387 146.818 cv
77.1387 146.818 75.498 148.304 75.3916 149.487 cv
75.2852 150.67 76.6338 152.423 76.6338 152.423 cv
76.6338 152.423 74.9902 150.801 73.9629 150.708 cv
72.8428 150.607 71.0273 151.919 71.0273 151.919 cv
71.0273 151.919 72.667 150.466 72.7754 149.251 cv
72.8789 148.099 71.5332 146.313 71.5332 146.313 cv
cp
f
66.9102 167.794 mo
66.9102 167.794 68.001 169.695 69.1318 170.063 cv
70.4102 170.478 72.2617 169.536 72.2617 169.536 cv
72.2617 169.536 70.332 170.617 69.9639 171.747 cv
69.5977 172.876 70.5215 174.887 70.5215 174.887 cv
70.5215 174.887 69.2813 172.938 68.2998 172.618 cv
67.2295 172.271 65.1689 173.146 65.1689 173.146 cv
65.1689 173.146 67.0898 172.094 67.4678 170.933 cv
67.8242 169.833 66.9102 167.794 66.9102 167.794 cv
cp
f
101.646 146.313 mo
101.646 146.313 100.159 147.923 98.9756 148.03 cv
97.6367 148.151 96.041 146.818 96.041 146.818 cv
96.041 146.818 97.6826 148.304 97.7881 149.487 cv
97.8945 150.67 96.5459 152.423 96.5459 152.423 cv
96.5459 152.423 98.1895 150.801 99.2168 150.708 cv
100.337 150.607 102.151 151.919 102.151 151.919 cv
102.151 151.919 100.514 150.466 100.404 149.251 cv
100.301 148.099 101.646 146.313 101.646 146.313 cv
cp
f
106.27 167.794 mo
106.27 167.794 105.179 169.695 104.048 170.063 cv
102.769 170.478 100.918 169.536 100.918 169.536 cv
100.918 169.536 102.848 170.617 103.216 171.747 cv
103.582 172.876 102.659 174.887 102.659 174.887 cv
102.659 174.887 103.898 172.938 104.879 172.618 cv
105.951 172.271 108.011 173.146 108.011 173.146 cv
108.011 173.146 106.09 172.094 105.712 170.933 cv
105.355 169.833 106.27 167.794 106.27 167.794 cv
cp
f
20.625 145.536 mo
20.625 145.536 22.6543 154.446 26.3359 157.106 cv
30.0176 159.768 39.1055 158.962 39.1055 158.962 cv
39.1055 158.962 31.8926 161.764 29.8643 167.315 cv
27.8379 172.867 32.0469 180.688 32.0469 180.688 cv
32.0469 180.688 26.3281 174.683 20.625 174.683 cv
14.9219 174.683 9.20313 180.688 9.20313 180.688 cv
9.20313 180.688 13.5508 172.834 11.3857 167.315 cv
9.2207 161.798 2.14551 158.962 2.14551 158.962 cv
2.14551 158.962 10.8818 159.646 14.9141 157.106 cv
18.9473 154.568 20.625 145.536 20.625 145.536 cv
cp
.0254826 .0263676 .951934 0 cmyk
f
20.625 156.114 mo
20.625 156.114 21.5488 160.172 23.2266 161.384 cv
24.9033 162.595 29.041 162.228 29.041 162.228 cv
29.041 162.228 25.7568 163.505 24.833 166.032 cv
23.9102 168.561 25.8271 172.122 25.8271 172.122 cv
25.8271 172.122 23.2227 169.388 20.625 169.388 cv
18.0273 169.388 15.4238 172.122 15.4238 172.122 cv
15.4238 172.122 17.4023 168.546 16.418 166.032 cv
15.4316 163.52 12.209 162.228 12.209 162.228 cv
12.209 162.228 16.1875 162.539 18.0234 161.384 cv
19.8613 160.228 20.625 156.114 20.625 156.114 cv
cp
.00534066 0 .10367 0 cmyk
f
166.243 134.03 mo
166.243 134.03 166.393 137.025 167.54 138.175 cv
168.84 139.477 171.682 139.479 171.682 139.479 cv
171.682 139.479 168.659 139.597 167.507 140.744 cv
166.359 141.892 166.235 144.916 166.235 144.916 cv
166.235 144.916 165.935 141.771 164.938 140.772 cv
163.852 139.683 160.797 139.469 160.797 139.469 cv
160.797 139.469 163.79 139.381 164.972 138.202 cv
166.09 137.084 166.243 134.03 166.243 134.03 cv
cp
.0254826 .0263676 .951934 0 cmyk
f
154.362 181.484 mo
154.362 181.484 153.064 184.188 153.526 185.745 cv
154.05 187.509 156.547 188.865 156.547 188.865 cv
156.547 188.865 153.833 187.528 152.272 187.989 cv
150.718 188.451 149.167 191.051 149.167 191.051 cv
149.167 191.051 150.401 188.143 150.003 186.79 cv
149.564 185.313 146.981 183.67 146.981 183.67 cv
146.981 183.67 149.654 185.019 151.254 184.546 cv
152.771 184.096 154.362 181.484 154.362 181.484 cv
cp
f
178.118 181.484 mo
178.118 181.484 179.414 184.188 178.952 185.745 cv
178.431 187.509 175.934 188.865 175.934 188.865 cv
175.934 188.865 178.647 187.528 180.206 187.989 cv
181.763 188.451 183.312 191.051 183.312 191.051 cv
183.312 191.051 182.077 188.143 182.478 186.79 cv
182.914 185.313 185.499 183.67 185.499 183.67 cv
185.499 183.67 182.824 185.019 181.224 184.546 cv
179.708 184.096 178.118 181.484 178.118 181.484 cv
cp
f
142.003 153.161 mo
142.003 153.161 141.969 156.159 143.047 157.376 cv
144.263 158.755 147.1 158.93 147.1 158.93 cv
147.1 158.93 144.076 158.863 142.855 159.938 cv
141.641 161.016 141.335 164.028 141.335 164.028 cv
141.335 164.028 141.225 160.868 140.291 159.812 cv
139.273 158.657 136.236 158.259 136.236 158.259 cv
136.236 158.259 139.229 158.353 140.479 157.247 cv
141.664 156.2 142.003 153.161 142.003 153.161 cv
cp
f
190.478 153.161 mo
190.478 153.161 190.509 156.159 189.434 157.376 cv
188.215 158.755 185.379 158.93 185.379 158.93 cv
185.379 158.93 188.403 158.863 189.622 159.938 cv
190.837 161.016 191.146 164.028 191.146 164.028 cv
191.146 164.028 191.254 160.868 192.189 159.812 cv
193.207 158.657 196.244 158.259 196.244 158.259 cv
196.244 158.259 193.25 158.353 191.999 157.247 cv
190.815 156.2 190.478 153.161 190.478 153.161 cv
cp
f
166.241 136.751 mo
166.241 136.751 166.316 138.249 166.89 138.824 cv
167.539 139.475 168.961 139.477 168.961 139.477 cv
168.961 139.477 167.449 139.534 166.873 140.108 cv
166.299 140.683 166.237 142.195 166.237 142.195 cv
166.237 142.195 166.087 140.622 165.589 140.123 cv
165.045 139.578 163.518 139.471 163.518 139.471 cv
163.518 139.471 165.015 139.427 165.605 138.837 cv
166.164 138.278 166.241 136.751 166.241 136.751 cv
cp
.00534066 0 .10367 0 cmyk
f
153.063 183.875 mo
153.063 183.875 152.414 185.228 152.646 186.005 cv
152.907 186.888 154.155 187.565 154.155 187.565 cv
154.155 187.565 152.8 186.898 152.02 187.128 cv
151.241 187.359 150.466 188.659 150.466 188.659 cv
150.466 188.659 151.083 187.204 150.883 186.528 cv
150.664 185.79 149.374 184.969 149.374 184.969 cv
149.374 184.969 150.71 185.643 151.51 185.406 cv
152.269 185.182 153.063 183.875 153.063 183.875 cv
cp
f
179.418 183.875 mo
179.418 183.875 180.064 185.228 179.835 186.005 cv
179.573 186.888 178.324 187.565 178.324 187.565 cv
178.324 187.565 179.681 186.898 180.461 187.128 cv
181.239 187.359 182.015 188.659 182.015 188.659 cv
182.015 188.659 181.397 187.204 181.598 186.528 cv
181.815 185.79 183.106 184.969 183.106 184.969 cv
183.106 184.969 181.771 185.643 180.971 185.406 cv
180.212 185.182 179.418 183.875 179.418 183.875 cv
cp
f
141.836 155.878 mo
141.836 155.878 141.818 157.376 142.356 157.984 cv
142.966 158.674 144.383 158.762 144.383 158.762 cv
144.383 158.762 142.871 158.728 142.262 159.267 cv
141.655 159.805 141.502 161.311 141.502 161.311 cv
141.502 161.311 141.446 159.731 140.979 159.203 cv
140.47 158.626 138.953 158.427 138.953 158.427 cv
138.953 158.427 140.448 158.474 141.073 157.92 cv
141.667 157.396 141.836 155.878 141.836 155.878 cv
cp
f
190.645 155.878 mo
190.645 155.878 190.66 157.376 190.123 157.984 cv
189.514 158.674 188.096 158.762 188.096 158.762 cv
188.096 158.762 189.607 158.728 190.217 159.267 cv
190.824 159.805 190.979 161.311 190.979 161.311 cv
190.979 161.311 191.032 159.731 191.5 159.203 cv
192.01 158.626 193.527 158.427 193.527 158.427 cv
193.527 158.427 192.031 158.474 191.405 157.92 cv
190.813 157.396 190.645 155.878 190.645 155.878 cv
cp
f
309.024 175.792 mo
309.024 175.792 309.241 180.172 310.921 181.853 cv
312.82 183.756 316.978 183.76 316.978 183.76 cv
316.978 183.76 312.556 183.932 310.873 185.61 cv
309.192 187.289 309.012 191.711 309.012 191.711 cv
309.012 191.711 308.573 187.112 307.115 185.651 cv
305.525 184.058 301.06 183.743 301.06 183.743 cv
301.06 183.743 305.438 183.616 307.164 181.893 cv
308.8 180.259 309.024 175.792 309.024 175.792 cv
cp
0 .947082 .892393 0 cmyk
f
291.411 143.259 mo
291.411 143.259 294.386 146.479 296.753 146.692 cv
299.433 146.933 302.623 144.269 302.623 144.269 cv
302.623 144.269 299.341 147.237 299.128 149.605 cv
298.915 151.972 301.612 155.479 301.612 155.479 cv
301.612 155.479 298.327 152.232 296.271 152.048 cv
294.029 151.845 290.401 154.469 290.401 154.469 cv
290.401 154.469 293.679 151.563 293.897 149.133 cv
294.104 146.829 291.411 143.259 291.411 143.259 cv
cp
f
287.533 164.247 mo
287.533 164.247 289.716 168.05 291.976 168.785 cv
294.534 169.617 298.237 167.731 298.237 167.731 cv
298.237 167.731 294.377 169.894 293.641 172.153 cv
292.908 174.413 294.754 178.434 294.754 178.434 cv
294.754 178.434 292.275 174.536 290.313 173.896 cv
288.172 173.2 284.051 174.95 284.051 174.95 cv
284.051 174.95 287.893 172.847 288.648 170.526 cv
289.362 168.326 287.533 164.247 287.533 164.247 cv
cp
f
326.626 143.259 mo
326.626 143.259 323.651 146.479 321.284 146.692 cv
318.604 146.933 315.414 144.269 315.414 144.269 cv
315.414 144.269 318.696 147.237 318.909 149.605 cv
319.122 151.972 316.425 155.479 316.425 155.479 cv
316.425 155.479 319.711 152.232 321.767 152.048 cv
324.008 151.845 327.636 154.469 327.636 154.469 cv
327.636 154.469 324.359 151.563 324.14 149.133 cv
323.934 146.829 326.626 143.259 326.626 143.259 cv
cp
f
330.504 164.247 mo
330.504 164.247 328.321 168.05 326.062 168.785 cv
323.503 169.617 319.8 167.731 319.8 167.731 cv
319.8 167.731 323.66 169.894 324.396 172.153 cv
325.13 174.413 323.283 178.434 323.283 178.434 cv
323.283 178.434 325.763 174.536 327.726 173.896 cv
329.866 173.2 333.986 174.95 333.986 174.95 cv
333.986 174.95 330.145 172.847 329.389 170.526 cv
328.675 168.326 330.504 164.247 330.504 164.247 cv
cp
f
309.021 179.771 mo
309.021 179.771 309.13 181.962 309.969 182.802 cv
310.921 183.753 312.998 183.755 312.998 183.755 cv
312.998 183.755 310.787 183.841 309.945 184.681 cv
309.106 185.521 309.016 187.731 309.016 187.731 cv
309.016 187.731 308.796 185.431 308.066 184.701 cv
307.272 183.904 305.039 183.747 305.039 183.747 cv
305.039 183.747 307.229 183.685 308.092 182.821 cv
308.909 182.005 309.021 179.771 309.021 179.771 cv
cp
.00534066 0 .10367 0 cmyk
f
293.962 146.313 mo
293.962 146.313 295.45 147.923 296.633 148.03 cv
297.972 148.151 299.567 146.818 299.567 146.818 cv
299.567 146.818 297.927 148.304 297.82 149.487 cv
297.714 150.67 299.063 152.423 299.063 152.423 cv
299.063 152.423 297.419 150.801 296.392 150.708 cv
295.271 150.607 293.456 151.919 293.456 151.919 cv
293.456 151.919 295.096 150.466 295.204 149.251 cv
295.308 148.099 293.962 146.313 293.962 146.313 cv
cp
f
289.339 167.794 mo
289.339 167.794 290.43 169.695 291.561 170.063 cv
292.839 170.478 294.69 169.536 294.69 169.536 cv
294.69 169.536 292.761 170.617 292.393 171.747 cv
292.026 172.876 292.95 174.887 292.95 174.887 cv
292.95 174.887 291.71 172.938 290.729 172.618 cv
289.658 172.271 287.598 173.146 287.598 173.146 cv
287.598 173.146 289.519 172.094 289.896 170.933 cv
290.253 169.833 289.339 167.794 289.339 167.794 cv
cp
f
324.075 146.313 mo
324.075 146.313 322.588 147.923 321.404 148.03 cv
320.065 148.151 318.47 146.818 318.47 146.818 cv
318.47 146.818 320.111 148.304 320.217 149.487 cv
320.323 150.67 318.975 152.423 318.975 152.423 cv
318.975 152.423 320.618 150.801 321.646 150.708 cv
322.766 150.607 324.58 151.919 324.58 151.919 cv
324.58 151.919 322.942 150.466 322.833 149.251 cv
322.729 148.099 324.075 146.313 324.075 146.313 cv
cp
f
328.698 167.794 mo
328.698 167.794 327.607 169.695 326.477 170.063 cv
325.197 170.478 323.347 169.536 323.347 169.536 cv
323.347 169.536 325.276 170.617 325.645 171.747 cv
326.011 172.876 325.088 174.887 325.088 174.887 cv
325.088 174.887 326.327 172.938 327.308 172.618 cv
328.38 172.271 330.439 173.146 330.439 173.146 cv
330.439 173.146 328.519 172.094 328.141 170.933 cv
327.784 169.833 328.698 167.794 328.698 167.794 cv
cp
f
243.054 145.536 mo
243.054 145.536 245.083 154.446 248.765 157.106 cv
252.446 159.768 261.534 158.962 261.534 158.962 cv
261.534 158.962 254.321 161.764 252.293 167.315 cv
250.267 172.867 254.476 180.688 254.476 180.688 cv
254.476 180.688 248.757 174.683 243.054 174.683 cv
237.351 174.683 231.632 180.688 231.632 180.688 cv
231.632 180.688 235.979 172.834 233.814 167.315 cv
231.649 161.798 224.574 158.962 224.574 158.962 cv
224.574 158.962 233.311 159.646 237.343 157.106 cv
241.376 154.568 243.054 145.536 243.054 145.536 cv
cp
0 .947082 .892393 0 cmyk
f
243.054 156.114 mo
243.054 156.114 243.978 160.172 245.655 161.384 cv
247.332 162.595 251.47 162.228 251.47 162.228 cv
251.47 162.228 248.186 163.505 247.262 166.032 cv
246.339 168.561 248.256 172.122 248.256 172.122 cv
248.256 172.122 245.651 169.388 243.054 169.388 cv
240.456 169.388 237.853 172.122 237.853 172.122 cv
237.853 172.122 239.831 168.546 238.847 166.032 cv
237.86 163.52 234.638 162.228 234.638 162.228 cv
234.638 162.228 238.616 162.539 240.452 161.384 cv
242.29 160.228 243.054 156.114 243.054 156.114 cv
cp
.00534066 0 .10367 0 cmyk
f
388.672 134.03 mo
388.672 134.03 388.821 137.025 389.969 138.175 cv
391.269 139.477 394.11 139.479 394.11 139.479 cv
394.11 139.479 391.088 139.597 389.936 140.744 cv
388.788 141.892 388.664 144.916 388.664 144.916 cv
388.664 144.916 388.363 141.771 387.366 140.772 cv
386.28 139.683 383.226 139.469 383.226 139.469 cv
383.226 139.469 386.219 139.381 387.4 138.202 cv
388.519 137.084 388.672 134.03 388.672 134.03 cv
cp
0 .947082 .892393 0 cmyk
f
376.791 181.484 mo
376.791 181.484 375.493 184.188 375.955 185.745 cv
376.479 187.509 378.976 188.865 378.976 188.865 cv
378.976 188.865 376.262 187.528 374.701 187.989 cv
373.146 188.451 371.596 191.051 371.596 191.051 cv
371.596 191.051 372.83 188.143 372.432 186.79 cv
371.993 185.313 369.41 183.67 369.41 183.67 cv
369.41 183.67 372.083 185.019 373.683 184.546 cv
375.2 184.096 376.791 181.484 376.791 181.484 cv
cp
f
400.547 181.484 mo
400.547 181.484 401.843 184.188 401.381 185.745 cv
400.859 187.509 398.362 188.865 398.362 188.865 cv
398.362 188.865 401.076 187.528 402.635 187.989 cv
404.191 188.451 405.74 191.051 405.74 191.051 cv
405.74 191.051 404.506 188.143 404.906 186.79 cv
405.343 185.313 407.928 183.67 407.928 183.67 cv
407.928 183.67 405.253 185.019 403.652 184.546 cv
402.137 184.096 400.547 181.484 400.547 181.484 cv
cp
f
364.432 153.161 mo
364.432 153.161 364.397 156.159 365.476 157.376 cv
366.691 158.755 369.528 158.93 369.528 158.93 cv
369.528 158.93 366.505 158.863 365.284 159.938 cv
364.069 161.016 363.764 164.028 363.764 164.028 cv
363.764 164.028 363.653 160.868 362.72 159.812 cv
361.702 158.657 358.665 158.259 358.665 158.259 cv
358.665 158.259 361.658 158.353 362.908 157.247 cv
364.093 156.2 364.432 153.161 364.432 153.161 cv
cp
f
412.906 153.161 mo
412.906 153.161 412.938 156.159 411.862 157.376 cv
410.644 158.755 407.808 158.93 407.808 158.93 cv
407.808 158.93 410.832 158.863 412.051 159.938 cv
413.266 161.016 413.574 164.028 413.574 164.028 cv
413.574 164.028 413.683 160.868 414.618 159.812 cv
415.636 158.657 418.673 158.259 418.673 158.259 cv
418.673 158.259 415.679 158.353 414.428 157.247 cv
413.244 156.2 412.906 153.161 412.906 153.161 cv
cp
f
388.67 136.751 mo
388.67 136.751 388.745 138.249 389.318 138.824 cv
389.968 139.475 391.39 139.477 391.39 139.477 cv
391.39 139.477 389.878 139.534 389.302 140.108 cv
388.728 140.683 388.666 142.195 388.666 142.195 cv
388.666 142.195 388.516 140.622 388.018 140.123 cv
387.474 139.578 385.946 139.471 385.946 139.471 cv
385.946 139.471 387.443 139.427 388.034 138.837 cv
388.593 138.278 388.67 136.751 388.67 136.751 cv
cp
.00534066 0 .10367 0 cmyk
f
375.491 183.875 mo
375.491 183.875 374.843 185.228 375.074 186.005 cv
375.336 186.888 376.584 187.565 376.584 187.565 cv
376.584 187.565 375.229 186.898 374.448 187.128 cv
373.67 187.359 372.895 188.659 372.895 188.659 cv
372.895 188.659 373.512 187.204 373.312 186.528 cv
373.093 185.79 371.803 184.969 371.803 184.969 cv
371.803 184.969 373.139 185.643 373.938 185.406 cv
374.697 185.182 375.491 183.875 375.491 183.875 cv
cp
f
401.847 183.875 mo
401.847 183.875 402.493 185.228 402.264 186.005 cv
402.002 186.888 400.753 187.565 400.753 187.565 cv
400.753 187.565 402.109 186.898 402.89 187.128 cv
403.668 187.359 404.443 188.659 404.443 188.659 cv
404.443 188.659 403.826 187.204 404.026 186.528 cv
404.244 185.79 405.535 184.969 405.535 184.969 cv
405.535 184.969 404.199 185.643 403.399 185.406 cv
402.641 185.182 401.847 183.875 401.847 183.875 cv
cp
f
364.265 155.878 mo
364.265 155.878 364.247 157.376 364.785 157.984 cv
365.395 158.674 366.812 158.762 366.812 158.762 cv
366.812 158.762 365.3 158.728 364.69 159.267 cv
364.084 159.805 363.931 161.311 363.931 161.311 cv
363.931 161.311 363.875 159.731 363.407 159.203 cv
362.898 158.626 361.382 158.427 361.382 158.427 cv
361.382 158.427 362.877 158.474 363.502 157.92 cv
364.096 157.396 364.265 155.878 364.265 155.878 cv
cp
f
413.073 155.878 mo
413.073 155.878 413.089 157.376 412.552 157.984 cv
411.942 158.674 410.524 158.762 410.524 158.762 cv
410.524 158.762 412.036 158.728 412.646 159.267 cv
413.253 159.805 413.407 161.311 413.407 161.311 cv
413.407 161.311 413.461 159.731 413.929 159.203 cv
414.438 158.626 415.956 158.427 415.956 158.427 cv
415.956 158.427 414.46 158.474 413.834 157.92 cv
413.242 157.396 413.073 155.878 413.073 155.878 cv
cp
f
266.178 47.8848 mo
262.014 47.8848 255.529 45.9756 251.866 43.6875 cv
250.543 43.6006 246.203 43.2109 244.168 41.7295 cv
243.509 41.248 li
243.266 40.4717 li
242.387 37.6631 242.485 27.25 243.037 23.248 cv
243.073 22.9883 li
243.161 22.7441 li
243.722 21.2041 245.68 16.6846 247.879 12.7246 cv
252.415 5.21973 260.938 1.23242 263.442 .189453 cv
263.897 0 li
264.39 0 li
268.655 0 275.33 4.53418 277.867 7.07227 cv
278.08 7.28418 li
278.236 7.54297 li
278.81 8.5 280.973 13.4092 281.737 17.543 cv
283.36 19.1807 286.234 22.5537 287.633 25.7773 cv
287.765 26.084 li
287.813 26.4111 li
288.028 27.918 287.924 33.4775 286.961 38.2861 cv
286.813 39.0283 li
286.274 39.5586 li
283.344 42.4492 274.333 46.3818 267.37 47.8115 cv
267.214 47.8418 li
267.059 47.8555 li
266.771 47.874 266.479 47.8848 266.178 47.8848 cv
cp
.619989 .61471 .666712 .546014 cmyk
f
253.625 23.5166 mo
253.733 26.6533 255.979 30.7793 256.497 31.8223 cv
255.662 33.3906 252.919 40.5322 252.101 42.0176 cv
250.949 42.0176 246.336 41.584 244.751 40.4316 cv
244.033 38.1299 244.033 27.751 244.609 23.5713 cv
245.185 21.9873 247.203 17.374 249.364 13.4775 cv
252.116 13.8867 255.057 14.7295 255.892 14.8301 cv
255.475 16.916 253.834 21.2295 253.625 23.5166 cv
cp
.458991 .452705 .537804 .111513 cmyk
f
266.95 46.3379 mo
262.912 46.6309 256.232 44.7168 252.945 42.3984 cv
253.475 40.8867 255.662 33.3906 256.497 31.8223 cv
257.94 30.8633 265.418 26.7695 267.295 26.4619 cv
267.92 30.0078 267.593 45.1113 266.95 46.3379 cv
cp
f
286.327 27.9717 mo
286.469 28.9805 286.404 33.374 285.395 38.4141 cv
282.774 41 275.154 44.7119 268.088 46.1543 cv
268.768 41.9629 267.92 30.0078 267.295 26.4619 cv
269.589 25.9365 280.528 26.5791 286.327 27.9717 cv
cp
.40531 .417792 .488319 .0547494 cmyk
f
280.135 18.6826 mo
281.145 19.5498 284.719 23.3389 286.263 26.8838 cv
280.465 25.4912 269.589 25.9365 267.295 26.4619 cv
265.418 26.7695 259.071 29.5811 257.629 30.54 cv
259.297 26.2686 262.854 20.9785 265.674 19.8262 cv
270.679 18.4756 277.731 18.3154 280.135 18.6826 cv
cp
.307378 .336645 .406714 .00552377 cmyk
f
276.812 8.76953 mo
277.245 9.48633 279.257 13.5205 279.833 17.7002 cv
277.43 17.333 270.543 18.2295 265.674 19.8262 cv
262.854 20.9785 258.466 26.7217 256.797 30.9932 cv
256.28 29.9502 254.262 26.4268 254.154 23.29 cv
254.363 21.0029 255.563 16.4893 255.979 14.4043 cv
258.065 12.6357 264.004 9.29785 265.674 8.78027 cv
269.327 8.25586 275.752 8.56055 276.812 8.76953 cv
cp
.40531 .417792 .488319 .0547494 cmyk
f
276.357 7.86328 mo
275.299 7.6543 269.362 7.81055 265.709 8.33594 cv
264.041 8.85254 257.938 12.9492 255.854 14.7168 cv
255.02 14.6162 252.432 13.3701 249.68 12.9609 cv
253.425 6.76367 260.268 3.2168 264.354 1.51367 cv
267.667 1.51367 273.763 5.26855 276.357 7.86328 cv
cp
.307378 .336645 .406714 .00552377 cmyk
f
274.318 11.8848 mo
274.318 12.3857 273.837 12.791 273.242 12.791 cv
272.647 12.791 272.166 12.3857 272.166 11.8848 cv
272.166 11.3838 272.647 10.9785 273.242 10.9785 cv
273.837 10.9785 274.318 11.3838 274.318 11.8848 cv
cp
.552331 .540124 .606836 .281041 cmyk
f
271.416 10.2988 mo
271.416 10.5186 271.168 10.6953 270.863 10.6953 cv
270.559 10.6953 270.312 10.5186 270.312 10.2988 cv
270.312 10.0801 270.559 9.90234 270.863 9.90234 cv
271.168 9.90234 271.416 10.0801 271.416 10.2988 cv
cp
f
273.299 40.4336 mo
273.299 40.9961 272.792 41.4531 272.166 41.4531 cv
271.541 41.4531 271.033 40.9961 271.033 40.4336 cv
271.033 39.8701 271.541 39.4141 272.166 39.4141 cv
272.792 39.4141 273.299 39.8701 273.299 40.4336 cv
cp
f
274.092 38.4512 mo
274.092 38.7324 273.864 38.9609 273.582 38.9609 cv
273.301 38.9609 273.072 38.7324 273.072 38.4512 cv
273.072 38.1689 273.301 37.9414 273.582 37.9414 cv
273.864 37.9414 274.092 38.1689 274.092 38.4512 cv
cp
f
271.939 34.542 mo
271.939 34.8555 271.61 35.1084 271.203 35.1084 cv
270.796 35.1084 270.467 34.8555 270.467 34.542 cv
270.467 34.2295 270.796 33.9756 271.203 33.9756 cv
271.61 33.9756 271.939 34.2295 271.939 34.542 cv
cp
.147951 .222446 .285252 0 cmyk
f
252.115 29.1611 mo
252.115 29.7559 251.634 30.2373 251.039 30.2373 cv
250.444 30.2373 249.963 29.7559 249.963 29.1611 cv
249.963 28.5664 250.444 28.085 251.039 28.085 cv
251.634 28.085 252.115 28.5664 252.115 29.1611 cv
cp
.552331 .540124 .606836 .281041 cmyk
f
250.303 26.499 mo
250.303 26.9375 249.998 27.292 249.622 27.292 cv
249.247 27.292 248.942 26.9375 248.942 26.499 cv
248.942 26.0605 249.247 25.7061 249.622 25.7061 cv
249.998 25.7061 250.303 26.0605 250.303 26.499 cv
cp
f
257.043 9.05273 mo
257.043 9.39746 256.662 9.67578 256.193 9.67578 cv
255.724 9.67578 255.344 9.39746 255.344 9.05273 cv
255.344 8.70898 255.724 8.42969 256.193 8.42969 cv
256.662 8.42969 257.043 8.70898 257.043 9.05273 cv
cp
.147951 .222446 .285252 0 cmyk
f
255.797 10.9219 mo
255.797 11.1729 255.62 11.375 255.4 11.375 cv
255.181 11.375 255.004 11.1729 255.004 10.9219 cv
255.004 10.6719 255.181 10.4688 255.4 10.4688 cv
255.62 10.4688 255.797 10.6719 255.797 10.9219 cv
cp
f
356.458 17.3555 mo
357.123 17.5254 358.043 18.7754 357.793 19.6904 cv
356.019 21.6904 354.269 18.3809 356.458 17.3555 cv
cp
.0713512 .391394 .581628 0 cmyk
f
356.458 17.3555 mo
354.269 18.3809 356.019 21.6904 357.793 19.6904 cv
356.793 22.3555 349.498 27.7402 348.368 28.2754 cv
348.563 34.4209 348.538 40.416 348.208 43.6904 cv
340.708 48.6904 318.458 48.4404 313.293 42.4404 cv
313.293 33.8408 313.448 18.1357 313.148 11.4658 cv
314.278 18.4053 347.604 17.5752 346.793 9.44043 cv
347.354 11.7607 347.828 16.8906 348.128 22.6055 cv
351.043 21.6055 355.398 17.3154 356.458 17.3555 cv
cp
.213718 .591302 .765743 .0538338 cmyk
f
348.381 28.6436 mo
348.565 34.6582 348.535 40.4785 348.211 43.6885 cv
340.711 48.6885 318.461 48.4385 313.296 42.4385 cv
313.296 40.2285 313.306 37.5537 313.315 34.6787 cv
335.301 34.9736 344.851 23.6387 347.78 17.2637 cv
347.915 18.9287 348.03 20.7334 348.131 22.6035 cv
348.181 22.5889 348.226 22.5684 348.275 22.5488 cv
346.806 24.0684 345.2 26.918 348.381 28.6436 cv
cp
.257847 .648585 .77026 .115328 cmyk
f
315.36 13.9336 mo
315.836 22.2139 316.16 35.8984 315.7 44.2783 cv
314.705 43.7383 313.891 43.1289 313.296 42.4385 cv
313.296 33.8389 313.45 18.1338 313.15 11.4639 cv
313.311 12.4385 314.105 13.2637 315.36 13.9336 cv
cp
.11014 .505272 .674128 .00323491 cmyk
f
346.793 9.44043 mo
347.604 17.5752 314.278 18.4053 313.148 11.4658 cv
313.144 11.2852 313.133 11.1104 313.123 10.9404 cv
317.623 1.77539 344.623 2.94043 346.793 9.44043 cv
cp
.0713512 .391394 .581628 0 cmyk
f
342.003 9.45605 mo
342.582 14.2412 318.744 14.7295 317.937 10.6465 cv
317.933 10.541 317.926 10.4385 317.918 10.3379 cv
321.137 4.94629 340.45 5.63184 342.003 9.45605 cv
cp
.11014 .505272 .674128 .00323491 cmyk
f
337.756 9.44336 mo
338.131 11.7998 322.702 12.04 322.18 10.0293 cv
322.177 9.97754 322.173 9.92676 322.168 9.87793 cv
324.251 7.22266 336.752 7.55957 337.756 9.44336 cv
cp
.0713512 .391394 .581628 0 cmyk
f
347.386 22.6729 mo
346.22 23.5479 345.519 25.2715 346.148 27.2588 cv
346.216 27.4717 346.413 27.6074 346.625 27.6074 cv
346.675 27.6074 346.727 27.5996 346.776 27.584 cv
347.04 27.5 347.186 27.2197 347.102 26.9561 cv
346.583 25.3203 347.199 23.9375 348.161 23.3525 cv
347.386 22.6729 li
cp
.368749 .71725 .855863 .390082 cmyk
f
339.669 15.6387 mo
340.247 17.7764 341.235 21.4482 339.981 25.458 cv
338.3 30.8398 339.813 36.8584 343.747 40.4355 cv
343.843 40.5225 343.963 40.5654 344.083 40.5654 cv
344.219 40.5654 344.354 40.5107 344.453 40.4023 cv
344.639 40.1973 344.624 39.8809 344.42 39.6953 cv
340.768 36.376 339.368 30.7734 340.936 25.7568 cv
342.276 21.4678 341.21 17.5059 340.634 15.3779 cv
339.669 15.6387 li
cp
f
332.86 16.7002 mo
333.452 17.9131 334.625 20.5449 334.625 23.2744 cv
334.625 23.5498 334.849 23.7744 335.125 23.7744 cv
335.401 23.7744 335.625 23.5498 335.625 23.2744 cv
335.625 20.5654 334.575 17.9902 333.922 16.6006 cv
332.86 16.7002 li
cp
f
331.455 39.46 mo
330.743 33.915 329.41 29.6768 327.38 26.5049 cv
324.852 22.5547 323.472 19.3213 323.173 16.6465 cv
322.158 16.5313 li
322.421 19.4404 323.818 22.7949 326.538 27.0439 cv
328.486 30.0889 329.771 34.1924 330.463 39.5879 cv
330.495 39.8398 330.71 40.0244 330.958 40.0244 cv
330.979 40.0244 331.001 40.0225 331.022 40.0195 cv
331.296 39.9844 331.49 39.7344 331.455 39.46 cv
330.743 33.915 331.49 39.7344 331.455 39.46 cv
cp
f
314.063 19.5879 mo
315.382 20.4863 317.614 22.3271 319.792 25.5928 cv
319.889 25.7373 320.047 25.8154 320.209 25.8154 cv
320.304 25.8154 320.4 25.7881 320.485 25.7314 cv
320.716 25.5781 320.777 25.2676 320.624 25.0381 cv
318.014 21.1221 315.297 19.1523 314.054 18.3896 cv
314.063 19.5879 li
cp
f
314.083 26.3164 mo
316.936 27.7041 321.849 34.0225 322.794 43.3242 cv
322.82 43.582 323.038 43.7744 323.291 43.7744 cv
323.308 43.7744 323.325 43.7734 323.343 43.7715 cv
323.617 43.7432 323.817 43.498 323.789 43.2236 cv
322.819 33.6855 317.604 26.5039 314.083 25.2275 cv
314.083 26.3164 li
cp
f
326.976 46.2881 mo
327.115 38.5303 324.644 31.7725 322.878 29.0439 cv
322.729 28.8125 322.419 28.7451 322.187 28.8955 cv
321.955 29.0459 321.889 29.3555 322.038 29.5869 cv
323.666 32.1025 326.09 38.7334 325.978 46.1924 cv
326.976 46.2881 li
cp
f
332.267 46.4492 mo
332.227 45.7285 332.146 44.8604 332.081 44.1729 cv
332.04 43.7285 li
332.015 43.4541 331.778 43.2568 331.496 43.2764 cv
331.222 43.3008 331.019 43.5439 331.044 43.8193 cv
331.085 44.2666 li
331.147 44.9316 331.226 45.7695 331.266 46.459 cv
332.267 46.4492 li
cp
f
340.472 45.6533 mo
340.596 43.7471 340.073 41.0537 338.204 38.3252 cv
336.036 35.1592 335.852 31.3701 335.958 28.082 cv
335.967 27.8057 335.75 27.5752 335.475 27.5654 cv
335.208 27.5518 334.967 27.7725 334.959 28.0498 cv
334.848 31.5 335.048 35.4863 337.379 38.8896 cv
339.1 41.4014 339.642 44.0293 339.454 45.834 cv
340.472 45.6533 li
cp
f
348.048 27.5967 mo
347.778 27.7246 347.61 28 347.619 28.2979 cv
347.818 34.6191 347.771 40.1572 347.496 43.2559 cv
345.828 44.2803 343.381 45.0986 340.472 45.6533 cv
340.036 45.7451 339.844 45.7793 339.454 45.834 cv
337.248 46.1943 334.813 46.4072 332.267 46.4492 cv
331.804 46.4473 331.566 46.459 331.266 46.459 cv
329.784 46.457 328.348 46.3984 326.976 46.2881 cv
326.494 46.2549 326.233 46.2324 325.978 46.1924 cv
320.388 45.6221 315.972 44.165 314.042 42.1514 cv
314.043 40.1689 314.051 37.832 314.061 35.3271 cv
314.07 32.458 314.082 29.3584 314.083 26.3164 cv
314.086 26.0508 314.086 25.5908 314.083 25.2275 cv
314.082 23.2832 314.077 21.3789 314.063 19.5879 cv
314.06 19.1787 314.047 18.667 314.054 18.3896 cv
314.038 16.7734 314.016 15.2715 313.983 13.9473 cv
314.188 14.1045 314.417 14.2588 314.674 14.4111 cv
316.416 15.4434 319.085 16.1445 322.158 16.5313 cv
322.508 16.5771 322.862 16.6035 323.173 16.6465 cv
324.794 16.8105 326.506 16.8916 328.241 16.8916 cv
329.78 16.8916 331.336 16.8262 332.86 16.7002 cv
333.294 16.6826 333.557 16.6299 333.922 16.6006 cv
335.957 16.3916 337.912 16.0703 339.669 15.6387 cv
339.941 15.5791 340.375 15.4736 340.636 15.3838 cv
342.368 14.8955 343.867 14.293 344.992 13.5762 cv
345.652 13.1543 346.148 12.7197 346.523 12.2881 cv
346.855 14.792 347.155 18.3779 347.382 22.6475 cv
347.382 22.6563 347.385 22.6641 347.386 22.6729 cv
347.417 22.9502 347.457 23.3838 348.161 23.3525 cv
348.233 23.3506 348.305 23.3408 348.374 23.3164 cv
350.069 22.7344 352.077 21.2188 353.849 19.8818 cv
354.191 19.623 354.578 19.3311 354.952 19.0586 cv
355.023 19.8379 355.494 20.5049 356.149 20.7354 cv
356.179 20.7451 356.208 20.75 356.237 20.7578 cv
354.076 23.3848 348.891 27.1963 348.048 27.5967 cv
cp
331.076 5.06543 mo
338.669 5.06543 345.06 7.00488 346.046 9.5918 cv
346.107 10.5664 345.485 11.4814 344.185 12.3115 cv
338.358 16.0283 321.163 16.5117 315.438 13.1211 cv
314.516 12.5742 314.001 11.9756 313.896 11.3389 cv
313.892 11.2598 313.889 11.1787 313.885 11.1025 cv
316.256 6.65039 324.592 5.06543 331.076 5.06543 cv
cp
357.075 19.4648 mo
357.04 19.5527 356.995 19.6445 356.944 19.7393 cv
356.798 19.8115 356.639 19.8467 356.48 19.792 cv
356.188 19.6885 355.96 19.3203 355.939 18.915 cv
355.932 18.7529 355.958 18.5107 356.11 18.2754 cv
356.214 18.2158 356.308 18.165 356.38 18.1357 cv
356.688 18.3379 357.164 19.0342 357.075 19.4648 cv
cp
358.084 17.9648 mo
357.777 17.4404 357.219 16.8232 356.568 16.6602 cv
356.509 16.6465 356.433 16.6377 356.371 16.6377 cv
355.66 16.6377 354.739 17.3105 352.886 18.709 cv
351.609 19.6709 350.084 20.8232 348.774 21.5029 cv
348.446 15.7832 347.979 11.3779 347.479 9.32031 cv
347.477 9.30566 347.472 9.29199 347.468 9.27832 cv
347.467 9.27637 347.466 9.27246 347.465 9.26855 cv
347.465 9.26563 347.463 9.2627 347.463 9.25977 cv
346.176 5.39844 338.073 3.64063 331.091 3.64063 cv
323.79 3.64063 315.085 5.48145 312.536 10.6494 cv
312.535 10.6514 312.533 10.6543 312.532 10.6563 cv
312.531 10.6582 312.53 10.6602 312.529 10.6611 cv
312.527 10.667 312.526 10.6729 312.523 10.6777 cv
312.503 10.7236 312.486 10.7715 312.475 10.8213 cv
312.471 10.8398 312.47 10.8574 312.467 10.876 cv
312.463 10.8975 312.456 10.9189 312.455 10.9414 cv
312.441 11.1348 312.448 11.3477 312.48 11.5732 cv
312.706 16.6318 312.668 26.9443 312.638 35.2891 cv
312.628 37.9111 312.619 40.3477 312.619 42.3838 cv
312.619 42.5625 312.684 42.7363 312.8 42.8721 cv
315.983 46.5674 324.473 47.8848 331.356 47.8848 cv
338.729 47.8848 345.168 46.5264 348.58 44.252 cv
348.767 44.1279 348.887 43.9277 348.908 43.7051 cv
349.213 40.7061 349.277 35.1162 349.086 28.6914 cv
351.086 27.4531 357.403 22.6748 358.416 19.9736 cv
358.425 19.9521 358.432 19.9307 358.438 19.9072 cv
358.599 19.3174 358.474 18.6289 358.084 17.9648 cv
cp
f
201.081 238.895 mo
197.512 238.62 193.921 229.81 202.732 227.056 cv
211.543 224.3 216.5 232.286 216.775 234.489 cv
217.051 236.691 216.227 239.445 211.818 239.721 cv
211.543 244.127 207.415 246.605 204.66 246.055 cv
201.907 245.504 199.704 243.025 201.081 238.895 cv
cp
.0787976 .126101 .151522 0 cmyk
f
212.646 259.272 mo
209.064 259.546 206.037 262.022 206.037 264.778 cv
201.356 264.778 194.747 271.388 199.979 281.024 cv
200.255 277.444 203.834 272.212 208.791 272.487 cv
207.965 279.097 221.181 286.532 225.862 276.067 cv
231.095 278.82 234.992 271.76 233.778 264.985 cv
232.124 255.761 219.804 247.982 212.646 259.272 cv
cp
f
192.682 261.474 mo
188.964 259.408 185.453 258.995 183.389 259.614 cv
185.248 263.333 183.389 269.733 178.432 269.114 cv
173.475 268.495 169.552 264.571 172.235 258.169 cv
165.834 256.517 163.771 262.093 163.563 264.778 cv
163.357 267.462 163.563 273.658 168.313 277.994 cv
163.563 278.407 154.683 271.386 156.335 266.017 cv
149.727 261.474 153.236 255.072 157.987 254.04 cv
153.649 248.257 161.498 239.996 170.585 244.54 cv
174.921 241.235 181.323 246.604 180.704 250.528 cv
185.453 249.495 192.476 257.343 192.682 261.474 cv
cp
f
138.988 278.2 mo
137.454 278.814 136.716 281.919 140.641 281.505 cv
140.021 285.636 147.868 285.015 147.868 279.026 cv
149.934 273.658 144.771 271.386 142.293 272.419 cv
139.814 273.452 138.368 276.548 138.988 278.2 cv
cp
f
189.79 289.353 mo
189.648 292.884 186.074 299.265 177.192 298.232 cv
178.432 292.657 174.508 284.604 164.389 287.287 cv
160.578 284.838 152.718 288.896 151.123 294.751 cv
149.98 298.938 150.142 308.146 161.085 308.352 cv
154.889 312.896 164.184 323.015 173.682 314.341 cv
179.878 317.645 187.519 310.624 186.074 306.081 cv
190.203 302.983 193.3 297.406 189.79 289.353 cv
cp
f
207.344 300.505 mo
211.715 301.379 213.127 303.81 213.54 306.288 cv
217.463 307.731 220.147 310.624 216.843 315.993 cv
224.072 316.613 224.69 325.906 219.321 327.558 cv
213.953 329.21 205.278 331.068 202.182 324.254 cv
194.747 322.808 192.269 311.862 200.942 309.798 cv
199.29 305.048 204.452 304.016 207.137 305.048 cv
209.822 306.081 210.028 303.396 207.344 300.505 cv
cp
f
227.788 291.005 mo
225.517 287.493 220.147 288.319 219.528 292.038 cv
218.908 295.754 220.147 296.375 222.213 296.788 cv
221.594 300.917 227.788 301.537 229.854 298.646 cv
231.919 295.754 232.332 291.212 227.788 291.005 cv
cp
f
213.195 261.198 mo
209.617 261.198 207.552 266.429 211.27 267.944 cv
214.985 269.458 216.915 267.806 218.705 266.568 cv
220.63 269.458 229.855 267.53 230.406 263.401 cv
230.955 259.271 226.276 255.968 222.421 256.243 cv
218.564 256.517 215.261 257.757 213.195 261.198 cv
cp
0 0 0 0 cmyk
f
219.805 270.284 mo
217.429 269.92 214.988 270.562 214.85 272.487 cv
214.71 274.415 220.08 275.931 221.457 274.415 cv
222.834 272.901 221.597 270.56 219.805 270.284 cv
cp
f
205.9 228.706 mo
203.418 228.706 198.877 230.634 200.805 233.526 cv
202.732 236.417 207.001 237.106 209.342 234.903 cv
211.683 232.7 211.546 228.706 205.9 228.706 cv
cp
f
208.516 238.068 mo
207.027 238.813 205.9 238.757 204.66 238.757 cv
203.422 238.757 203.225 241.46 205.487 241.648 cv
207.139 241.786 208.927 239.583 208.516 238.068 cv
cp
f
179.466 259.821 mo
178.104 258.875 175.338 259.272 175.199 261.198 cv
175.06 263.126 176.023 265.603 177.951 265.603 cv
179.879 265.603 182.633 262.022 179.466 259.821 cv
cp
f
171.895 247.294 mo
173.066 246.806 175.613 247.017 176.025 248.669 cv
176.299 249.771 175.886 251.562 174.786 251.837 cv
173.519 252.154 172.032 252.249 169.829 250.872 cv
169.967 252.663 167.075 255.554 163.771 254.728 cv
160.467 253.901 158.939 249.073 162.67 246.741 cv
164.873 245.366 168.865 245.091 171.895 247.294 cv
cp
f
158.539 257.205 mo
156.613 257.48 155.097 259.133 156.336 261.061 cv
157.575 262.987 159.092 262.3 159.641 261.198 cv
160.191 260.097 160.466 256.93 158.539 257.205 cv
cp
f
144.909 274.966 mo
143.51 274.067 140.365 276.617 142.294 277.994 cv
144.222 279.372 148.763 277.444 144.909 274.966 cv
cp
f
168.039 298.784 mo
172.168 299.335 174.646 294.378 172.581 291.624 cv
170.516 288.87 167.214 287.908 163.771 289.285 cv
161.292 287.771 159.113 288.324 157.3 289.972 cv
155.787 291.349 155.104 294.519 158.679 294.517 cv
160.742 294.513 162.532 293.411 163.083 292.725 cv
162.944 294.79 160.604 296.72 158.676 296.444 cv
156.474 300.022 163.908 302.363 168.039 298.784 cv
cp
f
163.908 310.761 mo
160.054 313.376 163.908 318.47 171.479 313.376 cv
168.588 314.064 164.598 312.001 163.908 310.761 cv
cp
f
176.574 303.464 mo
173.407 301.812 169.827 303.464 169.827 306.354 cv
169.827 309.247 174.233 311.175 177.538 310.761 cv
180.842 310.349 181.393 306.632 180.43 306.081 cv
183.045 305.528 181.956 303.06 180.842 302.501 cv
179.466 301.812 177.127 301.812 176.574 303.464 cv
cp
f
218.151 318.608 mo
215.53 317.802 210.03 318.335 211.818 321.362 cv
213.608 324.392 218.154 324.254 219.529 322.602 cv
220.906 320.949 219.941 319.159 218.151 318.608 cv
cp
f
226 291.763 mo
224.759 291.196 221.456 290.938 222.283 292.864 cv
223.108 294.79 225.31 295.478 226.824 295.203 cv
228.341 294.929 227.513 292.45 226 291.763 cv
cp
f
226.413 296.718 mo
225.327 296.384 224.213 297.406 225.313 297.957 cv
226.413 298.508 228.201 297.269 226.413 296.718 cv
cp
f
207.276 307.595 mo
204.66 306.081 201.769 309.796 204.247 310.899 cv
200.668 311.45 197.228 315.717 201.907 317.369 cv
206.588 319.021 211.821 316.542 211.27 315.028 cv
210.717 313.515 209.617 312.688 207.552 313.238 cv
208.791 310.899 211.681 311.311 213.195 312.963 cv
216.64 311.311 215.676 309.107 212.922 308.833 cv
212.096 306.63 208.238 306.216 207.276 307.595 cv
cp
f
208.516 320.536 mo
207.282 319.798 203.696 321.36 206.45 322.462 cv
209.204 323.563 211.27 322.188 208.516 320.536 cv
cp
f
228.614 268.701 mo
226.748 268.327 225.31 270.767 226.962 271.593 cv
228.614 272.419 231.711 269.321 228.614 268.701 cv
cp
f
181.117 253.007 mo
179.19 252.235 175.54 254.659 178.226 255.897 cv
180.91 257.136 185.248 254.659 181.117 253.007 cv
cp
f
394.064 260.645 mo
389.562 263.796 388.437 271.001 393.613 273.026 cv
398.791 275.053 402.395 271.45 402.168 266.948 cv
405.547 267.849 406.445 263.796 405.994 261.995 cv
411.174 261.319 410.275 251.864 403.971 250.063 cv
397.666 248.263 388.886 252.765 394.064 260.645 cv
cp
.0787976 .126101 .151522 0 cmyk
f
306.081 252.261 mo
307.206 245.732 302.028 240.778 293.248 248.208 cv
287.169 246.183 283.343 263.293 298.651 262.167 cv
301.804 266.218 308.331 264.418 309.682 260.815 cv
311.034 257.214 310.357 252.261 306.081 252.261 cv
cp
f
351.438 223.214 mo
349.824 225.903 341.758 228.616 341.308 220.286 cv
335.904 221.411 337.704 211.28 343.558 211.28 cv
349.411 211.28 351.438 214.659 352.112 216.909 cv
355.039 215.558 357.291 219.837 356.39 221.411 cv
355.49 222.987 353.239 224.339 351.438 223.214 cv
cp
f
309.28 320.896 mo
313.782 317.519 310.63 308.964 304.552 308.738 cv
298.473 308.515 295.097 313.241 296.447 317.069 cv
292.396 319.995 294.195 327.2 301.625 326.073 cv
303.201 330.353 307.253 330.353 309.729 328.55 cv
312.206 326.75 312.432 321.796 309.28 320.896 cv
cp
f
392.712 319.396 mo
394.064 314.217 387.31 309.714 381.682 313.991 cv
376.054 318.269 380.105 323.673 383.032 325.022 cv
382.357 330.425 388.66 332.228 390.687 328.851 cv
394.29 329.526 398.568 322.097 392.712 319.396 cv
cp
f
344.233 213.083 mo
341.749 212.979 340.182 219.16 344.908 218.71 cv
349.637 218.261 349.637 213.307 344.233 213.083 cv
cp
0 0 0 0 cmyk
f
401.043 253.665 mo
398.934 251.978 392.712 255.692 397.217 257.943 cv
401.717 260.193 406.672 258.167 401.043 253.665 cv
cp
f
400.818 260.193 mo
399.109 259.625 395.864 261.995 398.342 262.896 cv
400.818 263.796 403.52 261.095 400.818 260.193 cv
cp
f
300.452 248.659 mo
298.271 247.401 292.123 251.36 295.949 253.612 cv
299.776 255.863 306.306 252.036 300.452 248.659 cv
cp
f
304.279 254.962 mo
302.266 254.645 298.876 258.113 301.353 258.79 cv
303.83 259.466 308.557 255.638 304.279 254.962 cv
cp
f
294.148 254.962 mo
292.572 254.737 290.547 257.663 293.022 258.113 cv
295.499 258.564 297.301 255.412 294.148 254.962 cv
cp
f
388.437 315.342 mo
385.212 314.132 381.456 316.918 384.608 319.619 cv
387.761 322.321 389.336 321.421 389.787 319.619 cv
390.236 317.819 390.236 316.017 388.437 315.342 cv
cp
f
305.228 312.341 mo
302.864 311.47 298.023 313.016 301.176 317.519 cv
298.473 317.97 299.825 320.896 301.625 321.12 cv
303.426 321.347 303.877 319.771 303.877 318.869 cv
307.253 318.646 309.505 313.917 305.228 312.341 cv
cp
f
306.128 322.021 mo
304.807 321.661 303.651 324.499 305.453 324.948 cv
307.253 325.397 308.604 322.696 306.128 322.021 cv
cp
f
348.061 219.837 mo
346.736 219.571 345.585 220.962 346.935 221.638 cv
348.286 222.313 350.313 220.286 348.061 219.837 cv
cp
f
391.587 322.546 mo
389.498 321.218 385.959 323.897 388.66 325.249 cv
391.363 326.599 394.064 324.122 391.587 322.546 cv
cp
f
56.2158 251.217 mo
55.4697 240.804 40.4053 232.713 26.8291 240.804 cv
15.1123 247.786 14.9307 263.12 18.6494 266.468 cv
3.76953 269.814 .0507813 295.853 21.623 299.569 cv
21.251 318.54 45.4297 328.954 58.8203 314.448 cv
64.3994 321.517 88.9473 320.028 86.7148 299.942 cv
100.476 293.62 97.499 273.535 87.0859 270.931 cv
95.6416 257.54 76.6738 235.596 56.2158 251.217 cv
cp
.0787976 .126101 .151522 0 cmyk
f
40.0332 246.939 mo
37.3164 246.284 29.0605 251.218 35.0117 254.565 cv
40.9639 257.913 43.1934 254.938 44.4971 253.263 cv
45.7988 251.591 45.4238 248.241 40.0332 246.939 cv
cp
0 0 0 0 cmyk
f
57.1426 270.372 mo
53.6182 268.524 49.832 269.306 47.2861 271.489 cv
44.6826 273.72 44.3096 276.694 46.7275 279.3 cv
44.3105 279.114 42.2646 282.274 44.3105 284.692 cv
46.7764 287.604 51.751 287.108 51.751 283.948 cv
56.2129 284.505 59.002 283.021 60.4902 280.229 cv
61.9785 277.44 61.0498 272.419 57.1426 270.372 cv
cp
f
21.0635 275.21 mo
18.1416 274.625 13.0654 280.601 17.7168 282.646 cv
22.3672 284.692 24.04 282.089 24.04 280.415 cv
24.04 278.741 23.8525 275.767 21.0635 275.21 cv
cp
f
23.8525 285.251 mo
22.5547 285.05 20.6934 288.042 23.1104 288.599 cv
25.5273 289.156 26.2715 285.624 23.8525 285.251 cv
cp
f
88.0146 278.927 mo
85.7061 277.104 82.8096 278.927 84.8545 281.158 cv
86.8984 283.391 91.5479 281.716 88.0146 278.927 cv
cp
f
67.9287 299.386 mo
71.5508 300.896 76.2969 299.012 76.2969 296.595 cv
76.2969 294.178 73.6953 292.876 72.0225 292.876 cv
73.8818 291.015 69.2334 290.272 68.1162 290.831 cv
67.001 291.389 66.626 293.062 67.9287 293.62 cv
64.0234 295.665 65.6992 298.454 67.9287 299.386 cv
cp
f
78.7188 258.47 mo
76.6211 256.696 72.5791 256.426 72.207 258.843 cv
71.835 261.26 76.4863 267.025 78.9033 265.351 cv
81.3184 263.679 81.1367 260.516 78.7188 258.47 cv
cp
f
41.1484 275.767 mo
39.4063 275.124 37.9883 277.999 39.8477 278.557 cv
41.7061 279.114 44.6816 277.069 41.1484 275.767 cv
cp
f
86.7139 299.942 mo
88.9463 320.028 64.3965 321.522 58.8174 314.448 cv
45.4268 328.954 21.2588 318.532 21.6143 299.563 cv
6.01563 296.885 3.65137 282.515 9.16211 273.519 cv
5.5918 283.807 15.79 298.068 31.6572 291.952 cv
29.4268 288.605 28.9561 283.204 32.8838 279.009 cv
32.3047 281.82 34.2471 289.789 42.6367 292.132 cv
48.9531 293.896 60.3115 291.573 61.6074 283.473 cv
63.6602 289.343 60.1123 295.101 56.5859 296.327 cv
54.7334 308.491 80.2861 313.063 81.9824 295.21 cv
81.1328 290.747 77.9658 287.288 71.6475 287.937 cv
78.9033 285.058 83.5439 286.931 85.8652 289.052 cv
88.9883 290.257 96.2646 287.958 95.0137 279.077 cv
97.4697 286.216 95.5293 295.905 86.7139 299.942 cv
cp
38.9111 309.248 mo
47.1016 311.48 55.8477 299.563 49.8906 300.679 cv
44.5791 301.684 39.4678 300.12 37.2373 299.006 cv
35.0049 297.89 30.7432 307.017 38.9111 309.248 cv
cp
51.7432 307.573 mo
49.6006 307.218 45.248 310.364 48.5957 311.28 cv
51.9424 312.218 55.0908 308.132 51.7432 307.573 cv
cp
.155856 .238132 .228214 0 cmyk
f
56.207 251.224 mo
76.6709 235.603 95.6406 257.54 87.0918 270.931 cv
92.5146 272.315 95.9512 278.429 95.998 284.879 cv
94.123 274.01 85.8203 273.251 79.6396 275.015 cv
87.0918 269.814 88.8125 260.844 81.1328 254.571 cv
76.2461 250.577 63.7051 249.998 59.7998 258.389 cv
66.6719 260.62 68.6816 271.109 66.4492 275.394 cv
66.6279 268.7 59.7549 264.415 54.3535 263.856 cv
48.9531 263.299 42.6367 264.793 39.4678 272.604 cv
37.6162 263.679 42.415 257.451 51.6963 256.692 cv
51.9004 249.462 46.5635 242.925 38.3535 243.771 cv
22.6855 245.399 18.0889 260.709 28.3105 272.784 cv
25.209 272.179 20.7002 269.993 19.7627 267.962 cv
17.4424 268.678 4.34082 274.345 8.02539 290.211 cv
3.71582 281.13 8.6709 268.7 18.6465 266.468 cv
14.9199 263.12 15.1211 247.788 26.8369 240.804 cv
40.4053 232.725 55.4697 240.804 56.207 251.224 cv
cp
0 0 0 0 cmyk
f
75.708 47.6299 mo
75.4941 5.12598 li
122.667 5.3623 li
122.945 47.8848 li
75.708 47.6299 li
cp
.403113 .69366 .90634 .453223 cmyk
f
116.836 29.2588 mo
116.836 41.5947 li
114.637 41.5947 li
114.637 29.2588 li
116.836 29.2588 li
cp
.27219 .659205 .853513 .148928 cmyk
f
121.801 6.22949 mo
121.801 46.7441 li
111.471 46.7441 li
111.471 46.5947 li
111.471 6.25879 li
111.471 6.22949 li
121.801 6.22949 li
cp
119.762 41.5947 mo
119.762 29.2588 li
119.762 23.2588 li
119.762 10.9248 li
118.501 10.9248 li
116.836 10.9248 li
114.637 10.9248 li
114.637 23.2588 li
114.637 29.2588 li
114.637 41.5947 li
116.836 41.5947 li
118.501 41.5947 li
119.762 41.5947 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
111.471 6.25879 mo
121.801 6.22949 li
121.801 7.41699 li
111.471 7.41699 li
111.471 6.25879 li
cp
.132815 .482032 .808133 .00628672 cmyk
f
119.762 29.2588 mo
119.762 41.5947 li
118.501 41.5947 li
118.501 29.2588 li
119.762 29.2588 li
cp
.27219 .659205 .853513 .148928 cmyk
f
119.762 23.2588 mo
119.762 29.2588 li
118.501 29.2588 li
118.501 23.2588 li
119.762 23.2588 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
119.762 10.9248 mo
119.762 23.2588 li
118.501 23.2588 li
118.501 10.9248 li
119.762 10.9248 li
cp
.27219 .659205 .853513 .148928 cmyk
f
116.836 10.9248 mo
116.836 23.2588 li
116.836 29.2588 li
116.836 41.5947 li
118.501 41.5947 li
118.501 29.2588 li
118.501 23.2588 li
118.501 10.9248 li
116.836 10.9248 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
116.836 23.2588 mo
116.836 29.2588 li
114.637 29.2588 li
114.637 23.2588 li
116.836 23.2588 li
cp
f
116.836 10.9248 mo
116.836 23.2588 li
114.637 23.2588 li
114.637 10.9248 li
116.836 10.9248 li
cp
.27219 .659205 .853513 .148928 cmyk
f
106.137 41.5947 mo
106.137 29.2588 li
106.137 23.2588 li
106.137 10.9248 li
96.6372 10.9248 li
90.6372 10.9248 li
81.1372 10.9248 li
81.1372 23.2588 li
81.1372 29.2588 li
81.1372 41.5947 li
90.6372 41.5947 li
96.6372 41.5947 li
106.137 41.5947 li
cp
111.471 46.5947 mo
111.471 46.7441 li
76.5962 46.7441 li
76.5962 6.22949 li
111.471 6.22949 li
111.471 6.25879 li
111.471 46.5947 li
cp
.132815 .482032 .808133 .00628672 cmyk
f
81.1372 23.2588 mo
81.1372 10.4531 li
80.0122 10.4531 li
80.0122 24.3838 li
80.0122 30.3838 li
80.0122 42.7197 li
89.5122 42.7197 li
95.5122 42.7197 li
106.52 42.7197 li
106.52 41.5947 li
96.6372 41.5947 li
90.6372 41.5947 li
81.1372 41.5947 li
81.1372 29.2588 li
81.1372 23.2588 li
cp
0 .397467 .722835 0 cmyk
f
76.5962 6.22949 mo
76.5962 7.35449 li
110.346 7.35449 li
110.346 7.38379 li
110.346 46.7441 li
111.471 46.7441 li
111.471 46.5947 li
111.471 6.25879 li
111.471 6.22949 li
76.5962 6.22949 li
cp
f
106.137 29.2588 mo
106.137 41.5947 li
96.6372 41.5947 li
96.6372 29.2588 li
106.137 29.2588 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
106.137 23.2588 mo
106.137 29.2588 li
96.6372 29.2588 li
96.6372 23.2588 li
106.137 23.2588 li
cp
.132815 .482032 .808133 .00628672 cmyk
f
106.137 10.9248 mo
106.137 23.2588 li
96.6372 23.2588 li
96.6372 10.9248 li
106.137 10.9248 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
90.6372 10.9248 mo
90.6372 23.2588 li
90.6372 29.2588 li
90.6372 41.5947 li
96.6372 41.5947 li
96.6372 29.2588 li
96.6372 23.2588 li
96.6372 10.9248 li
90.6372 10.9248 li
cp
.132815 .482032 .808133 .00628672 cmyk
f
95.7192 10.9248 mo
95.7192 23.2588 li
95.7192 29.2588 li
95.7192 41.5947 li
96.6372 41.5947 li
96.6372 29.2588 li
96.6372 23.2588 li
96.6372 10.9248 li
95.7192 10.9248 li
cp
0 .397467 .722835 0 cmyk
f
90.6372 29.2588 mo
90.6372 41.5947 li
81.1372 41.5947 li
81.1372 29.2588 li
90.6372 29.2588 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
90.6372 23.2588 mo
90.6372 29.2588 li
81.1372 29.2588 li
81.1372 23.2588 li
90.6372 23.2588 li
cp
.132815 .482032 .808133 .00628672 cmyk
f
106.137 23.2393 mo
106.137 24.1963 li
96.6372 24.1963 li
96.6372 23.2393 li
106.137 23.2393 li
cp
0 .397467 .722835 0 cmyk
f
90.6372 23.2393 mo
90.6372 24.1963 li
81.1372 24.1963 li
81.1372 23.2393 li
90.6372 23.2393 li
cp
f
90.6372 10.9248 mo
90.6372 23.2588 li
81.1372 23.2588 li
81.1372 10.9248 li
90.6372 10.9248 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
111.969 46.1592 mo
111.725 6.65137 li
121.428 6.60254 li
121.17 46.1113 li
111.969 46.1592 li
cp
111.219 6.65332 mo
110.975 46.165 li
76.9927 46.3467 li
77.1919 6.82324 li
111.219 6.65332 li
cp
122.173 6.22949 mo
122.17 5.85938 li
121.801 5.85742 li
76.5972 5.63184 li
75.9966 5.62891 li
75.9995 6.22949 li
76.2036 46.7432 li
76.2056 47.1338 li
76.5972 47.1367 li
122.442 47.3818 li
122.173 6.22949 li
cp
.403113 .69366 .90634 .453223 cmyk
f
97.0542 41.2529 mo
97.0073 29.7236 li
105.723 29.7959 li
105.756 41.2129 li
97.0542 41.2529 li
cp
90.27 29.6689 mo
90.2231 41.2852 li
81.4048 41.3271 li
81.4849 29.5967 li
90.27 29.6689 li
cp
90.2944 23.708 mo
90.2739 28.8486 li
81.4888 28.9219 li
81.5239 23.7959 li
90.2944 23.708 li
cp
90.2983 22.8115 mo
81.5317 22.7236 li
81.6079 11.3984 li
90.3442 11.3984 li
90.2983 22.8115 li
cp
96.2231 41.2568 mo
91.0542 41.2813 li
90.9321 11.3975 li
96.3442 11.3975 li
96.2231 41.2568 li
cp
96.979 22.8779 mo
96.9321 11.3975 li
105.669 11.3965 li
105.704 22.9648 li
96.979 22.8779 li
cp
96.9829 23.6416 mo
105.705 23.5537 li
105.719 28.7227 li
97.0034 28.7939 li
96.9829 23.6416 li
cp
80.6665 10.9258 mo
80.8735 41.5928 li
80.8755 41.8555 li
81.1392 41.8564 li
106.52 41.9756 li
106.61 10.9258 li
106.611 10.4551 li
106.139 10.4551 li
81.1392 10.4531 li
80.6626 10.4531 li
80.6665 10.9258 li
cp
f
118.766 28.958 mo
118.75 23.4639 li
119.499 23.4424 li
119.489 28.9404 li
118.766 28.958 li
cp
118.768 29.5605 mo
119.487 29.5781 li
119.465 41.2939 li
118.802 41.2939 li
118.768 29.5605 li
cp
117.046 11.1299 mo
118.293 11.1475 li
118.241 28.9707 li
118.239 28.9707 li
118.235 29.127 118.227 29.2822 118.233 29.4385 cv
118.235 29.4736 118.237 29.5078 118.239 29.542 cv
118.205 41.2939 li
117.135 41.2939 li
117.046 11.1299 li
cp
116.571 29.5078 mo
116.538 41.2939 li
114.936 41.293 li
114.885 29.4678 li
116.571 29.5078 li
cp
116.588 23.5273 mo
116.573 29.0107 li
114.883 29.0518 li
114.86 23.5781 li
116.588 23.5273 li
cp
116.59 22.9922 mo
114.858 22.9404 li
114.807 11.0967 li
116.625 11.123 li
116.59 22.9922 li
cp
119.499 23.0771 mo
118.749 23.0547 li
118.713 11.1533 li
119.521 11.165 li
119.499 23.0771 li
cp
120.006 10.6807 mo
114.638 10.7588 li
114.471 10.7607 li
114.47 10.9268 li
114.338 41.5928 li
114.336 41.8936 li
114.638 41.8926 li
119.764 41.8916 li
120.063 41.8916 li
120.063 41.5928 li
120.006 10.6807 li
cp
f
.277344 5.3623 mo
47.4507 5.12598 li
47.2378 47.6299 li
0 47.8848 li
.277344 5.3623 li
cp
f
6.10791 29.2588 mo
6.10791 41.5947 li
8.30859 41.5947 li
8.30859 29.2588 li
6.10791 29.2588 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
11.4736 6.22949 mo
11.4736 6.25879 li
11.4736 46.5947 li
11.4736 46.7441 li
1.14307 46.7441 li
1.14307 6.22949 li
11.4736 6.22949 li
cp
4.44336 41.5947 mo
6.10791 41.5947 li
8.30859 41.5947 li
8.30859 29.2588 li
8.30859 23.2588 li
8.30859 10.9248 li
6.10791 10.9248 li
4.44336 10.9248 li
3.18359 10.9248 li
3.18359 23.2588 li
3.18359 29.2588 li
3.18359 41.5947 li
4.44336 41.5947 li
cp
.132815 .482032 .808133 .00628672 cmyk
f
11.4736 7.41699 mo
1.14307 7.41699 li
1.14307 6.22949 li
11.4736 6.25879 li
11.4736 7.41699 li
cp
0 .397467 .722835 0 cmyk
f
3.18359 29.2588 mo
3.18359 41.5947 li
4.44336 41.5947 li
4.44336 29.2588 li
3.18359 29.2588 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
3.18359 23.2588 mo
3.18359 29.2588 li
4.44336 29.2588 li
4.44336 23.2588 li
3.18359 23.2588 li
cp
.132815 .482032 .808133 .00628672 cmyk
f
3.18359 10.9248 mo
3.18359 23.2588 li
4.44336 23.2588 li
4.44336 10.9248 li
3.18359 10.9248 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
6.10791 10.9248 mo
6.10791 23.2588 li
6.10791 29.2588 li
6.10791 41.5947 li
4.44336 41.5947 li
4.44336 29.2588 li
4.44336 23.2588 li
4.44336 10.9248 li
6.10791 10.9248 li
cp
.132815 .482032 .808133 .00628672 cmyk
f
6.10791 23.2588 mo
6.10791 29.2588 li
8.30859 29.2588 li
8.30859 23.2588 li
6.10791 23.2588 li
cp
f
6.10791 10.9248 mo
6.10791 23.2588 li
8.30859 23.2588 li
8.30859 10.9248 li
6.10791 10.9248 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
26.3086 41.5947 mo
32.3086 41.5947 li
41.8086 41.5947 li
41.8086 29.2588 li
41.8086 23.2588 li
41.8086 10.9248 li
32.3086 10.9248 li
26.3086 10.9248 li
16.8086 10.9248 li
16.8086 23.2588 li
16.8086 29.2588 li
16.8086 41.5947 li
26.3086 41.5947 li
cp
11.4736 6.25879 mo
11.4736 6.22949 li
46.3486 6.22949 li
46.3486 46.7441 li
11.4736 46.7441 li
11.4736 46.5947 li
11.4736 6.25879 li
cp
f
41.8086 23.2588 mo
41.8086 10.4531 li
42.9336 10.4531 li
42.9336 24.3838 li
42.9336 30.3838 li
42.9336 42.7197 li
33.4336 42.7197 li
27.4336 42.7197 li
16.4258 42.7197 li
16.4258 41.5947 li
26.3086 41.5947 li
32.3086 41.5947 li
41.8086 41.5947 li
41.8086 29.2588 li
41.8086 23.2588 li
cp
.132815 .482032 .808133 .00628672 cmyk
f
46.3486 6.22949 mo
46.3486 7.35449 li
12.5986 7.35449 li
12.5986 7.38379 li
12.5986 46.7441 li
11.4736 46.7441 li
11.4736 46.5947 li
11.4736 6.25879 li
11.4736 6.22949 li
46.3486 6.22949 li
cp
f
16.8086 29.2588 mo
16.8086 41.5947 li
26.3086 41.5947 li
26.3086 29.2588 li
16.8086 29.2588 li
cp
.27219 .659205 .853513 .148928 cmyk
f
16.8086 23.2588 mo
16.8086 29.2588 li
26.3086 29.2588 li
26.3086 23.2588 li
16.8086 23.2588 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
16.8086 10.9248 mo
16.8086 23.2588 li
26.3086 23.2588 li
26.3086 10.9248 li
16.8086 10.9248 li
cp
.27219 .659205 .853513 .148928 cmyk
f
32.3086 10.9248 mo
32.3086 23.2588 li
32.3086 29.2588 li
32.3086 41.5947 li
26.3086 41.5947 li
26.3086 29.2588 li
26.3086 23.2588 li
26.3086 10.9248 li
32.3086 10.9248 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
27.2256 10.9248 mo
27.2256 23.2588 li
27.2256 29.2588 li
27.2256 41.5947 li
26.3086 41.5947 li
26.3086 29.2588 li
26.3086 23.2588 li
26.3086 10.9248 li
27.2256 10.9248 li
cp
.132815 .482032 .808133 .00628672 cmyk
f
32.3086 29.2588 mo
32.3086 41.5947 li
41.8086 41.5947 li
41.8086 29.2588 li
32.3086 29.2588 li
cp
.27219 .659205 .853513 .148928 cmyk
f
32.3086 23.2588 mo
32.3086 29.2588 li
41.8086 29.2588 li
41.8086 23.2588 li
32.3086 23.2588 li
cp
.212711 .587671 .835752 .0579232 cmyk
f
16.8086 23.2393 mo
16.8086 24.1963 li
26.3086 24.1963 li
26.3086 23.2393 li
16.8086 23.2393 li
cp
.132815 .482032 .808133 .00628672 cmyk
f
32.3086 23.2393 mo
32.3086 24.1963 li
41.8086 24.1963 li
41.8086 23.2393 li
32.3086 23.2393 li
cp
f
32.3086 10.9248 mo
32.3086 23.2588 li
41.8086 23.2588 li
41.8086 10.9248 li
32.3086 10.9248 li
cp
.27219 .659205 .853513 .148928 cmyk
f
1.77441 46.1113 mo
1.51758 6.60254 li
11.2197 6.65137 li
10.9756 46.1592 li
1.77441 46.1113 li
cp
45.7529 6.82324 mo
45.9521 46.3467 li
11.9702 46.165 li
11.7261 6.65332 li
45.7529 6.82324 li
cp
.503418 47.3818 mo
46.3477 47.1367 li
46.7402 47.1338 li
46.7422 46.7432 li
46.9453 6.22949 li
46.9482 5.62891 li
46.3477 5.63184 li
1.14307 5.85742 li
.773926 5.85938 li
.771484 6.22949 li
.503418 47.3818 li
cp
.403113 .69366 .90634 .453223 cmyk
f
17.1895 41.2129 mo
17.2227 29.7959 li
25.9375 29.7236 li
25.8906 41.2529 li
17.1895 41.2129 li
cp
41.46 29.5967 mo
41.54 41.3271 li
32.7227 41.2852 li
32.6748 29.6689 li
41.46 29.5967 li
cp
41.4209 23.7959 mo
41.4561 28.9219 li
32.6719 28.8486 li
32.6504 23.708 li
41.4209 23.7959 li
cp
32.6006 11.3984 mo
41.3364 11.3984 li
41.4141 22.7236 li
32.6465 22.8115 li
32.6006 11.3984 li
cp
26.6006 11.3975 mo
32.0127 11.3975 li
31.8906 41.2813 li
26.7217 41.2568 li
26.6006 11.3975 li
cp
17.2422 22.9648 mo
17.2754 11.3965 li
26.0127 11.3975 li
25.9653 22.8779 li
17.2422 22.9648 li
cp
25.9414 28.7939 mo
17.2256 28.7227 li
17.2402 23.5537 li
25.9629 23.6416 li
25.9414 28.7939 li
cp
42.2822 10.4531 mo
41.8066 10.4531 li
16.8066 10.4551 li
16.334 10.4551 li
16.3359 10.9258 li
16.4258 41.9756 li
41.8066 41.8564 li
42.0693 41.8555 li
42.0713 41.5928 li
42.2793 10.9258 li
42.2822 10.4531 li
cp
f
3.45703 28.9404 mo
3.44629 23.4424 li
4.19482 23.4639 li
4.17871 28.958 li
3.45703 28.9404 li
cp
4.14258 41.2939 mo
3.47949 41.2939 li
3.45752 29.5781 li
4.17676 29.5605 li
4.14258 41.2939 li
cp
5.81055 41.2939 mo
4.74023 41.2939 li
4.70605 29.542 li
4.70801 29.5078 4.71094 29.4736 4.71191 29.4385 cv
4.71826 29.2822 4.70947 29.127 4.70557 28.9707 cv
4.70459 28.9707 li
4.65234 11.1475 li
5.89844 11.1299 li
5.81055 41.2939 li
cp
8.05908 29.4678 mo
8.00879 41.293 li
6.40771 41.2939 li
6.37402 29.5078 li
8.05908 29.4678 li
cp
8.08447 23.5781 mo
8.06152 29.0518 li
6.37158 29.0107 li
6.35645 23.5273 li
8.08447 23.5781 li
cp
6.31934 11.123 mo
8.13867 11.0967 li
8.08691 22.9404 li
6.35449 22.9922 li
6.31934 11.123 li
cp
3.42383 11.165 mo
4.23145 11.1533 li
4.19629 23.0547 li
3.44629 23.0771 li
3.42383 11.165 li
cp
2.88232 41.5928 mo
2.88184 41.8916 li
3.18164 41.8916 li
8.30664 41.8926 li
8.60791 41.8936 li
8.60645 41.5928 li
8.4751 10.9268 li
8.47363 10.7607 li
8.30664 10.7588 li
2.93896 10.6807 li
2.88232 41.5928 li
cp
f
178.946 47.8818 mo
176.912 47.7344 li
172.929 47.4688 li
164.951 46.9131 li
162.475 46.7227 159.672 46.5078 156.953 46.1953 cv
156.225 46.1113 li
156.174 45.3701 li
155.979 42.458 155.827 39.3643 155.696 35.6318 cv
155.651 33.9951 155.607 32.374 155.603 30.7383 cv
155.603 30.5898 li
155.604 30.2188 155.606 29.8535 155.631 29.4482 cv
155.683 28.8926 155.83 28.4824 155.959 28.1211 cv
156.008 27.9834 li
156.322 27.1533 156.687 26.376 157.036 25.6582 cv
157.721 24.2627 158.488 22.8408 159.384 21.3076 cv
160.139 20.0244 161.033 18.54 162.098 17.1289 cv
162.356 16.793 162.635 16.4385 162.988 16.0908 cv
163.35 15.7441 163.787 15.4678 164.329 15.2412 cv
164.801 15.0459 165.298 14.9014 165.877 14.79 cv
165.948 14.6475 li
166.877 12.7939 167.838 10.876 169.086 9.125 cv
170.553 7.04199 172.174 5.41211 174.041 4.14355 cv
174.427 3.9248 174.713 3.84375 174.965 3.77246 cv
175.095 3.73633 li
175.404 3.65527 175.695 3.59277 175.983 3.53516 cv
176.554 3.42285 177.121 3.33203 177.688 3.25195 cv
178.723 3.10938 179.83 2.99023 181.072 2.88867 cv
182.988 2.73828 184.559 2.66797 186.017 2.66797 cv
186.639 2.66797 187.262 2.68066 187.887 2.70996 cv
188.367 2.73535 188.998 2.77734 189.654 2.87695 cv
189.964 2.9248 190.274 2.9834 190.594 3.0752 cv
190.763 3.12305 190.927 3.17969 191.114 3.26074 cv
191.25 3.32129 191.414 3.40039 191.548 3.47168 cv
192.604 4.03613 193.534 4.68359 194.473 5.35254 cv
196.342 6.70703 198.123 8.13672 199.77 9.60547 cv
200.601 10.3652 201.456 11.1475 202.223 12.085 cv
202.332 12.2227 202.432 12.3555 202.527 12.5059 cv
202.582 12.5947 202.626 12.6699 202.68 12.7783 cv
202.716 12.8584 202.762 12.9609 202.794 13.0527 cv
202.917 13.3877 202.988 13.707 203.045 13.9795 cv
203.171 14.6094 203.247 15.208 203.303 15.7119 cv
203.459 17.2334 203.555 18.874 203.604 20.873 cv
204.14 21.9424 204.555 22.8438 204.907 23.7012 cv
204.974 23.8711 li
205.197 24.4365 205.428 25.0195 205.593 25.7188 cv
205.674 26.127 205.675 26.4336 205.676 26.7031 cv
205.679 26.9131 li
205.664 27.9248 li
205.658 28.0566 li
205.902 28.0977 206.138 28.1484 206.372 28.209 cv
206.479 28.2393 206.603 28.2783 206.688 28.3086 cv
206.83 28.3633 206.936 28.4111 207.037 28.4619 cv
207.228 28.5605 207.398 28.6592 207.566 28.7617 cv
207.891 28.9619 208.204 29.167 208.505 29.3867 cv
209.151 29.8545 209.717 30.3037 210.233 30.7588 cv
210.363 30.875 li
210.596 31.084 210.837 31.3008 211.1 31.6094 cv
211.446 32.0527 211.559 32.4521 211.649 32.7734 cv
211.698 32.9434 li
212.076 34.5049 212.138 35.9941 212.169 37.3877 cv
212.179 38.9297 212.13 40.3428 212.019 41.7158 cv
212.012 41.7969 li
211.977 41.9209 li
211.784 42.3799 211.483 42.5537 211.304 42.6582 cv
211.039 42.7998 210.845 42.8711 210.653 42.9326 cv
210.334 43.0313 210.007 43.1074 209.588 43.1816 cv
208.95 43.2959 208.31 43.3564 207.691 43.416 cv
207.563 43.4287 li
206.888 43.4893 206.216 43.5283 205.542 43.5508 cv
205.25 43.5625 204.956 43.5693 204.658 43.5713 cv
204.621 44.0293 li
204.246 44.2715 li
203.533 44.748 202.828 44.9102 202.147 45.0674 cv
201.538 45.1953 200.904 45.2881 200.131 45.3652 cv
198.688 45.5088 197.286 45.5449 196.226 45.5615 cv
195.851 45.5664 195.477 45.5693 195.103 45.5693 cv
194.187 45.5693 193.272 45.5547 192.359 45.5342 cv
191.791 45.5234 191.221 45.5078 190.652 45.4922 cv
190.009 45.4746 li
190.006 45.7012 li
189.947 46.6201 li
189.087 46.7598 li
186.192 47.2266 183.568 47.5635 181.064 47.791 cv
180.96 47.7988 li
180.393 47.8428 179.832 47.8848 179.237 47.8848 cv
178.946 47.8818 li
cp
.563775 .605127 .694392 .490669 cmyk
f
208.058 42.5713 mo
206.447 42.7256 204.647 42.7412 203.763 42.6768 cv
204.013 37.9561 204.407 32.1201 204.532 28.7207 cv
205.042 28.7959 205.853 28.9404 206.382 29.1553 cv
207.218 29.4863 209.882 31.6553 210.382 32.3213 cv
210.882 32.9912 211.552 36.6553 211.218 41.6553 cv
211.058 42.1309 209.647 42.4209 208.058 42.5713 cv
cp
.424414 .488441 .59942 .139681 cmyk
f
210.382 32.3213 mo
210.882 32.9912 211.552 36.6553 211.218 41.6553 cv
211.122 41.9404 210.577 42.1611 209.808 42.3213 cv
209.938 39.5459 209.833 34.126 209.552 33.4863 cv
208.577 31.9912 205.718 30.1514 204.482 29.8564 cv
204.503 29.4512 204.517 29.0762 204.532 28.7207 cv
205.042 28.7959 205.853 28.9404 206.382 29.1553 cv
207.218 29.4863 209.882 31.6553 210.382 32.3213 cv
cp
.347692 .423102 .547692 .0496529 cmyk
f
208.058 42.5713 mo
207.612 42.6162 207.152 42.6465 206.702 42.6709 cv
206.692 41.1309 206.763 38.2012 205.552 36.4912 cv
206.308 37.0156 207.958 39.3359 208.067 42.5713 cv
208.063 42.5713 208.063 42.5713 208.058 42.5713 cv
cp
f
180.292 18.7656 mo
178.362 17.5518 176.267 16.5762 174.382 16.1553 cv
171.487 15.5107 168.667 15.3506 166.572 15.6709 cv
166.552 15.4912 li
167.718 13.3213 169.882 8.15527 174.552 4.99121 cv
175.853 4.10645 188.052 2.98633 190.718 4.15527 cv
191.813 4.63574 193.757 5.96582 195.728 7.47559 cv
195.718 7.49121 li
191.382 5.49121 185.052 8.32129 182.552 10.3213 cv
180.083 12.2959 179.968 14.6807 180.292 18.7656 cv
cp
f
188.933 44.4951 mo
188.923 44.9111 188.907 45.3018 188.882 45.6553 cv
188.458 45.7412 186.302 46.0859 184.042 46.3809 cv
181.878 46.666 179.617 46.9053 178.718 46.8213 cv
176.882 46.6553 163.052 45.9912 157.052 45.3213 cv
157.052 45.3213 156.552 31.4912 156.718 29.4912 cv
156.827 28.1465 159.272 23.416 161.367 20.0518 cv
161.372 20.0459 161.372 20.0459 161.372 20.0459 cv
162.392 18.4053 163.337 17.0908 163.882 16.6553 cv
164.478 16.1768 165.412 15.8506 166.572 15.6709 cv
168.667 15.3506 171.487 15.5107 174.382 16.1553 cv
176.267 16.5762 178.362 17.5518 180.292 18.7656 cv
182.962 20.4463 185.317 22.5811 186.382 24.3213 cv
188.097 27.126 189.083 38.5264 188.933 44.4951 cv
cp
.424414 .488441 .59942 .139681 cmyk
f
184.042 46.3809 mo
183.968 44.7383 183.718 35.0713 183.634 34.4883 cv
183.55 33.9053 182.386 29.8232 182.218 29.4893 cv
183.55 30.9883 184.301 33.5713 184.718 34.8213 cv
185.134 36.0713 185.884 45.6553 185.884 46.1553 cv
184.968 46.4053 184.042 46.3809 184.042 46.3809 cv
cp
.347692 .423102 .547692 .0496529 cmyk
f
181.632 22.8213 mo
179.132 22.7363 178.132 23.9863 178.052 26.9053 cv
176.551 21.5713 174.606 20.6875 170.301 18.1543 cv
168.884 17.3213 164.884 17.4043 161.367 20.0518 cv
161.372 20.0459 161.372 20.0459 161.372 20.0459 cv
162.392 18.4053 163.337 17.0908 163.882 16.6553 cv
164.478 16.1768 165.412 15.8506 166.572 15.6709 cv
168.667 15.3506 171.487 15.5107 174.382 16.1553 cv
176.267 16.5762 178.362 17.5518 180.292 18.7656 cv
182.962 20.4463 185.317 22.5811 186.382 24.3213 cv
186.462 24.4512 186.542 24.6006 186.612 24.7656 cv
185.452 23.6309 183.683 22.8906 181.632 22.8213 cv
cp
f
204.532 28.7207 mo
204.407 32.1201 204.013 37.9561 203.763 42.6768 cv
203.747 42.9512 203.732 43.2256 203.718 43.4912 cv
203.107 43.9268 201.962 44.2012 200.552 44.3701 cv
196.782 44.8262 191.138 44.5303 188.933 44.4951 cv
189.083 38.5264 188.097 27.126 186.382 24.3213 cv
185.317 22.5811 182.962 20.4463 180.292 18.7656 cv
179.968 14.6807 180.083 12.2959 182.552 10.3213 cv
185.052 8.32129 191.382 5.49121 195.718 7.49121 cv
195.728 7.47559 li
198.537 9.63574 201.392 12.1768 201.882 13.1553 cv
202.548 14.4863 202.787 19.6514 202.857 21.6709 cv
203.787 23.7061 204.487 25.4912 204.552 26.1553 cv
204.593 26.5811 204.583 27.4912 204.532 28.7207 cv
cp
.424414 .488441 .59942 .139681 cmyk
f
200.447 44.3809 mo
200.052 33.8213 li
200.882 34.9863 201.802 36.5713 202.052 37.9053 cv
202.382 33.4863 202.718 27.4053 202.468 25.9863 cv
202.218 24.5713 198.718 14.9053 198.382 13.8213 cv
200.997 18.376 li
201.077 15.9561 200.968 14.3213 200.632 13.4053 cv
200.412 12.791 197.997 9.95117 196.343 7.95605 cv
198.942 10.001 201.427 12.2451 201.882 13.1553 cv
202.548 14.4863 202.787 19.6514 202.857 21.6709 cv
203.787 23.7061 204.487 25.4912 204.552 26.1553 cv
204.593 26.5811 204.583 27.4912 204.532 28.7207 cv
204.407 32.1201 204.013 37.9561 203.763 42.6768 cv
203.747 42.9512 203.732 43.2256 203.718 43.4912 cv
203.107 43.9268 201.962 44.2012 200.552 44.3701 cv
200.517 44.376 200.482 44.3809 200.447 44.3809 cv
cp
.347692 .423102 .547692 .0496529 cmyk
f
210.917 41.582 mo
210.888 41.6152 210.813 41.6768 210.726 41.7178 cv
210.606 41.7803 210.464 41.834 210.319 41.8799 cv
210.024 41.9697 209.712 42.0361 209.397 42.0908 cv
209.089 42.1426 208.776 42.1865 208.462 42.2227 cv
208.428 41.7549 208.331 41.3184 208.216 40.8877 cv
208.06 40.3174 207.857 39.7666 207.618 39.2334 cv
207.378 38.7021 207.099 38.1885 206.767 37.7119 cv
206.433 37.2393 206.044 36.7861 205.551 36.4893 cv
206.003 36.8447 206.32 37.3271 206.586 37.8223 cv
206.849 38.3213 207.056 38.8486 207.223 39.3848 cv
207.388 39.9219 207.515 40.4697 207.595 41.0176 cv
207.655 41.4463 207.688 41.8848 207.662 42.292 cv
207.597 42.2959 207.532 42.3047 207.468 42.3076 cv
206.818 42.3467 206.167 42.3652 205.516 42.3652 cv
205.095 42.3564 204.671 42.3467 204.255 42.3193 cv
204.429 40.124 204.595 37.9287 204.743 35.7305 cv
204.903 33.5459 205.02 31.3604 205.108 29.1621 cv
205.419 29.2422 205.724 29.3311 206.01 29.4346 cv
206.091 29.4658 206.147 29.4883 206.235 29.5264 cv
206.285 29.5518 206.353 29.5859 206.42 29.6279 cv
206.554 29.71 206.694 29.8057 206.831 29.9043 cv
207.106 30.1016 207.376 30.3203 207.649 30.5342 cv
208.191 30.9658 208.724 31.4199 209.236 31.8799 cv
209.484 32.1035 209.753 32.3643 209.931 32.5645 cv
210.062 32.6982 210.164 33.0342 210.251 33.3467 cv
210.591 34.6436 210.769 36.0479 210.876 37.4346 cv
210.987 38.8115 210.985 40.1982 210.917 41.582 cv
cp
201.839 43.7119 mo
201.55 43.7725 201.255 43.8223 200.957 43.8643 cv
200.956 43.8154 li
200.935 43.1455 li
200.885 41.8076 li
200.834 40.918 200.794 40.0264 200.72 39.1377 cv
200.653 38.2471 200.569 37.3594 200.469 36.4717 cv
200.349 35.5859 200.25 34.6963 200.051 33.8223 cv
200.077 34.7158 200.095 35.6035 200.085 36.4941 cv
200.097 39.1631 li
200.112 41.8301 li
200.128 43.1621 li
200.132 43.8281 li
200.132 43.9639 li
200.085 43.9697 200.039 43.9766 199.992 43.9814 cv
198.741 44.1035 197.474 44.1484 196.206 44.166 cv
194.937 44.1816 193.664 44.166 192.392 44.1357 cv
191.434 44.1162 190.478 44.084 189.515 44.0596 cv
189.507 42.96 189.468 41.8672 189.407 40.7744 cv
189.321 39.1465 189.208 37.5215 189.05 35.9014 cv
188.704 32.665 188.377 29.4219 187.515 26.2354 cv
187.281 25.4502 187.03 24.6299 186.54 23.8994 cv
186.071 23.1904 185.522 22.5674 184.944 21.9756 cv
183.78 20.8018 182.489 19.7744 181.128 18.8545 cv
181.045 18.7998 180.96 18.749 180.876 18.6943 cv
180.788 17.7842 180.71 16.8828 180.698 15.9922 cv
180.687 15.0498 180.745 14.1152 181.009 13.2578 cv
181.266 12.3984 181.756 11.6357 182.417 11.002 cv
183.083 10.3662 183.88 9.84082 184.704 9.36035 cv
186.36 8.41504 188.163 7.6875 190.036 7.29102 cv
191.587 6.96777 193.233 6.88965 194.761 7.31348 cv
196.175 8.3584 197.552 9.45898 198.879 10.6084 cv
199.707 11.333 200.546 12.0781 201.233 12.8867 cv
201.315 12.9873 201.396 13.0889 201.462 13.1885 cv
201.493 13.2354 201.526 13.292 201.543 13.3232 cv
201.577 13.3936 201.595 13.4346 201.616 13.4893 cv
201.705 13.7158 201.772 13.9766 201.833 14.2373 cv
201.95 14.7627 202.033 15.3076 202.106 15.8535 cv
202.274 17.1553 202.392 18.4717 202.481 19.79 cv
201.956 18.8135 201.415 17.8467 200.839 16.8984 cv
200.497 16.3389 200.148 15.7822 199.75 15.2559 cv
199.354 14.7334 198.921 14.2148 198.384 13.8223 cv
199.708 16.0576 200.853 18.3682 201.882 20.7471 cv
202.396 21.9326 202.904 23.1221 203.362 24.3164 cv
203.585 24.9053 203.815 25.5303 203.93 26.0732 cv
203.971 26.2744 203.974 26.6201 203.975 26.9268 cv
203.96 27.8848 li
203.888 30.4658 203.696 33.0645 203.587 35.6621 cv
203.46 38.1807 203.343 40.7021 203.282 43.2275 cv
202.878 43.4521 202.354 43.6016 201.839 43.7119 cv
cp
180.917 46.1748 mo
180.267 46.2363 179.601 46.2959 178.987 46.29 cv
177.013 46.1758 li
173.021 45.9717 li
165.044 45.5381 li
162.499 45.3828 159.954 45.2158 157.425 44.9717 cv
157.411 41.8428 157.354 38.7139 157.314 35.5879 cv
157.285 33.9697 157.256 32.3486 157.266 30.7412 cv
157.271 30.3447 157.274 29.9307 157.3 29.5693 cv
157.325 29.2988 157.45 28.9121 157.579 28.5557 cv
157.847 27.8291 158.181 27.0996 158.524 26.3779 cv
159.22 24.9355 159.981 23.5156 160.782 22.1201 cv
161.227 21.3535 161.683 20.5889 162.155 19.8408 cv
163.194 19.1543 164.392 18.6904 165.606 18.3955 cv
167.194 18.0264 168.909 17.9531 170.403 18.5156 cv
170.784 18.6592 171.095 18.8408 171.46 19.0811 cv
172.526 19.7568 li
173.23 20.209 173.912 20.6797 174.524 21.2217 cv
175.765 22.2949 176.656 23.7119 177.153 25.2783 cv
177.673 26.8408 177.804 28.5117 177.962 30.1895 cv
178.112 31.8643 178.226 33.5439 178.322 35.2256 cv
178.417 36.9063 178.493 38.5889 178.554 40.2734 cv
178.626 41.957 178.604 43.6396 178.884 45.3223 cv
179.148 43.6338 179.04 41.9453 179.012 40.2588 cv
178.969 38.5723 178.911 36.8857 178.833 35.1992 cv
178.755 33.5127 178.657 31.8271 178.524 30.1416 cv
178.382 28.4697 178.28 26.7432 177.733 25.0898 cv
177.22 23.4404 176.255 21.8965 174.94 20.7549 cv
174.292 20.1777 173.582 19.6865 172.869 19.2256 cv
171.802 18.5459 li
171.465 18.3193 171.044 18.0713 170.634 17.9189 cv
169.799 17.5928 168.911 17.4814 168.041 17.4785 cv
167.169 17.4766 166.304 17.5967 165.464 17.7988 cv
164.624 17.999 163.806 18.292 163.026 18.667 cv
162.976 18.6914 162.927 18.7197 162.876 18.7451 cv
163.032 18.5176 163.187 18.2881 163.347 18.0664 cv
163.577 17.752 163.821 17.4404 164.067 17.1904 cv
164.288 16.9678 164.591 16.7842 164.925 16.6387 cv
165.594 16.3457 166.362 16.1885 167.134 16.0928 cv
168.688 15.9121 170.292 15.9746 171.872 16.165 cv
172.667 16.2627 173.446 16.3936 174.235 16.5596 cv
174.997 16.7188 175.752 16.96 176.489 17.249 cv
177.966 17.8291 179.376 18.6025 180.706 19.4863 cv
182.036 20.3721 183.3 21.3672 184.425 22.4902 cv
184.982 23.0527 185.511 23.6504 185.94 24.293 cv
186.37 24.9082 186.601 25.667 186.817 26.4307 cv
187.231 27.9668 187.489 29.5625 187.709 31.1572 cv
187.927 32.7539 188.087 34.3613 188.192 35.9717 cv
188.394 39.0215 188.503 42.1064 188.296 45.124 cv
187.019 45.3457 185.722 45.5518 184.419 45.7363 cv
184.411 45.5557 li
184.362 44.4717 li
184.265 42.3037 li
184.048 37.9697 li
183.95 35.7969 li
183.899 35.0586 183.778 34.3301 183.608 33.6182 cv
183.243 32.2012 182.752 30.8369 182.218 29.4893 cv
182.591 30.8887 183.007 32.2793 183.242 33.6953 cv
183.368 34.3994 183.451 35.1084 183.462 35.8174 cv
183.447 37.9854 li
183.44 39.4346 183.485 40.8828 183.51 42.3301 cv
183.571 44.501 li
183.605 45.5869 li
183.614 45.8457 li
182.712 45.9668 181.812 46.0801 180.917 46.1748 cv
cp
170.25 9.95508 mo
171.519 8.18652 173.068 6.57031 174.829 5.39063 cv
174.96 5.31152 175.237 5.22656 175.483 5.16309 cv
175.738 5.09766 176.003 5.04199 176.271 4.99023 cv
176.805 4.8877 177.349 4.80469 177.896 4.72949 cv
178.987 4.57617 180.091 4.45996 181.194 4.36719 cv
183.4 4.18848 185.624 4.08105 187.815 4.17676 cv
188.362 4.2041 188.907 4.24512 189.433 4.3252 cv
189.694 4.36523 189.954 4.41406 190.192 4.48145 cv
190.311 4.5127 190.43 4.55566 190.521 4.59277 cv
190.656 4.65137 190.756 4.69922 190.878 4.76074 cv
191.823 5.25195 192.747 5.87695 193.651 6.50781 cv
193.778 6.59766 193.903 6.69238 194.03 6.7832 cv
192.688 6.50879 191.278 6.55664 189.94 6.78125 cv
187.986 7.11816 186.105 7.79297 184.346 8.70801 cv
183.472 9.17285 182.606 9.69141 181.835 10.374 cv
181.063 11.0547 180.429 11.9561 180.091 12.9561 cv
179.745 13.9531 179.649 14.9863 179.624 15.9854 cv
179.608 16.6455 179.632 17.2969 179.663 17.9443 cv
178.74 17.4033 177.786 16.9111 176.792 16.4961 cv
176.333 16.3066 175.864 16.1377 175.386 15.9902 cv
175.386 15.0801 175.47 14.1494 175.634 13.2559 cv
175.725 12.7822 175.849 12.3154 176.019 11.8779 cv
176.104 11.6543 176.195 11.4551 176.313 11.25 cv
176.7 10.6113 li
177.205 9.76074 177.815 9.03027 178.653 8.51367 cv
179.481 7.99316 180.426 7.63184 181.384 7.32227 cv
180.388 7.46484 179.384 7.69043 178.451 8.1543 cv
177.987 8.38867 177.544 8.68262 177.155 9.04492 cv
176.767 9.40723 176.442 9.82715 176.146 10.2402 cv
175.702 10.8613 li
175.552 11.0811 175.413 11.3311 175.302 11.5693 cv
175.073 12.0557 174.915 12.5605 174.786 13.0674 cv
174.565 13.9443 174.452 14.8262 174.406 15.7246 cv
173.614 15.5439 172.799 15.3926 171.988 15.2793 cv
170.419 15.0635 168.823 14.9717 167.217 15.1104 cv
168.151 13.3135 169.075 11.5576 170.25 9.95508 cv
cp
211.22 33.0889 mo
211.11 32.7295 211.045 32.3516 210.72 31.9336 cv
210.435 31.5996 210.179 31.3838 209.903 31.1338 cv
209.358 30.6543 208.795 30.2139 208.212 29.791 cv
207.92 29.5791 207.618 29.3809 207.306 29.1885 cv
207.147 29.0918 206.988 28.999 206.813 28.9092 cv
206.726 28.8652 206.634 28.8232 206.521 28.7803 cv
206.444 28.7529 206.334 28.7178 206.247 28.6934 cv
205.873 28.5967 205.505 28.5303 205.14 28.4854 cv
205.146 28.2949 205.157 28.1074 205.164 27.917 cv
205.179 26.9248 li
205.171 26.583 205.193 26.2725 205.106 25.834 cv
204.935 25.1055 204.689 24.5137 204.444 23.8906 cv
204.038 22.9004 203.583 21.9434 203.106 20.9971 cv
203.065 19.2559 202.985 17.5156 202.807 15.7686 cv
202.743 15.208 202.669 14.6475 202.556 14.082 cv
202.496 13.7979 202.431 13.5146 202.323 13.2197 cv
202.296 13.1426 202.257 13.0557 202.231 13 cv
202.186 12.9072 202.147 12.8438 202.104 12.7734 cv
202.019 12.6377 201.928 12.5186 201.836 12.4014 cv
201.093 11.4932 200.269 10.7393 199.437 9.97852 cv
197.757 8.48047 196.005 7.08008 194.183 5.75977 cv
193.265 5.10547 192.344 4.46387 191.313 3.91309 cv
191.188 3.84668 191.036 3.77344 190.917 3.71973 cv
190.751 3.64844 190.606 3.59863 190.456 3.55566 cv
190.157 3.46973 189.867 3.41602 189.579 3.37109 cv
189.001 3.2832 188.433 3.23926 187.864 3.20898 cv
185.597 3.10547 183.354 3.21094 181.113 3.38672 cv
179.993 3.47852 178.876 3.59277 177.759 3.74707 cv
177.2 3.82617 176.642 3.91504 176.081 4.02539 cv
175.802 4.08105 175.521 4.1416 175.235 4.21582 cv
174.945 4.30078 174.675 4.3584 174.321 4.55762 cv
172.378 5.87793 170.806 7.55176 169.493 9.41504 cv
168.187 11.249 167.192 13.2842 166.212 15.2373 cv
165.646 15.333 165.08 15.4717 164.522 15.7021 cv
164.112 15.874 163.7 16.1016 163.339 16.4473 cv
163.011 16.7705 162.753 17.0967 162.497 17.4297 cv
161.493 18.7598 160.645 20.1514 159.815 21.5596 cv
158.991 22.9707 158.209 24.4023 157.485 25.876 cv
157.127 26.6152 156.779 27.3584 156.479 28.1494 cv
156.337 28.5547 156.181 28.9395 156.13 29.4785 cv
156.103 29.9258 156.104 30.3232 156.103 30.7363 cv
156.107 32.3711 156.151 33.9912 156.195 35.6143 cv
156.31 38.8584 156.456 42.0977 156.673 45.3359 cv
156.695 45.6621 li
157.01 45.6982 li
159.669 46.0039 162.327 46.21 164.985 46.4141 cv
172.962 46.9697 li
176.948 47.2354 li
178.958 47.3818 li
179.679 47.3994 180.343 47.3447 181.019 47.293 cv
183.708 47.0488 186.321 46.6992 189.007 46.2666 cv
189.474 46.1904 li
189.506 45.6934 li
189.506 45.6895 li
189.512 45.4463 189.512 45.2041 189.515 44.9619 cv
190.462 44.9844 191.417 45.0156 192.37 45.0342 cv
193.65 45.0635 194.933 45.0791 196.218 45.0615 cv
197.502 45.042 198.789 44.9961 200.081 44.8682 cv
200.727 44.8037 201.374 44.7188 202.022 44.583 cv
202.671 44.4336 203.327 44.2842 203.976 43.8506 cv
203.976 43.8506 li
204.143 43.7432 li
204.161 43.5117 li
204.173 43.3652 204.185 43.2178 204.196 43.0713 cv
204.644 43.0752 205.085 43.0693 205.526 43.0508 cv
206.19 43.0293 206.853 42.9902 207.515 42.9307 cv
208.176 42.8672 208.839 42.8076 209.501 42.6895 cv
209.833 42.6309 210.165 42.5605 210.5 42.457 cv
210.667 42.4033 210.835 42.3418 211.007 42.2529 cv
211.171 42.1553 211.376 42.0596 211.506 41.751 cv
211.517 41.7256 li
211.521 41.6758 li
211.636 40.2559 211.679 38.8301 211.669 37.3994 cv
211.637 35.9668 211.569 34.5371 211.22 33.0889 cv
cp
.563775 .605127 .694392 .490669 cmyk
f
165.884 21.3213 mo
165.194 20.9443 164.802 20.9873 163.218 21.7373 cv
161.634 22.4873 160.884 23.4043 161.384 24.7373 cv
161.884 26.0713 162.301 26.1543 163.634 25.2373 cv
164.968 24.3213 166.801 21.8213 165.884 21.3213 cv
cp
.347692 .423102 .547692 .0496529 cmyk
f
168.218 22.4043 mo
167.47 22.3418 165.885 23.3213 166.468 23.8213 cv
167.051 24.3213 167.801 23.7373 168.301 23.4873 cv
168.801 23.2373 169.218 22.4883 168.218 22.4043 cv
cp
f
207.052 32.1543 mo
206.514 31.751 205.468 31.7373 206.134 32.5713 cv
206.802 33.4043 207.302 33.7373 207.468 33.3213 cv
207.634 32.9043 207.385 32.4043 207.052 32.1543 cv
cp
f
208.718 33.1543 mo
208.345 32.9053 207.801 33.3213 208.134 33.5713 cv
208.468 33.8213 209.218 33.4883 208.718 33.1543 cv
cp
f
193.801 9.2373 mo
192.488 8.53027 191.134 8.82129 190.051 9.4043 cv
188.968 9.9873 190.468 10.4873 192.134 11.3213 cv
193.801 12.1543 194.968 12.4873 194.801 11.5713 cv
194.634 10.6543 194.884 9.82031 193.801 9.2373 cv
cp
f
197.551 11.4873 mo
197.129 10.8242 196.551 10.5703 196.134 10.7373 cv
195.718 10.9043 195.718 11.4873 196.301 11.7373 cv
196.884 11.9873 198.134 12.4043 197.551 11.4873 cv
cp
f
175.384 7.7373 mo
174.54 7.83691 173.302 7.9873 173.468 9.4043 cv
173.634 10.8213 174.634 10.1543 175.218 9.57129 cv
175.802 8.9873 176.801 7.57129 175.384 7.7373 cv
cp
.424414 .488441 .59942 .139681 cmyk
f
177.302 5.9873 mo
176.327 5.74414 175.302 6.32129 176.052 6.7373 cv
176.802 7.1543 178.302 6.2373 177.302 5.9873 cv
cp
f
179.301 21.5293 mo
178.384 21.3672 178.134 22.1963 178.884 22.3633 cv
179.634 22.5293 180.718 21.7793 179.301 21.5293 cv
cp
f
176.718 19.8213 mo
176.269 19.8213 176.468 20.4883 176.884 20.5713 cv
177.301 20.6543 177.635 19.8213 176.718 19.8213 cv
cp
f
179.051 19.96 mo
178.286 19.8467 177.802 19.96 177.634 20.7686 cv
177.468 21.5771 179.551 20.7695 179.801 20.6338 cv
180.051 20.499 179.968 20.0938 179.051 19.96 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.0.1
%%For: (WINDOWS) ()
%%Title: (Miscellaneous.eps)
%%CreationDate: 2/6/2015 10:57 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6qfCN3Z69(WX8G3OQW,:.*V3\.(]_[[XTCdD2nRA1igbA%F_f/h96@6S=nKkb8TOh,YFkCd5maimOCB?"-93%SB"E>8qDCF.
%I5]hb?_!]nr%d%)roN3p8LH/HRnrUNJe-Q+B:jVGmq4kf5B^e0Bkf3MYh?BW1CNm!BjOno2bf:V%,O#%S6Wg9?X3PK\N*fBr7Go4
%2jYW$S@!dI/gfJYIXtj,PQ.sQ5MuAsR@UNVIYE-;Di3/iZh*j1F8:9-26kV`$FA?+o05FU?-iS#QL\rH:<p%=f0@(LldKe/_s\]3
%Qh!"^H*tAtJo8J)WCQ?bs6"le^%l]39ZnVO%D:H$[T,d=Ou,nl6_,%o`TR9oj8,+KO&q[KX0^'is8<#RBtgk-UK?al/,fR@":p(L
%F80`1?b]lPT3lS>-b^@D]_Z)h:&KL)mlt4%8%Ql='"SrA+r>_bPq15IKu&8Qg@colS5-@]cHl=FLH.OCjU*o6j9>IOaphtK!EenQ
%FV4`Qe,'#uo@;B[0V9]6[$\Ma\+#;V#1PAaeE,36"K9G>!(\4D/P,-<eFsZ_ro_u2[kB-/^0[A5080t+bH"]WrrRii$$84"V"i!r
%oC_300$^U"FPK^;aS9q"\isb#bO*LE(#hC[&H8jjITg%VZG$D2hOIpt0#!iTmO@%!^ONfj@t"/M)m!Crs'^?Ge)ilnUHn"qUoFtp
%8Ql3qXl?A)-H=O9%^ea<*H0M@917):5c!:ET)E\QnKgMBntINF+lKOWcV?Y%QKb4)s(ED$.X9M?P)dD`YHHFmg2iIlDSPir!PZ9r
%--uANh=^Y((TT=p>7+(Pq4tlFc%+k.k,YNtPUE:^J=,4AZTkU+FsZXEAb\Jt'`RA9s)2*n"jgfT5Q7*_phQ2cYKJ6JcF6r7eZ?`.
%em^LPZ'r)DV)DN/=Jr=,:(;\pHX1-h]#JL[$3/%\D2Zru(2n%or2"88c>ncV/sk/;mE6eV=>'CrmPK-UHc47k?h%1qS_,+"@5T#@
%rf>TK>WQ'f%0qUe@iZO'r_I$*E:D+30)Qg+iLo[iCl3e_:#ho9Ii:Ct^g\9"5*]R!4htel2#JH]/=0J9=JF(sU`#I,.f>oWjjEZ"
%\GP&CIQhm\;5I:f&$+Y+nUGA4&]l9\hZRro!NY/r("3R0^)=tIs5Q$X+O^Aj0:g--r#_uu)"E)F-Bef>Q[=8/<*Gs?.jZY0\;LcB
%XN&%Sf^S*M!7Z;^)F'YE<jZi]rPLZU5c%<t+Pk<fkFZaQpcheh>/r?Q>khq/+7%hbiHD&<SOj5RIKi`^P-Yd\dN*J%8VW'g-]-iK
%U!N[If^k:EGgq"-N/it2O4EmugcRO2^[n(>SgQ!d2WLA0`(_fIO%J$NI_H&)f@fKQR0(RX"/^12".g.iG#(gno0'MsefGd_-NtmR
%mQmT'eLp0O\RE5&R"YJ.?!*qc5?RaFcbK'YT(@1+c@9dp/-bb0htaH,q7D.>^T-;^<TTfYa^<Nd:]?pbAi'GSht[e#T?k'h^[p>l
%_;G2Qs!@)/pcROIs(D9#GQ#PM36!dno3s`+b2oq.n64+3Z!<UdZ7ToRa6tHB]J3+e0*<LH]^Qr.2u;1dO3;fH@5[s0(#08jhR3mC
%=]!SU0I8=VKdfpp3/;,bI"%3p;t11dCoBOm?Bt#^/W736pD.M1e9NH/bg-r,(3WOjGhGNLE*r*9G_PTg2htR[3CaY*jdFUJFfN]!
%o\:bmU0YfJ^c-d4JonM=&pekf1eF2-X%>n`UTsT!]P;bJk3-%+5gQY;3hLBSWO9`GD!381&bO'uJFJ8@K19#K*V9AY;I\hZ#6YjU
%k1hQ`WR0Mc9:gqA/[92'&-=\pn>Qle;7ctP(0DI3WP!<q>k0ObWjQX%k?JVRD@rWL3dRWU\sBr[".J7/"="KnFhU:hqJK6d%6fQY
%%%s=9Zigg@U*[H#d40eQo>jQ+fJXK']+4l8@&BhXAX,5'Ud&O`W5(/RR3J'mi#DX3K-6o-;$b[.iplgSch%^n_ladYD5^C[&90+O
%\9nLj?SVhiCBSo"!YK>/DtCo**Q<4J)h;'Fh?H&u"G5GDHE`9X_@VjS"@GL6F*c)R/shkRQ%Z)fB`Km4TAc>+N5NU`;bC9hMuncd
%TYnV,%1e5L^ceL!\RG`A:4?/q0Xc]/@46rrJGPE!/IbD+7EVCQZ-kn%hr$TOg(77<??ip=J62qXas==q?],q8lH3aR_K]L(N*g\=
%+NmIg";4K>I&GSZ_+)<cdMCtSRH?)r`_R6+.1O_")pmA9(&X)E(<Gf@@Di9^<]C(5o,1FKrgu.AH&e8S.Dq^_6?e*U)3d,aL"OcX
%l'.;XPk0^^KLu".13I>mUEZP>#E3(dBW;b@17<h(nT76$8cW,Em>+7tOQFldAQ(TKaDEu]\!\%,)9!lm0<&W-8;\\4O:7)^1ZWUY
%[11N=4<R$)@n:54c&[H"0=TCu[>Z6"5Ul62]]!(r/00aG>95jZc&%H7jCpBm*50aQ;2ij'D.S^7bieICLS-9KR)djQAHM$,o/5nN
%^B>a>'<D$A-W-<T,I,CiRtN7mIB/6g0O^et9T?9nbfV0-%2#@/_4ct2/@`K>B%/f+d\DQE6;MFm1\"]S>pJ^jic*h!AI5qk`)IMr
%FMa(I6=.kgkT^](U'F-T<>\trJ<:c8\o:gs(`\O.0;YM$W/f5'#siiW+jtp;QH?#doa;!:o!jioN5E83_Ln+t^_5O"$ke%$6s6u]
%gPEmM4:AB#9MWIjE70n+R>@(bf?oFOd/#r!Pbk)W6!hUU$RIO*>q]?Zou0>b^:%!pV+Z':jZW4ElYfGG/+Dg$Jc@+F[r.L3hUM%H
%cc`lLk>K(#eg=B,Y9JT,DQe*Z#p_s,fd=`dYQ9&RcD;s$9t^\7ZXV%Z=^%-GEO=7ICJBF51U,SjXr==l,XkZ'je?FG)8$kq!At@?
%25[Hmg'jPQ;LE!/Wla"kObTO(L7VtX0qc=MN-[QQR?iZ;?,1ODE4'YSdG*kVE+K?i17Km(67mAnD/-R$\M-1[T#&k)34,&6K77H8
%!p(;*%22gtZk[:u$P_ink2F!'/?FW8";hgY"bORLL$f^"J[.='"#RpH['em8`<.5="pRE+aGX349F58iLcT<-P3-V>(r`*/,!\FI
%EU6i_bh<qV(DJP'/3FP/,8m9Kgqn@F^]_#Q&"qC:I&C+tdKP^4>Vg0R5o*d\F=h2CJ;:F)kVhciNnFsfH&af4H%9d%`.?RC&_8Yh
%Eh4%(p8gO;+Xgd)5Wr>Z\U/Xnf;&qdfrT$hHI3;((+Va4'$m:XZLU])_\`"RFW#d@K`lup^^Dl)'==g>dK>ctclSSmkf/Jg%L]pT
%Q36FG/9OmWLcNdtd0Le$E:&Sh;p>=f%<oMer>nI@\="6?!L+'qeu#S-",G?;gaGi:Us_\)#*sNg)?[3LMV-_bSL94*`X3hQ-[Mt0
%3-Ys/)7[ouC1)]O?$'@T+BHVgU')fe9rrDeoUiu^%Yn[:$ld48_MAJC0L"\MaRa:/0PIs!2[.dOnQ.<%SLKMbJJH+f67tn7/9)Ja
%;jO>!T&S7BN1-tT8d#!Odhi<i9*70e'QcCO%5BA":0kE0JDI7^9,6/M3]aHW\pV=jMAa)q0Z+5W,,47P#/[n>po'U:nR5QD'0B,n
%=VCcOe8ae._36.lq1VWm9[kg>EP;MoRX%k?+a(9%FT\tn/eJIN'Z*4i9FB1-V))T16A3.I)AYf!).U.80P3'O+;#3d/;/NS;e/ut
%#]"#N9I_L8q%Pf)#0R(M0u3O'<kp4]QOF1hYY4745+eenqkB#_#qC<+I;F/JH(pRJjm^?<KWhl'I1W>uRCkLXYk,rN6o/'j(m-f9
%^#A4F-#$(=-,WM9=.h9-&Ti*RS]FeMUgkGKG#IFJTL_L`-);!BnK,+G-:lCWX"C96V=9aNDpmT@YH7FO9,R,,9&c`V(kG@PdTdDT
%cY;4W>$Z!2oqIa0Nf8\%1s0lC>/t'+@=LgQ.Hrc9Y=dEX#.[HjV9>[q(XcXUT*`;a5#h$s.mHThD:><YOI"N&M#]N-g!Bpc/eA\X
%_S)=eA;n8hHV6b?7lWfSN_duHfpHEZ9N"GS%:^9^mM^@84ZuU)VlV2kR!._=%)/31Rn*p)PijFn,.p[qGjSDdTljL>kh?0RCK#&M
%_g??N?c]Pm?KIoQV"-WcEpc+C=sTShT>"tFhC3S^euAuW:TTu]i$X\k%+VegT5iX%2;l(r%@T<p&?os88LmM&&+TA'bM6e4%T,@f
%M=$Cn.cc$':LAo/\"lgh*1HQ&g`Xh)hWNAnI`LV1gA+?A]#A\UX*I->?O0nO'pNrF:<LH!j73:.G_T^t'snN0E[qSgDO$nm,<->C
%<\,$GPG-58ai=p'.4ha_`>N+6f(^YV5d>4HbJ[XV7mYe9]EmOQ4BK6H]i]N*9NWQ`5;`R!\l""0#gi'B\"%]9P5\2V,/8]Ao5+jQ
%5Uek4iE6ee$5uH)b654BitC'!GpkX=J\>9rh#\a1-$C575dMqM=U%r)*<:Vm%N;O=]\mtNidXV<:+;a;V=P%m\Y$1?2"Ms!o<iP*
%9Kr(GPIV2_.otq9G^c]J<^MO9QDK,0+l_HY-Cn2V<[(d7Yrk0"AGf)$];QT;fi!P<2Wl-7TN`mT=u#:kSYqkeXoO?ac)cV7Z91q=
%PAr4.a"2i))!B+s1\j1t)5kZ[_fOkj@hTDJ^ab?(\r-6:^P5F/.H@NCIP5CZM6]a]g$D';D.nZj1Kd49Rk9:nVD:a4]DP.5irYe@
%a&3h<`jkt:"[F,$R>A-u@P`!CI9+YbMk?>]WS[G;E838F]bS?l]?9N)qoG^UETt2I:RhJMQer*FnoPZ=AB"p'29I1bKoTs(oa.N)
%F#%AI+M]kk*8pV,PgaQX9QB55etq/"WW_913no4@\C_O,au!k_AJ7>p9E>QQek_TdAH8h[X,N!SWHNQrMCs<W+m[-hi3;fn,CX7?
%W.`!+B20H)aK`l37MUtA!)fqpiWgo,MG$U_ji/,]8*$3f[-Hjc;NFrE_;\MJV'd#of(b(YlB6KA:\UEF%MoUpNZNIL3s8&SUNr/E
%[2=`dB,u@^Q:/#f'SR;O`P&KO6DQe1)css8IYKA4G6S]tSX.)#;9);r8*VhQ_oU'M/_,;03m!ZA3:bRc)m,:'$.14s0*HA?N'7*&
%U,rcLS("O)?0K@]?9miJJ3]G%Js?^'FqN"U"edVe1fgqu>G6[%ja_$^)36F-YfLGjfa8s;A.'_f_l`M$,;a/!r\qa>.kl*selas+
%'UH/T;'W8"pae(G\te99=*I-Y2IMm!$uik^d@![iDVVbFc?g;-nCU:21JYc]KCFddUJK'sE%'?e^=2K)h9HSSORGS>pLI8c1G>^h
%p]TX9mGM>o^6ctI4l0JB<=r.a4L^l!45+)`)kiu]J9i9>.PciR%i^+TeYb@>Y7U9$C/8[L>%,o;Q8pT+[/?*cAt)KRQSL'1Yl_B_
%FBJ67QU\_toBh69N_&O,OH=[WB;W"S1u;j+\=D0GN3"U;Sr2YqjXfJqCGRW$_uuhc\ut\\B=CEg?U1a`!Ul^0Q_(_Jo/s4fLg,0Z
%3_+hQ\YclS7;0N/b'X`X3Nl$e[6Il#S79R;Hu(b10f0[K4ujVTLWds<jqmjDJ"bb+Xfnll4Qe\*.X:pJ#&ZE4^mNU6cbAGsWn0J*
%?c.q3?Z*#2Hunh$oDI;)c0=B8HLfPHl3(is^45b3l]\A&-D*q^s7GUQltS[hSUL:mQDTu2X3:0hItcYA/%iX9pEB:Wf5EU7msP:C
%]"%OuqL%lXB\8TO/l!eo\[q\mV"#PP<u7p\$2rf9IX1W_pgjWEnu_ep6-ZPc5CNUJd7mT<o8">8"@!?AeEZ>TA9P]$3;r&EkHCH%
%F5`3-?iBNoc0"rjj*TBc=Q2LTm+p4go&BNSmcNX(a*3`>2Oeau#d,:7GpHa'nN@-K&6HF2!V#..2VtU^cd.'N>^^j@G1+ukcgU9f
%474+W74/62^*gob\VG%ZE>["f5efIo3/(RmlZpQghLE>#30RG4<ZeO_CG(7.^>7d+0^4Z*^Na`SHT(P-FqIdNqJp_)"q/55^dD2$
%^nNcO`T]$khPpYgkpr;MPAE!9IK&TJSj,lF[OuE#d\jBAj\o2W:eEJpZaqQ"r+*)g/Z?mhVQa<k(--c`-_J)D>s<4;60BTKgdGA9
%BO_]mCSFNtUnpXD.?]NZ&o8)&;S7IOk%5\WUh@Z!G-#qmIQ_AR\6$#IVfjB=*CTh]H?1h:&\#PLro<@3M`"1"UuK*tgpU.-3\HUO
%b>JO1;Ia)mI*.@&-R,WICN:W*Us(RQ#sRE]_UOr<J!8BGhS2@Co3!fSZYEOeRb<(s5S%Fq[<Yu<(U%OcBMAY1/-V:eT,2PW=fLQ.
%*%GIfomF;@(?m#IjGRJU(XRq+\Yp8Q>ViZk659gJ?@mcr^h)_%jiZMus)\%$b>lX`nG`?R/'W]MR9V2S_@'SgVkCa309$47T$4H8
%cq!HUN;D2R<C<DK.d=6X'm/Ok1;$Mp$s^mUPZ#(.'RYpIGC[X'B)n'?N\38DO+jV7B]T6#$m:mg?BX4mL2RDIJ\N'?6u*+gYQ47r
%+J5umV+gt(VG1Yq\=fVd(c7B$!)F&3X.#;m=`TtlZYYrE"mGrXN7A%`6^PNb>Q\_]?+q\apPdhIWO881(%fbn4"rAejSmJ2/\WU!
%s"ep-4LnV;s6p(4cf+ma$lD20`0pm!IZ/;4(EY(tAQ(EG]eXo%-G^LD.MqcjT%,F*C3l.&9\R(Vo/a!0GU:\.eYZ(AM0!p8O)bH.
%W[cu5'ZQ88BpDYjC]K?)!:Zk=#"jiN`t8$I1hBi;G)=;HX_fVfB"#\Z8@W]0g;JT_;ugA.9auic^^p4,'krdE8\RHC;kPR%/r/+M
%q^0bHjIj3h&HQ(-56G<F=d)igM#e#fSu#SUR4J@?>6:M*B`lGUdgBDmC=>9sdTj'"0h68\(qYDA>_(%m-9!$_V62<g(-onQF:^W`
%,ljJ^Osiap!P"ad,:a?*=h1d.#cY0d"KQ+UZ"^=m=A>8H0N&>a$#iN<EWuX5liJ<<YiP";pgFse`7GV)@CR/U!H:_?C,$]@'X3:q
%/-VJ&_:'*kM?62>7@4Xm#c_1?/mshc&N9bmKPXCFj:JIeJF$M`gE9If59n5nCbsf8Oq:!L_dpZA;WFtjFhhP'lJW8@(/91H<(V^M
%9RmEsKQO_3XsRkG-?oAdX:hGPQq%^;QkO+?Y##Zg8;R`4r,69*(HB0C2U,q'=I:Zh:]eoR@.Z9/1)L:+HWJZN"-E?gYVsL0an/?8
%4p)d)J0CY+^^K.t#&FQN!tKir!WFrAhZDRhJ:%E;T4@X5_:oU0;h9'!o\0ZE!pp&:%7,4^&-ejdJ--pI&B9QZEU09VE(3A3_$I.$
%d;l)O13`g09Q]+f%pJn,],7S&/q9]ZY$HP!p'!#p"Ju*5Z/_;I?5V`-=QT;@RdIVR*EO7fd%^P@mC::ZQgMDX`F?lQn$oYDQV`Ua
%e[.t64]`.p!C@(,"c*ss`=Ne@TOO^.$[`&EAo3Vec[a_X8d!nEY`h=@r6&J;+AW5V'<V[e;,)FP#4n\q0!uga-m>n4Pl[a$XV2K4
%=[h;D%<+?B&E^q,Q7uio4>_pqo,LeGR&(Sn,]_(s2a%-GSKfckJI4\una@=NP7t^=0\;HeeeHOnKDCRuGu6+!!QG2ZJ2:`_.'A2g
%pj!$*"8VhQ3;jhA5)*2f[">0j=`R\C/T1]d'r.H;(H2SLGkLu;\\saMXq^Y/:9-1R4XI0sY^FjP4i@%\'$?M.:kmQs%+_b:f!Z2A
%eef_?_@Z4L(:`6A,m>JdK0U_3!f(@?"A?$i"$Emnc8feY%]bOaj)E,-X;r&m%YL1e?:C6N.Fnc;N%r,!_\ZfumP'n]Q39R6+3)US
%@4$2#W>-Z(T*[uG_hE5XQmiLJ".=djjWKV'B:(KnToT]?NJ$oP_3q!%3XE2)[`6.KTirs75sAGEX@KR.-@/*0R`,]d0$l4_9@>Ik
%d4d-9(c?"F*79>+L/D4Yej`<d7SW_KlgtW"C)fJ_[:gMXBe0RkTn^H_Y\.N?\O?';>2Y>!'2ZL,^RA2)PY:PPI$#D7e)b/GPiXW_
%<`LJN&4Ol9/u'h6P0GI(S$@&>Z7Aai$?.pJTe/fi72]r31+_9]OX,j+Ukg9QA>i/:/PBb5>2>krbV5=/16KorP&2!\gS/B-dTI;U
%B.:u8+Q7Y"XFX-PA-Se=A@$r#1SEKg,dWpbZP'4J&.-17N3FS\XOVSc]MJQhobutPAg%s>4KP\&!XOOYdp+07dH#=&f7c)S4t4+`
%oks$F3(.m^CXc$YU]uA2=!e%U^0?`]8BPo;NNOT,IpQ8ukdFhoZ=jD5h7DSFpMrjbeeJ/`=E98_q4DsuQq6Gu^JR(I7Zl0p97fr,
%E1;=a:BV*`^_K(f-N_iS^_K(f-c4*;JLc0V:BZ,c"'<.'-T]K^q2k(liDZH$Ss#,Z3]?<["gqm?[?=_SMce441cquUkT<7JcfT7"
%kX)>edKt@bogf@NB[2Pf&NSMiJ5\[^`bM'_ea!DZ^6io_@jGl9/fPEKJ.40"RYEKRm\H54N?f`a8PU$J]LW>V>70,S.-=hgB%B']
%Gmn<eJ/6hZ_\S];#f4_i;RtGO6gRH^4Lg8N`<9AD_J>LRm4NJOp&%t53n:pL>HYVcFmNOQ-/3k$>:s#ATZ-JVX1Ii$q^uR0Iqrr4
%B(=DW^QhmmE/Q?`fTr8C*!:Ein<AC)_0dKg*6L?0M5oi3ZbSdjQ=:o@/^;<+Cfd>gA=(D/%OaZS(*it8!(>;H'uFUO@OY3B&K*NM
%;@(GkKuthg[BSFjPJ)sPhjMPG?LCZ^.-<dT%llX1?H'MU5NYQRX^[EQ(7(e7[7u;H=k@Fp_7*KheLB2"^tPa.#gad=$S4<:`lf8T
%lcUbtO;@8q`qhjar[PC='E_6+78ci)1(LX:B#2Wka<lV,PLLmj60Th)^Vq,8[UAFf^rG&3>EWOM\n]3eRYm'8&BV9kM]kWe5]n?5
%Or\Zo;CG22/:A9XH(%"`<124YRj;jVX9lIJ/$e:i8McYg]/!tL@9V)t6OAt;9="NH@Z)_S)WbgcC6>Nd9e$OQ;Lf:c9-IX.Q;rfZ
%;JPs4,TUJBm5_dDi%ZWjD=N&Woc4l(aXitf@3Js1\Qd+!<GT[Jd'sgoEh3I-/m)7(Fk+^+V]jU`eTi,_X;faZL%@IOAW>7U]+I71
%?bEi5r].\"kF9Om4s1A).UEJB$qO%SY?3c@UD;)Ys#&fPW/5Qj+t3^Eg5=LU&FY5I-Sd%U)6_A?R[di]]:.NdqXgptd7STRqKLE2
%M:^=9$SB@E2m;+Cl[S)L8H:@!,XL3:J*`>%r3olUTWZ5_UOT1:qCP*EAI5jYflXA0WCWb_P<TG[&u_?$UeIFCPqNq_0hB5tO?,t=
%E:RN#lj#<o.4t\t&EY:_hbZ(M18/ppfeZaR+us_9:%`DLSVM4,5"C33&pZK;ek76uDHjhRN#*XdnUH]H6Yng=&CeCK;a$V0GVcIH
%0iR'oaDZmPbX'5kpo*p1Trfuh$bY?t]oP.2H&\L4-ICk:PG0@^]iE-`;<n=U93NG.@+sL1=s*<J[TfKW`tljgj>aSI2WS@5e1G>_
%7L>*WPA$G%7!;dtpF$b\A1:R#Q5CggCUiqGZjO(8a-K5#UZN\sTsY"L1gJ!Nq#r;='"7-a,ag1qIj.Kqlsm-9k6Tc[r'+h4,^Uls
%Q&2u54dW!i12HDr[NojdK[kt[F2@iPPcU<"H"u#:RYpi=rMV\SElS@VRru%c(CcJ@]0!s+YM(20WZ%\tn5..uSV24=^JsP)/45\R
%%0>RbL"KF#?q2W`N\D,.!aE^q2K$Jhc;sJ$(,WEDi#do=.#M`=Tqt%,i?;2]\e=m!lNS]_%@lN!oRVa_)po27mVU$PR6-m^mALJt
%L"O%tZS$K\G9'L$CC.(3R7KhEJ#hYJPDaR:\S)96\]m]$;uM4u&4DY&WE*EF$GdMelBAK!bMV4nqn+E8n"QDA*##O_"^/)t<FW5&
%3GVUG*lSno5'muHUWCWZ[OA!q[R42k*RlQ9UL\f$OsWbbij_bj;CPM_Jp@jIZBk.$)0$VX1o9,U!OtSD;M(u4,Q&G;,)'us3FF3<
%ra:R=+@!Z_LlA&XE%Pm>%E-dM%:X8@>upJ:XR>XfFa[P$fEW5"kk1_<CR6-Gf5J\n4_SiicaV(N=RWaDIj;>a^[:SlDL48:lLfiD
%L[)Wt)16T.>Q-m[kl0u?rrt[H^_/VNRTnhM&!m,q\bI'O\R(W^@8Qtjls7]S>F';/9]T7\]aA&;JoSA-lr.:$YN1pr0()(a4nU>0
%Y,Btpl[,Z%V%WS9q\Mfp!tH<kIu"<]nM@*baI8du)H[eTD34EVNjEH@?clOql\2>VZ>QVp+mXo`+f^R$d35S=_FdN7$l[%!g7mkj
%W\LC;],.ShT!X&KEC$n`9Oc75\]d%TX<kui-=+scL^To$0p$rH?AtXH3(f,S`'2Qm!-HY)'DQ[-5idP)C]^5H&HE]Rf-^"O('06q
%g9M%?C_;I[S4<k+7$OBk97_-CL+Fdp-`?4$:e7*Org!tH31na'LidP`r+Cj8FT?!\"F0GncZkl\aqb]HV+>B,E*"4!>s-*VH+5-)
%#E:c*fk2q]X)_-F-[ebL'2SPU"b&$0aiXZg>$r9^_.l;^`G+'H1[),s/jhlZW5\QLYQOs*+U]A*6q@qL'1F3UGF8Sg/VFgg</;6U
%&9s)==XZ08-/L'2gcd3X=1$JtMgaQK>jE@[2(eb_Rddi^,N$Va*KJ4@K>?6[3Q!X^-FkP-<=jaDkKmFQB!>/_C8;[V6KM-N!qLgi
%-@RiED]A'mo7ZK.Vt?(XYJ4Ag\#um)J?QIXc^iQppq+:a)1),f3J"/ag`9\\9;l`@WaPQ*?;fE%0#)t<T4d.gJhYm2cOPG1PVjj&
%6h@C8oBcJ&,n6@KZDQ[u0GL`?9=MPL`.Ir'0#=^[U00Z--\K-8[H1Ia/A!&oUN5;rr3B''i"q0k!Z*(M,pdFpJ[5u*TY^`mqW'oq
%)2Z0EEK?",TYcE58mlKBo7B4kV\%69E=Z$J.LJDI`%b.+B$5b6P^Ejh:O-%#8mSC_!p;elEWi,5^r0IZ6C0Od3>f,tV*E;s+P9SY
%<Ap)]+k\Ya#VF.(&hgJ&3LMm;#cc`!RC@E\D-\i-6&R45krFH.2MCmr\2":;CM7`S&2j[?Q6:uqMh3pl+b&1W!6p+]ab1ec'#-gu
%M>U51jfJp>j?QFE&:s_@$Z5$l6fEBPl`&fp_!Nb+8F2Up?fZYJKV`H%RDq*h;Zlh&(GO5QA9T,\1(:C7J5@g>PX$GQ",(FbTELq^
%#78rO5m]4m+!ah/#:0BK5"MW<&(H1k2DA)\#cd5icu)h'qGj^a!SaSe&`(B,&R@<+8Go0h^Q_Qjpo:*iM6:"ECAgRrVg3A93`fjS
%n*'61nE:BN=oXgW<utX9kH`K8qMU$eWcQ_<,p)7mOE0<aUPc6A>[^jJ0\P/GWHH%_$TD8!<Q:96Yh?nd;>\5HZPl"h-Z9rZctX,/
%b(`9Pm2VR/`IOlf[;8=nTNX&s&eE@9=q.WG_kM:I#KRX!,@BKTN%LO'O[loh>=2f\J6Oln>$B<5lrF4,B-\#6-.m9)_O-c9;[QRH
%BT;(,>ReWRS7-I#_K"ba4NS`T!(R@><C8&YFdDN%%F@Q3ZP@jBd&8nAj@&E\$,=aekBjs`Bno8/0I(E>SVKMqTn2E>;pcAq#u*a7
%jrJFu)W"pMWkCH"Ao9DmDBm?D&T#DYWuK)g<?J(7Sa([-ZEL9W=4(Y<^S-`"09$gXKrU9[;gn4m'm2\`$#dfr#t]09_QsBS&-]eB
%X\lX-mL,gpL5]q`dOe0$g<bMAPpIj]V^)F(&8,4obZBu8LO.tRRuF-Pj<,^b:jD/dj:.D8>/=uA\5qjh$KM_p,5r8\E+WWuc@YPI
%<2e@NT/<Xf;uJ:GafR<+a)!<8s5pdqm7ir%bBVdlgiCqk6&YDrX1IsRq_$S9=pB=(UW[os+#%RH))&5A#E0Tj2@43l!TQXH5_CM3
%K8?Cd$272V:@@jOnC%d.cf@8HEO;/+`U0;uos<<)7F?oUC#4\%9-q$JON=`q:'uk'j4Jhn.RTt$+Yg"IQH+Khe)P@,-a/n()A,![
%j%jZjh.:>JkL>L'Tl/`O"TQAUeQku,KdFCC]:$)D/[qAV4.3t!9"@l_Z5XS)hM!lAn[;@j&s&n%Y;t#k;u&aBjr&NhJUAC,P:sjI
%SdS7OjNh;m37AB7`#JB'$]Pk[h.i='[pkq/[FeA.aHh7<C/Jg7!g*bKaS;SD)aNo2_&D<ZIL!G?Im&<`1gUrFls[P[KF:K9YjGp1
%F'51.PEc;FI@iBB]4M\<5Ehq)iXF378MPrh(<V5fPEgA\;5g'b1nb__ES2q^hHc8l59g71a(nMY7^u-/Z0?_g*aCWV%+$1'dG/p$
%[S448%9hPpeD7WB#%9Ta$X32[[f2dKn<60hGIp^;VuNR>b2$qL$ul31d)t0^'ThQsYaIT-=sD(&\'l9q&k_B9)g%5^bdW`S<%].e
%'-(Nq\<9D(T5N<H3_I)d<&VjF4"W->[F+\da3"NXN2LnN<[2K89dtV9/mCn7a(aTqmFA)n%6$D[(G_O;$5,fWR-e#a$'*+Qe>eC[
%,f!&S9F:qL'pVa#;K7Qdf:#+)c3@-fZ#qs]mabNFYI!q9XK8hl@KlWS]p5s*eQ=9-"uXpr%)^G\"iUuh$Gc/)2(/_RhNek5@0j1h
%oH;]ss/g/W"hIg_$D14`7S[Df/]&>XAdL,&OnRtIDfiHt"Ignc5K`[G4pu&/]+H7\F_pqRG5Fs(.>8OUp9fSJHB1\^=,B'i'nsMZ
%SeUJl>e;$k+7A@#jCRBTDe)l;3c^l@9:.O@/(P?1R$%-61R?A/5?9l&U>,nf3"d_#PR.d@i"GRB,g]S5Z3aMD;MOdT.H+etKa(\K
%.l^<?/j(kbR6g"];4,^h!u)-15n]u\'%L1n)QJTlcR<n6-17m7c68)aZrdmCYDCUWir1a.G7J%lMYB_.+sDr#3)EB"YMkK+c!g($
%p\%Rlk--LprBdj+=4@F<Uq$\!at*0L/\G^gPHP,'.h/4Phj//#abeW8/s&dBOP9NSGfr`1]QtVK,k<])G58@NDESc:+<[\'(8r^e
%0$-#n-npW>GuV_uS$#6_`%O0Y9KWs1a%[8:<i_Z^HohuKFQ$rnI6c'd*#[?(>/Fd97!0Ae=UnA?+l<hA/O[Nq8TcmY0?"A%5)]/V
%iJLsST2>Z^V1bskOs'E:bf-dQKmO5=6WL9!'Y,o:gUOKTS8D[6;iN%5(bA$;GgKh9h":EH_(t*GHdH.<>0A!E=GAp>"+t.dUJ<&M
%<T2L$.[8<qHR'eR"jN^mT+Ur]\ppu_,hAu^'%j$eQECH>p<U+neb/;4INN7.l1ftD?DB9e@ZOISNM9ti>4g[OfU$`%6CHKn)YhY"
%K6q[FQr_\S3$XZK&ZT(qTQRM+R0s>f`!c6.$c+m7*A=4>K"GKG1h<gL;@%Lj`sP]?W(t"PS@gXdbY[Da(0Ho&MSf`HTJ/n3HKi9R
%.Bq/FR]9XEObOZeJ71p#83qt_bYV57!Aqo&V)+id+brbS9$^,?hFbM$1cTR-EhY)S9e,6QKd\f,hA;4p[[+NG>InT9GB9$inX_Di
%"fC&#<;fboSRbN0OdD6Lm4h7drTSd'H5c-NO5Kb7IFnF4L6hmG#_G3TWeg5_ciuS^j9.`7&WcZc(s]H(.&3eu>3C'#8bqH:+:6I(
%_S\2P?QjFI#T\L!c+K9eT9Eq]fuQaa?L[2;ZKDPY&skfJ_S[jiSWS+X[Bs$gfGtJU,<Om`H"BbGp91!PgOd@bq&I)bDdINe!Bu^5
%=cbT7g]d.jKKe[=8)8sM\/gTYG@R.'0attJCb$D*fm:0Nnn[%Ob?=7N=F>h%eK#l-QnN%=QJgUgQlKH@@878,NZ3p/%HXf%(LbR`
%2KP;9$C;3`1TAoh;o=dQ$l<.Yb,N?KQBIecmWPM&23EJ%HZRAa64l9n8K;cr`-Nr?>Y,Jsf-*L!"4qp,\Vf0rWT7"=XE'[oEC&:X
%_OPX1UE!n=RnK+]633KF6Fd[I$J(sA9--+<,,[H^(?-b'r-Voqk$0[T:kT`@.(-(0RD1du@J;D^/(23W%5!ICH&4[aG:XI]a@O4-
%e3N%g1r]\Bm*=_#N,j4*><*2C]/:t@c5UK+p+qPt90HQH-EgfI;j?m(G%o!B]XE#A<A$g-eBfUk7igf%n4/!'7t1M0&->1\p-.QV
%3*9fZpe"m1aNd$^^d2lmLr2\%%+6()&dO'i%Q#H,2^fq,Xgt*d1#LX>F6gaK<9!J5m?Mo-oCjqT@2X_M0K1r-a2:/7(UQI,0cs(l
%:l$RllrJ.e._e_9S2+!0<*`*AHg?VGqY<ee"83Eg?EM4!TDK:%<Zc]-#CM=fgkD=XZ:U\pG'#:*\XQSu[mC;aBcS%tEshX..]9*M
%q641;Os@GC2,t7FWMb;;l!Dr/T"dX+dHO+2'FpeP!$LRnMV.jFBMB%eGJn:bMUp:^%7mM*bpmU=(:8K`j3MV$HG(>VV+[,\47[N,
%@"j7oBV:!43eY<Z/qK#jH#Q%[RPMp[lb[>h0NFGMIjeTC/ksO>#%8&]#a%)(`s"g1hMNHGQL571FB_Td"BGkU66gATB#6ukQPdJG
%[YU7c=DSbY[.o?/QPH>1>u9$+)$V4.gZ2UQ67Kd,+=s9!KUT!j]HoTb09-Ko)Zn_l5>sf>ksE?^eMc7RSqiEq4Op\AM,OITDX6t#
%dK$4oZuf9UTFJUR?QBA:GT3Vc89LsdmIg:5Yg!!5FLq`_!;%n-mO.-aU+!!&)0Bd&&\.db2].X-/A%tTmQc?XNQA>)K>`8G+aH_5
%ohKu!jprL2IcF,cOGcjjE-@`s4OX9@bm<kBBkAL4$020g_E:)H[DHKpoq;?cEQWB(8%DiP:dFG"#fc8+mZTEZ7Ek1tV)X2c=VN^h
%9c!h9!7E!2LR%7U<KrKJ'aETjhj!XmQB6oNMAH;!#h$M_7F6^!_-=LV^_Z(7A"hF(EM4.32q,Vq56QDW-DhY*fhSGG3uq+1fb7S^
%QX)]KGC9*Rc.o6X)s9L&*jQ,5X-C(dAX&<)M_%Ns:(*<#m$:?qGX78Ek%1&gC+20Q(1Je02*6iNUC+:r'f7Q'BHJ&GQLYSEPV37j
%4XW@gKM@2=/UXLYHn7f3@AXbJ"=YbJ*+ujM;n.*&d9JQ@%jcD"TW"trZ<:jqS\esEQq<l;T@(M/c-66JYGIIR8LVSU^5Fu&\)uB.
%bDTJdZhh]*=E6L4jAa]d<#+J9^/6d%(Q(KghAb7^I2`\RVb#c5Cb!QW2ikgl$8S,Q&hCG1Jrl81+g&7d)9SI(A3nR2fWmS^:,ulj
%Xq9*O,sRM<Q[`ce,^=:"&/K+\&o4Ki98Jk<0?L>%O;K-$6:?2La_K,+P=DtiUHfY%pjF#HgbqlLgpe=6iQ3*')'%p\XmfL7:kWG"
%ckSq"N:-K^@K)"lF$b%+7H\2OnbF-R+kcR$Doe[>%1D?h<;.YPh;VlSZ8XcA43lYY3\<I5=71/Got--j*(H+Hb;kMllfCh,8psI0
%?FS=jj%.uqjAPAd*VDISG.<TV3KX)C8<FQW?%[\82.hj#F4Q0*=KmW?2pp2'g=SgIRV5V5D/#/.b$o*!;bY>M$EQ?!N^eBJG5:L5
%qmBQPPH(,S#L4BlRmE6a\f@fF(=.6KPGG9,$"$V8V*GpfU#sh^pss1pMEHmDPP^$fq8lIL@L\P4nj;app$B4M0t"tTe5[!ZQtl\6
%>o>d)*fYQiq!2Wt-M]$M?Z(?Ag8Ntj[!GR&O<u'JLG`&4!B^nF6Z&!4M"&Z?2'N)5s$5+67]QqA"XLtgJ'8cNgk(rG\/$4W?EGoW
%'&_7gp,TG_NK7:?ncN3idM[t..H%P>OA8_QL;:>q/,+Qa3\>p'h\R?^b!T$$2DlV?4t,M`P7Q3]I$tdMq4Km8-Fnn#"_%Yk%/PZ(
%hDRf&+N6jdl>B:LUllEl71TQ,UpXtDUlUVE*h]cb:cb\;+=Z*4d\W6+6cVr!-@6m!87N/r<@P9Y&f\8^RH3>ZB"-TORK<'q7,J6?
%!8QQS:RM+>m,HX=O77:7N[N#)?RH$recTKsEkQl<N5R]"igZKY_Ptek5K-&LK8?V6c%Zi3ZP'Cn(,QISk>kDXKuQ*u`EZgsc5tMO
%:(lcOEEKf#-CO3OnOGQXK%?d)qIe+2UdpQl3.O;(U#W8^iATD7'.q84kNmg4UI@n7O6e-3*i75MeFb&kkqMfRkts*<^*D>6V4hs)
%j?]4<_/nRD0&;.bo%o"(b+=5j\d,hA,@0q<(OrY^E4h*%/`5Bid[+n$m(Tn:4l3:#e!/ud?_Z1,-=>6@\mQ5=&&q-o$AY>i&uT*#
%b/Vj*Xb<B!8>/uNQk..)#9@OBM=/HR8^Ichc<PSuds`X#Yh<-Vl*)+)3*T9D(DI)8pM-NWXFu3u8f(=P\G7jL[?aL4#q<HR9:ChI
%0[?#Je7$TS'(435b:1lqQ_jRZjq>Xk4'S!`h5gFY1:K'_;G;$SHWF`2q=-dpBe:V3GG7UNU'Z?ncP85$arh^FQk3EH#`qsrA67W>
%FtED]!j-/YMNL#9rlTSk@eZ^*35`AAQF)"=V*.[5m=2FKj,%t>-#RAEc$L4rMsL0pkN(p>\RJ'1kj!36Y$h9]F*@YWn1Ln,g+0^Q
%cD]FI50:NEP*/_/P+?@m4*=>Ap.,C%AUS%@Sm@MLFV:o!*a0BBO_Y1lQUgT-P)mQ%R/8:QT9YT2;R/%+a-s>31NV:Zf`%-q'Bde4
%T6'q@`h7)e]#LI'/g@uPETqdHk@kuPUj@:YrT1XE\+=PT/T+KsS;S_k7d"`MN\7e<G.]*Qc.f'bmsOg*BuKsBm]Q&0nh*A2HZXIp
%isnf3?EbS7G>h"sgW(^3F@kG)!Gsm#1mBn.lHC]7TgPNi*f)G&L,@USV*q4HM_V>WWRV,s-=ViAWA^DSTZ*"A\*:EeV<P*411gG$
%C"RMF]$a/^VB@*pPIsBDf7l?YNV-7TLIIV2$G]H.k&^hV)SjB&Q=aG[2G"Nqk]aZ1NY;"L/hU2nf;Fg>UhF46YjNroLLr#Cru5gD
%lGRTFd@7N1c\XhL?\F:uSQ&apB)h=RHPJgh8P^a'-]l3!Ab[fWND')BBm[qglM+2']M20CeZFJZar>t4qnlAL5u^]&3%Z(i\&Ha-
%BbZ!8:<P?b9_X_=N'*jM.Weh5d:\Bq+C^WX8s]n(*C&m%e3Sl58&^XlmNsMkdZ98Ppa,Tgb?rh`A%8A"1ijIHXhiRs^pVKe`ecu@
%pf[d(1NGufpO>a>Onhi?MPT05OH6T1'I$CD5&tlN\bOrn3T/`u,IP?8)p%BWP;^YO(;JVfkQ$*GG^OIGGUsf"f$U[tPdt/_+Lfe4
%Frs-?PPOu/3=O2-WJB8&MF&,M@""LTm7o%6ab"Uf&"6u9\_Gs#G4rF%biV4P`:f344f^-he!!DBaA&p-gX/E;Ys^45LuQ1d6m?V%
%;1CE"-^MiY[dL\/4_J1,Gnp0s\bTbl@B,cfHu$FKdsTji^S9oZ_J#7Z?)bI6hGq=gdq=$sSWhN#4,`m`!)lN?1@isAfsuZt,R#.d
%.Q$RenYudoN#&F^b`TQ*#)hua=qMR<ai]d*@&C:;IfN5[fSd^-OM?DWO>Sq1\-\BJ9OrU$JB#MR#4&[*T2s4SK'AVde4q?cnJ5;3
%KmI9oq_`G5JRsVT![::s72G$);96(.,r?$Tp-pQ^0!TQ8l*]lM'N5`8qXk"SG=%n1dc&5YWED<(Mb`B^0J'!?.8?@CS7/]M"3j/a
%Re9?0NgSg&Aj(c_&Z/X&e/i%5"[7"/("6VeArh\mGR@4HMTlCD'Sq#2FO(/+Vqcl5i"_#d'D;&Wl?FQHelHN%Z2.kmX>m1>)0R&L
%R8k(]6(O::!EjAqC:BH6DG>r>[4&"[="fq9cF,Qj:,WTa9=q8s?7@B&76;.[h^l;"_5/Z4mR#8N%5*JW!YkGTIWMtg6*E&RC-M&e
%QEkt_!8@ZnD\+g^5F*#Yk]MV?"Zoa;P=@,"kdI;BD'*V+6^$NIVbPON%E[$i#757oD($3[F]n4sDX1=mq=!LRBaaOVC?Blu8nr(0
%<^L"^)p3As;s&STEaR6,EL_N%::Y"1g5)"jY1Y/U3_SX[`041VeqEf.;`TNa+2`.b_dmu_i8X?0oU5qb8<7n4Kn#r2XM8G8K"pm7
%$KjgE?mA?/&I?^OS-iA_g-#"r#?MjL1RBEahftpYVe+WOhkgZ8rKFSTpMWt5<r'kjpA9%S8Ud2Gg%Kc/,oC;oQ"6_A6)3)K<XKU*
%i'RfI0`;3945QtQ'l+7D*i4iI"V*)mjVj.hao+bS=Yn#[J'gXPI^_KW,XK3baa(m<[G4o(00odtph<BU]^(RO(5oK0?S6s$Nj$t2
%1]$PE3uH&!R@TKH\'"mi<"YKd5AsIchp;$<J"H=o+3MLkHfpoC'mjS5*D'bQ[[i*kcS@W1>hI%Sdth-rbV6?)c"G0K;G%$)DF'`q
%>L5-l"h2*,lin4;D=H'H4$B?p=G:6#hFJ>m=UpXbKhMGO[NEL.&4If+>U1pD;;-";LXN_uI3"U-PZS1=\oTORNY&s";'ksjhmq1q
%YZ5=QQo(q&&uK@WIMbroe&Y2m`s?`<$sR%]/hetP]=T9HjX'4q?K)-cZc%q6hRINW0R#iS7GYT_$V*csciK!)YcN1dR`RRo$R^aJ
%do>!lSi:`F&r!bJ*5QK121[`T7oX(hE3)+-ecZ[7(MO6H234q&d=aa?<B3Oi1Ert&1u\7"8.h<ji?j,N=6-$f#@35NMAt:O7p"d@
%-Nr=#'CkeFb4-8qKLBpu*(I7]KVms9($B^@f6=7Jh1OMNjVE!_`Kf"S4Hr%<.AR75`7%=D0m(WmdS3CsNDe#mcQRan(Aj+OkmpCC
%3$+LT],\"e.sA-/gSal?aWWNhC)1X$k.mrg6:.!`C8'ge0Bim\[TR^u/8cnRY1P6q77$*kSljdr*\9L[3&n+om6mCAL8pJY;f1ti
%b2t^pSGEj,Co%pb**P'N)'ie0]&VZ+S*fr[b3rX#+Rc`D7T'`]O`>O,i(W2*L6"/Gd_nZi,>Hra'/ulGU_QZ+^,PB&<'u8OMhL*X
%/XfbnUk*7S3V_InEjs'C@r-<*hgP6gn#`f13tuid%m;qJ_EKI9UV]2Em%_E].dWqI4t>oo_EJ=dUN/9@`(1Od:$bM]a.j0VWT[;g
%;>k(g!dOAD#/,C<Ds7aB!3+/<V=R7[;l<hG;6mts?(gUNlD+f`_Zm[Y!u$0IT\GI%PbGIXe=lNn."mbUePQ<jme.[W8gf%O,5[!L
%LjMG8;.1s?9VS=FI>$)^dfuX3U."!7);B8lW?S-pRo1<P8Xc(OkB$O=r2D%%G9Mb_]jscSM=d6%@eI737*;nX%-A`YCYHf]-:;&'
%NlOca[/d*IM9#M:_Hi3DZTA-(;]uqXG(W2!c_#?)6(E\3O!DU%qE4lVGf[`2=MH<D<A..0KO\4k+lWl8)K8[6%VS],d)\rjInk@Y
%%V]n&1,t`dijoH'(*>^VC,fPgn[agW!K*UF_t9Q%*@rHcZV(VdNdZWr%1"d&ml"-[kh?+WT+X2/3t!noR)4D')mY2"n"tpqja+Fn
%@sb&&(-AS9:o`09#`VS6dPQ%h<UA]R+`D<+d=`iYGGC![9'Anebjn'WE@3c;$&NFlFOUV:*^&f-!fa!tX@s"H0Bo,1N`)u.W&]J?
%/c]O,DgZ:("'kD*!gK\$'$U0]P?+DW$fSZ&A`gLMi(<3o4@,q*9_1aZ&1jG<gVm_K82bAY<ChF<qL_VmcJd`CYDGJIMh.F.4*O9&
%AZH_sfENA-o>sk2I5.fg'DI;lm>GBV5&lW3f)EQFG"8eA-P1rd]&.N4_=M:u*pe@A)$G&]3$78=nfdFo=!VnYDFUPk=uofqVR(>J
%3r*qZd_nZi,>F+R0o.19%'"O@j!I]ge=Z"/QCE*:HeW)"BD(\g#sjh<40OiDlgY'FR+nXu@1D=h#]i#JCOS5*d*>3?h`AV$S602\
%Z/$(ojb)fm,Aar/kF!=8mAF%C0fId(k=c@k/qV1\V%a3jc+-M-ST8jp+O,MaC1k"2*CZ08dtn6gA8r\QenBk"-K6ZJNYDAW\lX,j
%%Z34R7>?(;\sY(#ZiK(9HJOhSdiZM"&C`G`O==U-RG9[E=-sObOs(q]LR0>R#g]0mPNX:j!@:"0,QWKD5A3T)iKO8&_^)UI1m+<^
%.62c2agN4]6!#ekP%(5bcgggPHL>&':7WnfHlpAES-AGce#J<0'+",rA.%jeXctSsGYp],OU%6\EKZ6CT^"iU>WHC.EM%+?>LBFB
%]6D4O;aU7N171HmaF_%pSgP5Chc6B/mfWrk[5=Q*&=/0#<coS5""WeV57Xg9ZsEMO2U=GMnagB(@6Y7(a)kA[^$Wk69n3__*+2!S
%])18o8Xflt&:EaFQXrY79gf:83[lFAmftt`0'Pd]6*aqY$$Vo@*,ciESoCYV5SDaF5-^Z-,!*pp4O.Oh!<m)Ql5jV[_iZjJ6Z%Eb
%D4L9WrV,1"(##X^UMZMKL5kRpE7OCI>?K),Z<MU&K%rQ:@P0)bi\VOdM)'7Mb*[s`1*l=M;T>qO))nG9J/13q1PR7#fT@pVO"R$9
%F=1peoYdXkBmS3BfX.Ah%S6^Xb4(1fRRk.B9?Ar(9i2YfA<5/RgnPUH'/O,L-G)fC?5Op?Kjf6X/1$iX,mS9em)ZC'aXu:LH;+42
%*E*;g$tVr,\E#9<-BtE5P,=p=HutZR?P)*md^JiSm=etq@F/=*amjcTei6nf%,$O?pO)12&<N2=-#PeM<P'IiD(EC6@+H!I`pdCH
%YqmN)kRC(`K?PKI0O!)!ZPAG]7]<3kKu$eu&71a*f1X_%^=GP3)*aSRK7GJEZiTEdG!V]@!^X'@f'!DAP)R5TA(V:'M?9q;:esUF
%_Vgk*)k7tWaGF=A/h`'XjKEgZd"2nD`d(/>=@G9M.6MMsfCO_&ApiH3,NfNt^#oj4TK=NCJf1.aekddZS5($_Z\Cg>*0kSGc*nC.
%LVnJ2g(K;i^eo"_9Eq$?dM5A>p)e6cbI1>R8,0=Kb@+8_@=/1'V2<4uF>i>fRdM"5%NjWqST'fI_?W&I-QF@iE8]D2nJHUI5?YkC
%O:!d-;9FNMngm`dbY?Al-&ZTVH1(3T:OLMl-m,6J8a1/%/]CBhH(>^.V;=`&6qo,+Ekp+VX?e9]Q-(u!('#0m\1L046u2O&cML]7
%Xi9(pDWB#rETb3KF(*k70^`0_G:nh9(WN!Rj3E?5,'f,F+),2[M30.alr4(2$(KSQ$/FX^*RQ#hjoTo1eU3-i^6JqBa<goD!\e]u
%^n;80-:$%^Tu$m6OGC7mT&Utk8/-\51b.nN>E$6u(stV2U*QuiIjiC$j;gJ>+#r`r&$E!ld&D0f`qG`V1[gkaH*8+/oU<%tW?Mg9
%bUGki8+7\G^"Wu1lq>tGIb9LB!Y"fD\<?+(MrZMD%RI`N#SB3"_i@uY!YOHh`%W#?2rE].!YQ`aQA-Z":ngEM3R=7`Y#:.=!mo`&
%17G=`B'W&6<K7!E=Iee^5!)O*ksX!B%uMghDV]Y=N/Nc1,=bCSXmJ2&LA;lZ8<K&@4>K)O-9O%1%hFRA2:B'\WEP<UjK1YKQs3uV
%@)%R\/gcOFne"eY3'=GhqdE,IW'jAm\28(1'Kf8cM];0HUO4o\-gfh=Na']^.jmH)e_5M11$)o+I$@MGXea?Apcmae4S"4kq]g$2
%@rA`Li;>;fMIXL]Zksm+'7PfL_5U^CHlS/2pdU:LEQ@!>T+ASU=+&!%L.C;9"DH<T\Po7KIFs^)T^aQ^5\EjEC0eK6NtKg=TYd6J
%TWp]om1[G4bULu@mj,0<2p*W[UV+$q'quNaP%h?8(>:rUaP;$Ed*0OR;9X;&gU2I>O@FEhfWOYi6;^u(m6]YAf<o,_Z&@iRpE'3f
%0&<]JiG%PoWI1@:E9s`g)7_W]C[2\DhKZ4Ed9aMA+p$hEMY1_2ik0.h&d__]GUV""nQeG6(XUUU6]lO]GBpZM5JY/Wnj%R/Xr_F7
%a\)-0VB?DGm.RPZ4pq[SWgjbhFgG,"S$f"RhQ*4Gk`SB<HsCdTj7-6enQ<RlQ5GYd*017CNs.YA@f[,%i4F?,jVRXO?Hq8L<OBH?
%U@$Z9a&R+a'us<o>SY:ZnN^0p6Wo<WB77M?W`\ttMWGZf4GF!"+i.YZn/)d#L'3P\_.-%*(_ZbuE_qeTT-I'h1bmFs_9p2.-mZ;e
%EEi*$@?,L]bYc;oVjcL#aDmmTp40A2I;Oc4D$T^T-V65H%I3PA[(9l9N[]<O(n6!2%V*soR>qgqL9ZGa@3!YF%:T^^fcDAS99M%4
%\%<H[)\f11;]'YpPe'.Q9/Sn*g7`DGOuFh5K9SF:gqAC&$jb#?0if'UZ4J9q?6`f#,GSfhULrtob+tuW`g@Q6?1m`gHSr,OmT'"%
%YPJaaCHFoM[N]j@OERtL^\W#ip19(,'*4rUL^ckF9X/e<FLQO%ZGlW5&'#(Q9b>MgLWP;KYR&*T",@YGMK[g%ThDRdDY0jGOkql-
%+GaC6#[]MGZ.mp`(*iG@Q9eQb+n:k&bj:XsH?Gj0Wl+U@k1@WX\(P13A"<5SWnV-OgJ"q<Mk..OgN,B0]$2cleu[L;P>r@/4c$pW
%c-fL(P[/,\n?.gJIVK7?$B+i.e^aL/\KZNR#)[pC;S$F4aK>[ANEB'1Nj:o4d\\35)iHHq.n:;jP19LDH9f.C,Ht('Keb;e$V9U%
%!gs?1@O4H)BgoS:O9ng&?^r"P#+6)"]c<_bj<OBK6<4=XBcC9t!\pY66,#o"l6o!er0!Q"YT&h2XV6n5EK%9a$<]t:D+!19N,iXq
%jRook(98ipQQ!nJnecFSD7i,%+Q%3/T'"hSBNi`,@u$KVa\h1oh(qW)QBI/b%>3pg>G-QpmP.0JD_5]EU7>1()'M#!@NL1uUm*U#
%""/<sAV283TAD`oek[EW-8`"m\C"AYa5G_]=s!ieOl1q4)$nV3&qD?\:_sWKJW?%9)EI'CDKB0-2qu/S/I,S0$TsSpO!j2c/;/qs
%LBNhSm,YGm+$hD=\e_TPb65GgqYcTL7p-`tcX`-6Ocue750:N4NTucC^Ed2CnkOB'8uR:5^RO*S=FnqKbs#WY=)mOUD;@?an]mja
%nb[W[]FP?LNU.=J\I@2>8_esbZ!A:HPHA&bU4XXbU+Tfgh:r^q33#q5D&`?>n(.'R794!&<EB,[-[3E(IH<I==R.b'@s?i)4SVs!
%I\gu0,(Ho(K2$hEh04=OA<1]oG.R(>+14X8E7=h11GtqA$l7:')TQ_eU^&s&]hDpaM=gYhV(Pe?j->"`AWC!cqf-5nQWqX5a]82m
%bKlda]6$$8a_,)Fpa.*C']rr_H,^t\([,6#Peeh1A[$8-6<Qc!SM_gn%FTFJi5@nt%CR:\e;[Ys`\)BYR%jO25r;No\P20Y_J;d]
%%l5/KGJJ=p_//9qNq^J6G/ce*d12T4P&c2`]usH$j*<2.[RA.:)LZ&%JO@.AgI;d]s'-<KeCY,WO>%a`oQgFP44NFA>gp=b9_<g^
%\3qg0<+KjUd5JRQT.kh-2N@&9nODhr!fYY:&T5ebiPjZ!?F^6HNgA(+.>8NpkZG<#[r2)N?8G/Vi<,5*)M7%IV$iE]"Z6UPil!+'
%@?Z-!*iLYHas&Mj`28b[1'r3%5O[:@C?WI+c8O5p_b(SrTuNDXcERPgW)M#u,GlDsD;@7e+?[HTLB@XM!,#Nj>^+npqlS5-\RgP9
%KqJW%hW[jeSJGoU&.C/IIOma6;"0KT!<BuZ2`,d6S-*;fPM%68C=#4+R^KTfDF7>f6#JTQo/98s;GF4?k(-t(rbZYrDNtq?jo3No
%?l!Q4bsBo)P>Pf2(J)"S;d)d7N1#7-TsC1(0GhT$h7k[)+97_($3uhqQ),bB8X7sqbuZc7/>h7"AHJu4"%<P-/(;kCq<<lX0*&Ai
%iQae`FQ*>&W"OoVf2[ur%F#S&>n9kA``43@[),Lf?%`K1JArYL-jM'%^Y<#kE-ZVHFa!;uM\i(l0)Xi,ZgU*)D]/TK_s6N%I<kAE
%jR`3#lM]l)FOFL1=arhd?<f1hdfL;sM(qp/IlaQdBpP-$;V':u8/=:9c+THb*%!oM_;G8/I/\%4rG@]n^7G2Rs%Oi<ca!E2+7])#
%ZgWN%BmT=_b<!t-$h`qS4Y9Rb7:-_sn'o;6:0m@n^R(0QAPm+(j>%LX-T^SqoVAeTPXKi770tc_^`Pk0"+bI_o*Xs3MeS/*oS&jq
%HGpoMC?SW6-LbN*&cVFHe0<"Y$F=hX_1Zs?^[,a"$K$TQAGHpA:DlAK9rDP,_iLB)($a9?p6U2EqPW"UMW1aRK:Z,ne"ctW7=`uJ
%U-b7-Yg0.d(V4I$5>C)M4cML(p@VMqok>"_]5@DBFl>\`1H!DVgtke>-C^G\)Z]E;I@-(e'b*L$'pZnIDPs=e6AXDI)cMQpVPXP%
%*OQIo.Y[*R0DjJY`Yl1HjY>%uVeO+Qe:he0rb4EYUUaE+dkX^Ri4VfmVO*j&Fkb]#=u=k'Bt)Qu4tW4(h);a7(?%u[[MqD6W)&=J
%e898r,.3Dd+sTni77LiTOge9<>?R)h%$t=o5u<\@49.iSd,(W&[/%q(:%6G`(h$M\Ea@h4_g=J8a6rBamB]e)2k7qVT!-'-OOd+b
%kOd?Yk!?mdNo@WupW>4<<?0<-GHZlIf@6K?SLHU]M0GEBH:B`aUr.9Y1@Mq+("#@-Vg;oS9FK5n*mVC0D19W"0q<Fu>Ue*j<f5kK
%]9a0@PU.$S_g1uo=^nn2Uc"A23PBRDkO@sUWE3Q3c*Xd%emELmMKJ`1)muB(Y>=Jdfe\Cpe.M'u$mTd2^A`90r05a?\&UP<hO6U7
%+/gK^<Se<@l3!C+:/h-0s*4NZnXPk6:c(UPI/^+6B>qX10!@LRF)AIT3\$^dq%qA@#p.MVq>%M_c`Ze*W*&boQ)ms!-u7`r-#ROJ
%O5DF[<"!*oU6hFFUd-f]E]N%0;oCV$:f"#GhkP$38O274,E?T/dC/APWp53-c.8`ZEe[1#Kl,H^J:^9Hq2tASf-Tn,[UkTlLCBs1
%;%q1=JrD=,cr5KAmU/FM%KG51EDD_TT#5g$)Nfs%0sT3'XCUPA#9JaUJ(ZEWVP%oE!gfRN?0/ek2k?g$"6*Ed$e5,,>2F*GKh5^9
%HE0]Nb(FloFH%[SeD>1fi=Il\X#%BGcjr)!$que0o(a)cTE"M3F9.FT%*ZhVW"nS72H1g@VGjuZ&'BTjo4afI.Di!OAp'A33Ne]+
%__!@qDI66Y4Mh(SW/<0#8oYY:VSYJ$V=.6H&ngTrG?`saa.>2t\e;EaMqE1R@2I;=I#@n]Uk]lN=]g0#9Q0?WlP`fb4>Cspf/;J7
%a)'6G>h?d/D,HSSDSm-cBj)6UjkK1[2Kp@t^=UB2/2+Rg#9'$X`hZmBmHi'"cMQco\EiD*K>9T_2B_Pj<$@Cm*dh>XqHA)jEZ:qF
%G7X^R\BN`DQ09ugQq7PE+:;)916nr.(9+FFk0nK8%tTq9DKNK,o=SAXI6b:?0]23ss".0rPt)CdD$^cWo,FX<$aKT([HF7>cGuIa
%b+h`*G.t;aFZu!7#LZs1`snC(-@+G_n][g)0MKhL.d0mJ;_7HSQ1dOi9tt6cnf&UN^LpVn..&>/.=GS5`13Vs(0P6jAWe@tdq1oA
%b>('*,-e--/$>FKjZtsE*]=PG&3T`8msp,DFh0H!$tl"\-c4K!_?O<+_CE`dT^Y@iO^"#n.f2L:c%^r%LQcQ\'d[NX;6pV<W"3'V
%iYEa+E*,+gLhh/A%a`)I8"fZu>HPFtc%Ct<f_fVDn*\k/*n.bcWgX"gnni.9;^J;a5IFt#G4"WGs&5lPpF`?:YhY@PM8$U'6bqfj
%9!WQ.g8eqZR<34Zkb+\Bj9n=i%jC#TdPVsWYk4VVmB4?8jU`T<fe#0G'"(f5:@8"[HsL;^P6X32.a$1R+a,1k$att&6@TORbGLQL
%8i-;:3=D"IW7'V_n!0Nub%NeK-Gn(oE0`gaG,'c\0J(Fu!6W0"`3cI!0!>]m7%2@-P,^f<0aSS(+&#^,+Y#)l.c_@fP"Bp'"62]j
%Sk>HZ>#a,-"42qtIKLdDRW<\:'Y.2o*i-kO[*]?tR)V=:rV,IFC4:>HFgeh_?2cSS'$EIg@=UBP&4F7"r;G0rjk7U+PL!mJk2bV"
%rK!GK'it<Cni*ZH(&k+`1%JT5,`.K'LO29G)6VfefOb9%X%\c`Lb3nN:nCY;+k@4#$]r/E=(k_P/22%_KS\aOa244:/OaJ&Kc%2a
%&Bekk$M18)&6kE'DGB($S(H)ioRThC)X[\mU^0edeC*;4F,3P5^fau;HD0gfLs;_GjIl9H:n)(04=7V@6dulTT&lr@Ss:#P-?4aj
%b/.@_AJq4#X$u7V[c1,abeCI(Tf+@-Yfu\M[CNO2Z7:i$Xi`r`#=:![.A.2*mqde`>=jU.6Ku:_FY,s2.`XJW3'7Ogh/dAuq4E5n
%S=_3g2*c%/96#j$bS@[B'G=VKjJF4Vn%`&3&@l%L<4.Un(_F`AYgR+n[CNAB!EKXG+\s[)JRtZ=V`^KRWj2fue,ZPK$k$)OO4@.K
%<+V)q@K8M#<d!'5PogsG+<-^mP?!OZ)6^W9<Ye82A=:M4Bj&Wj#=*?aQ@,,t=Ps=%Js9$`*)N$RWZbnEbrdFBdtRE;WH'Gho0Dgo
%W^=l"KS][T]IK15f*<_*F6u>W#&HZ)/9JC4jq!`BD.GUsPn?)sG];a',NQD^8aQ8FJR"o$@Tq<=$'C]lH!/Z-\Q79FP0"EK/1"L3
%ig^-=a>K^iVaaN6F/F'M$_b"jHIgRm6uAscR?Q+cZIVLQ#DcP^8e4PVV2Eu#<okl(Zj#ha0s-YhTf.YBUS'MF\Y6s5s!alueMLjM
%GRWN;[4IQ\/JY[m']rET$8L\/$;"k'W6HhiC[s%Na=UB#bFHBK(*5'Oo.iRKaa+&R(St'j8nJa`/?b6oQ`H"eL^OHt26(Pj:(O_2
%0&Q_H7pdtf*XB1Ngq)M'J]G_]q?Bl,Z_^6aKNt/W+;-FPR28kbMedJ@'^S_^_MXU=\>RE<H48m]F#eJ7-BeY7,Z:#-<@Q(-P*R:M
%kIGRG+6;FW&5(7VTam![Z",HgS(/9F\`,g&[Il-$5`Hu9VjT$e0Pc>=Q`8MI4)fFhjME.!6tG@F*57Jo>[%TC0tV%Rgf2I*j`JRD
%_)Y/I/$(LgOiu0%08*RFLXW!Ib!iJmYV#Fi+ZC3d?u8nsaA''_=XtPo\s>\7#=L15&YY_d(28T[9KSc&&r4Q966:9cEr%[6*X0*b
%Y"0<$r6^W7;FZrYD1aU5H@$#@g+)2blk:7m*4;lM`5Q%NAf/]BpV`J41'OaN=A6\G9qj*Oi*$J=B1ZN?N8r&@B_P+l74Ki.PYZ'_
%Vf@-8_D9_,"QTUFQ.6Ar8M-2VUD+6@cF'kYLPJAP4@7&*?&6?B+nm<6hP\<[R"Ts:ocINocd&5`kKj.q5%BBJrq!TP^Y>9]l#StQ
%)h.Wuo(hbCcS+4s(XU"AZT$K;\E*i_"X(?\FmGR14$,[?>k>JSakskD\FMlDIoh,I=OW>'Rj@e\!*iXjT<%R!WV(.Wp<1(K*VIdZ
%8_'I=>4HM94e1ET:9WL`(ld&"f3j=AjnAenq#.FPnAg&&r3=![1uGr`c9JsG]f*>1jm7*)=Kp5f#.&UHhs6K,g#i.j'`'fDllr'0
%9Q,c3rSuo(lJmE27CE.RCab(Y'<ePlhcueW02C*-6\k-A'eHNX]aa3!Tj4`b?Cqa:nlg$?_n"F4\iRGafu:d[+ap/45Fn@KLX9p<
%HZ'l;e<\hop1Eu;]t@VM^MBLj+oJZFIp[h$D]dZOp&"2RY#bQBKX%cP5\@@'j6!5!hp*M!5Ma=9JpuScrW?aEB,A06(bK]/CL8@\
%C3+fKZMs]@p#4`[acI)D)USK'Za5;#+>t=mQ`I13jaa'"WdC<jmH4A&c,[/k@FO>#H9oEjm2c!!I/S6ZeYpV2i,D.cmZ<1m<)gDU
%<9=)tWnc@P(!)0nhegY&NlkVq?q+_q;3eZm7\_?2b73C'UFpc+*+IFZrq,`>]%j7-%9.fIj3m#n%HiT3E\Gicd,p&lipcWOg%q?,
%o2kB]VjlQbg-PHIopn&)f=Q:c;cF6/!$Ij2#aYJk'(a/Ee+rj4B+hU-5fj>5mo^"mH?K2Vj4W^,[[RI3>Ai<1IJ\#4F[PnqiY3<N
%&WU;fS.8\B:\VB]%N30G(&.?]^!HB?BrX;;=alC*0LkZ)CsFu+?iKb:\)%`Pk!..HfES2/^.@VNL\8d`f=MSMnuo_9@mE`.a6UpX
%X-<4WPLV?ZMlQ5?ZPtSNTZQNkeRcA'pis3X(d`?!\*RsZam]<`IfHX_=PmhCrg"q3E4dT^A,qDq>oTY.F.U$.$qgJk@JjoV0`JJ(
%)<6Lsfu;Lb@2?#\4^L'Ra]*[;El4(THB(cR\>*cri-cVu0m)oZcKO@L6k1n9;#>CV,l)SDF6*8clA*pC:''Z0ZEZJbqh&Ni"!iq7
%GEH<%@cj?VR:!9DA'"AW1`h_4HjF$FZE6PTanI`Ke`GK7]D(Wl+UIm:09/h*$,2>Xi%D?QT*YC=IJM&)+o*C[S`,aKET6"UHSJ"c
%N);dP__K1Gj\lR)bFtC_#LV.S)`=+'?FQEKq<W.8rmq-?h7.C`)"qeTYj":g(&tdqR*9Zf->kqnq0E=KC;mlcAOjO4:=%3e6UDW]
%U0@B[k46F%c2$Lg!K5G.WZfEi;/9]KLW6u]D"8I3f>tTgQ+R=R_Oh82)RL[U^q&&.KH0oCIkaF/*l?u%_N")(L90c<L0kCXlNbb?
%#%6NM):jot-l@K/-^p]95fiVcTO9F?fbHaacD@43nG<ZEIktI\:M7oi_QFD6%-]a;c2iT@n4Vr*"$C8a]@Fm>qY\n?I!mbD^Ycb:
%?fPo+37mR^^?o.u]\:TU5(5IuSZL_P0<W#pI<^oJcMJ>52o*u;1c1a(3qUm(FbXkHK4ifVOAR^"kV_&iBVLQs&!fBhOfGhKSp=S!
%Rt8>fM+J[FIsWt:gNbh2@E<7GGa:#`,6uO-L2?>W'2k,9g2)*t0Gs'Ag%kHJLn4-i`pqg,c2/[ETPF?Ba+3u/[2C1CD>#rD>t\en
%*>t#HLMQ9m(p!8c<dtMp$7n#8X36&e'%bp.E&:r^Dt)to+U1iI\$)K1Cb>q]XqdP$G(#!e4rdF%H!eJ#>a(I7?t?15B3/aG*&K9L
%F^Ln)5J(%$#4*j#=e214],@n;+K2lT5n/nn6@A%8^S=*MNjQ=q?8[Yk`S(,S;s8.\eUo);b]Ya2U)]J:1B\j+YM6^g`^l<rR+t1K
%M/mW1OXPkEqS=th0bWRpPKZ<\U)`^6LI8AgNNjmY6-TBQi/,CHS/bHYarlFepou6fZ$;;6.(_r*`hNCQX3DK>EbN&00u]jqicGFO
%Y)b=R`Jh&M:PHQS*)eE2T\4GV/7FK+ko7mp*hW$<@ql4qkT)#(5&pD*PNNC4>T5EfoQ"h3*CN#)0D=(OUWQrrI.MYZq)_nIY_D9i
%Y$]58Fa8d#q5IoI)7.PGI-m-mRN;4XZ154&-lr-;aOcH:Y:VB#A/*XUO0'Fd\@+jN*P'nFeaCH-7Ub]J\CrYDCEln"\_<Ua>3HQE
%rP22,Vo[WtJD`*B!$%oah5=+1:87h4(oPb@NOmU&LU5mik<GK?rcii"S,\@V;@EgO@k@U=.!dGC]<>(kB+#.KdcL?(B'8=V-^VJW
%87%0.A&t#ljF1&d0jgd!`"_]j14e%Yn/:)tJfc>#'7d]]ELpI+Y2>gVlorEIU;RT.e^]&oe-bL/CM75+QRA$ijl6S>qf;S,SlF.)
%gLR:u@)eO#'91iW3l:a8`9n`!ac"&uF7>XMBRVpW*cSE1s'bL27%j"P#99B8`-B*=4C\W2[sT;_3-;U;Z\)'/-e@QFHBMN@J;s$L
%+Z&32I3r;,38$#tOLq8iF7>-)J0"@8?20=kc0WhE111O&6F<IAA;;mHNaQ956<:^'aq78:rJb6.H$8lKrVC8baRY[(,bLeUif<?R
%\C5BOl$!^<hdaa(3;S-"&WZkJ?HA*)hpMHcqL=3'U'EYP^)G'Q8"]86o6iG"IZ-JJUHIaMo_EA7h9nC]Hk4ka2>V]EN+V_X5&;9k
%[r8I**5D#SfYEV/7gC:$i*!hq"/cR9h->KmFtnZm[dMf"kl+\VT5T1jI>I'!^V%11$85..a6S6fG&K?Jo^S/q2=Ri'W:o*?g&^Nf
%p#TCS2MM\lY!-f13je#,\1D1NRB!$9lq^db^A?r3]tX7KKTGe-B,@IY^MLX\kLo!FIJ).PqXgi5jm$<Q:MM_WNMa&0F>fT5JjBhW
%'hA/ShM!7S%If+RrcRr6qJ+X(I1]Yik.^')%N*Lf*52lhe-'pgCo3VmOd>bT-e;U6;s(0i^6BN7,g$&GL\1s)As^QG9Ai@b7NcOh
%ZRt04:tt^YbV<L51@OX=-/6/qTJ7h-?2X[&AFMYid,-Ss?:MiUBR'>'(gb/)_M/l3_N=_-1q\d%QdP:X)I>nNb@l-G&r)bE)se25
%ajWHmOPH(GXH'q+KkIb8*Lm;tfJ[C"#tkMA(`SZ5*$QaIZ;^YIP>.R>?2^uggM*g:MQCW=nDW?4Yp&o\%R%kNOD/b!3@9dRJ<DY/
%`4.epT6!/\`UT>$0\oS[555k5beeH=/*(Y8Ea0U)`URm_a/A->^VdW>AmZI_0C=ZkRr;WJHFGrkr,rcEmu0hq"orAmQ%-Sic%#q1
%j*(,Z:7f_b[ia4'f_s"dks1ti1/mF.6Bh]pk'=ORAV`YTIm<9S$oeic.d_N,Ins#*YG_PN$F;]eA`1oho8(,4Vh:426[K.YR`U`=
%DPtj*lX>oCY2[/22NnXhc>R?nK-KWWhS'3c_A!(V1ITgHUSon`&4;,15P@#ADoXhl'[i`sA$f`.D&pi\G)V%hJ4D]@iQn4_#j`Bq
%`\?+$%Xb)nm21W$`^`,1BZG?AFpumIY#^1,>t4eZ)"b/DQ`H=NebOEYZQXo!I,D&VER!r`81+Lu$Vs5a5'c)5Uk?Y-_6]>`c)[nO
%X-6fncU_]gH9[sk&'?11e_\p9P3IM@4E"7Bf?;A1s1;TES.&7"3q`5)[NSe=0!=)]%t*l=K.n'AI\LZYW"KOK,2TeqS+f9>6Ikcg
%OoZqA>]#3H_41C_@a+_V>F=&]hPW)Hd$Qb*bT$1FK,PpTr<:XS4dP'iVsDMbfB3/"Ved&0Sie0KFM'tB<6+VRO#UX1b"ui9isPQ"
%1n5p+n24`)#9N:jA-dr4m,aStf=Q335:$]qkYN)rUoW7gZDZh[^]>I<6fH,2fZE[;Ym3\]4LQ,SeE-ZB]%f!*2emE/2E,AlI?ZL%
%F/(X;eCr[X+`#TiN^9-r_XOd,T6j3,gjg(H:K3l(0X=QH)qDJrSK$+i;4Y=or_jf'3]C_3:ILb#@?*UH)`EMi=6]^*ZT8!GE]&NV
%Nr%Nck]97^No>4XP8LeWrm7S&!7b]*/+LQdME_uME$T]TNZgXLk,)Yt8&ipT=pZtX@uNSVEKs>]rUS5/lK$R#-=!qRYW=eVqW#ab
%k/*0\J".%S;G4]OOkdaiLS"uZ*]Tb'Y_%9uUEpQ0PFP'3^%d(\&tFT`i!u;?LG%)(V!O00_m=sB+MB^doV(fa_5ES_)5_R&)U7d3
%A.O+J&'2j:K5EO`FCb:\h4T,8^..kO]0Z>3cfONh(H3p@i;gJK*&.)2`kOQ;%FPrbgA;f=J<6jnf9^DW-gRJDMQ77mP7DFe0\HHA
%XT!A9rd'[tbgkJbRV<BT6TQMT+=ke7*52lh&-m@P/3_>)Lk3;\k$@u@@s3N+PaB72T;4;fVc.b/M/JOlT%KKXW"P3;]/p;&gUHNd
%Hiqq8mHrp-&"ALMSHe:r)24g&&W0&GBU"?kn&R#I_kU%ME'hsWKjERB9*[-9NQ1BRj9,Q#N*h?6P[F/E:X7:hITW0.Pe`k7.iWBk
%5(#7H5[!l)=.P/cbl5U9A=Dl-:_\m4g\:8`4L)%VE3_!a-c/Hh^G2fBc`Z-<?Oo1N@pBuaO`QM?j.XZ8#JWM6@:Y/-5Rs23LV?"`
%T.8mT33J6rZSk!9$hAPpi1UK@O2D-n%R(rA(Jg2<N\H77XU.IgU0N(NB8[jS?D:q)1OBDJV*,S-J)Z<AhQNT_!I5-G":tMNmf%Gu
%fZ[9)iHJFk%\A<B8Kq6n-Wb?c8Eo.G:8&EsY1]@a0#,)6XrTEi37>Kga!Dge3AM(k&q,8RgLMDPE3l0Y>fVpWj2D"`@SAQIk\*5f
%/l%J"N[minVm*KTi-W(g&omDGClGS[FFGoOhqaK)#^><M#=!LXO>GfbJU5WUl0#PAbN7F=0q!D1Ba&g?:>r8(Riu0a'%Y0H1;F;n
%"9+@TeubnET"2u6qVpSV-cni<M9)RU,afW6R=.5]ftPSP*'Z6Km56kV<#j[+r6scmioAc:-Rg#Xc/U5)aF7YTg7>]J*5(+fDSl%^
%CN$!4it2"eKtK;+kE!LeSt^s\<t76F=?]K9jWjHVNe\a*epLtjf8GPcG8LsX'j1,)]?S;*cjHVSGp2:Uoe0qoi@iNLIJ6%^Tc[Y?
%nc$eq*'JDEO2%j$^3H5CRci"[aj7^bIs1egg&JS%1![&bHh_M_(.ekMh:.auXYTa7UabN1dlK3AQOo.K=*T@PDZ'D;If!LAl+`qY
%[n/dZG4K#?2jp2QZ[VoDq6Ll;@`iDNQtui+AlFoGaa5TtAX[*`5+jMU=BJ6q>?WF+lDZLP7>9DOZ"4sj[a5)!Ea!*Y=SX80gM*'e
%@=9]NVc?ogn8VE0-;!L7-4OV:/BtH0.],XO955;);?9=GC:h,?67@;@E1'XGV4Ha[<PZpl3NYnX&-S_J(eJEnG,[$i<K`VL=EA%)
%bi*cK.>9/)69[7qQ?=ZiIEcB[54DBs\V19dV%jgOjT)'_e8E@f@%:1VlC/P]hqUK6b-nKVg[.A?")\NKpo+>S.I)!_Ud;O5HNie9
%734f&0PI:p"O[Y@,ho>hpGJFaqp9'c;BCHI./.6GNshWAq\Fh6%j\5]p,-&tqp=b]Rfd@6"aO!_JM\eL@u!B\D%T.7[aRob7NegA
%ZC&LP.d)6)k1r4?[s`N1d\,BVh*3NBP4)T`;Ep8IEnT&\g$M/=")\1g.S6XSOf$rk+-l0ETb,s-6\=C96tuoKKlT74_#HH\MnWe]
%DBE&"_3KcuNQQD1iStoB_S1^H%0mMHY54Th\p\79^l:YV5Q7AKA8R(&]W.iS;-9[E)Amg]m&<aX(0Hq6.FIBZ"'<\)',I$N;J&mq
%@j@jLLg\;=*Ki(b_"\:T_)GRnD.:^WqiF\tWbGKJNe1^(0K&PAC=oU[V/L'D;$q)0&sd%$1g+Fp1;!!$s3=H9U8itIQ+AYh&HE,>
%as:^?(]i190'IL<hm073K5s36MCRe07&A,:ZmKV*P7lecP?o6:b%PTN1g(-cBk?S2!t+gh9Tpa*[?\u4nuU'k,?'&%!Xk$rg:<rT
%68JeVb-siRc.:f<=K#V\+`OBF!.t'\%\'1:7E*HC8?imfm82Mf"%1+#A5"_'SHscb"!$I:iZQK=_qh8m`spBR&3Z@-<R&$FET1T$
%68Qk\<<k+_.Q8XWXOo(YJHVe><5C8AEi<CZ)H'C6:/dOmPILe3$d8o_aV,eZZCVU2AgeCMP_&E5AeS&lFH<=r$!$Q%lkG%ZPl`3"
%/[Se3=c`jR6D78/+B_i"2qC\u/HeC0!q1ha)bFrJf/1Zl`\HC-;`pkurj81]S)jLo4A"h:W0dY5h3t:=)/s=n@!mUk'WQ5@rR7V4
%7&_<TD:Y[k9_4LGD:kpCN-jL+K?j=*K0a??i5Dm1q"NHW:arSWV>7ILWqq<*P5PA1kkaiO1EBe.rM1@]B<RN@he/G'H!KS8D8BRd
%T:LkRqUoXo-[@Sk@4B7t4$]9X%\*O,O2(_)?Cc.R2-,YSWaD<hEGeHHNP<+h48n(&5GZ,)]5Koc^@^s\P.^BP%oG!,rVTe]q>?/m
%ci4k4Bqef(C0T<QkNf1jMofdXo':4pbL<WRFfd.F:,U0>gNlgc$Y?.i"=uBqeL+C\87Vl:b':ban"m)p"t+.`W4kUUUk,0jqLtP0
%+(b#/r(X&i4G)nIdt>+$Hf7p\m`!B-S+b6Zj=sJ"qUe9tKmRHN&3P?bhB@sXr#Z`R6_@,&\Qk\sXT=pb$iCm`(H<,oWb-"pe><:V
%rdP,5EXF=A=n25&qLrPBKG[]lJ:p(400EW#A$-7%2)GOI:G^AjEm]W8s$^+$Bn>`O4]b3XJImEJZ3-]h$lEq\<AbR95\^L0DO<`[
%G6bcA!a\%[%0UOq0+N5L"M@na+F++AX]SYID<Z77/6P@l=kH7EOiO-5P"!;UP1S-cAR+N=hh&U7qZ&_W:AXuY9(YcN!imb42"[9"
%MKhLFqR@Jil2+DZU+SBD7J^A\cnB8_/3O-s)g=nli9pG][F$C0L>7o'pZ_9^<`quQ/1tWnrU\.?c]no)huGd;es-Fb8_+K]SE4ip
%m0[1<Xj%/2L6aP*H0QkXYb_peko7!-e?qj*oT=TBW(E`bWDJ4?0MF*uMfU1\9><Pr,XGL<W]k>7QGp5Sn1fQV[Km,i!CG!$^MhDa
%?f2Vd.hthARO3GpoBf-L!X6[K9g(/8&gVR\]jBcCi_+uF)&+VfK)PMY^B^d9q%Uc9UApf9T@PtFAg_ePc>;ukBYNUEPa^8s^mj=0
%"IBQCU5I;+gsqci-QS(JX>LhP8;OQS=#TY=rl1;:!M<s,GmhjA#j@IdSHACW$1:o_K7lOZnV]LcJBF*1@8Kci#42W^4omH7dNTK!
%XXl9jJ)!9,87$iuQ^LNb:4$o^nd6WF&4;)>&S.O1i7ZH^,P5AuO?kXLYesJUTG4pU-@c&5F7nSiA93#'i"dJm_-,h/S/$Zt9DW@l
%DnZtqrUb8Sq-J99Yp]_FcKXK9qK;C(r>PP&$;Vppm2mt25(<SAY"XB.!n6gYesr78^]/:pjhhn*E.f6"%YqEShN:jMo99:;GblR?
%afPqcP-U\,.dOOj_@V1FRMWRI?ihdapu1T6p%]-abI?f$.i.@JI<BOUhN8%e9"h^@`PV#G:(VhE+ZZ(njhX0F4pB>Y^A7/*'T;to
%Z.OGT]IKuQU<`7,=sQ+A;n,dFP<h:d.@?kKC.aeQoa?Zb[Up)%i0Yk1-mXj?o)=@(:e%m"7Wotr\Q_J)DA/0(#8E<l)b&g;'Tln)
%?:<kK#f[WIi+<!--'c\R+?6BWS<kQQGDaK28<@KuS=]\RCW^86Y)$m[kfWH:+u0QR2`;;2LH_Ud,4Bsjfo^-6<J*\MZ@&LoDb,7M
%NJFt6NG8feaJNZL(VY\6cZQ?"=6Fe#De2A'>$"^rHFmir<X)Bl9NYIRjLi?l]YM@N!XZRB;&=rsF"RPXK5;K?)au2K_%j`pIFMs[
%?B,`fa"c_07Y<HIFB>NthYR_1`;)gq+c&AAEO2@"@jb<JQMtk7+@n$TEeU)V"al@V9ZtM?#8X36W+2'g+&%tY'4?pC,L'/KV3d[p
%dE4RTR7@:('VIrHo4V_7e#^cHdEp%[f&W'-K<m>bop1k']($hBAsVR1P)$k]PK;,K@a!]aCU+,t8W1r+91WKD00Vi7^-+EMJNL\U
%T\/,uW=PR0IP;*.`?X$'<BMlR5Y"cE-ltTm;tJ3*gTAis;)TIic(h's9$3p.Gr.BC^8[NpJ_dINq=`6dX5"JQm;HN'(1E[,+dkj<
%-k>66febQX*T"kup]N,=$UpDe.0f\o:D/f3M5"JSFllj<1n!?'JsPn`:e*a9coYnpL%;n!GMS*_E'gCO`ju/m7dtlD@qU"4/45Lc
%bo]36mK_\1LsV2.6'(a$`tk>?OF?pp3bNf(TLT<7Pb:MQHBb'm$2Vu6TQt=GRr+R[T]MZ,RHs6YT`e)UBF<,m/_&I>"C:mpI"DL7
%)d=f.DMt2DbsT$%\?2-!el98".rt>m`&J_6[+S`VFsgGgc3!8Z7NQ?4_EU5C1?9iNN\]ZD6iKY4A7hH)ZpO<_ZhJ';D'V[Tk^B%D
%qEN'g%53O[[AjYfBL+2h2E#eeKb,@O,V4f?l$9eRrPk"'PpH`f\,LbfH?u$G6FfQT`g3#)Kd$Jk6iJ&GOs38([p:s59mA8!pau$n
%:jl#)!']5"UuRB/+F-Bi1e:b#C9qj9FPV/4T70??Yn1Vk-jjgQWQ)T&Uu3Q8A$eLXb:h;,QC#1b9WJHd6kP:Yj_D_rSl.KZ!nj$>
%4)<,#9.TiJrDp\-hg),/`f:*"OP:3cQSu`mPWE(K*7laI"p%'c+4ojD3qX$8WCN_4%jObU\A:b=qV)^".t@Z,^9#M_f1YU]J`2-$
%"@Z/R$RUJoHPM&[?>jtKP6,D)QCoMba>]Mp?n$!Ap[(6t0I<[$2DlA:.91mde$7&ra(_?[@*hUKR#NMIAqSF!bU/bPm6S.Z31@\:
%'3<%MD1p/%Yl]quB3cM,$Btc)K+`\qD+3`D*a&[iE?%;q1K+RT:b#uJ\83l>dKR$1#Z^M8N85iYg<QbVd!:S4!KAWcFZ(SRZ*C#n
%f!-u^hM3LFmmGHdLd7W+9bGFok`hi?@Lshu;o!\[1JBR(3:X@b&rJdcdRp%Kh=>_U!!N8EdpESZ5WO[cE3p6N3eN-C9[JZb8h7n[
%0+ksX'9uXs9d8DBo%eu7Hpe.:++2r+-2(9IPlal0fP#9=on,`n_?<,Z9/7oI&fqd<JE!\3+`M6!8MF5>P.22_)=X$`NE0Qq_=ln(
%&]PT00B`qOgZ?/=&6N%F#7Um02jmB\&k<Tdb2[/iR<'-I3o6#9oFI((!TuKkj.M`Xh@bHWj\VHUQp<,i9VR(`;sT6$OmFqoIt.gH
%)r90M2pTc8@)b'&_-ZL/.(FtiRDp-%oeG(r"pt"Y3$YVdcdbd.OFWe?W1LjgN,Oe+&32KZ7%bZ*?eFaaS>u;-$M`rW,.4=G0Zkq,
%#0=qtc_jL\WK-P'RBfjN>5N%"r]H;3JUBr2!26Xu(oLr-)XeB&852teDu_B7.4rLg9/P:\]O3a]WL?m8JB$[rFj&\]-2h"9RWaB,
%5n;rk"NEl(9X/Q$Q6ScE/q[a<?nd0P)@Y1U>+!kd%Vh>[NIru19umGlEU',e@]VXO.;,>!$;JXGEnhHX:Sfm0<ksMajc=J*"k]+0
%PP-rs!>.$j<Qj?[16Z.u8p5[f^lW>C:^eKdZhMX%lAdm%@+RI+1,8"Fg1"J:Jb2*Zq.=\U3._.!&(W[CR+<MmC.7A#;IG#"R/hP3
%&\sg=ICBN!?hTii^i4rVR#DXtY0o8Oc@\\.,pA9KTct7dYqUn[bu!kuc%1RKb+\W=IA;L1:#_gh%W3n`0EiVP9t6"4Yu*Q[5&HL2
%Zs.gl"LJf47G'3A^"A<aad`%r!gL)piE\6>2L/[N^5jRN2E6U"9tI"YiY#XP?[Y4W*!m>>;l[%iZMG#9'(QYMfkJTG!c0@'__eD,
%9i9FmZ9%gna+C_\6n3h+$dVLs\mf@!1D@59$Dk:;8RtrdXJBFt2SP@7\t=oI.$?.DZR5keDOIX.>1,G0pq"p?(Bo]oQ<,2mde-,<
%SPGC$lp'HZTRbCRPs+B:'r_VGjT207b"SX'-NQMus)OaSGITWn&,1(bEdi\+4#iIDDG&LZ&f:LRJ_"RP&XWp/BBGk?`GX%)_Y70=
%rdn&K0V1iN%F.kurEs,Z@`V`ci'[ZMdflD*!h4hJU#q?R/qgLu00%-)?ss7@:\ch5JgelL(a+fM?#c6uTUF.M-k))Rh%ncGMMFm*
%<h'.7*'74uK#&7'=#"flc1hmgfCiPLQJUl]#5#iY)P`?>O9S[JM+LV,e3q-eM?jsUeE,1&Itm"M"es(C(U7"\8/*s,$<!UV5Taf&
%#6@[=c,$Z5@p_M9c4i&]%C_)7[K\Z2!o4Cp+@"AgZ'ef@gD,9i$?5$hLBMa:i0KJKMS7!l`rLjMe9VNOEfZ*MP:V>9m)SBBB"g\F
%i5Udo@fkb@LmS]8]\VsV_D`J:o+fG7I].O%4J+>Z9Q1VkJQhi=O&@@`JS=(r1:1A.9]OcG,h'5=^/VE5c'S>](MHu-aTu94r5"VN
%rgr_5D\A1ljraO&V?<;%Njgh/piEb;&-J^^m$L"fZ]_iA*-_[[l2X"DWfL1k`#qn<H"o$,-NTKZK0PEp:1^+-[>`=oD'k47T,>:n
%;[2Zb*ADO.+VY$hK`DV6\s32u*?1-*`Z[W,P&badaJ6sA*Ea2N[W;g2Ad\[Zhre*lcD?C*KfQ2#*62KoP^4MASh!GKN0O&F<Y_kJ
%VaV[@9>Cr:FK*(Fjb"+KUdQ+pNYJ.P*,">O#o8(;T#K>\3KUL7/D>p>MPZaZ<e?J3Q-gqs$Jo=plU?(L3H:HP$AD&<O<#)L_?AC'
%4TYBIBVFQfPsh:oOPKR!H"*e6r<YT4-]gXc.d"?'67AHUMOb$9Z0BTsbK;<"(!V@EPS)YqWsM8"1+F&Jmia_Tcn,O1RmcLC@A%<P
%CBqc`q[?.e_KX43/=Am-9/R<u_5"q(;)i>"4perOM*T5uAJ:J3[S1mG,l-\A=m3da9#:/LN^R>nk\('hn&[QB"&<s0--CHqJ-rVa
%ftn4QdeIE7<rci_aL3.L_/3p+CfQr1^BsrGb;l2\G.3;2h`T'n5Wg;a9KIn[Jl@Po!4=Xk/#=ZBb9V)Xc69b,Aa.OeH!p,lNj9_%
%GT0e<\gf0)!Q^c*(I"9oDg*SsH/:.pHi,FWA:aQpSf_(iDC;#Ba?<,XQ:YnO@igK"ZP2RYGOWY=B*+;IK7B`"Wa`]:kaV(TUd9KH
%(eP1*S\<,HK6bgEog%A#8A7@tDX>O,.?pbmJ:iB64CUOP4LGWJj:V:bpg<uq$VbjS(&NV5LA+Lu\/Z>Z@iCA35-GL`g,.fVipN!t
%5MdA(<=q5\PkZbHEPgu8F>b#;4o,iM]]=6Ijp)66MH3[&"L6&Sph.sG6\"/q/HJU3m3#*c5eJ4I[E2U6/lE1ejj<J-A(I%T+*3.U
%KL.:9(g"]$-PkC=IaWosr&BW5_5%3lN*pTJ0Up'=*4Nf/=:&)TQ;,@9l6rjS_rt"A[KP_d'L"*T.^cmsD#Gn00=<siXU*4(Ug7(^
%6-3WI=h;U4:OF8NA9WF!Xj)s-b)o^R+-u/IdosRX;P8ld/3:`f(lR%=@B(l:&E]3TOit097Wt*`#=N&QgtEBE=b0.$hcL'<6*PY8
%^e":h.)V1:*SC%><7(sd18]QFa5[M"oHGc?T@fQ:%d;J.Kt5@5=?$>P/Ri6_c>1PE;A'X%_C=4b90<K$6LBHaPWO`R-qUNSVf]O)
%!&@2$Oe5&B:Weg)^,mk@6+G1B]>/)O`?sBfK`d)8THD#qk\`<;2-(T3ib>alg7^c+K:TjBT5sT^/&d/h/Ield/<A@W4Z4MW=c$DG
%9gk/e4Bgrt2mH$8APD*IpIWV`D-<;^&2:\#;^oLJM95q(K$M0rcmI\fH?Zi?lPBA>DpY+sdDFfdCb:teNS%ZoFdEdUF-0&QZV,m&
%j&0]Eq;?N>*M)dS_en9$b&&=ON"hpea"I3;g@iC[V2Cep-3dK+L"AXI/+IihDI[PK(7AD6%$ZTh:7+SVF"dTk]WbNH"D9=>$Juj.
%\LP.ZeLh[#"HUYM!:#+AB,eb[N]=XeX8+RpLHGI(AI]c`Bh*##&CWb<1+*G?#:/TQViZ#F@NI7fWN^7K*pA]EYJ;RJ>#72`SAqt`
%C]H#F+b8_XcC59@2M$XL^DZNb--H?inQ/JJ[GF-9E*N5ll%hX-Z2W\^jZO9K8=_[OG"VIUd(50YPgn(;#+lA<TRJ246tjCSMlCA>
%ZE#Pi\/m=ShmZ3?4Rre3JR(g;]knH'/t,Rd!t[LQnc;iK*CLXK"$FpXN9!@KTT<g^fICJdN^sW>et"iF"41'Y8lQ9eM)?:f<clYD
%VLUA$A7@?)?*MbA>*V7dMC(s7A'I*SLjbfM]h/'X?bmD2Jr)oRFpt9JE=/X@n\<lJM0Z6UR)]DCN2IO3Y7j?j;Xt-`rkeTqa^FS-
%P=/9JS2ur\^5@oCo0tb;9&dIJP;0R==;@7%7qIqV(6,?LFN^aKfT5BMA.;^':Iic"#k\'UCF=milD'k^.;R>.S3o@oZ.sONos8WA
%jaror(8jm9Fh'#+9&7Xn3MJ!f\.^T2:rUC$M<NVm-'M`&@8rN]4Ad9ZO=\92A&L\J48kX$0"Z,!Wd%J.gE)-o*`m/Tg]Njkato//
%O$>sq:4!7E5j@X%+9%e#Bmf3P-sBPC%VB;OUfMF;>n8=G28:i+3O/H@&/1(uOl_DI_+?7KK$VqoZfDLN4\>Kg)*oSu)*qCC+,_sh
%.gHhO%cQ(ho1"B.N6V6_f+!Gq48fcJs.c'6@)sc,"0P'*:EGEE1cF,fP'R)H.0q@C3l8l]o;=jnBA'+)*@n],NtuOOoD9X%(e*jf
%]K9,R_<q:-ljf4B>-j<#$84uj*lrTSJrqO5bh9JcJN6VD*iTWE$8GnLp2.+165G\Uhjlhk!MRcp+((&l_^(h@\A]!rG+Z[)Z0'<n
%;p$In4AoR3SC=p*l.RGu1R#@N)766Y3K#Ya3]<-0:6u(XSCtAB7n#uM&ajutkI%,_"m'd5R^Et6a4A)CK<aR`-LT9PT5Lbbq$S4s
%;\"PMBB7BZ5lhMk8+nXG/GV"'>/dG;Sp1^s_]q@.@4P**iDaiqK^PoK1h=Qso,KHJME6W:Z*6K'T+nQ3f`KN[U#cgN*$"npZ'M4Q
%ZPZ)53<*GG"qSr%:,h+4E&b8,fkG]@UjNl&"ud@ZO!3Z%+8o=5g"N\f!k:usYYJFJ0mkSfo0r)2EOatSiTtq*Jkmk==ece_STS(N
%!at/gVHYan_?m7U`Fa1!S6n$)^k4%!=gN?e;l$-I"qSqJ[;NcgiI#B+ZP.TY&Sm&KGGPssVqc^jj38oeio2``E2$Gr<u!aC:<)7E
%Dj^&G,K\n\;YD4')4jn.1-GXoUs^DlTeN&f7cZ04RLOd.GN9Ls(,cc:bO]>nB8;P;$Y/\ACg#PD_nu6!Jn?D"n0=5&cNs&P5"E#"
%?aB4ucGl&eY^]:b55CLP)/$E@F#^H:kM$.22W7Tf#^qHQI0cj2gD(3cq1pUE!XFF1EBr!afPD&iA'"SS*c<a`4Du#%1R"i73!Ko;
%c7.P!_nu56K4ZM#n0=5&g:'Bd?5ER[NE8Shf%W/_$WU:%cl1$0-NlZi3#RKA*)1s3FKk+gF.sW:cG^G)IooI]Clq+(X0KMjHD0?'
%AojUa6b^b^4S6.qAgM+hC_d4bE59\!km&1B%]>gS4+W//,'JJt0aTH?*r!X7<smiSRb0]9N+Y9@A-0+UD\NHGKQ"9CZWES;@aJt3
%^?5UkkT4LLFR0-0i)CL"djT<):FWV^$U?WTf7JYHblf>V;U?s:`^kRHil@,_ZVsHq*$m$"VA;!M%1bZmdX[3`Pa=6)V2-qZgMDk"
%]NC2.K8(Vd'(O8*%$$#&%NVW&;ih%2\_J,@]QIYI$%NnCTt;1r_YC^f-FVQC%eO7M=E\Wr+]^(BR>@:X)o0P]<Z-l?#IaQ$&fP__
%Yb,*mfh"=(OR6OcdlJ9-4r5o-I>MW2o!"*;NR:Vm3^-t?:!&fF$+Ib63$u8[-CK_-*)4A@ek1D1adX'j-[-ej$oh80Y;\2_5C3PH
%G:!LoV/q\Zc,&@!jtd\%Fca6*_#/iN-u0S9LG\G[MqZ<sPdSq:$_LPL6*]BiI<<-[;'"+FWVbc6NO?t?L&``oHdQSP"O/@BeeQbm
%oU3D/7!BplhQNu*Fispt_X8V.rKuS#[YU]q0TVg:(9R23c3qNCU7sKAfNRkpkjXI.8eL_olXHM0-fb4L&9Lg&cb^tZPHh'[=;U6k
%i>k#')1Ni&-AL3%n>\PK2s#Z>o^O;hm=<=>EnQh5!WnYNPJp`J;sG8h4$H/,W4Yi)*pSG!KCD/s(tIg_rGo+YQr&D2%,L9epde=u
%d`hp6[u._@p$uUi>DdYjLBeksqo=BYT"R*;?="U6WYI`KG0E('3IoZ,5:Up%9QIe]M224$O0L"DU2&J19<tb,H^YO9DBKZQMnt^F
%;mu5cW'n.2&AY!dogW7&3n1>.Q;p713"[2l>u^^U-NKrh9+3(i+9P'0IfTdpG:"S)PiCLp;4NlW1[/'5]XtPGgail$*l1u6]6%Mp
%$"Sa2?4cO\UF(iH+/HZ(KUaC!liQ0,VIXEAVj84![6H`_VF!P+2h2d%pUb0HA^W:p/Y1KB:bC@=-EP8*fNNYQ>Jb>*2C4fIl-b('
%i'YHf\3$c3Yl#3-pPK5UWNnbscKEo='+HfM1&\J4\&7]Iaul,D1A3XT;H.7B_2M8E(mP9*LJ@Ph#ol!8"(eb=&58gWe5VT]#eX-r
%6:2o/Lc)2Bb&[!cbOnW##&KA<o:=hS;N,o_XY)eV2Mq%nU_lk3qDBLA:)i4'>1,h<QokHe/f+pl,Pf2s!J?%o:4?Lr07<I6b?os1
%`C560(Md9'+2$&8AOdbKG/i*%,I)u!cg[;XdI*gcmrW":rCX^0LRZZJ[g$`f=.p&CKk"M*.26%P6>phLOe=((WQr`q\hd-KIe[=-
%4Wa[t8Jga8%d/ai1lL!Na+Bq;=1VlXMLiG2`\BD_-gp61AsLT>EZCj71A.(%"sQNp&5Eh4(C:Sm=2t<>gr2tj7Wb%\M-.f?l6L2e
%a>u74e%a@0M7K>R/"N__@P,<H?PttUSu5dN,bu#$o6C"'WtM?e:?NC4N7U!ub\N#0#S8@!F^)FVY9[sb78Z;>D8(&bm4Du:"t^XG
%c\\r+bTm8D(DJT-iDU4C3lc#/HtL/i_M,jsKG(JCif7(gOV#,RqA/.V\l3pPSCt>E\P/YYFKEs5MF>=S%E7[SM_t<-/idIV=j)#L
%J[:P8rF8sZlkRBm*V]g?<_1+,_!k2c.oD1]0PU!Z_4\^LHV-9s#Wc9jS*(+[qK/EA=]Jn:91^nokY\6g+Pq[/paI=VKe2dG_@n"+
%bMPt#L:p3>s.pTpT)hBZM'jd^VIPXKMKbQn?[IEV7BF2]ok#$;,?8t?`;/o.)j8._a=kk0_#D\-c5clJeC:(.d]Hc_OYM)Jb;3:`
%,`_\tg*g$)8=*$WnDH&+i;HN&Zdn7jnh7f#T];NV`auU_<#L"_L.\/t9959Pna0@`U<%F1F9pn*l_'op^q:,JEJ'ea.P'Ab-!eXn
%W>`m5QH#!oo;HBBQ<o%XiGOG2D,n0YNo@&.Ka?p@^h>Dp-u=$RIYBmlZ80LVeA_/=M2Sl8C(rA%M"8Ddj?%VDi_gf'Yt'gaMcE"c
%`mIS]92D]7(E^L^md]s]`ltS*^3p=9'<'O^(fPA($5p3>'JNq1%!`kWT>d<cI0.>(qnpiAI1LOjGJS0MM\AO1]A+FKUhm\IP^)Aa
%Lgk!HBbgN3S[=lB=-;a6++Xgc4?LD*rcX$^g&[HN4sE$N5N=BfX4$2EM,P3s_mh5bf(.XDnh0`#*;BM$VX>Ffr(u'(He@o-U_8])
%bNcXc_O6Pn4nbf@n$jX-UdlfcfpGM3dmsRFfG192Ac)ZD]h;&*&sG*bO;O^53B>QFmP[Hk]1JM<A3'grZ:91Zg=S`>LT[F!>&K_S
%)nl*p5EnUs"cO-/o-J^eT^^AGM#Y]bPbS"hn<uSK-F#R5A:Z,?lsI\=Bdna?6QZ`N0'!S]^sXqs(,W5b4u=1l'=C,$U"TrjW6n.#
%YnibZ$-_\AUsSR^D-WrFAjd?*:=)Wo=Fb*Cd?b^Gg[[VM4ui(D7a+cHZM9]Tg[3&F8a!:;9apIp=:S:?nUUE_nKHPCBb[UT6;(bg
%m/ut]6)9@Zbr-N]r]QH"rfqA1r2"1,*p39M0`-8DDBK\WDi)7`O:Ik>lqpAA+XCS>nIAp%8A;O0Eo/aDoHs7#3,tk>GlLGu<JO>8
%S1UYH]9/X&,m(c9m44i@53AVC6nX%A$T>kN:)Dh$J1?QVUB\:O7'BmtibL+SUh<+)F9dN!nh3KELr-jfcda4Vq5#)?h*o+L$UhQ'
%icL8>FY1<p08b]rRfJM$iBJ#B%t-9BRA?d28ot*Ve@iEO6V.RgO<PJS0FB4"%%QE;i$:5;\g5<-HiI".lo'5MKSFlS<5OCT[-EL@
%,>Po"*%SZAkbF3Vi,"!2s2`/I(<trek<tOg#CHbG4sjh,e*CJE._]5?/6I/om;bSW.nG%Z*FpLn)#,g(d]BiKJ8.sh&h3?r%).#^
%3LkrC4NbbC$B/\VIjq'nP2r!ip]e]oB/:gjft<3u!E[KHrCCua6?i[N*Ke=d5>q+,#0!nq\;\ie[>0[S!_,R/I1'5a_ae6d($8*U
%IZ;<KES<Y"F78HHSnM[/5SRSpZ$:',R/EV<Z8n"Y(HZ5c[mJcE8T-`d=e8&`K5hJ]Cjr<uh6USA*>K[%=VU;TKqB[?J)4JQNEr2X
%de.ASBUZ*)n.c_ZS+4El`gNUYARM!0Mso#\;N*,aL4Q5SI@AU1$<1r[3WXN#p_kWR:'d5+bVktWIi1^>"="_Ack7[VQ'rS@ME-t8
%`qRlc]1`QH(OO&N"iGqB`aKM8:^Q'+Z81VkkYK+jIkm`7BJ,mb_@[,9+uB#2kApM6S'h!J=I.=CR6\BJ29Fe^I$YZaSN]$Re0P;m
%UmIb-kc[2MOJE@&YE-No`<m0>-E,)Gg!e8f0;Wp`r.cSFp`BDK]P<jXj$.]_G1iRQ7pF6s*15(nk9\O[DM>J7faVHk4hFocVbo`?
%i^`Xn/Sd!Bq5uN;b/4m9aV5Ws=diG-KP>D_ZfeZ4O?pEbP.nnL1S;K$@_UdZ_Y-WOJVYHWq!,Q0bO6R@A+l1]RfYX[E]fpX^13g+
%_&CsM17!4>!])Zi%YgP[_\7-$NesuMb'nD<FkFj9[$'n.N5bDgb0I%ph0J".F["L)GH2[h:lKBpdE)=!*o]lJR$2'#_/=WamdH]i
%rB@nK[`gZnH[E3-1]H5_b29i0UaNSWa11+_M0Qe\qP\g&*3X#nm8(<$:HBF!PSN;5PYP3u!$.gg?JpTmP:=c=5X1"i[*?MQ'[?qb
%np3\ZAIKWIR;HiW6/c4oH*`]Zi#Qj`hK\^,lhO!jp;L:;1M?fKb)a#(MtA>O6GeEuMmUW>5'0f])1,N5'b&ZT`+]5/no.tBIRod.
%=4#'cEp&=Ba_k@[/uUMe"O-7>ckKIGmKc9mOg0*gii'[15"eJV"GW[C!>)?!/4<JBa(YH[=8B,[FYE-#DPjCoe"[R;/]9`$R\.hu
%cFS0/2R\!L!i-X+-4trm_`0><&Q+qK9sMF#nDe=t7I.nTMb@MD9tFiS`u?@^o4^6FdTe8L+D*a+'@mIOORC75bU+<s;Xk3KWFN*%
%1RG5Y0>7Dp&*$N\h#YA0s,4AO#]0:)l*'mcGc0@;[#V!g')p##'&=LHNlD41<1N_230K<OSFbM4MpQTSfM.D'K8i>s?W55F+OKm>
%fli%^X,%N(Vgrmf2PieGr6uq]GE(C#3E4PB?Uo.r@qm-Pg"To!lL+WO-?@Jg0JNs;kT(V=E_3o(8Jb+r)P:XmQ;9.?-tU\U<OPQJ
%/-H?6LFc\P*eI>#4D)hfb(,>TIk@71PDdTf_eYfqk3f'DE_QB/qT#r/%hT%]-^Q1kYYNJHG5ob[/3L<pFm8^gmok*Pigf,n?bVR$
%BRj#QJ:IAY+ufhpe2g1XkIdD!f[i=lbPf\DN'(3_b#uAGA$\V$/%,@RT[,7935g4#Oise=@SRBukO/HsTuTN@JG=3^\_reVNY[aO
%O@!C"<I4UM.>ahD<rDcu@M@)u1d/-5-OJW=b-!\uF"ia6)6t6EMLa-bN6%GNT+ibD9C(Va@U*M46,i>D?h$c,A,1Ec/O1L[m$pdN
%qQMA'cI3)p7n^C.01*0Y2p&NXBR0A0ccneE!*Jhg*p<oOYqSWJFm3s%Ss"Tlj6iDr/U:#'O?)875GM#M];ig\eL[UQ_UrZ"'iGi[
%%-)QO=_KY)3Mo`hO-)oucGNaq_FJ"ARPWAeY!qlkFT+?O`E;BCCFpG,g#R*!A#$GYRLQ]e5;;V/D)Jr&C0nT;]Wh0e8dKpQ&t#:e
%CSA%\!Yh>bmu!Maf+oE[`7jNf$,;d$nWj@a<\td"Mp\.fiPL"7)eHL:NBaR@gaNO_+MD]7cV2>[gB67LG'9u?.#`r20&.9*4*1ud
%n/@"#QN3kFfhFKZqb.nFh@<nIZ@@gB[.8oYpD=7IQ[b`\cLi_"*d$R-,O"alL[L=(-P:Er6O;OBmP,1A'pJ#(Ju?W+j")3j*'>oS
%L+Ri+VGst-oTOAp4,89n/s?A?GCU;]rUDm5IV_h]gnGY[7\L2g_d:6u(W;Rq^N.3<SPaHIIO^=2-/I[HBuD"Q!(b5ieNTVE*!DAH
%^WmVYQ9QsDG;SNp\s6D>FhWUQRi^IIA@>m1)#$^2Bos)26,=<;`pN.B49RNRU8Z>^4c2tS.Gk@Z%YZ6m.$kE-+8XV@[k@J?N1@@b
%o-NTW;^.NZo9+YOB.(TM8:$$S?hV#`bf8kV`>RfprGd,)ZH%(&1-LQ9)]5PEUp3,3(:$aW]=4+5hBpGX+3P'&Zd$@a+YRmQo.9#4
%a:N8qTJ2"iqTL)%W$^6_Z'!>;U>QbtV?)&q,.$o&QsDPFd+*-S=0C@GiS+IZknhu,)D3-:9?<R;q]0pbUfc-[Rj1BD2U1\Q"R3SX
%:u"uSC*su^5:UaCkC]b>hq;tIdK41IG-Xdh:mk4u^2sGLG^iIXP=nnXeZHqQ-phq;OV?V&a`RB468_I9N:Jr"o&SpqGIhh$jgR:A
%$1i#:==",m)a9V4[[+/fAC3@WCGg9:r.;Y>c6t\aEL:5lRL]1_6trH`,URO:>]e6M`342,'8HV"U6_pqjo\9cMOE1Wi/Gu(8O6&G
%X:ik'in/rX=7->Nc2nq00[2A"i(8XGb_[ViRA1s_r?G4ON14Z]+#4%m.:l)cE#sD+)\js;m?Z/7&'(:49p[GMoMaQ;M=NC@@8A9)
%a*6/'%W3sA51"<62M:PkX3uf(/\Jb9"9ojdr79)U):TI5)KW&AjNWoh)>_8W_rKMefT(s].@S8P4IBDUdhsRj_GAP>Tp7<_?;+r9
%*lXqN?K&:mQg&!`e\n;%!/2,.M[I29p5Qad0AA"KW5ef[7Z(!\$Kj)*l9eFOBgedus5^P:f%VheO.*!6dReq<9[1*Bki,,)Eq/\?
%s)gB.h<&t`"M[6@ibTj2$iBNq@C#[%dUgSo_13i#M_7gdITLar95u(oB1(t6a,C!0D^pB`_I?RR^W0c`rk%K`>G7PXEA.h$mC^,G
%BJ3fr<\:Xf0p/3L2(Qd/^,<\6k(7JX'::<lNoPc//QEI`c-[&_Cia>;lYOT2N96JlBfqIPN1S,;!_mEG]:Fp56KCqmBrNMHI%H0,
%oqR<R`i2t)`IeTXm!HZBAQU!El^').*#H-,LNCL:'jo0\9>uq?#o\Z5_IFjl^g%8](L$Lh?,qsp_Vo>8+?osGQ&h4UU9ju.C):o6
%N%Jr<6WO<KB3)l0Hq9AtC//&>/a_E9i#SJq/9=.iki,Mk8^$OdZ.sAdlDT%)Nq`TJNSi6tpr%D<gS'=/:M@aS*68AYVeGU)j)Do`
%cTF353B7d%VNqn&OuX+7dSi0j8WsnZ9c&=t*0.B<cJ&11^@Ma(a"_DV@$6uI$uko.nnt)G)\p($-l!Uq&fK:mOX5U*2RT1j@r-+-
%UX`!ob0eaMRSJsE(^huQ6**8hgc29RI()oX\s4]W^]`*GXQ4kV\7ML/J8a?Zh\B;i>Lf;9;Qp(:qMlKKcWX$/B1J?JI^\NSlT=ko
%,K7l-[%gLmV@]4Q[WIJSNR-@.A[M?Tp2rcIh9Xd0kRp\22u(?t<%lu0fn9[15>r79MD>p&(5G^*aatk$#B_>D&s!>5f1@Ae3'^>,
%TEMib/@6=o6eHCU+apg&q7A(.a6,\(iuI%:@aBea`^QJA&Qh1pYo+,[:=-C+%Q@OP3?TuE(_-aK>jNl,=R7HX<FqMJO5C0\P8,fT
%8@eeWj+r+a5k\!#QaIq4Kh`,jje"S.R,Y8=PP5O(m)9g'(,&)9]/k7i=k#DeRPpP&D^+k[,d>"e]#K*(2AoSW^UEn%\+IttdI73a
%JX20d<\V74@0>Q5^#!kNQOB.W7'-"KGZS-_XMsSd^t$XO6`/"eUo:Lts';pnRF.-9T(QD\A&9+n<[0iH0t^b)I!m<[nU!Z1oAY)l
%\9tecj2RG&!'KL+Q%0>u44q(1FfCD@NNX3?E@_,FmPgW4XnpNjs/<"8h[V3r`W]fKdre]Dh`j<mpU1<th?]R;T6G6PA]%l(qq'k,
%qCU[`[_$2ApW;9)5RAjNF?@-7*LmS"8roFSk$`U5H8=,k%rP\F@u5];27qZSm%`%):<OC."_93LAEe28/j9$*$(iT'_LBB\_?sme
%KdfI$NCLB;]!-d\$I@'2>:ds79W8Vr=(AP;Ru8ta<Id?,oO,q)$>ik6]j?'Db7I7TEV-,mXpbO5596OhQ_T>_A_AXb&41A.Ifanc
%1NB4BE74BLnq"^YUPSrHDsk\kp8G`G"?E#mrt>>4eP^%.MkAS0)P=ZoJ,IfKIst#QN-Q[umb<tbf9Xn#UZWWYfX%5WkJ7^.N-"NQ
%3fh=$%cZX:EW2`BaL$qe_rIlE"'m=#]n=LE,NJ@pOMiOZXbog2pmWYiK[\G-9]8>$cDm]5je0ijB%0AK6K86d&>;aBmL(09Z]LLD
%DuKdfn@*m!4RDb@m*RcA4+`ru$]e`+.*<>UTUG`*cH7]fgehISdfhR,[G"KadjoDM#.):\i6#F`e`O*b$L7+ad0;#Lq?%incp1"(
%dTkboEjKfo"(P:qTsc'&gfQ'7]:Dfc#=%gbRX9ciRR@&LN"r#)'%JF^rW6@_#:!tqb+*ZFc.;Ddc?X%ZkT@9H=-E3PqdeUl?T<rI
%0'F(LoG)g<DlPJ?gBXRo'$PSQBPRf5`og@fp\)ooU[t?>]/%\*!^+c"5;r"@AtQJ!F3bQ_kJR#Y+77pKrVc>-14,&3DArlRHR;<9
%I)@Lfg#YrPS-IJGrHGkrL4eG,WJN(J@PDKp<Eei%3reI=7^.s1c,HX$]Y!hMfZ-3<n=L`r4ZebEc0h7X)rgJK8Pt]M<*F.INm<tK
%5nfTM1YFTS^91C3=QB`@L5'),[pON!1g?aSJ:EHNYogI0K3#TCRel>riRb0_62R;_C;VP4FYXI\A[anTgP:Ei1]FfR,+O6oeaN9.
%`juFF2r;I<WBE?GiS&BPc$hb=s+-@O%EBB%p@eA2ScA3Ma"f3[SeY&W3.#9c[Jjm<4k9lJFK<l+c][Ml'-)<#[J&$P(K=]tG5bpn
%s01TlOtGj=3m!`SKDoS!kGYrKs7:W8*&_bMY$CZ,@7t\?dq7p3,;N^[HefahBafhonqR=!rgE_JD@1:#3,T72?"U"fB_K#M"4)=.
%1l%j@:B/pkfb9GVL[A!IrC=Ks^L<_&T5C2!:fKS<3#K(okh.qa6r`[9q.M7bn.diDD3</XdA^2VSBfLKS?NoomIGngkUX*h&*CXN
%3m%X_c"kHk,:mD>_\7,*>C<&1Oo$k+c1eQ0mpOg5S"YdJNVoIYA]?S+d5$1+VZ.O'j/^<#]Eh:QGYM*,H(j^k#9JG+5+hEjYPk8V
%_lU+_p7MB_<I3.7*`$grNGeKLSr!(Fjn?IDdlCp5%6P5"Hs*U#1.1B\"g[0d&B@!JiW"_t9+ek(TSm'==Ufj+WW0.`5M77Va.iQ'
%epX;;pd8o>+"sr%Zhk\Ynj3_NA_p?^<L-+,RTu/8`HX:t<i@B9q!Ij'nM^$JGBVm/[+Qn^hQ>ae>m'\C=kO1CU]019Cp[i<G/$$s
%Afj?9mZ7(WH"3at)oT7q_3TLYJA;Q^&-&3CJ(oT=cj_IWee*j]]lSGJKn"S\+6WY-kF-f.AR]#=;t0]J5$9&al<c,MdVL^>HA@MY
%(=o)DI=;AgE3Bu4'e3KG[tX=o"NKAA_n-kX6I\(N&X`KSk+Io.W::CjrNGnf.F@MP8Zu6a]K3b"E&bOSp2dKb@1HG5S9egmg26i.
%?]3_O-DkuQ5<WdL;aBKWrLstQO++CS7J"&I<Re>da':6A)&C,H7JNO?h%rDV=CQ.KTadltHrW1f1F"tO<\_TC`/i=WIQ4[OGQ@c_
%h?mN=ZGerN&]XF[BRDX>N#.+Jc7p?'N%()&4pb$Whmg,p,M)(k.*HNc8H7Z;s(hO<r`oFD=sa2#4IhS,Vgf'bs+Lp-Dt5]0MSL?K
%;fc3BoG1)J+`*!F?m_fdi.G%R\+d@X>CS?_V#PYEs-FmZWJ`BH"cVGZE\[Q3=LE&JhE:+ahM5_0:?U]FS"$\G3fos3G5:pJkOS>G
%1D\hgZ44H_<1!\l.pq]2#FERd^7E!om']EZ2G[h0n+,M1HQ.^hI".&.nEN5o\`+.7rG0#&%81aqO#j&Es7n1>-,WW5ae-&#d7H%)
%>Q2cr8j-CZQCbMYZOS00Qm%XSKUKIMY/uR9DKkX-MQ['7[af*CC8'kFT\]$I-&m^8\HTDnUetipbr)Ouql?-O:D.4n-r2k3WN^jA
%UTcjNMf@dSV6Fl7&Ps(=CcF`V8'OEZ#gKFXVNMQ@7oW#h6te&[adFi"XQ]fkU*WU,n6mmP++A:3b9Br_[:PVhWls,WLl@ubAKO^%
%V@:5d^@Vrd;b]JbHT5C62JAmX0]@;gD].S+Y:[p#>#mO`8rUMSY=jEP@e)D9gJ]F$[V$i-kKJQ12@6UqA^G51-L&1j;GuL&Z4tqI
%9oR'MF!m7dnOu%9V^?DJ(b6*MN5@KLTGX@`d0V_&`'QnIgI/4nrb-k#;uBKB0Zd>GVSQ^#\?!e"c.`B3Xk]j/Ksc)`-'AlEV@*>n
%j@+mL)O#tH7<hf-g*[2#NKL,:EY1Pu6oGl"OKaQ"m`9f<etSgk_$$uNM^B&R7h]+&al)/K.UeK!RY`io=EFbJV]m/?N%k_.ZH\lW
%bZ5_G(YX`k+3uCTQDC=Ph&,n5OcO$h\g@lg9-U%J=Qd<=WeB_L&K<QfBtOdbT(4RFn%OP(!P`SjdGQi6LWu.f-:F=n.?-'=&V2Z6
%O0k$,][E69^nS)oql%kJK_RA!Sr$l/)BK*EFe%r)#f!Cm1nDsI>>dMOV%>ps#q!m4Lq$;KA&Ftr`]`gX0b5mX("gXE=kqB@`&XU1
%f@:JPb]]s&0c11jOOu62$[J&W`a(s#W>NZ&A\Qu`fI4V#O]Is1Z'D`:9n5#gn!#707jo?PP2s\[Ko26((eoX='M%f7\+``fhC[Y!
%6n0AaoZ-duqXI^%>15mI+!,EK=@%d07$1*$UdbO5O>,toK]5K"StIZdN($-35ee!iQ5GKu].ISDQ5D:t-Clql(`r8e^F(5\\?J4X
%^3jX;C(-():]O&%`W0ifcWjkHjcEPh5%pHFaD\Q?1MriWm0:31>GTr'5sVe#U-oP?[hrY;o]n7`?Q<YLK%Z.7Q>u2(^g8_*1F#hr
%jD0^K,aLhDb-?^APs!3J]h"4-1^ZZr9JH`Z;'PBd8hNJu.9!*I,Dm[5dBZ<*Mb8i",B/iF%VT+j<3t5<4j@)n1?;9T-!a.8SC#Oe
%YQjH!e&I&Q'b`K!Lks#J)KT_JTYt"j;Gt4C#3@5PWl#hs#M`;K;?F9t%05J\('M@<'#W%KSX0>V+RFV#TWl=&:4dY![eZRZ9Yc\F
%`#)T#2MX:'W4e,p](M30]j85V%[_FI2$$;u83[T=,.1pmQBa:#%4OWpDfM#kUC7qH\NaK==P?/'T2ia9R!g5*OYFgW+TI7pdNjfc
%OW5i-1E`1i1mEn7Md'JK`(FRsZB^;k#A.nnFqPg(7VeG'o"\LL.5/#ugaNL]P$7sn<%2C%N\HB,7+_LhC'q2>@/#PK$;bIt65*k0
%LSRQm5bP-mOt!C@bqkes=0T]A0d\tr*1;V*3u3Hsk@dU&'o_2na#]6KH,^uN/FV"hd(Zolrs>OMO')0O(GWsR%24a:0l"JRS5%^N
%m^Gj$rR0sp?3qt'quW((>*ZbB0gE_=2V;`i^hamS???[(D2N.K62T-r'ZU'VRG"MpRc.0-Nbl>V4"ep=RdPl(Kk7e\EZ4ZA0(R[:
%^5`N#o07/G[bd?G-`VQHiPYd63G'DRUu;buXX+Gc[S\Mf:P5nq=?[)97PsqWF(-C)M,Y:)!]JTQMYKHS_OdT@D8>ce!mCW:8faoG
%#'l9Ofsrsi-@oV[<dDi>1aYs%"/b$+5H=5aY2,I')sZp4^aaomP%nDZE&N`o@&@I4k9:8"`q#W!/P'aVMd.gr2'DoVZ#=.tW<kdW
%Z#T?l%rV;tDd*j0,a/N5k.=\u7@P&NDo1iO`.h^"$`Z_`,`jU61DW)BNJfSHrJ6e49V"Gg$*XQM`^];"2ZCNO)RGAJbp(I/$]#Qk
%,8@)G`UptpB+?<B^ReOO9c=#;C\XA<5`%C0/qKRrM#KZe`Z3kJ;_jDIr'R=h6t?NGC!4k$"6GBA8821.q[_>4j8R$tAu6Y!.N4Wl
%roWkJ<TeF`H)aR(Q@Z>S36a2n2b#d%_TV&n$\$3WAn8ac'T)$5d%E"@R@W\61W?RM?2@5TC^$RW/urq>YV.^]!MWqQ@c/0P3$79Y
%TbbZnO[Q0gNb8[qh@NQ+R"_pZ2RZAC@qk3VX'f7l,gFG(q"D.s\M#N*G^WkRL98a?<,`6-2\3s$`;DOhh!__?DmX._U7(Z>nOUAK
%n3euj.5pl!5k"%;',6RMlg=*h#8nC#[qX>Ud3D9N5@Eh'8i[V='KbU^/kbdYCjDs>Uu)-X<rd'E%uM[)T,,.A5n3Uq3S5tb)uY>C
%4W3<8j0?O9"@@PW+9P.OA:?'6lW=LdnVC9W.l/mGBVXF&SXm-7UO$uLq<JeY?qPn1hcs(5a8Pu13Bo0_k5KeWm6Q=!k%HU8m%'-A
%=C;M15(@&u5H'pA>jJ?;h&j"PngT&0msi>AUHD*$gl:1[iucO^E%s>c%Enau`78p_nV?'`"nBsXa$M<PP'?qq:t=n+g6]WR\)05a
%mp?Dr^?FB[@Y/rthED?M>\9-a1HY!OA"(Xg-5m["O[Sa<8.i1jE]I*@0Wa3/G/e)oqZ!&s^7He/qr@6`!R(H\"HW.jSIJ*fP@&k=
%rDXEC2f.KI.`tT?LR4pg^LQ0:J:=orr-*#>iPD/$!.FnIJ<LKu]^('lg+.l+S1L8V\[+J7]8$M*YIcIa9<`=d&hnCC1;7FRIs1PM
%$L>\&F!Z<ml!a!$M.^-2:%-u+gTnT:ZkVZ+`d7h)c0MQ+c0MQ?A7!rIWcR@0f*CX;"ASM9K+8a,Q^ZcAV-c]k+E"a=59$u`<P/J2
%CM4G*m!ae2S?tf2I8ID%^gPUZ*mE/_k;0X_blsrSqV+O-rQa(fkuiAcn".(jBN[]f%3\?3;[0V,ZW"FG5&-j>DL9aM<s4*=(Be>G
%9;g$5-oC:\S9;`>fcL/qUcB:Zop^U4;QJ\tOk?OIE0\+&4DjNTO*>_5_$Gq&iG!cu%Vp5LIN-7T_sa4@b$O0(8!<i=+NIPpUJs5m
%oh3W"_bkd=UUe2d/1+!\'Ccp>21'g0LHBc9CQ(%3cF5&kHhg;!TU`nSY//RC)#3<udM>=\U7t+lR@N09%%FqL#_VgR8nlsAV3F#+
%)9l"t)JtZO_4r-&08f-\C(H@\1spUS1c;mtj'KKCgclaC%L;s=;m51KL$#"tND?1c"W^j(R!c1p-q;#]:ReR?>CXI33r;1Mfc"2L
%jrn#A]Hjr'_P2Pjg.d2ag83X!^IP-NrQ_@Pf>4<XV/l^+glu$fhVhW/Y[,uNT4TLq&6S>.g\\V]dh`&F./laIkjs9n+Vju;W=TjL
%dn[NehAj?K@DM9H7X[fl:D[JCfr]_(fgTLN-lnW+72l`KSiXqBajY3r-HSkr[g0h"2SGj(ljb+O_Q3\XjfEDj@@Ve?Cq+L_kof#B
%Vg]*PJ$]HYkjoj%:nuS.S5Mu5DYr<VSVM_p?Y*!"E`<NSG/ol-``]e:fDYp^'?\4r(N]_*X4umH91+$C17YWhVj/;(*I<I.dr_;I
%J@=M9+)MF^=k[Y7S%VjWI#lO[DBF=Qeil7_%eHg6Ld1'(fZ.Z?iei(22h:g-[s(G?B&QjXJ9=(r1YFd4hM#FNq1OCG\B&o%(QI!1
%@p6rr\:r9-]e]'XA>WkmN0g9ARU+8.Ese9_LabUYkj3m*LW>t74]n7?;GJf&!%B]@[el:fjDnc&/8f^k@"$.9^l'*)_s@)erOn3I
%6,-CSirP@>Fe?6M\_ba"kM*2il#FT'@:qEjcMPS_i?#)24nu+g#;=SfW.eA8;7LhK0[$\S(VFI^KhYJWWa'qr5?;Llp77Eg(OH<g
%agEg9/ET3j=sQrlC5E8@c9T<YiTZg^S1U(s2;QHST@h.7r"`/LjhD^H>jW.pqj)Y[H9*I\07(X(_F"-I2XVGrC<A#Q,WT0hoOfFQ
%Pga\H(-F["p%AF1Ekf!U=/e@`!B7MGID]O=?9toiCqV\iORl*["u-QY</MBp$i*>5=Hb=Z#N[)/qt)TPp<3EN@<qR^>p4]r&Ho'S
%01LM]Zdp`[prBJp;lS5`l`V2U_M)1,iCoJ&Ti%_WX6`cAoC1hN4NuZ1bp]rS9%HFb>(ch=N,]s37cjSdEHS,o)P6>-F&UOK)j\*e
%75T-W%Ej)=go.R!4=p6\L\*'AG,\NW2ki\!=bXEgAPI5&a^W6s%Zd&$@+t^'SQZF:XmDHs^g"]cs#r"Nor`#-J3p2Jc58^/kb#<[
%(R5i__>okR5J%nR+00Y&Sd)"lcuIWPc"%;`WnH]L`rD!,(Gb(&8]X?_SsOZDV3gR4OH6'Lm?c\SmC[hPrU*_N%scI%TRkQXs.GSC
%/31B[:fH)=hQ2]q9Q.*j3bb=:0k!sUAUm%L(pF;e+i=\FB$/OCh`dXR:\k0XX3HPl!$r/+i3M!5A.D9b7]KUb[<!0>N3_2#]`cB!
%"_[@-@T@9f(q;eo<1'QqW<<ShUF[tH#_PbEc8!&K[*=SA6/84>2'tSd%i,oY%]IA`PoBjE7k`rRk`aY7%Yh;dR^<"m_#a&\K*gT8
%r6hA>KIc'[_LnS7E)CWKSpRri\`HVUKB(qCa=gCO+8I2iLEjQ%n\WAF$Eh66c\?9jprUE.CF?H!4WPO7HS]k.ag)Rj,f:!\"N48d
%1a[fFUeP@sK*fgkHMOqBLR2IZ.'f4qN@)p@klobREKLqaDYpE-Q_f\J3JPEhSJ.&sT24e6YF3Tj0A5Lo\5#Z-$aD*a(1)+Vg\lgr
%rB9'rk6XfR+LK5p$&tT,4UstfDc%'mcha0g/f&Zm!b"3dm--^Va):A:UH"ghCp>D[g:ZKg:&q.Xk6*d(`V_,7RIB@mFqp>R\+FM&
%MTZh0oF+s':P"ib[[+qV9iVMngV_<F04ab)1lTX[Zfb*SB!t8W6`"@+_<-j0P,Z`sMQ^uj43-DglnC)s-`4*@GPe1monIN$TJZ)/
%NnB=gFP:R)pI\6VVpLj9;!iMV^9U\lfLS[VbklgG??'78G]Mj3SY_[r2]%semV]$D:Ze].K=-o<H\]9bRuJqBkAJj3c1:@mID3F1
%YMNK/^39O=IW05kh9AG?K<nV6=I"r1lU'p<;)GA(XrlM[Y,s7(.,S?6\pHJC)*X8md*9_mes1e>[5k6.Y!:`G=jl].>%dY[X'RF9
%4IkVNC]?86(tT_Yn&94r7eP*rX8:*=h9&<=CKT9B)'.PDDm,`ilMB5XlK@S0b[OgALc5")[WX5t&)nC$hnH/Xf#fYkmklY?n,:DW
%ET@#?]j^`t:AsVRZc:eSrW.+.phG3QpuJN*nG[!(mB1P<h)hPVNG:uR)c=DlV]5;pf_VnZo\ek)D?pG0XF3)+d"bCU^=5+82m--C
%PL%i147cO#4G[(`rA3XarB,;%[G!B3kA!N`j5Ntu]"2mZqY9KV4"I_.cPs:cg$SYi2Qn/R[T^pcr7&9`HE_P1?&NBi)%Sd[52GOP
%f\EZRY<TNW5Ig=QXKo6TisSW?f#m"7Ob.K;if!O]Q!We=adqN`M[T's]B)d-0+8@jA^K-BGE2-KXN=LkF8,ej(Z0&L03,B/Y>\Y=
%_BOn.bB*9!gXU2SIDU&M]leb"[]srIjm([O@+^V<``mf_IU)2g\?kg:s6Vt[GP+,,HbXbFVKC_P^5C,)f"SLeH\e^!e`0kWh@\t0
%rN/W'^\XnCcs400\8pcW!5#N2_Zsq1MEj,JhX;DP^>-9V=E:%"?EQKQo!Q*1T=?cS>&F<D^P_I7^V>(refPka]7sWE0.lUAIf+at
%1E/'UpS;PO2c-NcR18,'4p3ULr!Z6+28RM%CAfBN]A=Smd.WItgoB_l5MrF^/3Nj9g2,WY<jd;#T.[7t5MiU1*jnJ&m;&goQ!LAN
%"=is=f2nZorgVG>T,sM6=CU8A;!Wns]X=P>*j#6-HekkIm&]Ug8tk)'XZQ9\0#$CH_NpmbeW8_8MlM66fiT+#Nh5Q`O'Y#C<D#qt
%?ss4Whn;tUV]Wp`=e'eoHB0O^>\jbY=hM(g2V4mO75`dUpYaA$eDZ/MgV*U/ipQ%)b3nEUC_E4IWu7SeYPtT='nkru:]"&X<5qdX
%p+1&>k&-^GWZBc*DcZV,V;(\:?uS&>D_EbU,@QOAkh'(>I,#E(F%c+s)Rs?#QKoK^j/1i<]W0*!Q]m2i-Qf@L)RY4B,SCX^p)CF<
%PLm`EVl[d>[;2+9k)J-Cf(,<qqX2nqYsCW60TPjjqV(K42Y?Za$(6d1%dq$s:QBY3>RNaO*Nbn3^6b^@(A6]BS1JQ.mU#2f4-j"3
%r7c(6lfuK95-Ms!]c/?'Vk;d3,("EEH1T:Xn+H/jn2(<`?Ji?-2Ysq5;VClQ=^UCVhcI@>K:D28ZMUSM\FO*QUY/aDT"]eomQJ-+
%K/RZhN#+@t)NBfeXrP";dALXm;qD]7>e9h/_-//aE+N..m[qID\^eBI\(<+aG9=KZ+X3D1DMV5H"m3FXQL8)H]W1>dhRFLq,8'=6
%XkrD]^Wk?ljNd%K=6j2.gqHWMW2Ok^#dRg""C-N.U\a-2p8?$tGMh/AjbIjS@!?#ES$u_kXBf2fe5>8^MS``t+Nt>A)O8n."5)l8
%?_GK(f0D\6JmWLUpF=L<-V.`"[C93"miL\=p!Jc0N+(PQ[kLpt&jL`XT)pUJXMCI^.fR7Yeu8@>1&b@gO0FlNXFZGk$C/,7<jPiM
%C=9"sWg$N0au-Ih[0HVUL4AL&8=X]ZNR^@&<%;R;\uAK6OUj[[Z!@%@iA&l]("Z/;S*Blf=?@SDXjs^p[\mN4EaGqBKH5h)CpNc-
%:jiKT/0eskDkiI1?HEcS["&9Kl/Sk18hc`R[:ZQ0jVMEC-!WD)@]X/9Wb&F3)6/Q2iHaNlX4`.F@tSaVA.(FVRnG:?e`BSd@^!UL
%mUeM*>YH)@KmDeP1-rJ+c+3UYS6$(8$"gkl*aXcZZdoBfH=Ebc&qA'X(`Q4[N3r$iH_pF:gtLg+BhU-2UT]uCE]'<"AJk)BD)p>i
%9Uh#l"M!8\U\g3B6Wh+l]%P@YAZHnPg@7&8JJa6N.j55KZJM3aT6@Msd-r-`Ie)E1GfG>S['fF7AMC^pXKlnjrV*&ak_#<gS?m-/
%<_lO4"RTlDiM_7^7[pGcC<63hf3>Z:$#&DMA!"YM'3H>#"mb2We_UE4mafiP;q]th]+`?&YhX;!#FeFDh2D]KW9#shd*'WXP"&t)
%TXB"\jS54@_N^dq.kbec+g\0:GIQEflK4'GlR#qcZdl"AQ%eDoosrr0b/;gm]u$ttGBWItI:m,*55r70H0;1V(kl@JU>@c)gk+c-
%ihj;2=E!)'h($W+cp7#L]s@O3ZFt8D?%!4leL:s3ND/%_FMhTUMouNUc`4'hN_[bnmlYjBr8Q8^V"m/g/npkOe&Bm]5UUhT)m-j-
%^O@Rq/Np&=AqB7@d\ip2r>RV<l6]Hd1I@q[3F,^f^T0;?CG/QD4`7>.0G\kK.O3?U&]I7AgOL&TDeEh6\D]_J5rYsS/R*'CXhH;u
%qFl1C!HqW3$_*$IS+ugVp;?aCe)AS=BDZPrD'#4WP/"c&D,Xc`TR?PQ/SR]mc`\EPG=Bo2\9#7VWA/VdY[!$NG2LAFf01a29e\t8
%rG_be"/_6Zl:\n_nE$]dY`8&^%B\W+Jp!GtEs*]ggRqEC\$LM^bcM/Eo]>Xk^(8ZPp;7e'Rn*@")P94M:[?Q5f>ggEMIt)kgW$A_
%mNQN.g`(3N;pN^K[@<X)\ZOi7W!1dm-$m27T<pdMS&`crq.]Bm2Z=WNgHXpl^cKF]0sOmYCH#R&I/*P^Y^)83A0c]W1=63pUp@>8
%ru!5%Gp$1[?V,O<gqC/cG'WLL[_VsUEPOeL1f'FE\3!bbMjE>3TtD4*=StSCoNp%AK=&)G]F8GVY?.<c<nFDKX;Zr-c\L39I:!1*
%qY!9&?$nW(rNPUIfDD3"GkZACg0FZ+&J/9_Zab5J.&O/pT/NP?+5Jf22=B9tk.!cJ^,`o24*l,4hOXOZ+$UMZ00cNZ5Itq'cMd-_
%Hn4'k7JK\BQHNA#+/#+I8L!Kf.o.6g]BuVsFfrBj#n49=ZlWL7WiWXh^YGIs8O!a67cVD&lHMf[km$YS[ARgG7FG4S3*uPuZO0a]
%?FoXift.U"X:!h#8\1l,?hC[ndb6"VnN)DVaJ@f!4#u[dq?NA?`o0IYM3$J'h>jf]He9?WEdPLs,2@/GeP>MqD%1[$IIq6Zh9gD[
%NUPYPrVj64Rn2E9EWW?#nB/n?#HbFAbF<.0AFK/p/Cn1`7:On<F8g=\TR=^48s_IA_eA)tg/99%<psl`pWC]Tn(YkpoX0$YIJKG"
%70g)&Is86)>C3YS00e3`?b,q+\<DiTSGLkEHXm$-.l<gSY28P13if%ah:m3Rc>A@arnN^o/ickeb^T]1[J(XZDol7U];!h>:s"ao
%<.F\I^KCAT>h,KWfI-?Oet&]=gD*IJE;e[r*?I*#6#E+g4kWt#IC$Mo&07LfZ+'5"F78YX@V9h%pVrPoH=PX7[X7&g:?1Bb)p]EE
%[jr\FEpl^Ero*N[=MscToU)dKH`O$tNM#&n%\7Au/>):Wgra"g4f^]Y>sG:5heSjEom0CZ<us;<^"sf];C2%C+1CSg5CC+Nh`j^$
%k$>k5kN7lS)O26p@66.,_J_Ao(67)j55@+j_6:(tCKFnjmXJ@7;AG,*RFKd;q($#<5.Ra7OoQ30J+''$nDUpSYfMRtZEP`)MKF'F
%2a/;#VVHX4q/3V5i.e3qgpjYRDI<G!=;c!oIJ07:a)!):WRgnDRW\MthC8r.H?se*5hlsl_U6MaKBH6>k0m.DFA:`JXM'[5/QBsj
%qi.?Hl;g.6<1Bp1)Y/18l/KnPJV*5(17bIa%_$eha_c=jqV&QBQ/:6dAn,OLbiMPZ4mfAH^%2.pHM"AgL$`,p<-bpang.8Yh:NK.
%YMHcqM;Ko9<pm[!dYV<\eZS7>q@eN0c1..#\ReWnY4U:`Iq^Gk>/Pl$mOqf+g;WVhoq\e[$Dd6#@lfn-X1uOpg4q2eIgs)DeYh$r
%G.r0E2cI&K<FtpDKB&5nqkoK*cPIWTXmY"%k8&=DEoGR\KjuFh9SgsdX,U<Er?;*,s+pZ]qXu-ofuEOL8q2;6*B)7'dJ3DpGHTVM
%6J0H8qE+%UC"5<MFPf=*(EPR._qj%/)/[tA5+UQ5ING&%_T#q8CCh?/L9#N9gOi=DLHkC.+0-Ja?<eG/npqqj/3j&SQ>UWTGot6J
%=gGWq3jC]V1KXJiZ/<^Lk\[5HE+?SNR).cT3mLlEJ(QrR68V5I.+'r'rS5-7W)_=$W5Cb&Ks*76D16dm(TqLgjfEoUp"aDf:$,W[
%/UM94'&DG-);>4NmH:cThgG(o'en53Gp)L`CP]@7::`s`>?8F@Y9"e$aO`nSFh[]Ohcs3&ou!!,p[s0p?9)p?:Jr6q!=El+hPNA!
%"%+9qQJT?,eiopq-iMV1qUg2NKOsC2"!r&3[h>Ub%Z?hI1M]MMkpY#mY^rjq'fER.Y<;,6With2HsE8s%@#:^knB.1dF6XsbEZUc
%ZUMdDDsWs+\!s&IgjCtR@+a?UO)El"eEWN)%\iR+0lP@/SDV?bkBaOF*ZSuRjrU\%JS?uOb<"q7\s]r,1;EdWG-/+K+JAn$nBbtM
%b&LJW2Q.A.q>/)8C./N\DS<aUiHJfjgJ?]h#%ae1-kq;JjTIDpQe.b(i=7a&<-It1&,8gi0"7mt>Q\>e=ajlLhg8gQ4+Dk1!`9Ge
%h`\(-mTtA\X>ELEro*ZcZqPD1Tg9"WZLW:AnSr[D+BP3C#ElX1Tl,BahgL+Al_d#A?`FbXaR7>.TLrPn0(eSAnY,tB?/;!RS?E[[
%qks>43albB=(a!$46ot?h+p9BgqPSMgb/"bJW>H@)JGQ#]PC:EH11!]Qg,:uF<a`2a'*hZDntnRU4B4+?;3XaqF=>!hmkt!P@cod
%R45(@j]foL:N*qL52BOj][438D^dX$WCZ&ZGJSk\B=f\aX2EI[Z8N]]C&33eDKGeG9ftWXk(d&If:^X!M-JJFSRs[Tgho+]pM"[h
%f!c_Q*h9VCmN=Z&cMcMjKqLoD/_k0Dr?BZ10W0+5NKqDH/l:9i^;GqYnffH[Hh.J8K:MOrSP>L0"0VOpV1c6_H;rS.])l`diU'sF
%)a%!0\_9+ArF7.A0E5A9S@`@Qen/WugM9m`nc$7Nnbi?D,^rQo8$_pGn\_L%FWfoBo8Uo!.g*@":cr/f[sAC9V4/4k]&3FclB/Xe
%j#MJ_lkM)*o=N5-JeL9q6Mi'NFKOEShf%n&;)M6iQL;KdoV1'1(V=Id5G!<RE\btZ1B*Q\<b>L[?,Ojj7Rl@]or.`_\9ACoH!&sO
%[Bid#->pSTG<`4T/_rR:f<P(bgg46&4h\7.E+r44on>m6XFeK]T:^_PHZQo-h7EV12l!g"gf^dB\bU\shSp[^UYENsY=P7UeK2Q)
%#M23IlT)ALfHfg[Qga5N2rB*.%[hB-f4a>7%8CI,Eib87m-dX_)!jI=T^Q<sP2+kqXrj[tH>ZguRUMZXrREujTABQH['H=7F9u<X
%5l=^IT$<t6^D#d7M17a8H10-$obL>(Y?ZVVCk;MTO/Kar[U-H#/iI)15M$]P5@8?1-I6p1hPH)nJ6(dR_t>@ER':M#92JZTP5>12
%b)8m,EaXM[:uUfBp4\hE/(^!@CHXc1\1bM+&)EmIs1.[iIcW.BRb">r^)cC?%r]?.:7^E(,_;kdqE8TK>eAhmob;W#;Y/h>NLojN
%31I"C3-j68)&)+cL?@Bp/3Tr'2/Wj]eq-2#%D]tf#(G(8;$I)iIm%fDS[3pn^%V$IP7.Wh6=]oW];r/gW_$k_D&sZT<pM*8g:MA[
%ms=Ms]64I'=R@uOcA+(1hfI_^mEZmiCN%6==sVE`=6gBtX4LB:*/gSW_-,f1^!Z`PWrE"eI?]`Z-FL-Y94+<ASNSpPZN36[[cbN.
%h$%[*=U2+pkBab6k)(MrY88/&)isR%;N2W2>GlZp=0EUcqM';Aldt"MMqV7@Qd(fLD#mi:qQOu:em/`$pD$kI.nb*\H`Nn\)p9Z#
%hs7!(^M;7gDm!*3otfiSSpUM%RehO&k8+2X\*`Gp3FhtBi(im)p7nt^W,p[0=2nR2?M7rLGXW2t%;sc:+!:0&rRTAhJ'u>mWZ3MU
%@AgT,?,+)F,8K*F*h.^6)$[PTVdBArof2,H",6mKqm/LHY$Q2\gt21\!@k3;J$1ldCAuc/md,F/Qb0T-[@^[l=`>C)qA&L&pmu^u
%q/r6Hj`c+FV0]<+pY1=sel2%4LUH^cDr@JKb$P+/_B[NN/(a86`JjUb3UQL_3OL72[MRJb52UEfT3XXJ`[m8mn(0uW\J2L'#0jnp
%+=h]_4$N)U`#+o%lXJb8bBuV+F([W.C#2no9/rj091FfK7.'4^+O6r7BcdtM?iZ8EBUdna+fjAcG<7UQVY^.L7.=alii>oE>Riir
%k=bI38oO?*h6V%b'JnLmF0ppTke(u`R2H3;S3_(8Tj)nleK82s(?hgM4QRtDSTZ&P+=L7tZ6XnN@h0E6`hE1*68NNJB;5[jhjFA<
%/>"&u$[L5)&X#Y^\r\4=$ZF56/aF\ID@hNb'"+==%rj]L.F/]$4(img<;O;U1ZTL]*anam5tm\>N+R:\3@PAL7bK>[aJFY(b2:lg
%RJ@Lec:aDacp"!_.*+E0(!#M4Z@1,!]g<7?dP:,4G;s\HRR5)jMq\_`K:0@kH!k^ChE<n]g$:LWh+NkVnEZG.]bd75T9kh!;g$<B
%KZ_e:Z\8=F,RS9XF.onD$iD`8:j*<MLa>5,[V=djL+rgCF4#;\#]-\i3JKs[G"0a553=8\3M$W<'7CU2^D*g^a()':22bl!"dq.S
%]tj)3:GYa/[sJ6EU]g%f1cfB<glo8]E30^`@f#\ph(&r(J)DlI]b8JL>?&pA&eo_ijq*$dha.&TCZQ0[-8l9^LKq%0n6c.#dO?Ri
%,uCSp/@oL3guopDrU0<f?7?FmG>$;&ej'a(A80Q6L0EtBLP"tO9ALrHq[4X]_2JCVXL\ke>":R1%6V2e*;8sC\7aD8m/JjYFoNR+
%:hNlklQ'KLiUZfaRU;E4TQ;#&qs<l+p$Q2+E;&c/gNp8$*9T/p(@6:eYao+o.P?_p+6IR[(nO'#W9B8TFusR7Z:Geh&qC0gI!7P"
%\,'`_i5^%=FC*l,<u`o<0_dEsZu;^`>f-C[iL@R#.DlG^.?A'9\;ki$E*C![\Q6eKjU@>]'!O>I@7DV9)++j"\+Y:Jf,U&.M-HgY
%*h`_Th6[I4cSt->+tig+9(O$sO&-gF\s3fu,NdgU4OUG4r9[j(4u%35#\@Jj0:KhDWtI3Q;F3Wa;PQ8P+(s3K;ZLHE1qt4d[7XCY
%NPUL>:II4k0^fYX7V-G#,R:@%P[hqA2ig0L63BW@AH[NC0#rg3V&%Re$0DU/!0lSE`$K!DZAN-C7<q'3<"iiBX=DJ!$e*Ukl9TD5
%;^c68V?t/k-+@bl3ARicJAS\5o9Ri)-GH'D@%HFS>)o^8V@c&a-7N^R"[QrS2*`^)@-)sVi/L8Y!!QuLJdrI:[g.0)"qt+UfFoYd
%$)5VQ*`OkN0uk\Ae:9K[@7!O`Nc8S98[OH`&nCL0%"]3m;bdT3*iL;W8VlaQ%4qhh&5f=[cT"FGR2]qVrC]Wn0VDkV.UdE*+VN6^
%,6X;p+c*En&qmi6@7BAco,Q%[#s^$F'>b`[M#%gLU$5+c#L2S2A>H`,`gik*dl]u;QIN.Uo.eb4][JhXRju3fS<ek`3RA17=_U,7
%P"9+LUI.H%30"(rR\2R+i;ll+)%^86OCJ]2M>p:K9uLtGj=HcQa!kV_Fbq2G-=3Ko*%,@%jU#F7]b<kB@L/nec'P(p>?jH5Q]jf[
%?@\3@"UNIe&rD:H+Nl+;5[$E&BdtE&3e[cG1:S('F2S-WStdlFUi9E9lj7DX`e;](Ot!c6&aaR9<XKe_N5ns3!+p$Z#ma3ZV^OE7
%TeVf>h\&arN4UNoBM=]3HQWP##3%s'"Lb'["L0"W(d\t$1?M0+4bfA%OW]@nE?Y=#L6EJ9jhd0K_t-nO>9KN"`^$HOLVQ<cK'!ql
%#LFt63"go1157[Ep2EY29Nd+h"9K10-/p!?3mAWol3PS#\;[u)WF"R<#-^YW$7..*/Za_3>nY.$2fX?ZEX:4>S?dQuCIV1KOW-\0
%@Au^KAL('K`X($1r-mK>?S!du'_)1YL5(_U@9S8V-a#hjl%5ca0Zc#61(%5P>Y3ZG@i/cF8&RR(!/MmJ@^__'[DTL`8uS\:3n,\u
%W8nB=\18nGI_n>s?&RL-E!PGr(^<Ng3OBA2>=V.>>sc-=UktBS3o_@1IePgr`(eMlJNMp-"/*L^\6I%/;hnu[J0_(D_oU?p'daf3
%Q.H_!U>Zd_#-P(A0.KY0Bh>BoZkDjodrn0J_INgl,2<gJk2MXkks_'Y`g)(Aim"2D$%d!Ifd;@17(cps+iR"cGB@kaLTW>[G"gYI
%:eL\#57#;5&/#R6!0NNh*qC0MN=r./'b.%R8"cX]!_<q9.3$;MJ1km%5ff>8ROai4k$;CTk98hACJ#k*X>JfL)*7gdLmWo/Zgbf=
%k5>\;9iO0%)bt;%aULCEh_TN[Aeer?f9Z#f$7JV"?<bZ7XtfaYF=B@QQKrO2Th]hJ`T<Upn`b]-qjdC&9MrE2`c%!h3)(TZ%K`_/
%F%,2gD`qZ>/clrXFqW^qdMO4%#o]:&M?i;O\oI.$_;NWO"-_/B;PMAN4ILScP[W$/*U6-,:=Sk?<4/NW3(b-&(ZRW2.O#Ck_LEnX
%e5TI,amg^gi\Z3D.G#nWh_]eBbJma.<[^:_JMaF[/YpgjMbKJI'0GZ9H1C\/SCk_X\,$f!0Zc2L17-Y&L/UD9^e>BrDE;rW$F%[r
%!IAi#O:'G`W7!RMg=/m2dL#%[O3\KMPEL2XGY]"CPFB9$D./Tq!N)Jr_Q\Yg)tf7q7j$'^mID+_?jp%]UJ@Z?Bb%u9IFK;Yp%O@[
%?s9#2<I4?/#>'8Eml2&87;X8^c2eG$`W]Hi,6pe1@0cB.mAn_tCI_T\`0cn!`Dd(YQq\8h\uYlP30I6u9Sge#R7BuliS6PS?Xpt8
%^]RE8<a&n05O0,[q`3`q\4F*K+cpPdijB=Vr"MsqP]%0eA\^,G[DXQ%4b071&/WXtKrLA+((ofjJ==D%RYkh'>!1KsO.MHQ7(N]R
%3SI_5Co)m.4QQa`m@V`.-"_P?C<W.URT\?IUG+WE$`+CPXg%,e>E0sEU,:Q\O.FVgJ:Pt9%g,`c_s!4RP>m-en`biMjbd<!"+LC4
%(<-_E!"&h13HRfEgK+XtI?\K@1MFib#SUl54"#3E,[oCoWTTtZaIm")JX;NY5tL1P+O2KHlp65+LHNr6[9t<`<1t4\1(t6,3!Krb
%/n1-N2HCs\&A[=:,'^<,9JeLO"O^[K_K31_Q#m=?5ea8(Gu^M#?tD/Ycn#kJV[AY;R;)j2@.%D/"%`<O#a8%CVS(mmTr=QEap^uP
%`er7s"3,<X[B'jmr.A,mBmS3(6@#,(b`;''?Xq5n975#tX@CHjh*XN)r98kH:5GTD-*%%]VS&Q(J`:OB@76Q#f3$$(aIG5IRCYpo
%,Dq"^'35<8A0@Nh@Wl\M3ComlE<Lpg/;-pJ,:P)&N_5Bj6IJA3\hoo]3QH)e'#>ik%'1_WZ5"g>:oq3-[Ka6%O#M3!-dZ)Mjb&Hu
%Pf2:jd5L)hd&/=;np5JDQkXV"K7RHpK^sdHgmOPq)osHs8E(YIj@;TK<9@#qNFCfP7jX_=5&o>2O=!9^&1!4n6Q.,-8lX!@AMK*`
%We_'c"6N3B5s\1pNd,[<X\e=U4XDn!@g4sZ0A&Zld/)"BX`;l>WsXSkSA`.A@h-Z'/aO]R"bJQd;<_a@"%@I>__8]U!Wt\p-9;9/
%C:N"8H^fU8B"*nDaKh;'E!gA1GT*g7!_8&+"V-Zp-t]C^qkSnec*Sa$!@94#4tNNI=+GUNIX\#SQpi\@Vc?:,q1PFaT`IHa@st"d
%+qC+n<Eef,NUiH68?*HnM3u[Q0k?jrR7>kSBX=3_Dt6&B"b`X=&208)*[3bcnqsg,36Hbh4TWI"FL2f4;ju-Ib<$Brs0p+J.$[+C
%'L_adP?Uo&`l-q0B6jgQ+p8QCI.G:Rn.J8r<eO8=qZ'c8%V<OT,tohb>i=U,K8r,/*APNc]anUMbU-e@""DUO_<t;c:!fIHJ^W%V
%b^-0C<&K9k/7WH2QRd&R%bR*oc2f85_X]u"k9:/sdRM59\JZcH<Y::.@M=8OA3/d7d;]Y9CS2m>_A@jhP;Pj88BR<29.CSr#<B:c
%rC2:Nk&Mnh.9LI6"?.+VR0N4e`r\B%jntd?3(R((7>'DG#(bppq2Fc.(m*r\f6Vb\IT(F:=]/XiL*N7nKdH6pQB3!)Z1@>>6o2;B
%]0B`+JSc@%e^S@DWC$>:ZLA"C!N94)'LUk!R>RfN=n^C02P?#X)Ic&H?)&:/3/nX'd23)l&[$re`0LUp&_SEe11M,s\moJmol/V9
%*J#G)M902I*6>0Gj?\PC7&W#g6jRj8i&77330]QMMde.N[!3j1$)!Ja\W)R^V4*OQ(6G%<*Xa)=Tec]pq?U)E,Y5sCP[W=jZ(KMo
%lp:gG'm'S37_?*(o,>Z%"1<BW=u:E?Js*6'#0BCI8B8)o:`BMNmH'Fq8^,pJ-$B[9I*.XOaMK/cWmReE(.$Bg9JU:]1D1*<8KgWe
%/r&B@')AAeW<uEUSG^56@]$r..3%YZL&7JX#;e7qF;$7^H<ChoDb7hjV@3XoKtT*q<7:12nZCn<DQ]f6K`rcJL55i:Q)m;@8imfl
%:#^;"G%i+]%`K!4#,hWTD,0@dROIR'i]_4)T)f<8i8r,OEfc[A4tSN4L+n&5ISO&rSRh0gp+Pa^a03ipAbnbNf4dU>Y^>Zg!H&T?
%M@=bQf@3EuLk&jQ:<A4?a)a)m0*7t+MB%2f8uZ8P63id[NH&</dU"d:/.L?#`6P]?)hj5Y6FKdnQRL?;CK+/H=pmH2"LY$.]G!-+
%PZ\Xp4[nF:QNFiZ0csdho;'M00Oa\gqL9]$;$j]B*"o3qE^d@,EBE+BV0/V"8&c$)"\EuEYbOJm:J?n;),qmef6G022/t=4<B&\U
%E#!QK+m4YX2$O>J(9*7M+Z6DnNcJa[(>2ME1/YnMQ/sAfb,If4_2?qk>GA-XU0RL8!MU7_0a^]q;MI_aQs`?"+:C+B*cui?)Jl2h
%KMSHY^MXZi?_75#1/Alg>87WA\MGEEZ1<T@-?TN&A)r8;bVk+D'*_-!BSo%m_kIMMR\9Ns3Wj2oXK?5:;Lp:un%KXCH?@LWMIR8<
%8.lCc@$IscY>P9H<6sr[Er1F!41Tr\AUt@Bj"psJUU7>*Y-BrPSH0N4;%fd%^lUJc(<Wb\6u>L/;+!c"67$tYEE-H\&HEq'7pA]M
%\g('Q)mXTpLEs.bHQ)hqd'%4UJF!8!!Z_Q,fa9&aXp0j<"@/CB(k</\9MVhR9eL.U,m-eDZj94+8Yg>W+@SBD'NkDe>DdVbEoOra
%0L9\_"<8f58`H:5j-*\U@_5=i<Kinjap+D+"]L4gJtAi;S^'ljk(^m:Ptn1iiD4JX5lMH%3QX[e0qq6g29F=EEBZM(io;&L2RN`W
%Pt4f;Tm`B9-;ma#;t;&=O#^&-*9TUU>G7QY5`SE("#FK'#Rpk3S6'7cBjPZq/<)i5rX**pTK`aQ/X<#d5bBL!g1^r"6,=[8]-j&e
%*g)Q_pM;@q.!Q:EkUh;d,Z/0JhUoQr,2"f]qo8Bne6P1JZVU(C$*MZ"p>u#U9JAoK9X"Rn&=]<pBO^-b"m!lVfm("2FAD6R$OR_V
%(;l,gpKJguA[N`V<J%-6A&]e@5iao>64X..36OnQm1"(=U+[a3<]Q"L+r'/+oYg-(OQ&$8;qAIt[RfE>(-Nf@[PAr0+[\si_>k54
%U.to+d?_5Bl2*fOn[7leoI$CU+g7bG!hnd-V1G=#MPiWN?*_Tj&pTE_rM;$M3Yh*WR5oLWo<>.nU)+t]h9\N0JoQm<UEYhZ(Rp(G
%;_%@(%Z;bt!AOV*ajt`B#RJ$LaVGF?Kr[gX+IMWC\e-Z(^l%Y%1NJ.ANZ`#[i[K-54c+9W$72s#`Q3J&nD9HaiuL0Wg)*U!"J#4q
%MhlE<$A>+"ER*YM6AKg6]VRE"lG9%E#r3J@Z`t-]A&0L%c4?X9TTMW)8P?sM1XB?(,f^>BBVuDoK11ciJjD"g)D6iQaK]P`<pVV^
%gIgKt'(@DC"QS!)M>IPb$9pt>c_<RS<f(CUi;kE;(H):N9*bM9CBG\G@cG!&Yma3<M$W,='-J*#j-g3IglRQ>,d!UD%gK[EOU*)*
%*/!cO9[<f>G5t"aZ@_HlnB>3!,c$kl'-LJS&.Vu"%CCe-/;-j*T2F4EU]HSsM3W=m[Y8^G:CIen7(H*r&Cf?Ol_*EsF\b+k<D7CB
%5i=6tOTFAt0h0"I-NkbM*e5[$9"83+L;iN,B(TfOk(s^6Na4eidfI7P\VSQ;<g!qm]]:=DC:h8&dm>d0Qog:,iNX+J4$5[nO9^^V
%,_0;d6OGqY+j)+76L:k?+pUf4".5+U=Y86orG[!o'Wp+((b%!#GS_"]W/\&on#ZbZ:OA*;$"Y.D(t)]$G*W1H`@W_Xhd[sM8.#^l
%_o0/[cjdsoCZ`J;,nZW?"&/QODAhO3dN:EpJL(t[0^KRZCs`?UnBFVuL%-4:2,iS+!'s@ZL:]G,b:WpnSLX.8RHPM2.@r7gcAs>+
%,4?rVs-S/B*D;^Z9'fXEO[C7\iHKM1M3INti67)^!idVWO:ii@9TC5QchAs@`B7VmhUUG[]360e"S5_am"k.h\QtLQX'O1rIQ)9Z
%UYG8]b]E7[2VNu\38I3-.nFV#d,)iPgGO[;&D,+JP[u$n@>H1GU-k&73O!4;nnPJUl#ES#K;m-lchj'm^qS9YG,jWY8H[]P6SPkd
%RaAmsTD0"YW$&1'o<1ps&&ig/-`/<0oZM5qjl(Nmg#EF93+.XmaMHc6K>,3E-F"]u%D-7eAZ%Zn83hHr&&Ef/](E]s"K4osKuq%3
%gu:[G<jQid<9K&`[DS>.Iq#@AF]f(CBY^&\4qK(:l&8d1QOnJ[TH9,41=h<F+oX*0s4kWe*-0icWeYL55Y!%3Z=ZWG6UGa"A]TRe
%Ts!>n)->&ca*Eao0]'D2W8"H9W]kX3='&He!KshLRPAnkVr"X>I%L$3pF;nt)-[=sq^S*Q,ZP$]X])2DWs9p#fC\=k7=R:(8'Osl
%($B6brZu@[4@:(X01c5>:<kFMM84We,CW*`U@o?@90"Vls$U*?b")ouaNORuW3UF%%kns%_uYiW*$0MZgR.SjQ!ju+p,J&kF;(5J
%i,-7hk'?Nia+0I.Z7e,=c?4H)L(48@)@r(dCj&erig`)OPqSm`D.CrnC3X&WW^;E5bi&%XZCWG=CcKa8'3LholI4A4QD$ah9n9/k
%'M(E@B9B$mX>qiZ(>`!-3=_lI]&.V"`]GG?YDIIqMY4lL9$(BtLBQml`E4i*b`*^-MP.Db_,*<;6:@=UnW>C(aeO]a@g/IeBTk_l
%=[CD[qJ/jpXi#:lI[Q&)%g@g<&Wpb$(B_;u8XDiB2C7<g>WK2##6q54aXhfg66/V%*mXV"j95$9&`")r!N1kIT\Sp[C\`Qj)'0MS
%n?>LCX!0#J>/VJ>HoacU$<!GRJTPPW!3Ieo.iH&,rCVd)Gf4.4*@[=P(qKL;i17YO?GlZ*Zh$cA\VL,5gm3bh!OBMSINX>@i"sgX
%4!h732#&BEV18j]6NohX_iDXIS<p#`#%:[nFAh21TVad@(ru+3dj#,"K8#>V/F(%ScT>L`)]4,C3'lYf[8#1&q[]X7'r,FN83o:*
%b(`,a*/%;F'u/3#6<&h"Q/iL>/R5:oVJ65PUdXbNo8%%6"&YR&8_lAn\.fPXQaSNmH'o[a3+(k-j.6MN;e,fLrcGNiQfNRp2t-uF
%M,/DVc1VkEfr<Sl6?bt*_KS\!k9HI8l;EGGEj$VG#"8m&e!DXl[YT^!`%\?>LZY0?;_AFH!57Jf%BNC[3!V6T$4YSbd'l^(;"g2d
%Qj\2j<$E->U8-ap!mXBh`a#F_TQ^UBh0GGuIj#VnMG'W+Iel7(G4_?YK9kf:m+@IS"2!Tm^HJEFeYi]s^69LK$)aYN%Z$UlkCPq)
%'9-+C=T*Ot$KUh%)glI)U/`N@UA3nW[&nQh]FlL/'i]9;Y5m;3EU];^E1q?^dX6^gd!3E:e`0E,4-iP\B`(dR[_2b34NoP,"!nm,
%;k/hBH,!ArZnou*?Boi.@@lnH)!_2lD2MUnZN<0[_&54&3%e!T+]'u2:S&P>X\!jY98%lM)06(;M;NfSM"a0-I8-H,$\+Fp=[aW2
%m\asCT;_qRMY5'j_sGYMhqk>qKX2ME8es%E$"o\>1CFslS\iQ^$9tmSiNLS:)5kNT^`'F>3&L\0EHF*QbFtAE5B.Z*0j0(5lKp08
%g92'NV`3/hUE?Gq#ib[geqbDYU?ETC"DGP=;j`McUp#i5Y6>W'AfbkLp+Ng!6&R[;3Skjn=^1*G/Y&jP\S/`XiDn4-l.;PR*#qT+
%LmL>m^o38G(Y%93^K(N+!3QUJe1)&#6OX>'8A)sj\o93@I%.$P20USarp%/QCQCZp\pA^J0c6uPpDY(Zo`;4Vf0"f-%Kj+'qH3Tg
%2<)Z?`p2m1]gp$K?m7/*4a0spGQE<2S*3Q38GhV8GlH,e:6MUW(o'P1BN:Bj1@trAiT5k[c-,_.]pdlaLZhtHF>SMIAJ(fD(?ZW!
%mt_KlV6:j$H#pZ&g!:VqH'>np8uKmO$4VU/7+F!94=1ET\Ur;%94%,WI7Mm;!$/d"SBL(1n@VG$/>^r+md%1V\oM/\n&J\M4K!c'
%h+2]D2jdBb[q)?M:5>lV$&!@&iah?o&W?$pC^^_=BPZ6B`uu-W`Xg,@R]a(F*Y;bTKrC"/K!NjjCZf3cqdB,!B=ud\&)-teOW7SR
%'IMpoqJ-G%*RSOk'ZPeOo=h2#!X+9Z(5*"r1J3*7+fbdX0BimrTP]c7b])ASk,?b4-q(3M81.gBPXL<<U$OO_@r%4rJK"bYp%&NL
%dUc,%gW!@\[VT4B\_[q?>Eoe;9+Y?3L3>Xrf1.7KOhF?knpdQJ:&6^U`(auH#Bp8hWN!+O8Z4NOE2ZIWhXW\8J=FYL!\VeQRo<FM
%^rW4<"Tl6$#pgX8:sp=2A2)]G#po_s'P5l(8EaVlS62[fi^b&Zm%W^p)Tm/BCF3lB<?d9H9T:@!IV<.2>oF23-3_[@"Qf]?5H^)8
%),K1YoYhA`JYj2Abm:!rPBrtar#TZq(6;'cpk:+SPM:?iBq*B`+MIrlf/[Mpjp?#D&qi2eUc!f*V()gq+@L<h\dO?':".'nJ>tV<
%s%X_E&a1Rm><r?'NXKOfjE*[8-"e#(V95a##,_1FLoEmJOrCo-D0PC;1&7iB?"hqU^d02s1Uf\8">GM)LUY;J#Mn$sY(@2cWp[H&
%8RVN\8B-d4gaJOGi@2j7bh.-Y6!V.A[#/4GHsF=a,"]aF1e=uG+Mj3eMZfe>8CYLWp5N@mT7g_A;+:g_6BVfk_#ki`,6hch\aeO^
%PUmbs%.HP,CV(ElW#Oo>pt(=]VF1_H8<P6%X-D*NeL@]8#S2_X;aCp;^gc3bb`WY`e+?QT;FmVZ.#Q'nCo/+6%sUNC8s*GrI86'S
%Ec"(hiIH,SV("&X%=A`NE[ZtVW1Tu(W9OpQp>Pd#$NeX[0\^OlTkI)Y&_Q./,*qi.8>uS&K:E]eCX/fm.dq/H80ET+o,qbhP0'DL
%U^9+W+[$DCkGa"TiC#We1A0P\s5!Fu'QSmZKL695Oo82)V#9'6gK5a7Db0paKMuK(Ra^^>G#hN)',$7fDD\R77<NS&+H^$dMXp>*
%5F,qZ16jd=)a6`"d53YH90mJ/e.A^+*n(H1At4d@FDb)N`jK(@haW9oe<=XRRJ$[`ZAq2ePR^;YUn_(/[UM@iq191G+=+)b"\LFQ
%#AqD;Z\['h.^oa.6MX_9Ef)#+k'+=A_%Hca5d[4Y%a*Nuj^h@VH:ZbB7jGhT%Dq/ho6*tI8Uu<R4RF:(4Q6:LF"o2LanInnE_*!B
%q17]qKg^GS%YFGm5-uKO9L@0B88oD2U(fP@*<7'"1!\FAqhCIi)#aRfS6IbBIM&HK+W/SI70.3q74/0d$f`A8+c=>ef$=^[nWr&p
%%r?rJ#ihjd%U9=ZIL>?+YG+04b68aueD9AZ,,1jS4#pYce[XsNFKhuJZh7"eEuNF/!R$$YBMU])*t]Vp2(MZ9#u5eSZjkqR&9ao<
%3]34>,,A(3)r0]_0V^p45YO3m7]6@LobCn":9T_/p=%f+Wg3<%:NMs^h$I0HhBm0G.ng;G#SLIJjc8VN*Ojtu:hlNB4VT&mU^T$0
%n4%Z.3!/=/)(-Pb2H^d!4I$>6g9%ZP:GR[_[OKS?]_SP:BDS1H]8/tPTL#7\!fD4?;>+K&&fe&[Qg.[n=qJA*apaLJ_EaVe4K[]:
%NSF`g-Qm2&Sj$#sc@eh(a]][mT9R;L\?t()$CF'r$F[b7<8sW/V,KPpUGu04b#kQ#9,,\1!*uL+6@Gpc]8dngLN&_K8MPmnV^UJR
%JsobX-p[AM*luf1"r.eSkItWPet@9V+fH';%t:72$pmMQLZo`aDAut89!0K`MWp[e^J?@bG+&QH9P5S*-qN<iUeRdVKRrKb$kQt9
%.O[t6(f1pU@Os3_,B[%pAY'l'*_frA/^T=\#CM"UWI,fsrFd!OJkp2<UMlJ"4Ig94EnjK?YDD<A(*o_*E7s)aKJfDF5mTF9@p#te
%]Ohn9BegM*V2S_-,b\s4\@=+e;1tgc*)8S-H-)[+Yn`hF;\MD-".DXFUG]A9<.i46C)(CVYcXP$Eb__f>.D+&b2d9Do=0m$i4*B1
%7_"j"kR/ff&c'=pGu<bm,TjHSoZ8^T67Chm3Ngk_"@emQ))AE/&gb)m4X2m50=+&p$S$;W]#pEb)2Ic8<&j&*Fs1Rn3DWW^2NjgR
%p!8,7QVXu^%hi%]>)Z>=9H2o(kC8.OLk,1!LmAV\PY'Q$#.`<15-5eOfsqV++t`;\SOl4@^Q8Fl_4H0,UM^6%!PpL8aXuesYqN])
%.#>C2#bg3Y&W2[VL3s:A)G!b:k@DV_jR1$@G@=81KceTcOBI3Eg2ZJhG>!C\FomVD-n%KFKR(_ap4%E1RJ/onkuE1-U!"NKHHg3J
%nQ=f#O\U,;pfO9U3%Z.4+3,Y,FOWk4!d5fL'kBF47J^,)IEIhH`]9].*<iDH[5J0qFJ#TO=YKke6J3Zaib'M19U*X4q=qe4PK0tN
%%hej!XUkQp=9<%tIGW!TEtj+<3Aoi5e"pOWC*DJnV(B@tkVQ7<A_>dX%`,:sq!9#*?(b%[7MZ;1r>s0P<8$dqBFu1Q8>)X.Cs50-
%F?-l8+"N8U_3;(<%Zc&,P,4cgb,KgidtUC2XmQcg1;+:GQ_W1PkXV$,"c0Q)BDd301o\1tn/("!$DDUkTadH'*%/XkiGgH!m4$<'
%@EhL<2JOb#9/SL5;kJh),5A'B3_6)mY-KMYQ#iXY`^#!sg8OO35-;Vf[]Q^*]t92S!M`Ceo57)'U-Zm=dXa`X+&C\D$%?1`YJ0'f
%TDUf(0?9.3DAhGAX:0V>Z``q!+Gq1<Q+,qY,t9!p@YttFg^hsrYQcc#l2=+@nB[0ko]l5J50kn\qW$!FQ`>*7$ia&)+)/p:79SZU
%\S6o\?KUX%PY_p*b5CXK3@*EQLuO\h</pA>15@H6pBt&QTB7I!C/FrI7>Y,Wbu$/(1Pj\K&W8!Ho"#ff,6B-E2a"6%>a2ne:=<Uo
%gqn>k8#2n!/gVVX82Sq!f*5bQ)N2)I]IZQ2`Mfj^&3YQk[,u-NH"W-e;$c]\"odjp=Mu=ZZkib$Z[$HqV3?WaRuaG&Lh6aN`u!e.
%_aXBR+armM0:r+<'t6C75R/LJd'C\u=BLe*ab;SMCP]C39?4W.#g`hYU6*sR,65Aa74i1#4d3qc3".90fi>1E+OW8;hD?e\JU[FR
%_#20lh"`X6kWsk5RiCgrE@aZ5Q,523U'%ao6)6pNGHMGu3+G>,cLnlrX4C<s`B3bu'C]Hc]i]<Y=6@s5I^.+(mtVkolb$aCj$`qb
%eYc#(4V-"JR=@8[dLX@/feJ(tEmGs482$h3=9'k+gA23_2"KKAYYl0kKo0B->s9`VrIH#<<k'g4ndc8/-S+-.<d8I\4BioR-HZ]p
%L>*,^\fQbB:e$7m\>F'4+C[<r6PY!!OHQBmg%1&@fHn".QlH%[>d8HTWbES#(tS&s:0$64"`9AFq$O>##FaVP!dUJN?LNUbgZHK+
%HFX'K2X64fr*h6q;u09:S1=PiKMrc6Ua`'p>m5$Q<.ojP,@@JdP-q1J\.dr7&4d@;]1_di("-j8o6b!&pD0$;?rd]f#Elms@XKC9
%FU5=8R2jiEq8^4^YD0Y#k'ZgUbHS-u7BiSg1:P&ZR=8d<81?91:fiU5qoa,r>U'nNm6paiN[4*ETG"F&jtYpHPRZhGp9%,(KXF<B
%[m%Rqa&h??T2"MO*25GUJ6$J)$c6?T'i!k^U*DqiK[R].?%LWOK]ucSIpL%0*J/QdO[1Y'FNt'b/.5n7U13B0q+r"_;m`*1@Vj4F
%d%c+J;kOC376*bGMp)2l+Am3f-'?Lf.<Ge,!g-Bsoo;i@]d?O+/gi)=J2/CmIUUjbiXhJhI##'6hi<SU.10f#\sjDA/IDIG:rGs0
%U?'NaR\4h&"H`cl9=7sD=nL\5`Jc#<6MuY`?.Zp19Ga6PD=+"T#L#Io5bLuZrci/p"4;c4JuB]uoJXW._R>:)8Of.:"@btB+,e!;
%Pb/5?O&o3XT6@YjL`eg!^q5\=Bcj1f)MQUq&SZCM"q+<D!p:8QTP<,`ARP?iXG9<Z&s>5Va>7loL$ag/D73\ikjO`N>(l!H4:*N?
%A1k..7gB+;Wf@j.HA#rO4.!>3V-c[Sq#;g"gNE)ff4NaA3tW"]%#PI%SW'[pHT*r"6:mXZM]$VoP`@jp#65pWGKseU[1RM=a,5*o
%'I_SZZ$*r:g`MR@qOMX:W%q:s%`eB)]EC2p(hD%FZAOY^E6#r)<0Zg[?hHkaMl"i27JiJc.u0j^4c(@574ZR1lR\:L[ZhcGe(,ii
%4i+C7*]qG8pG94j+c9?2crG/9]Z3oG.;l!Z-`L-G<s73NCf-6P,LZACpHD3!OkIlbLiA\kH96.tVr5bfoo9KC7foot3#J437lh03
%E1ERW$I"?6LVt(-F=?3`q^95t5e2iNq@V@W`I:fRIL>549fqQ4,l_N_gpp's^6>(/fUa9J.3mSUTV.3<EE2MF)2%@(ZV+@#nNM/!
%^=Xil@;-9E,F,,ed<FD-Mitl+-/qs-W2_l]@j8QEg9E8_*P3M5*FYj2aATT&U1t@OjV4HRHZ?n=(XE\E:,C?&gIh_Ag</Y,iO/oA
%]T2l3=5eV!3YS1Ec)?IKB4I2<BJRD='s%I,0F(g<B:W=9e;A>n2pI,<GurQnar&YN'cm0X,=V.k.)gh[!#Y8Fp2;UcMd)nr6XbKM
%2,eB)U*9%QFWKbuW@(:5kY+g</KMT2#qpFk7<B[ccDSi*U:FX<p9%PunGtD(<*l&JS:s]tSe*l[1_iX;m,-T(darSU:rA#a6o*2I
%Q4YA]QJgg1A6jlr;*'`h#j8hb`)O)fJ-L.c^Lc02bcYB5#`R[O,U*DlV/30=UZE'pLW-)NYE;o&O;j+<q;Ql7V]gf[aK/LcB?u>g
%f81A=/Y"DE;I3%s]QP.P/nQDJVIgeH<L1g^>$@<L(sfS*#/j#1e+jtU;G<)lOm5;3*':q!Lj"@qfh]Oo=oW&A"aKTUY"(fi@f<[l
%!bA2V:&4>daE0&d`E`DZDE&YZVbe)gX=[#;XJStlOR:3:?*VTTL'oGmRTr.KIkCjk&A?][5)LbT+rAd,]'dugM<oP;\[SBHoNstS
%TC/jXP4nS3beG]CBaUoJ):+S65\=R_]8cSOBt(TE,QrC+aC?..7#pQBb.<PJYk,-2U\7VS#dAJV&G)k['<UW^fQlD/-oJ&8-Rak8
%eBRrY,rhc&5UT[n4^:2(!DS,9B]mIs2k*T%45HVA3LXA.`.d95N9bFn6di;jT,[]6hLW2/@"/8""N_4-#2XtiNY(k+(8N\[nX*-\
%*!63flO/4FB!^Z7@l3k,>@_Q/?,5omMd'p.K3-JrM?i[)VaWbh=9oF!*4@9C,s87Gn"XbRWJ@G?V.;'6OA_m99o-N!g\"Ui9hJ&H
%c60?Zd*`1a%'/s(Gq`PqJ,."1[\[@KGnc5QU:Nd%(]]gcm9QZ\GG4.ER1#?t/MJXU*o#bE7K?1r.epso!JH8FT!F\.BTAY7.jd,4
%'."2P2>IhZr`=dm?>*mT8RTRfkYTfcj\tT$QUA`q;a!m^?%>)IdPMqUD?V"kgQaK`\;1/nBrKa]qX2gJd?eup^[RL:oe6%`\8N:m
%\<*2M_d9ZOs-SgE*2uWJ7(r!t_*O&90Q`#6hi:jg).PG42+ME-o2+1']B'*"=>UfOSYC&=egD7sK"OD\P#u"TIjIEf]T><,Xh0u&
%jjP%hDK82\GC_[k.FVuEM%jV5]*nq2$(<>@^rdnDem]<26lB)HKcdnt/ktTp_K-ZGJ%i._Gd+Sh.!^31;4XBN@:o4INIBRo*`)9W
%;%q/l":ZkNOU3KOA#[IaB*!5K5JqU[X<*b4Q<`ZX[9XO65Zf-25eSA\ab%Rg>f]=s?N^nb(%=:$QWB3J+`bkQ3E>D@O5M3Sqi[dK
%E$I^KRtHQp;GN^\+8gSd1s`-*G.8;R0!TmsGSF`ZiW0(,Rjj]83]^k\(B*$7Hf=&7r*8c"PjJ:JWrLg40fuN,8raNhY.@1W6BKV$
%bso?Y`eQa;mRO'i1W+5%8m>dtk4Bcp.o+h[9s_"f^h^rU=;^fs$t=4r%`2Dch[/d$T'UD/nf502U[AHr30lpb(,2giO&HQ"'AuMq
%1cZ7@`;%Vc^SgY>THa^d`Y?c7YZr"0@mo10V%8u.jCWoj;0[=:N/6$/!Q$kBcj%JPYG\VJQVf.Wr*BFG[O81s:=13cN>Y9jM<L/g
%a-&#*]Q+l%'2M8!N2NQ_g'Wmf0uP.uaS>>Sh@);O&AYV\`<m]Yg`C#0ke7o*Rou5c>[*?(YfLs`ilT2"+;Sut]VZP;N#=A\%jrOM
%0K0#)(nqYRAC?uSF.QC2JZ1K+*iIj<b7m%_e6F\S@'a6*c<X=;F<H<%$%J!B8`iDi=6LDSs4'.+[7'5IKUs'ZF"dMQ\dk6lWVQZV
%6]?1r6JMq-Hkeo"?]9$lUYi6EE*dcdp"ej<gRtFbd<":)ZQ)X=Q@qp'#E.kmot=J&5?Q-*MuL]@pq[_lZ.GRkjQiAKj!:9#5er+&
%'KK9$b:S>obYLt0MbhUpos/cQU(Hi(#NuP%N:E0o+m^&2;R#@\)h#Yp7A50#+`t?'h]FnWSlP2/`V`nlJ(=.Oa2%#Iil.V^iokYO
%UH!9CicW&GOq`.u@\2&qd+($!YY_Vm.b^=]eFXl3aKl]kB\-($l"-r]@Mm/Y[PQ3Fns3]r8p5,["u*U6Irn49EVADApsaD54^O^T
%TN=bXV7(fGPFqQ:ouu"sq-r*m>^J-Tk_k/mK,+DqCHV!VVeu,N<V(<o4s.6ecXe&@]-#-U(JACJ[pDf3q&;,cV\d@imloR^fG(V[
%.'I]DpZ<nSTL"hN:8-"#;Rg_n0]LSnrhO4hNHSrF!r>'HXgSaoOF2lRr=siQ`FMa:at/>U.A<YV,b:?aiZ]I'XiJH8q<0mKl/3XO
%V?MZdS_&aG"!F;_"*fP_OdbYM15p2U<QhW$"Z/a\;C'i,@a7Y9\l?%pq(Xm4>rpiT(lQaYOM[iIW!e1e&Uo\Tc&s`:[t$K0(=rsG
%B%Q4q.V@etddD-Te?fX.[c1b?^,OVm4TsBphIXguMeRUS;,\Ml$7q'u7%YA`=8cSq+m;DOe7(b3L5#c9)3;"nbH`o]DiHf!TNJH:
%9\tP!#*U<R[l<nDdrl%]?OVd9<tlN_L?9#Q5r6*2obY8ZBp25$ecqI]^CVm$"PNEtmfoi10`?Z:k,,5ZC&=Aoq-UWo!L>n$K-leP
%]URELN#JSu]>hqZV,;oZ*GgJ#:K#_2>EPl7`;<TO_8nt"B\5=IN^pnt`p,?7E/6JI.?F`16>.K'9@]FO[`fUQFUm_2\G1NQahI<L
%hLt#[@fOEIO:$StkF0trb#b1G1TES-IBWsM_jqjOY*#SbP7It[eeU&j?C27188jjP/4)^%UGo^b_3kF^8)O$B=XcUjgSa\*BbbU^
%IN:b5r7oqoE?VC2ZQI&IO3B)Y&en!l@u,CFl#Lpk5cu=Mmud5I5?E&dPEd3S.KsP9p1/n"YcRW'gdSS>1>I;s\rss<pg!<blJ'[(
%#k<#8"db!"1BVFgBnie.A#!BdW=6*D,,4ir24gcP]05BT8W,ca:Nb*KCRZ%<\EGa]XnRY<$WeS]@0js*8>1_LWqQ]Y=,Pf67[#eU
%S(Rh75VKkn&K/i2T(X>:lHoMWX2.\I_=d'7`GQP2!p@D?k+&62ZG@GIlp7hNc)J^bc4df[4?DDOfRG4RK].Ib.o$Qj#U7et\c5iX
%DN'R/H7WL$F.FDY4:Jfo2#oimm=g<?"1=\#XU_GM7RJ^fVbOj"c;eg35>U]!Kh*j_aXm!Q/tMr#5_R4s,#!)]E`@;a.L;T%dI9V\
%A(-*B^liAK\^Ll[!t8rmeqhQ2G*?JV,(&`)o%Ou?F2Q&JZ-SWik!?57B;/5_I;,<ap>J)\5j=@`5u[oDF/jhNG,U<hZ][=2,'U0p
%bD_45da0,>4hOgH]eqC[;R%KK^=cT>dhW6%mtD)&g;AVI(_$?_`gW>Z7:kdKg?9ZZ=;L-g.+m#N@R'p-P"?>?0)-)1QJ2t#1J9lp
%9X$bt\leOBU3MJErZuEF7f0akbCAEOOk-L!jNI_\gk`a.)K"H)i;V1RFutBl-?)AtNa9FZ"m>[1"@n0El/H.O./lr\:KiFh'`'YH
%8p='f&N^cj$%*,<A-m8O-g_"K>4C,ui`=Mp?p^BKV0$ceZ9nga`t">(&7Lj`g3Dm.ra<K<af893mWXmD0W-&^;]^aGei4IM/:>A`
%'YA#t2`cW)@48&bo>FI(^?aW/dU2p1Efl1lR"EDP-HUP*6QNdfOb7uH=;5VM]]k4r3lQ/$mgA?CljW%7--aVp*Lu!K$((cKi[cco
%FfL9Bj#(D3<)"M@WJ4RfMUL1'Z!oluMu9qH]L$[8]o.g7oL55O)^Br3P6$Z!*9QTh9+9QH/[+Qe((pN.BS.JX_W'74UAGR&^W@@$
%f$-Gm&`Si:@W&6R#LnAd,afMV^TIFZeCUq[OcY>*3ju4$G\_anEjG,NC<k>r`1bR;CseIN71ihfgr$&D\0RX+dGrBD/a9":2q=jO
%6(5e:3;%O1W-B=i<(j0*pK^H&hI$t;!'Zg#ij:b!PckZAm8(0[^^njc*"K7Sr:0^!+$Zq"4O8D@]B"$(&tJPN-b.Tc*R&/SdpD"^
%T-cD#J)Z5HFt4j-(oWiA]oKP'johQ(FBAmqHkIa&2PSe5)"X*b<2YEtY>"1MQkKdRH",DSVDUme1:!W0dZaFn(/0NI+j5V4Mlm(e
%RAZZ!3YUJNI;b0fQXF%Q4%_>#A34XMY@&#F!A$"2"1WK@)G7Er^^d03'd+1B$gGHJ5kYIWEDYV#^r+)?MB3FA_6<O_Y)`2Jc_LDe
%Mbj<i%Cf`'_5G<PlX7CEdar"/@Zm=\o(ANf=<&u[d*j,qf#Z@!;\k$^C5q"b?rAA9rPRDG9nZQ[pXhmpafes1+E/XYms-)46$5jq
%l+.[*k%u'Kq(F)I[S1`'lg(A_Z-(N$LsBA)Z,RcjV%*e=ZBA_(Qb_<"\j@V:So;9Z0c&u<)e9CCX5WTbT\$",e.OFING/.31k(J1
%l(n+keS_^Fec_Y4P8NXoR]bUrO.Go:JdsMPC.r/9>5\2#+8rpgV!Sj[e!.9hH3^&71Sj%`"d+7L2k2Etka4uKD?4+fH".MT@>;AU
%*k%#f>G3CC<X_Rgd=e*f$S!bZp'?CiA<mgaisEO'(_gGDRl4O$oE:-C$@e_H9.\O991L^=fIHNs>-s)18K=Y%7WZ$%X!277SBrcb
%'WbmTBi)1cp4VSJkN6H\K-7[-$Un`k?tj@5+l0/XJId`\G&nc>og*-6F[djE6onsJi^FjGQ+2iB0A-@r/7NQA\/,=[R(4fiW8ZsF
%XSSI`6s`1FF9YNIXHd#";(VU"nXqE:`_+*_(N'Zt-98$I/gasF"jUCTe3cEl_7Xl\>'T7aI57O$,0!-o/Tq(o4%*ENCl!t!Ut3$5
%cZ4^p6AEiFe3jmMUuXnC`C1QoFh8.dScMhcrSSI==mV_DJYP$/Wu=nYC*+bP!`p,7J<HKu&6YX?%T+r5`u1ffd&^C7-Cb+l.FdD:
%7,j2YJ?RF]^pdW5:Y8X6+Jl>Ie@<i/(@?@ZYXAX2c5F!^WLKA4Pb!jGo@*b)KZ%dY)tf3G#bkoaQA*jKa?8NUB:Q\>/tf\T%WsP^
%Lc'&,T8+;-@GAKE;8S_nMF"JGO3V36-Om.BHG^mk+BeY2[g*!98+F4ZFfQh,-1Nrg\IT2.;:m)V*;is6;,)-BjHP"iX.!AS/$&g*
%.t^d7U4H']q=)4m9SeG2$Qeb#K!5J0&?0!'=/ND-$8\aX)@s+#!$E#b4Y3ZW#u\gQDpP2+SK32d#NDZ1PK(r?.Jr*UIW^[a3q$CF
%MQ`)e([(.Ce+iU@rSi3SZ2n97$ND)Xs/B=j8j^j<SDQa/]hpn/SSMj(RWmH^:G;8fCWJ+L,E>D)g^I8oYd88`L^o*%XMjQg.Em4-
%[U68$_[,9'8&:s.G7nP.)Mc!TCW@N-<#K0s(a>)dTG;"tdp\0*_$Cu3[]ruZ$iL@",1RsC):X1?DX)\F:o.C+1J&s0'c3S\&&W8;
%.9A:HrVXe:NFg)hkD$BnbG4rAV\/a>hs4e.IJd&Rk95IH>>J2$D3sGX;jh+/0o7,hOeT6"=4O2Wh_$CZC4[gF=.JhQ.WM/>(1O5>
%%K!$gk-fjg7jIW<?&tdL$HZ:LOO1<D`?*>br.D<4>)c/8C2u^G;9N3UFJ!g@DH^;q6O&]&K+;7CUBEZ\M>iPjjq6=aq'a*=)G]H?
%6@2/op8:b(I909reWN(R&nS!1U_^YZ&r.#B?g)A0OfU-&oB,>mSl7XSG.*c!8i7:7"l,q;"lP`t]DgB1r6DE,JVU0d%bE;UPj$nn
%+1mh^OR3pHPCnf>YN3B>?e@fk^6r/ib-EPP;Q,!HSrm=`B9\1*`Ag:ES("(L9O5)_BblgSTQ/e*\nfhG$h11%RA5L?nMCkXN:WsE
%!&q-u,+j1kYoU[%@E$IS&t;V1%T,&ZSZ6L&!irp!.r%2V(1^df77$bM+ud%^.`J+p<Da9I&^q*pb;)R*$,,)D$;!,;p?fi-]4H?!
%-!GC8@sRdG7`*@aCkW<?Xd06;A^`=e9N%T,AT3be&ZQ;"`A$No)+(+9K*DZ,0IB_>CIOg`8+]7q0Fk>j/qjpN&TA:d1@CeifP:+8
%?NVq%6j?\b+dAAh@ahg@I%S#X4a1<F5(k9_IZr_7@TdD:B<fBqHa+R;gFF-@Qh$NR2b:ZhaT(a_6V&$35AIO4\^^J7Ze>n78'G]s
%e$P"H,)Y?V>%;i%3@oik7k:^L9pNF\0u-'e^LOg"Gc_/R.*bPs($$mjfrKdR^EU12,*s;i6fj&!mHj^%ZcaChN!&1_;6`[;]??I$
%fEQV9G84!B_[F7Fn4/.bA,3+(\[_Ll%'cfbRSAh)Em5"U!bTC;r1(@5Q*Ifqf_`!H/-q_c(<?F#Mgb)M'3mTu??GMeiAGf</Lq;k
%qle,D[^j@i1!tl1!*B>TbE,4nDdNVGJ:[ln'XX3i;u2JjQO'Q@p4]QrY5IeG]VlR!X#k+5;Y.K6$'r)QVI3.L;4p366UIK05?);>
%=-`+Lq.&fW[Bp&%YY1l`!P>s*ONt'=,c,(-#Pd:&@ukL?][\P+0Tr@_'2&:Af/,7A6]3l.G\iF.lar)h;9hA8/`O<4Vo=QqhIcVD
%']dTEf+HdN/sNM@)I]h]C4t$h'cTdb-$N**!8/3`/+Lo*4-!JT,"e:(TfW^>3u!.<BXa(32d.]`C<AD'%GpitR!+/_0%"QSE_O0'
%Z.s0"EqHm9fZbrB(S`<%>!`l"7!clk$--N7.9/LL]jrp2==](Y9-)4Nr?e-_V8Ko'=s1K&/e:f9OE;57&@SlZRej%sb=(PWQk(u?
%ei9DZ:>H]#&:W/`4cqd:"7$ro-CJ2h=gl0DLrHW5[ut]$-ir0=hlGuFBRdV"-sS9B.D^\<)n?GLC$X<Dm,NcC%fS1qG)L\er'9=p
%B]*^3inhRl:*l\U]G3_2L_P_RdA\H\^=Q)bmhaETeoS)21logT+0YFsbo*'4\c)p8;M/uiDY24QFldNcY[$_NA,#c>e+R.ULKq,F
%3'3!P+WG&TBZ4iJLb?cY;KZ7oi^61-E5,W<V.'hu]!+Wl&!668Zs%ZZ-<lWYhckrCOPe7K=*J2D%J#5hRI,;*rSiM?r9-ITW1/*k
%nul'kZ,'#IQ0KMNJ[oW,?.N7Qb49P0Js`W)WQ1#31_^cUUja_t<A:8"H)hb#</ZBRWp!&ol7`6oXN_)7M]*"3qW2GOW((!*hn)@_
%pZ-2'BXpdaSC#@>SR&_t['o4H]?o>#GfI$Q\fQsg?42XK`mgKZD>P/^0n`9HjU(V7j/VJ&[3Vu!=DEYAR3LC5O\=Vh)+ET5)Lt_:
%%PSo%VdL?d?0l><.Ep,;SQ<.4G?-S3=,kdY?.-!FJh.7?Ye0FKN_\e'"!'fGT,D65NVqJ,q(>NX8mB\SLF%7i=8@e[fNmmZ9@1[u
%(CqTZd3)VHN-_EY4f6?!Q0I.d9=/>\?N]!F4Rk*]Bb`*IFI)=6KE/Q5*@cg<QtH%9a#3&,Y"KRAL9iai&Wl5&\6#oJm)Eo_i2B.G
%)ElouP?-O=A)7>t&'bXMj4sD]p7]_d1SQI)(KsP-jO[lAcG,a9\Nh)(&Ju21S`_#^cL-FN9c4mkmH^X7/:5DW#-a2iKGiZt^/3eq
%Ze9P.=1:X>O[h>rNSZ8_9L8Hl4nV8]&N-(1bReoD""S&(Z*?:BpJ.t?OR&tu)RJ/[5q`Z-1pK>d313okr,S:ECnnt*V@%.d%2A4;
%>pHPNU?I/H25`_s*Hm%_XcSZJlAdmf&bQ#pmg"=?i8?!W^'??[Tc)$rBi>na$;mDK"XXXfMn9aW07fm!-1IY5a^D7?a).]aJCop)
%GIMB`#DucaIQ.kY?804_a)W!R)c^OoH*p[^PlY*B"%f[8oenn:adtr?[OSa.Q_V8Y9\gN9n,#bIpm45/D+.H_K8tG9&Y?jc5fK5I
%DGt;[WnV1d@V])eDb(\XdM6<^Yfk5>U#Mm*g)*%#AP8!F@Cs["8f"di')+dRDWg^#3[Fe!Qt>8+3,Fm&8lMmC.`4\3KC7P^:7!+<
%]aU(M'Vam!c15A6F#/]t=NB*2*=,=LF<J%6=\a;d$S_W>Ng=10g$ofT%^ku\ONlhW%\^.F-&!aE$(a'/4hNXBdq0AWd/%brPp&JK
%Gc^]P!OU$.UIKe2W*oE98$EB&l:hIM7?bo<Fk%i6%*F;K4qKG:.=6RcBqrcQVh!)OT/Wug'Fk9fWVG<dU?GF?2;[eab*b/N$"B[N
%%('/,2.')f*CJn7928hIF<2">AO-$&qdm;qgUrK+)gE=a0mg:^nN2dSB&fQNV.NV6Np;cV4aa&6:I*[MRrTbV1#gnrhP(+lEn`!9
%n-W!n'Is5WiEl`l-4T=Pb/8?ZnlDPLCPH[H_$%-8PsmN%qJf^iW.8mZpU[,%m^b^]W:,EuFU4<L<c&E*_-E>QGmM\4274K5_c0J6
%aD`gd9GT?FVVdi)!X$_"<juNp@@ZpP*:"LeJ*'a;'N708ijn>F&`pY:(%X,jHB&YN`[!6ncFhDOJIWf.MU@k_&95A8"7B)'+tng]
%A%>k^#3YoT@8GM$ZOLe3P9]@R"]0hG?fUOZ(?aCg)M`QmIIG7>3["]`U2?6`Re1YpPfqi7Bm\hoZQN?.A[=f,Oes,S#'W)nK%KI9
%8%$HU"7Cuj@TXr_37GEONqUoXYt8SSf&Ck$N-9K`WpgY,eQSaNNkS;7&MgWHdWeOY/3s<\U"EMTpI[aaq61<@rt%C;cX-pd(FoXa
%DXQ"<Q"g\f6d]#)P$Kf=n:!kEs(:/Ri\mN$;4q[aO5Id!CidK1L1<Y(]=C=&Bci(lZ>(:^4QL8*'(Mp39DmQ"drX%lO<)80HEf?`
%K[%8ebL!LRGog$,5[/$o_/nA=NYPm/H*s+QV*%+=U`R8F\7%OYp3Yq?K\Btd15?2CO_;p9U$KS$[H_]6p9N8T@@1KCO!%ae@\rEZ
%?J!:lmjp)kASmdYi>@LScOb>TmP<UgWJ<VfUt(HW?HIpmK$j+^#N1?s7=cl`$!pPAPHe'O3(oBjo8BE)2'G4e_EP*VG1I%5oi@oF
%#$\U!]3R2H+&V)?-qRPLMN2KlMr'.8/qT#'\-?2O1YuDMA]<q-S2CZ.G(t94W%q^V^$K,/,3#SGf%V3[V!!)_BJr^*NHc^%Csb3E
%BkP08cF1#?T3p9i5:k>7?BcZeUs](V%ZYE*./ah(nJ`%tc[\8ZdmoXTI`5q>$,PuY%iN&uEt5<)LqjW4Go=6\?C(;(Jr)2iR`iji
%,3MpQ0)5M=TbZf%Qa<.KT>m+'bn08UfI"dtG0u6o\m=e>NP@0s;3&V_#*7_&R%ld5R'>@oY-T1(L9(XjM.Ul'e<SAt-Bf\>>S#S"
%*6i1ua+n%T%9X1g1U3q,j+d`#_>9l;iMI/P!*@`rh*$UUSX6N!1RCPt:8@cD?mq3J1ei-^%Zf%_?fba:CH5oO7WZ'Sa`V\iMZA%k
%qprFW.Tba#7j(%3:D%#1%YKd4e'of,*nDE)B.2JYUnSk)\lZnRZ58a@4%nX"B\#S0<5Kc2:64?(W5`UXO]0oDffkW+*d:_`p8CMP
%-!1Nl64_d.7'N<k3Q`q0":^[^-3`>l(O3$!ZNJ=dQ8MLl]a<NQ="??mlTu'G/MJ/#a?mosjr/Lb+f:[.kZ3XIIutFgS-Kn&U(R'f
%*3*-$764_*c95'd>F/R2/1F[BiSnYr2WIW405?rQi*@F*H,n4(Xeq:bEDuEr->?-M3\48ljp%1i!-;h\W@cX%S$`Mp@%t@Un6cIZ
%]eXHX];bS1mKo9!!7,._`5+22YQ:N$7)-].VSaaFB=MY:^fpFDC!K'e]'b)HA8NaW(;3JKcfuELc!b>u!@B!;C@l9r5:qjNT;"tn
%-A$@^%OO5*2\`RLYnt(kI))T7j^Y4tm3@XVmK=G\L^_6`4pE[]#%^V&_!3D(B-!I)Y/R?L.D/Bod2cYVL`hc2GjaNIi1,hG0*1h[
%,SX)!BEa5r/UKK=c;DQ\XXr+^')L;bK!pTkDHNF::\:Mn6H+bHCF(i_Y]kL1=NXR!YB:I!Tj9WJr*%je1RnWa,sm<_Ofmd_OcMA'
%[qu`1W*u;Bg9`6X"iT2^E%4C"8RFb@h,'hL.F&k^!Itlpmu<Q='ekP#E$rKeKc,^+kI)lqKA)!qk,;<>7n,;Yrn02+3rUu@no*Am
%i1Ko2peTfHmXP36s77oDp4%PgS,`DYs8M'=h`q.-s8MoqL5R.iNIUgm4QUM]XWJ6BJ#Vu8pUdP,B9B;qaD83/'m:X;?YuX?pY)k+
%ncn4c`l10umMotnC]NY<)8kB&<I^WViE,_`<luLQge:dE;a4-06g?c1XfB&p$TXpHnRJ*JbUT(QomYF9f`rE@![MSp-[=^-aJ3_r
%@Gfb_=i;NF]##DG+qe5](ti9cA"Z'&Wb;8k@\\@]qM)0X,N:d<,Dck?A-t>H9R1?$-I,&nR4;**TYU!6:Lj+sO"?t,iL'/5:A[&F
%D+*h+oHMOHcZO%blCVLN=MQ\G(`c7<roX[`(9m"J#k?e24EM!_0u*<8>B&g$%&0o]U0H.>JY?Go!e\cFp"\B+lBFuU#(E[D6OGYO
%7XDLUZR;7EiWObm(RS"p'XFaJD$jJ?<^+j$n%@uu8(L'ZmMq"2fNCLEE?)pn0tHO^%ZZY#o:Z&uGsV#([9im_BgF4Hl36!4PA1KN
%pK.;`#1Y[gEG_/m!>5UQoWDY_aCl$6HqCMbm.54Qe3tI^3lCRM<*5s,%IY7Xf)R<`IgtU*7\`M@KNLVQjt;s1j*Wq<N<N27#&J@/
%0(mdqiW'"[X79\"FGt.rZsroB*#dmK_"oB5k;t?G.7?'F3#\_+j$AHem;m:;0h'Zk^7LJ;k@+64ZN>o]QJ\>[n+q"b308%t#MmYC
%=qhp2MiGd)D<%:+[[*Z^btLFeI+pS^\VdE*^6uSYm^@%GMbm"3)uQIOICFV\H\B(Bhk6O/C@c<^B,qS#NK&S9g$1V=gGiT6()]qb
%S@*4jgWiqlf^?"eSql^2DB3hL<3#)hF]K53qR(HHAh*^ekFb*H&WV5$bT7,e[W@a,#&ZL-A+=^%XN7:-NAHn=A*t9@*P@4PhA^*-
%B<LYaB6>4If?Q\^D"^#<fK*^(VetXgKB?gJ8%S/Ze^QkJg,[KSp/g!/57#8^?#aV3Wat=-8,"FI>*0?/d:;``j9b+7*17H]F`\We
%c\0]rPC`kUKQ5:D2?qB^NkXjP/)%_qOZf5o'J0HV]Q_3\-m8XmB=;!TP?nM`pj=_i@(mBcO7o@618]t!A:"#dL_TlhNnr3na]X^f
%gmDAcVMTlo0T0K&>f(F,A`?d#!;'mO'c[T<%KAIs5M_X@Te#P$FLiQ/"kut[DbcK'p)K;&';8!cA_jEm'Tu>uon83j%C69&oZs7&
%T1OKZYCQpAohNOMldq):TA[10ZoI:=c6g7_r0E9>GnKqdYg/5j=knc.R:#aj6E&*P;!<0Qc?.^s5YU9$065Eg()7)K'VP<eJo(IQ
%@-c9(!7,0KF%qK<6jZj1:)[7JK7'1cFPQVhIR/u4>(X^H3r5'/FNOCTo'@aCql$U1la#$A@Al'<[""IjY6o(=='>mrbTYMi&0HdK
%\1XGi(e9Z2Th=gu2Tk2MgJHH,b*>th^WI6_Z:^Qpl3J<4pC\2d!X7KWm9F85MTC#X*;IKtm-;'uWe-:@>4u[Ori0#;&WsBRQC0NQ
%9!MsiLsX^ibKPrmO"E/gE'+Y8#+$bP&6ic?BHD9M1:'KB_cm=WK!9a64YqF=*Q=Vt>@#teNOsjOO8Z?oop<A\(\FC4ehHe*mSf\)
%D84;+Lf\DZkOJDZk(?k^h7!dY+/Z=:Fu`?8@D2++ARW?sbk?KG?XD-OqgLOYA*E^A0.RVXr30JR/@B7pH+U090=Yqej\4sI>un4^
%\aPm6VAMbAM"_;REA2W^h_/YCp97n)25K0E@9,3ChAbTkd/JMP*rb[UES@#sT\++,L)WN)Q'2>`PjNfO*uLqqfX>'$'sh#Le<aU$
%Gm&C79Y@I81l'?&[+si3SXC@g5h@J"cf<'W.5NgT?oC(\0kOgD.C/Du?Rb75-8+4tf]*(B!.?)S;372Zi>[RlLg.Ij)YkIgg`0&!
%3>GNC0/*&hn0$c0p^$j&5Z_D7o(lBTTSe;ffIlM)MWd'Ca)1$r]TIInjH;^O_tWB!rhg]jq_tCo*\`pHLV4C:,"orHF>+tn_(S)P
%_7ma9"HLj.$\"9E+*U!"=\FL]KJ5lb1;l6C;gFu[8N7frC,9tU*<qnKG?uV_&c7DA>h;)A!5j@78%T)LfmK%)+6uU.2*^]&*&Leh
%1jj1ZL-W?V7.L8?%@o52<9:TmXAM?GYs;Gq-R,cY%bW*hBCWdseu-pqraXB\hnDlX(W/363$NV;Vkf'O$l:1qG`pWBfH6KG`jDCf
%Oq-p$lHP%*7Q5C=#eAFQ]$?6h,J30LZ2)uj8\Ir6nZ/:_%Q:)]^HGq#"U8HD$1M6B%u8%7>V&l(N$5@4i>T+2NHQc@3o%'#,n&&?
%Q^3QH\G";DAKd*/MlId7c>NSq=9B$#+QRc%L-O9/@'M;7oAYoTicqD6M5>tpJn,QqWY?5Od5p?HZ]H'Pr_0/V<1r5a(\1<l2gs;#
%g3L>m(ml4t+*I]O$Bb5>4[C6%hGkkWLVphWrVNb`KW`7I/F=_?4V91%.O;6X58]Vklp*9riR!NKUh;$@>W!i?KI3ceeYoj:d:G^c
%(DcnWlCfBpq8F3MYt:s2r._.7q<AGZ!Ul6%Va3`&,^&>5<kh=+*u_WC/G0oY\bdp$-r0:22+r`>'+Xgl9Aji!cK(FkiPb-D1^u:Q
%TISdH1m64DO4+6g(Oo+Pe#:E"4\QNlP97$,BcI<]go%+j:jnh1k>D0!do:Lia+Qp_1//m.f!9u-W.VurgOt8*>c;%gA@)r7AeM`.
%'Oei#.Vn36h5tsg.<8PNYMeLlJnY.`#F!MbVgqB_:^SFH`>[`ZpoY!!W/7GgJ;]'nW'Msc-'U1VUbjohYK10]28*EV!1'hKKY1-h
%@5,145F!H]NK:6NTD=Kk_ntUk@eMpAIoPO#.r``tH()bD!dp@^8Cta9%=gd5f!nN)k_-$DZSZi^qgFbAQa2/TZZQ2<R>p[AKE/CW
%YWYWu$M,6EAncuX\n:1@Kr&s^V3rM=]OtsHAd8!4RQ7Z'H^5u_T:,`V/<(C3ni]XlKD9M#l)2KBFbCAJg/17@;j\`K,5MV)F"-FV
%mD;_ZUrX@uj;t-_4OR)3LpW>NhI2k#f7gbg*C=&O?W<eX;8bV09>lR+Z.Zoo<3Y37,JT!k+Ch,OD+g+fWb@.GR(iuMi?h@)J4OPX
%Gb7)=^1+>jZ6>Pg7&D[^/jUE1"u.VTWVBBip0n/S[Ln\>k<V?Jn/E;iBcdX<=@pWPSUn*LHda@JRW@N*h5EUbnBYX<#B]jTO7$^l
%AQ+,:J<9#*mr09Dr*8q?,K?7%;1..2#%A6Vp9875-;Te_hXu1W5Aeh>a73!GJLBl-jqD]kKq4#-=0\!/bM`=r4;pa6J$8qP*#PEc
%T1AB`Rip1.+<IDYcYY&L'QoY=dk/.*;+EoKJ!_G4ZT?1r;hSYmLT+`pfk$,aI?&:/kM5KH"D1smmY=B.P7].$->=G3j1N\N9U[j9
%I?oC%QsoRR=i,lpN;G1!Aa%R[1r493=Ct@Xo-jTc'?!R\#g$6$?$,%FOK%kaq'7=QT.;e0N#W'-YsDb[M$'B738\j](F:H3j/eT'
%3TDAoj=a8P[G&Oo`54['eC,C(e7pDF+Zf>Y$Q723`)5?*).`']:2G9=rJIE/'PP2WD5bsuqa-RZ16Mm4*-g7C[g9h8GXWn]0K.oM
%q)X6phu7R$fPQWk<"G'R7f^[OnR6d)@$N,a]-h=Zp+H)B)W$Uc=W1WpBWU,Ah\.iLEPG3ZP2[sig(Q;;Npo"o1HH$5q3bAk4<EZu
%*mpEjcd1ALA[hK/l-[P"I\+RJYA\]6$#]_JDac5R^u:<<,.[P]QmC.\VlSG0C"f,(WIK91=lhO$lnQiom?^E#q1,h=)gg/e?Vi9F
%;',G30!H'CA.dpW[Sk`EmR&;Y<d5]qqC]Dq6n2l]!NmQX<&sQVBLAn2p,h=BS\,+0h3]^7[8o5n46VPR^N7&t)DnR.,NOls_P<Yu
%2=BbK+TD"DBu[GXXlBjUEj#>=O:DCb7f#Q]ei*k+Shjd5!?trFEGb%]MBikt;86BbP1.cTmI^R?"B$#t>rWJ("ucS&%7l'Y>p17[
%P"_fHEIKd<,c?j.#*g!j,``57gqb8Gd$6qK-@s76$9'pNIo/<AJL>^tN'B0EPQ;q(K(apIamcj*Zn\9Xn"CHO*E.RSA@]_a.`(Vr
%.)2NL2"-4kW9X>A;5'V1#F:nR\87'2=b;!ij%1&o";eA@m)#&roFJbiDr;7UTm-o&\g/Ni=Ia17E!`ZT(ldK#3S)jc^'')K\5`N&
%?B!lN1TO]B.4cP6<_5</>%2EDGJ20oDgSN)W+F@Ji4W-N)O5HS]nHip)Eu+%.NIfYfLADuI.Z&rd&[!;!cBRQ8nSj'pD.)?WM8I^
%\*tsoP-`qICh#-DU"e-JBfB.TXbBtbfQ#YLr'<at@V`Xo`Lj`L9%mi-\#iXq-?ms_gKOj[(9=Y@fA=@`X)`1J/I\7.q/'neg1qfK
%\@":G/<.5ZXhpY`-/H!FmT%9e^9n<s5OFJT`9<C#nmQ;K-MZ.4nlToDDr::)/i;EEp(g%GEk1WjN(sg1)n4CV;>_LX]VP^2dI%CV
%79`%k@/Lf,('ZefpoV0m+oiF\&LP-Y#VK@/1<C!aim4mfqMsOobA;Ze+>0'1SB`(2MhV:Wh1fq2jn@RB3%damK*WaSl#"&Zist21
%L!7k[0Gf49q19!uKdTNo"IeYq#lYQ4PUnk]#BWS0kWMc1n._Dm.YG@L;pN&o\Z!<A^_UpRL`8U5(E*rUHjU"^6LOmh8?8a[NDRGg
%lFrTDL^L:@M.U-pn9tBN]9"N;&16`rW!^8kI=EoO9'/;.%T\-/0PhP/Kg-tdn%c!:(rDn]T"qoNi+"!4E6_C%?B>nh-gKN2a/mXT
%nD+;Ni61>T4ePhpTdU@.C^$PDF5R,&i&Oa#]KiXX6?XJtJ?Ifs#GhL6K%Fno$odY_9s'lPkS787)bh+;'jOk$A:'.5(5TQpr.SOP
%)-#VR:kRDu@JoG[-TU\)[s_9/F"=*A^;APFTVuX9iKQ,9?u.CH(QMkX2ARq[ZYaM16BCQHl4cWF&FV+HQ<U*?Fqq/i3T@HIn90\X
%hKK\uUX_V`EED+,jl(F@<OcqFECfFGLlA+=m4/+.P!6.O?4>af[S4u1FJ_R\,`[*Q55).2KuB/8LL!>1@NOpFX74!J'b]-$JfR-U
%iS%9C<>u"kY(H;_CN3G7+WU'.>uc[f3pLQ`iO,MHm^n?W<\N^GX(Y&b4<A\]0)W#U$KD+t540n(5lC^Tq)jW9n]7rl&kXS_KKVT;
%cq70oq2G^(CoOEWfS+-Na6amp'IjOAKIPni!=M8`s%peZ\1k>rAcn5Yp586ElO!lUaKQRFBb+T(^<a7ro6#K'*?3#\I\ki9@>rSF
%$%2b5ORDkYgCbKlfo1070/&-n$_<7WLG@T6^4%epZ&9:B`.mefErRnH81V12TdDbc`LQiDn?CZNg]1gIYGk&o5fD#B1BPf;i!I)=
%KmDMt0skYTq!j'1_M.DIBqQ:g&^S2\=QnBYViRN\lkrMEKKHh>mo-??e?e['[23),D1%7V4Ebd9YbnetjVRMF%7),VeAlf^I7;ps
%a]0(C1%r(XanYh(o5<M-W%ktZX'\@/CO?6TE;PQ-q&seF2sfQ+O'P/42o$9+?/$t3@qF<I\DtO863*anMQCV[(lDlBGJI<H"@;3p
%!64edK%8["@sG<Lf)ZcL.lob<6,j7i:mgS[aB0<c/V>)e@g0UlC6sI0Q'$]flNS6eKuY2g`ZJ1Oa;\Rs:R9ShOKfUspi@I9o@`D>
%p4,U^W;%5#^l:g886+Pk1fET+b'9VB8e9SP*K>^[?,mLiUsh;[_P%nekqiuHQab@5"m$Z&aM":0E1uL%2];uHJ1SGuTTO3jnAcB*
%<7!6`0[U8fK^5-0%Q%)JfeECE)@>ja$N?#SH81:A2\fHW$6\2RRb"/^R;8*(&B$GSR3e*60ckJ^'&q"?(Z&e]j`mi_B*n*F=sE]4
%$A?Q=P#a7k4\X9RAph0:BfWEg3(^p/jF3^G^u^b8]@S#7/^r0sNfX;mXZarAarf'7&a(,s&)g<U,;Q:Ahn>[Rje=@;/5ed=XU7^=
%=JUO4Ms>Y*0G7FNBnlr[aC$8ukOQmu,8HC/lFamI8-M\fihd);&k&b;^OqXkX^\I>0N%qPaV"%5!$dbP"JoXZOU>6GVI;t,Y2k9o
%'".ofi>34q^Oq[DNoQ-gH81:A2^;FeD4:kS?dhtg"$B7U4cM#A:uA0bX_9s8e$MA0)2/?CRZNoC^#EbC&#scmD3jGf6C2s&p-BDT
%gGMWc\tg`dWLaTYh8@tue^Ha%9KHdb,%TP0(N@V302r-(AdQ69Y!9Bui]H9-@,Hl>r#ZV.VB_>DQoE)'blQ5T"Cqpa6P?]a"rWVM
%ZJf5ioaTZo'KnCn(p5Ze=!5L*&uk7-0ZF?qJ=kS2^`HCps$DZ1RTGk27#\ruE66940a=V(cidgZN#KVq2oHOd'Q7(r`qYJ_N@m#D
%"fiRrp1!rK[L#i+M1%l=iKW_L+OEr=`3nS@(^W.%1h_N(E#>Y%aW6=n$Q\jK0G8h2Y`]qBM+9`oGCu#kBoHJa,eus)c-X>%i<(5Y
%D#+?*_X2F"Yt2)U(ufhV,0BCIQ;/;S_7tK?,0=dbN,C!Yl,=M=jMQtS7NA@RP#g:[@a#JC*hmtkbn@&L#o's_BeCdc+(f4-l8<pX
%,sY)4h<qV&6_F=fY??IV_:AK<9;pE'_P5F/dJ[?XJ:4q53prF`J0%TR+ndaT9Hi$b1r7A,Yup`W;:UsoZL>a\rd5[G:f-5),F+1C
%4Us6'RVK6KE27MsBF$R1X:9B[\\XDAE6LCUXL*dkh]YQRhUQWp+A!-4`8UtmK%(L<!D.m!'UfPo,ao<SU'XLk@F(W#O<e/a"#iqF
%;ILf'As"6.1-h]I4@54&a7/72+GR%)F$u_;^bJ?EBV4uX7BdpT^thqr:t.YBi;.,'Uii:Sr1HEt[lNI,?D;%nEs,>KrA@*,RNF*C
%#U6`O\BPVF#Vk/S*5U,AAUVDfn\SJtPD!:bK>22bA:Lt4S##45r"$c+fdo.CWAVM(H9R8;S@tQO('5_YeI=kT!A!6!JWMDg?(HHn
%37ah.'57`R5/bHaF-mMNFG(mM#FHQ3M'*)$Cc@CFVX@Un>)Ltk'XH=&Jlq<dK/='9UMMOc%=6_8e,;f[ADIC0/HAiJ75>aZ+Na\?
%iYTRrfNdDF2*lIb-:8dD,M`fL(g(5X3]&O7gPHp+W?>`40E2sfCVHJk#6Hf4/fU1j!S%Z+_E]([>(I!?Bj5Vk@b78W!5Kg$$3;M`
%W_b:%P+,.fDqJ<&/gY[u4ET4Fk]bn%8"Op#)$4C"eg&(^j72^`*"Gi#0R'u7Ij<M?H&eCbOn(YR#ZDN3+FnDd.8sM&K4!r^AN/fb
%$H?ihajp;ibu^DA9SV'tp3VlVB:tTJC21HpNu2">hJXe]5kZoWrko;S6/R?#*`L*rmcIB..A#D?8GJ*s">@0Z#`"+tIOW>e5R\,/
%McTAm9PBIKWX>2W,&>ILScb&_YIH^h_`X_+dan65hgjAR5VHl".B(U\UdDX*EMUhOK99^#N*+YPF/YTJk"qBK#h<H#6Bm:0.,[%;
%^i;Z7R\mdOT(_7BeUb?(8o,e3'-Z$XPkLIL[eRD_>:PlqIrNXp(BFIph6qCQ\`7mD9<_hI?hu3[,=\/M-g*\0NYd?b@4.;Zk1\US
%V7U@k^)TiU=:fjT!C%"IJ<=7->==^L.b&bJbW&Na#G<ON.pYK_^c5&'GS+$`aM+U&4BQRXGpJS>(HWKlJ:O,+5sOEXi'+S1_C(KT
%iE`E&Shb6/r&f4sFAk8SWQQ]h@#]X.K&S.!mZ.Cc@\dOrLm]fe8'_K(.'kLIQ%[Z&*h1C/.N.E3*NsJ*5e#ssYHsq5`i;iVIAiHs
%C,q\d&+F=E#VdVno=gd@'"J</q?4K>dCX*"*hjH28(M&:4Dc`a\%?>X]GSR"YVoL/!"(`^IknS"&/T)>e9p$^fU$PhY^`$R5QqjG
%gQ]VFoRZJVm%CqLlhe$p=6:]u-'>5)<"kOpS5t&-qsO'J4(o_HZpuB06!T0ij&8:-r,q<Q?H##g^7E_:_YtNh';K4</Ho!=f-1K]
%)`cW3+/L4_8>Y7i^.UsP#K)8_!I>fGk96=tb%aR<A^J$r__mO[!ri&gI5,E5*Hl1KD]h4,T[^e3Se_=5_JurKn]1H9l%olX!.UMG
%LMb&)lYL$T50GfK(chBI9Ma,\#4<6'nBbX`s/-JU2@eN"<D>5(CMbD`4=`O#I+m0QplHfmAS&.8$^*EDC;Ru&pXcL?jHstM7fT*h
%"P2X'+oN<!$c8pi5DU<]C[b;MbM8hSATQr`:.]FTK,YSOcDP+H)6:-"CP2>hps;eWd%XNpML\ud8+RG`7]EX>$:b\1KQ3=T>Sm0j
%/CX[/ZnT<]^Io=5o%Td+#gD%'V_C\uTb'UZ!##H2Iu\[4Sp2q)-)Hl7_+?eh>I(^Em&q1g<1McR1M:FG!p8`+ZK^AMh'W\'jnm[K
%8FRG&Ys_\DZYKil>,Y2nS`9f,T"of$4)(bFUo5OiV8eO[2:AX''CcaF;\O..I[Z.XF'M_OM$!q8JhP5:D`uV@Oe9L6I<]V:'#b*6
%Pb_o*H`:S:'U$od48#MO4pX:5.SN58*L9+C85rSJV8nF*gU=G/+H?gX0Jm/R6=H:P&rdlVb\Ua-F<hc>P*J&b:_+_nBJrWa5[oDB
%0n111pIP.pG+np'J,?Far8U$>QZ)oQ\%as'qM5+A:T'-B:]K\6s8;8&rr+"fnPA<gkJ,`+b2<3d+9([%r0R'Cn,MeLs75paqChm9
%s#lpUs8%6Crr;i`s8*W+Vf8EV9E/p(qDka5Hb,bC*iHLigj(;F8oXIKAUlYc:Y!EKG/#r(M%&?PItSV\(D8!Y]/r&>_PWEVaMSDm
%1a2YUaImKXG,T]:mAFh75*7dATi:EhT8J&G4jao!\6j&Z[U4L`eCSUQ__iLX[O?(%8=t?[&Me5*]d1?'X-+l"k^KObOF0SJZOtX'
%AI<>3IqhXO7,PM.FRC6"MJT4%:SbofmMF>`pQsK-4aggfHe+4SIG0*aL9(a.JiRL4)N6-TIa(e^4F,.`>aL-rIf7bBnH8^j>KB_?
%gJ;D61Ue`8icXB"gQu4'j'VZRJ_,+pJf;qOIQkn$I9eBR)Un>Y.Kq"WZf!&tX5:!NWm&!ObY>s0q:2tDH;Q[+`)kb9AkB)qlBg:m
%`EUCO4FGh;O+`27O2M%@WGJCF)XL)WJu4/N,?.$C,07=rOY^ZZ!#,p0kZpOL-g$p2AqKS[,]1%Fl(3RHP:]c1rA"Lfp(,,lqe<dd
%,$P3I7u!d!f<[#b'rb8lbO48^T6g@F(pLbCS^qIjMb/#foKgQ-77aFA<7SRRR%CPZOF5-s'J]N.fei<`rh[5[&*/^Sk]RQIT1Uq[
%D\&)j6gq"`nho$Ga3QkrSp(nlIn\0R:EdCCGo&dP&NNRC+s;b6<SlfFMA.<]IXOZBYKMZ1\CXN1,bFcS5iEJjiR?ea:4m-OFamjk
%@_hbJf4DEEnkX]4`kQnR<B!!mIDdVWcS%V.VLh2g0Bo@2JsqU.g*-9Re)!UuFMEc#U$J$t!MAQ0,]c*Hp,bhH[G0^mq9XKbXnH?'
%c1b"^rBRP&4C\0:7`+okMl`T%'O?,Fe%e0kottu"$7mGE1):2g^0OdVd,%!0PMh#+cS>Vlg:,fI'g^5bca1Olk1@1Mk#[UNqXT%V
%5K!fLJicFO>XE"u,*Vpe(sap:^YQ-GlMq)12T:@g7.d6$3EL%Jn0t&GkKsKgQpGoJZu\ZROM[A5,s]-XqXT?bW9?-?#n(R-Ak,`q
%]Vd-3o8uhd3__L::5.oOdG(V\br[;Md.oB`nMK&,rKDVX>ZlR?>Fo3[q'BBs9+,1WY8&l#$iRtl;!$1DN2aS>gmks</M4S0#3+g@
%5:DKt*'XUg=n6>_LYrE3$Q"LQq7TVn:b?+T:dJQF0/_N+*]ItFG6Jg/9!k>q,+M0QNi>f,*2]gO^]g!TCtjlQl$V$aralRX"+=9D
%$j6G!GTqLJFBR2ua[;fbQ0hD11r#1Gf?K;+GiO[(<$a*N,7KPN@f<&*_C.+4H$+'\:\9eRddSBe@nI2I$N[`+[DX5X=dI"VJ[lt&
%O'LMD7c@THSb*S:6j[q]LuP^dQBT;7H<6$)4]sXfZ<3YVS?:g^;3K`<RZlhP0-Of4ES6jSm4_a0abmQZ--mr>)1!F.@sYNs+\`Mc
%i.At<2?kTaQ<DK^B85(WF@KNLN6T,o5^g"7[m5"7A$1-=)l:k'"<+.*+'aOSP?,,lYG7@EmmI!Uhp[<\+l6/u:.39e^Nc?/hs:do
%oB1G;>[Aj.C"P]DS%4p3PrKZ\.(Na!bu9HoC8l'b5m(8\U4A]C+EeNd@g&JR;:)RsW6C_#R^^"i\H"CD,=H3CWj+_;Y'67[%h""a
%9A`:hTE!OVUHZb"#:7k#;V4qR-.Kc`\$985[VGo%hj:J5\2(gJhf#-rnPeT;.9X<1cMuQfiKL/9e0asb&>,6MCYbEn6[E7^@:ig-
%X4Sb]!Zn\pJQnOddp'%:(\D,b+`ZDIQTFr7J'.WDoRT]g/AYJH+nM)nH;kX*2.CbR%trPHj'::l!;lOqeC#;E&j.7.%\$!m@bp\8
%[6unU7<lZ^ZXrhjM1r>P=MV/JJH:+Hd27JM?icp[,HF[$XGU:M.+O-KY%Q;R$'^@#$F+i?#VO(/d4&/56jY/;E?'kR\u`Ps=?oJ&
%!)rRX#m#j^==IJ*'f=<:pspMLo6^K1:"Xs,nk<jTMaj5Z!fSC"j,*aHL%B;_OJN.*UI>d<\W(q*!pjNR5nY'DpSW23=sGmle-g4!
%ZJhZqKaP:^1)qJg;FTQ-$V;TIIRsuJ=efqL0.@DLOq0^;quc\opstZp@8atB7^`n-@&ZOu4?a=UZblG-;`>=._/#-FTJN%f^/<_>
%n3&`:GU$((D7ILrkHR8k?/X]9=6$-;^o&V,)PX]%AK6*?BX'XWAd,5T)i;KN%A7.EiC;5lZJCd,!LE*O'F<c0,&ifT$D`j&#mU#-
%J"%%Vg%AKNQr;R7B[R0;648=rjsc.E5XN?bM@+U2X!6nj?Q(a\JL0]4SjSrGPsf`2\,p`SPim!rO6/[=[3I1^nrCFnA<a^mbCI8g
%_mD(322Q*Jjoc5#o[AS;UP`81J>bO^d3G"'';gMm,*Nf*TN)NdfBN*4:Kqi?)EY!dU1n\D=.D6,oF$Q)PWX_1STd@9&MkML'/GPM
%Z<^3rR&YaK`AMGg=Nt2p>umSHWkNdg]tG40/f+Pina;'kO;`fNIfU/`<9jG4GK2HCP_US^-D*:KPa=J5_7W&hPp@QT/j^,U//@WR
%n<_N<3o3]8@N;;N8huf.,t-4LPu5oq<mp:p`h954>f#"$PqRnC1[-ogcX?[>L]RU7Bp3\go)$dO:OQDD/?Ji#^d>r;#(VuK(do,Y
%WGn.bVmF06lNORK[G&"j;p\g1U9$O("J]mlDcBa&_e$0oAUYb1[?>';h0`IV$DAW5$[*0"``XIqcd'SSg%gj"qe$e>m)dGX]Agdd
%34iE1AqseKPf4p6WM:93gZ`B8HL`mM)2F;r=59mO/946i9'Br?oo(oOOF5.E@.Vn&A]mpj88qm&,3W;gomgs+=Va($q'q-DF@I;2
%S(In!*lsTGLQ*Qg%Y4^ie\MjRd/YQsD]hQ)-)7\)gL[QQ%+d/a.-`3`U2AmD2X<!Hg]<Y1%]]ZL\?ua>%6_LAF*K`u.M%=kpsP6t
%75I7jJ3Je.GiPYg+CpV[rA$61Unh53j.WOAe+YS!/Z5K_n#JgBZ/Piuiphi,S:+X\RY>Wfk+#(u"BSP(j4eEa%%_ru2-q?Ee6H#\
%nc__aVhBq8PAqW+1thM/kBAl6jbp>s"U,:SIQ<O>T]TXDT.68D"VU#m)2p8COj[r-6'L+7rKuds['5[%AlpN'Se.P`p>E!eL#o%V
%S=:`W]>UtX/d#`n\0gD!l'm1Ua-(3.5q/,$LEWHf1p@?qbb+c9eCuCi6#@ekU^Mc]b>@K9</[h'"B9@#0+s.m(:+FJ(aK6)EBW<o
%PpTY&pBpdD'GY&W&;m`&3P]9l,R)jORmtr?'\-aGGduPEB)a%u3=PZdaK"OgVnS<r#th3&M7bV4Y=9p0DY]+)+JnQVQKr=A8WmHl
%#c.p_I`?orGJoFp$K1MU(irLTZa:>3YBd&Yj\[cZ3X1t,nbE2o;rA;>./o];ds@ipRfg"KO38#cFhj(aKYUAK&jO=RNrN^to55I&
%hkp*CBOa[k3#=N;lK/GkpPJYc-/;=2[PPnUIh"gJ!/6.?5ujirLMI&bAlinEa;QMEEKA$8b>ZL[Do#"t3&^(I@#edV'c?r;7eQ$p
%Y?gj7F`n<N8_3de0#63>E4gJXb>t9$rpE\?(aNk!)3PM!a[Oa'>ujp'UECsu8dIbTdeHLjnAZ^2SRO3>7,"83r1Y=Q+F"FjBE[m\
%.6?`nf6MTM7N>EsU_!fi$Z$E(qEquNG[C_9RYi)"Qm"b19bLs!?mG(9,a+A=Ks7R0*1"CT>>j?;Ka^"1!dj]"\+s$e0,Mr")eoa3
%/8Z\d3KN1e5AgO<89L3N<uo9VTW$HQj"lD$%5Ej,IEX(ZLFM#FooP,I8INWif8\=Z%u-N%.3U.nOrTXRY8[u[@DPc\34M5O:QfTe
%of<2]i,lngKVF^XqF%KDDDNQnp5m&mNZ4Hd@^7m@ad)o-08]\?fSP;Qo7QVt\;4-5<<t8bAq[h^*n$RZ,@`\8FBK5WLW,a/o:csm
%_J7-Da::aBJmffnRM?SEdO?>h8%6\'-aGu=b*Ah3,tGC*),IWX^!u)^&;k,k0]s,q6q]nq*47p@\G;4(bIBSFbf+BqRDf>\FiV$:
%<q28R,Dm7O?\Vt"l:@3jJsioPN<;q]A.O!R:Qne\MR[jFO:3"=Pd!Cma"UQ.mj"kF`dt+*kSR'lJ/:j>LB#3M4`IE`fobb8M?caQ
%9fs8]^oQ'q1_ET,[bH>IKUiAdlF/2b<Y'=]#Y7n2EY:o.G3JhGUbA3;S]T&WQeU#Hr`Ru;kDi@R<3t5bi5"`T+9FMjr\eK[6-fp"
%(KFh,&.ASE.2G9]$YPXIcKY[+'T9b"PO#MDZW^UDZpLb>IuLqYUl:\p))pkj8r,>j$>7S2j3TJ/Y,qM`^/cs$A3,QWBt*^[*lsKR
%i+-8Mi4W[$6\8>U4LX<74+HHiXEr@6:bC/7UiTu+i6X4S32Z/QV1[n3.FbGX4dNNc+<e\O(;k9+?Tn\eAp0u6/;ruFpaiUY<&o"%
%<;U/2^f,@l=4Y&bP<=(CWS;Du.YhH.R6?8_foN-9LR-Z)G4H%N>[//,WJBk<aMh>:66nlgWL;uqouQ)q\2^5J^lfs7NtS3XM:2U7
%eDKAiM&$De.M[$J@EIo1H5]ZXcoB<]BH:RFE=tX)1qZ%t6qhA%iKQ1JO@Z]$Pmqi?%qUGO!-1D=)u^Q),S=H0+U(X&D3Us/k=FiF
%k-Ja$A7tg:#XNdK-_'L/JMC<;_fRAi."L9*Ys0oB]-nTYc9Up_&g9k'Ud!PsG"*DKI0pM\/;7W4@Gei.pfVl)WeH4ai"F:@4H[(n
%P<WV+Ml]\g-H1h%jMSfMaKM*i`$(L1!CK0V$H,(7mtr&#c7Fl;5\uPI`WmpVN]AWCiIoA3/UM:^P^q7*)h/l7o`de!M.@l6Y-L\m
%)Pb#BcL^b.Q\'-$VR]9qH@>\l=1gPj84/XT6j">9<PSAnkck45=XV&B<0$XI0U[A(6)!HM4.d)kltc"\a=BNmPIm7phD_#6:B:"A
%E@=(@aCQ2dqomnTKDJ(dOqr#jWQYf,BsKe#Mi+.%NUMlc0#pX9*(C&KKV2[u^E8+]MdngC695laI3])5LKV/a):,Gl+o-rED('rf
%b>)-[.9bG$O$VNE"fm]/U=_@Zg9.Sm/+&*(i2SG_Yj$_p<F=;0^ZVQ+29(aN39?#aYp@o/A!@:b?j%P-'LVBG3\!/,O#i_!J5;14
%;U`,56lMi")MRk6Fu_s@<4f0&Y2iN(dlAasA<=99kFY(`RR=?Mgo':8911.!%B$Fu;IlQjZ;l:7!niNJ4D058)Uad:j^ouCeMYL:
%0FU1e.1PSf$Amk1rb!V[f8)+)nnE?L%YnNONfjAKYJEbJ4g+`VCTZ)+.1"POd$=ua/(V4<i%#F"8[\eR2NXk!,>3lW<XlC[HrV"d
%M'e:J.g!^r2A!ba!kUGJ_d'?]1S$;.MNU,:<)_6q;Q]C:JHt_J(Y,eF>eE][RZIq'q!_)*8$J$9^\u1p1l"5r#3J;%Gq:!^pH*"3
%kJr8KN+D0`[T(N)^`LMZ>%S=W&CUc2+S2B;YQ:7$T-XBp&dRtD:%'tBd2S1km#$/(-?q.C7)b%!jKun$8.+D6'NKgbWTh96(U/XN
%pGTKZkY#do,`3/mrAnE&G^q=PG$dLSm/+\1l)oC9rLup,1HXllcN8lc$1:C_4SZeO-ZJr<nc>Erc;aH4/X,f;/TRK(8TlQIji)Wa
%Uh1H/OH-@pf?/asJ<`Ecp#rNpB_bpjUp/bL3qD7<1pLs&0#VbS,U6Vmi>3L+bf[S62T\ed`Y^A!=-,PCC_eB'%)B5tRSZ=^`Q'/^
%O"r"nZquYbbEh(g6I$<F,EmfjC5_lq32%18#"JkN9L<HEnkr)@5UG'bA4!*r$$(="<W3OC.bOp\5^?*E?tO<YZI+3G)39,!a;TKS
%23U1B\Vf]O]cWY<kN-69A1pmDH6K"t#GI=X#%3Iqj"V%]6sX`hQY0IZFWjP-KYH!aQ,<c5e53"eor&U;HQYKT[L([kJLDW%e>^'S
%r=*UWMTVJ'F6=HrV-7Ih/QS@Ie`>o"W?<dZ]ehq&h,n5s"ZlgWf_0I/?dLo$b=$J0_&Q>>^?\g,aNP)S<O,5p9s:tIp:ALC9@512
%\^26HoRpl06_@Ik8")\"h1;Ft3:mE#O609er*A-7`IEdpAmdg1_oPpob-GJ(Ta7VnDs8ZQ9tc3()CP`\PmuhCc)n*33]k3($\L9_
%H#Huh@%+`_<8""[>Qd3lD_Dlk<uX2kTl,P$<Ld8XFfq8A0)pJSQCAM4[*.tR=:aI-_KP<u<ME&8j+_J+Q"Vs#GY9kAeC=WF/oMq1
%(<JgRY@Sd5f+b">T75<JF!^%4Z.5?'1Pro*iRL6.4+*F^)!l%T@pXP`#@Yg^HX]K4s*mY@"ugY!._DETF+;"S,$4MQK"/i9!F\Xu
%ppQT2F2(\M[ctJW*tl"r,,YZ)@<T[N/u7Sb*oht'Rlr*,[aU,P$%oC@_T9Q?-P5U]"3="?h+F1b&<Vk5%A@k6HD_Z!*f*qUr2uXI
%EkrXTk<ffATbCa?.WOH=7&lju13qa,PYe>BE$-kRKVgIj,*aP^\<!2m0>;4`<G=j:%Fo]>+Zh,5`+&CKIQVU0&2QOQG0Qp[9tIYb
%5N*TeDbOU\.dT29o,pM'GBgbn(ntEh<hu#cg>Z6uSb_!sJ`E6`SUu)X'LJ"JSu2jqGAr\LTbsc-$>L1C*UNVhg0p/\3Xa(?2FU0V
%o<ls*(!MOt=%K9EO=uX@V3-N>,!57:L]Uh4-ktD@1_"h2ALC5L(%BSCm'>;`g5:KM!.O>H:m]RqU`IXe_.]8acs^0Jo)a@Z^G_r%
%,*B,Y(.-L2bN.<e!*;9#O9qlUUa<sh3GW#M`MhXJ4sQ_[C;;']8?o2s.\Jsfh!#[fV"&EiEqKe;7n.HS7#DjXa7!!9>RW6p^"k+U
%E"pqAL9Q-nE&*aVPS^OFIO^_!8[XBcK3@dCWUGkSl@0KIQUOPLUP$g*_"NNMs/C!=epg=IW'5UV`"7&Ha.Z0M:M<5l3@I<#,#<:"
%.Ca=c89?iMM4kTKRXK=9NYGSeUe\MWb;#C%#;T3TjOFop/so/@9.GLf&O/(r)Us#:h&`]5\J,Cn)^Y\"@D&2Q+q$1X"u[>qmua9k
%I5+]0[_g+[c%[?.26f5$F\7rdYAe/s%,`cuam@Q.3f2%/oG@p/6t@qpb]nkuPDG$'(SGm&IG@nD*7D8m:OS,Jd:-<1St!d0(U*aF
%`E#G!nA`o-0$#aU?ak=j.Jj[TG8uPI+D.k8oqUSsRdrf6T$:.R'hR*sXp'Fk1LO=)bd<LM!mRq8rg8024RDk=E_XW!\_lKDQ/c)#
%5non,[2H`uXurOC6#XL<&P]3nH]pA#:uf?oFk;?#rT7NT!Bl-Db;.Ocntb>TBYeQm>'9UWGX!+t_^N_F0C7^'\XmR%RV>(]/+2gu
%#Us&E"H&/.d`o3rAF%P8Xo'?[ccmtA<r`U%b'.L9.`B'k"PVOqkT`i.2@e@UP!c\8rNW7Zp7*6G,q`'eiXs!7b]rlg66d?r#eWl_
%GJNNX-gLr6%Ge"Z5HGtO*+=N+KH_#h5dkbmT<"Mm_"7KKOa3<-mOs0PGDI-q`RGT&IAPR`I4?ko?XiGbG5`cJ!gbX#MiQf>ZG9A9
%+Xqnn7&];bKm;m<%'4:2SJsA9%n"T;fE/(j[n&g"MP3"/q$hu$>u"gjJ8GWg8?^L62UfRiA*_Zte==+#X[?Cp4-I&i@6!W[*5WI9
%Ba8:1:&<qSE5/ZaC%7O3_aq%[87IkLE!NXh#r#8>&@3,OkC)FmoH<F@SGI2b3A/j^QMf,`hUp!V-TYIp!A0[8gqfT/=cLC'oEA#/
%4p'PL)<'M;P5RSmc"m4'%goI-#Qj-J0iq!V_fksM+7&YeXVY?OOMako*tt?<0WfJF,&4jVF>JOX];<CYW'6qii,PKX2#p?gGdM1+
%\hRV[#CJ0X>fCFn/kcDOA-O%1$`jTt/PI%LGd+JfjQ7ZS-;I0Uf/b+<J;iMl+Bf:o9YLo4RYZhL_OgD"DC"e7ZqW/^!A7InJbTL=
%8heUF_%6.&PB43T-eP=:?3mqWlm2jSq-;38G),7)/RN(U#tCi<6'bIC(odUeH@7M4h@nMK5[%Q`IVNjP/O9p\)cpA_P,elWK*WK=
%@/DF&bA\g\ji?>kT%d9t_j&!>%mLlV%2IboHHn'K[UKXh;MMQ`D5<DVgN@]HHC54Zd7]>s!Se5;63WM[/#gR`L)21_^CJehfWZdR
%C-YaKIFmrs@QW5b5)C-ImT'@Kb,?1s48;_IZ7"pj!H726lN%:-GC,HlA6e"!(Y9/H:%UD=@=oH(b%[T872r<HdK9`:DN+JsM%]RF
%'a"WA0:/u8,M%Lqn)8051UpWU$HXsZLTjZTM/AWbieAhS0R8e@aGPLeQ`BGl)h6L9W<s;[1TkO<!Mk`jf_>_ge,Ih+_T4*c_Pu5<
%3L#YY/@,i7WDA@VL1a?3dYSNHASQ+T%M>aKGjeHRB*_YC$K!$8ig#uoOM#huplq`Gd:PRCpfugsU6e8GT9R5d$K#'kf^/P^A9:$W
%I^&lR6(>U3_Vi+:GC"`+a7e9L'#;t.(F>N'@I2h*8hc%AS]sR0i?D:f']Q+_NY2`Y"=ZhC!WOCdFe:]jYHW6p`FI2%&mAcflo=5?
%*:=>*G93XDc-<7e3!nGgNgpdpO8R12'Bg\6b@AFYCm4?@S(Ic-p^10WN(mB[*FGrZ;*u\N7F*m#n@`+/XdR!2_-WFDkgZO7PGZh9
%"gL`oI2&-]/6&?s\<e"QoDZ^h#;pY27-!C"LJ2c2J[E]I2BKK8@#SBkfNM,Li<KPK7=]*&2#T>Tc.LG\O,[.&>k7s9Q^Ne.Xj"dm
%2_f!(%fG0p7o<>0>c$#A649_Sir4jn/[DDp$ejPHZP_iDA&G0MWi:51(K/ZoIju)@e5MQ:SIsV1;9e;<bu/5Ke>%g>XtP?;E<)q%
%coNuh[oiWPn'c>B?85sf,rmi+]lN\A.)a0o'df0CrJB@PD@nFE<J_&<PV_(0KdWDWNhZ&>A8L&F*^o[qh,J)J;R:.CE!H\dPtZrR
%9,n%GJDCnHesDj&`g`J70``J2W6%"$8\(:_K2EWf(aO!aNrG9ie_nh&*.rfcnh]ls];l/Ri$\.4D8bf$1i[$>(au#8aG_S&#04`L
%%c32D!P/dc\3fWb#.]gQ?q(9:8PH_mKYEAdF><4p+/Q2qhf.fc'0Sn:A!OQ>*7S4j/MZhub"%#j*Jta!Q_\54cqU<7L,*huT^5Q!
%gnA$pF:-[.GWB!75OHGAC)EUB7*7+h=A]+77cBb*g,>Ik4FaBk$Ua^3,C3LEjPOLn7/G*cJZ^/02>>1U"Jd%2J#U(>6r(t(<?Ej+
%?E\[%.2L.I::0?ifsk6I"(6[V/d(;%^=<A_'4LWa0rNZ(od/U2!3;2i,0HHUYs>QVNDV7#Bsp_o5(J[m'^DPu!?Ypl><@@:`F,7m
%e543%Tu2fQX/9sUX[Ub-Gc`s-5hCn=o5Njeqmi(.Or]&j&4@:d\e;0\:+IUg)(%]E*l\?p"4%0",=uQA!>,?1=Q1#<qu9AI>o\NX
%,U80p&A$qW_(Q.YE!2(FL';r(`B\_A@HXfUURk?Jcb"3BH5<-6L,;(LJ8N*A*lfl*_<M3:%Y>kp<!Xg^ZaORo#b5YHTu.e8,6j%O
%C#g1'kEP&G2^;d5!Z1XOmP4'A!B;(bT@h^@)&G,&7.7s#8%eG8o/.S[o]TY0mZ.FrX=^;J!]Enf6+AXd-;dC".&5Tr$I)-V`qS^k
%AX6nlfN_FYc^Gf7gdG7Lpo#!irU<Ja,n:DB\h]m=23]:q=)S]Wlu,;ELH1_7R:mpDnLdX^dUEA;&3)8kc;==O+Cq(9GJ/g+)0*8q
%`!p0p=J-1.R;V22*B<D'Q[L:Lg9oZG`_hFD=SA`4D#9-gg?=sP:Qs28XJ.M*ZBSI`LLTfK6Rb>ic"Mbb&4_b'G$Q3`Yi^&L5"uQn
%HEUrK*=al!Xr#FW$c*nQfa2\HmAG-;TV8_jE!kTcc@2oV](KUN6?F+n3CGu:E\pb6?gP;:L9YchA(1]G5;pM/)fp1P*LrSBcJ^?g
%/+L\[)nm&h,Of,3]FNh\_h7g7m.Y+V"J^0/TTM+?cVO5n\]c3^lk&*Lfi/).<JZ5A)Ikjk/]`Ho$&P.<0Oq1*[R[!WJ4a0LB;8lP
%@tQVIV^.9I4l!UWAY9i7j6%%T_]W9uo#EXr_OkScrHb?KlKNO:0#J-?.)+)O87;,3=,eHirSdN;+bFU&!^p=OqgO2t6*@jk=MDXJ
%#%W@EKo$B;+\Y!]L^rW'Sj*%MBhmjM]ML7K9Si7icX2#.K*]+D!V@-l[0t'!bnjiKP!]3!OUFYD\\49m,p0N]Z1f''VA-t#=7hJL
%D1iduTDNV:gPJg_fjS3K-HHO++,L(4K*ZXP:e2@E#HRePfen">1b(i<2NXlu!CNVUjtOCgT,;;U[c$,r)oi<c5QI0<THaedfutUP
%NJblPY!W^GiQ9&0a>]3N(C**C@CL:r**U:,5<\_<]0=bU.8U/S%6c4>h%re-2KrI/eL<ok"@S0D79kG*U*Z5'VO;f]kX%/o6#h#X
%_MF.E@_M!9B]%Gd=@q@#5gC=ckM0Y,07h*,NaP6VT83ra;^gcJL:>7I;^5\+YU4CTFh!k\bJ2fTC1]WegbHq[`0(SGU'ShR!OVnF
%[*0F.'MY:mY&G):QdhZ2k9'kdU+cZ+=k(4I*R*f;<c!&q.?Kg"H$u]#i+XfmQqqqnK[NnVO+FHW"8%qICeZ,io(;b]aA43]Ql7ti
%SrLDkWf^i[:?m2rd(!Eee6d@b%1!YZ`Mrt<Q*p($+_=r/I8MS('G9HhO9P5!=E`AG2MoBtD8gU@:PL6!N7tstksQJD=tTe[%j^iY
%M(HJ`W&:OC:aV7Id5u7\q&(??E2SU%mYCri_o_;7+Ti-K$m$NlYQMU?%l\E(]m=EP$)3nqG+@Q0QkZt<P&kH+7eRIjLQSL/&&nC;
%-"[VuOVp:HEb41!Pc7_8kBTTUe,\P;k(GFo;F`lH;oauBQUm]EoLsk<3Wjk>5!W*KU,>LPh),ZB"USb)e9'au-lXXT'.0Oo61$qL
%Lg1pU=$=6l6VdMFZn$;qdH(;g'QU+H#c/17P`laC$q1t*3,VD5\Y>Ct$&R>0<B1?07hjS('D3^1'Ni9K47[WeDh@[go$n9ra!)@4
%[Cn2&2m6Z:0689!%t_6Nm$F)\,"A9hM&mIE_eBfK5>c>c.NW3B^qBjq'_@19S\LjAc?qLq%7'$*'##XDmS,t3RrBd-!!Jg^>h2rH
%8dlSQRZ1Nl/n9-;9),r`9Uh1:!WN]R!UpTP7nA"/)TihW$t]JOq8P^JXK8%,61FQ$TjaXtEu81Z.I^]5,?tT'6dIt-NJ=MbmQgG7
%'CM&k:'F(iJ//DHV:cJZ=X(VlF<f-K$DOiQ<QJ@1pQ9<F7OE_33$j-:TA@"kel#o(%lY3<;+Q/^*fP:sY?49hoVQ&]g&0\GL/u(Z
%8W5>9]%:lq:XUd:lb_@48BB<$(rK[gU%CtPrlH=Fk9k]]*UDThZu>4$\Jr)[:H,[lZ<>K^/je2-Vs6nQ`nifJH&@Ne(TNU>6&`Xt
%A>I\"Sl&IoAAL?PS1$!<WWY6W22=Z3"hO!(!J!m'&n/SJ:NA^l+6]*@:plS;QcYd\c.,:Q+-;1[@iSp'+HheLM$5"O?VRs^]nBLi
%$C!HK(?l.qr$:=:lUt1qBbp+\/c6r)0c"NZhNs8Go:(26A^*&27_2_P:f#!bM75W85V@I,fK=u=cno3jk%5OZK"BW2Yd)'`@Sm/f
%?:kgJE572QA<B@r6CBr(#=E](-\Oc1:q;N5_-4.Jo`)>n2(b+>=a'[srXZF$N?ATf\*p.-N'Ips/[Wnt1o[L@5g_0pHUc5of/k)+
%h;3K"<KWJB0E^$?gjJO-DJjXbI[kcQQg-sjP&(Do'EVaW\Hu,"VP5K.=+s"P?;)T?Q3SbC7h5<;,BYe9X:GmU]8N^*!!f4G;K;6E
%O`]?%"eDtcmXenC="O#0ZL4U*/^]<*n-])#h%\N$&9sL3HeAQ&^_`H83#k\A`qjYU>oAW4)&?DER;r%k8aWA.$j3H<cZJ&nN8m]h
%-hR$.dAbd"gbpieja^g<*QkK(n5J&#0@Z4a>Wc5!b&mj'":Nmn#6B<$bR59QP1jsL"*tIMO,4f5$n:+(JJK1/n4E'_]c`8H\f.ML
%iRT'tH]s1KW)fNlpWH`EojR^?qV,u9*fWa`b]FbMgE-'t8mQ-'/+dab)a/hdH3S=2P_*-;LEr;s)LOZB)=M%))5SIsRR8h?Cjj\>
%mt%=m\jH,cK(=[^3t!8<"i/9kDQ[DmTi1D'm#n'?qN5(;_"JknN8?r<r!kX(5$c1Ei_D6I$qh4poE`,97%7]j][/KkTOl]ZcXO9@
%\s=ATU58a0!(bWi`IeO53FK_pAeX4uXJo[3#Bjc8o`QQL$*DsMkp/NSNa9tG*@7)S^qlkuPj[7&7R,(:P3;%_8rt"?9PB@3<ECtf
%/\geJ1&r#r/-o2(W")-Z*]aU=*B>ARo>pR$o-7K]/jq'NH!3bVJLLlt]Q-rZH9dQi2V/s"aY;.W`b@C=7/)a-T`JFNZiTek%2jG&
%^>O8^"X45>5ZF:'8R"@d/d6s4g:p>"46C^s5<fX'[j!aI!<Df%b=e?Jb?%Lg!=B2^#b*`S&Vp7n";2TuZ&@dNq!u\R\Y%Z1l_2Ah
%oe8#^G1@9!2H+F>H92=7qa#5k6Af&8Ia!?bk#XUgY#_:K^d`Re)b$csAXe<D5/EK99t!tkUlpFH[2GJkYKo.TNM[26B6QU/`&I2e
%B/OJ<SJP4XrT42?&,">MR3f"$W@--\m]*=;>D7m<_1BG$J1KNdnr>CVJ%`Fk#.p8/2eNc6BB5(k><UAgAc*L?NBTA1c`JU5Y/3mX
%C"V37b@'1-iS@m.LdLAS+aK9_Ka7jJrZI/D\J)te?OH6CF?)RP1O2"D0r-nij1E'tk%RGT;rWe6+rYC#O:Ys1UJ;aGU<EGNo78&Q
%M::u-Mi\Hq]mBP@@6SK9bU<(bgc,'`@iL:'KPs@#36BHp4;A"YoQP3@lqNo5UHae!m@?b=6?j_o]C/4:.9t`sF#MV0@XNOce%P@8
%6[6/-ml/g1m\a1"n*d0tJVET6P:aYtS_D_FDsogUST.s'o*^QI8Q5Mb61-Srh7tZ8k-sQ.O+3RYC:^%@LALW3:k)?q?,#R$09)#g
%p+NH3%nt3^qo@#_C8#Y)hU0T`EV0'eCfPqNRe`:mpnI/*p*#DHiS>[M[`FaFI)qV!4ClWo&\[i[6h]S<`no)2ad-QZZ=PSBCtTTE
%1D\XuQ::N>^?<o:O$6f-G$4$J,M4II]u8i^Jqr2%5HFS]9u+e8^TB/U7H0(gUV+:S,6O#80q;5JN6e9#Rhl;_494QYQN;F%-j,?F
%bPOB,?_4@"8\LSj?i3IhHiIe/^F_42fVjG<&9!$=r_#"BboutDD4[d[.$s,1(-:?"U-.h[\*MRkp#-D6eII&8._\un4fO0[<63U_
%%b[+NGrdfHCIXXhj6C&SK=]KH=8MAaB(SZ'^+HX%:krkTd>ocoO+*(L.eK@J<H/K]4Pmj6+^50_Z?;f`q[Hp'BmcP\%%k8fg\5F9
%X&\Z"bAc.e<tG2,qS-4Nhn3dn2XDbMj!j;oZ+BhV=#+.[W,8tqEW0jWI`s6&DgB([Q0c0Fe,;IY2>rE8pdO6.fD#!Z@s_qVTAC;u
%M(/DHK69bf_k)K-ZP(qF"fm+]E%nn;$XbYqk2pB]%+k0tkj0ElZ:0D]X2T<K<icbb,:sumKV6A_AqK=n.%;th5^gJ)3KUg@c[C8-
%f-ND0RODpR4HF(\T^*/[p(YQH*nP`rdH[ULM4I2-\`DFh]t.YIN2ZL)Mf5Ui!b#**neAFBa1J7F4"s+@gJ1O-R-8iFnZ;V7Sd,%r
%$:&FHE%9K'#b1^7hscnHXRB3C8>D&\/Cs`*/5r1(eOCmscE`keq2CDh#s\,NII-^6it8>kO!2,jhjnS3NTDApFq@A4W%2TH<c_ho
%[@JMA?-i90Qu;&7m8e:V1pI\>;fm4F4c86)oTPck5S0bAC3a8]ooN'q\].$O=iN=)Rn1A&T5Sp9A7N=^n=DI(6]KlD[Zs`W76WjP
%E:U]/8(mk>%ZS/],h>Z?*5<(0P#F*/-P@/tP0K5=b>eH(jY;PWrdO$?H<6>>FQ"/]X'MiBR'G7Qco[Db;<,Jsf/K'SPjSFoc=bY>
%]+NX9O#UIWBUs:?@jJnliMX,Hgr*fZ(O()4j/\\W+LV":P8*]e0j@mim.@d-THVGf<FpGfO#O]'ZO"8;&`"4[$hkNq8_PY8$-tS_
%le;&"R,_G?LG2$?YFD+ML!kK@CFt3c&;AgPM?`bcQ:!WhHUD-Gf*=IQd@CmsPZ\SYk2tP8OfLKqkmZd@fsJAs[4<lU`/$ZlIJnQ>
%f->I*4'@;8,?AkZD(A3$NVuU8%<ZRB@sa2<AFE"P+a1GA]t3D'XJ@/cg1Z8uE`JJ\p%*en6J@l*%3[9*K-JM<ld[SR7l`3XN"DnG
%I1EL0i\LWM4a5(Yr8\F<j-^U0]t!+uTWui,S<;i1D;Dn9M/r6d]%Lud)O5=aVf7-O-1=3?WpoIOgZWejA4rA?_9/=P&!r,JOuGT1
%]KV;Ig-fb`a3hepJ:[g*IkSE\c$4U),XgZC0Z?#s^+73NIO=PH4Pg^IT?_P[ZFfuccRDe5i`D-\OgUuN$h:aN8K/I4ldKo45Mkq[
%4'.!$$ef!BCB!<Qjd5$DTLWT1E&Wkek'<9p#0_BhCL.g%I.jLBo=rWGq^atj91@UF1%3oC;n2Ui?Zu1L]TOj!hX_ap*tuHIl[aKc
%!0`5/,s;-SK+?So"s("gjZ+Eg$BO/I_BHdg9A00+OKG8affJDrG@$;pNT<*C=2Ka''?7.Mi=bUl'1QLHCMrIK^EZuGN9@+2)t)In
%q"%7CV0uR?\YO+mI3?jS]NkFrHfsqJ]m[er4,$`Xrj-)m:Fko$SX"CZW^D$=DEg3&qm:A"hUslTU\a1Tr1$o<dKXoABH>]i;S:R_
%+($Q@T7AGop%-^1hqf=;7s3tEbCB(KorE044hCP^m659J7thjB#<gDdET'NuB[06kq^^Cq*gIq!WJ\0!4o#@7?=g;k5,dqmQB-:3
%QH;0ubIeh@=EENq=]V.JXj9eAcNC/mj*c7*o2n#9ZJW?NT-iK5SU`LGPEREtY%12"p5gk_g-`:o>7'SDOF`>U;$OBl.tTEc^H>Yk
%]eFoL=RL*cCe;br2C'a?b<.Y;m.7[.LUZNO,\k()N:OKsh`e]k&)"qiph]0Gj5,0qI+6]&%b\h0ra]9[UJ?*HI+$Pq5,b/=ALa</
%jJnW70cdQ219WV$8!h4chtp#uIu4u*RQ8Dhe5aT@6%s+qI)pcS(Om@\-S<N>&,Dbdn^YMOgm,G:nuIOooGG)AeXs.1em7\(l6/4[
%W98B>P+?mJa1K$RmdK,$GMDc&j8%\9ZLaAXp\X=-odf=gHORE&9]5&_SI&PS!d`#N9SJ3qJkFH;B1a*$>jcX5Ph!!&Ph6,:#qI^t
%m0E>B=Al`N,F6RB?!&:K`"86OZEH'P/7HeI:O.DSf<qOEO&c*1cG?f_Y1pB:\QWN9=bF(.Fch(uZf%:RICc3066m[V-l3cR2[Z$i
%SBb@k'>X3'WVZjI$q+=7jD(=UGoH:p.R7!O>JZE0`G+WjG'BeH5.c\]<V:gSQd$5Yn<f:1F<l!iB.V0^]XceROsHp+e@Tf5`uMe(
%rJ[ZK=MA6"Mg],EaV(kX:3K4[+takLI3`rTBmIeN52K%1_UW1gN%D'%;Fd:%fihWD6fpK\T/,]#XaRdO*Ra4>o!k,.c-LT%.i-]T
%03MT-X-0E0ajrZ3n'K^F=B*XmF#%[UbX+5@SFFbfma3%lajrZ3c^rDD?6[\4l7$2k3jZ6(+fcuWS1\>4hkt63mrgmi3958T&)POi
%]&[Z$V!@&!Xii)Q2-p*$2a%:^]!jI-lP2m0dPG1PKsUHaX=bE1*?RoLg;f[gm+O,Vj&X<SZ$6Z8O`&]YAK[#gJu`i\jn'^t+`%XJ
%S_70PRH.NFh\W/a!\H.I+]HG.1KAfdB1XS&62HBHaHpH)o*[/IpIg;@2`r=S;"+ijD=$Ds,\t/:ScJ"-Xc(C"+`t$`q4:X*kf(g7
%$B]qZZSK.Wh^<2:,q=)u-*<*K8X$C>C7fG/8"jmGGDMNp4Zt:"SaW#K`?!GUG"M#j;4I0oOfWuFkP6\%c&F!MT!aJ$AP(M5[N]KM
%'8_*#:U29Pqg?T=Li=-/BAYrrb<.]+9cI5nb*bQ'd#-LPU*MX[RQ3Z3m+"M@(/L;BC8Z<tj(I1pFk;UD-%D_G?Ta--B%B!&05QMF
%@VOMi5arGK1le*ne#Rd!3n\'<],BgI[(]:#LC2_T?#CJ1MM?N#ffn6]GYV?/]L^#U4fn@uflCG])XpGg6DiTH9@!8,QDaG%-^":#
%'u#Rs<:C+.5/3'f*4Hm_5A6)7e8]9.iUb;DBSg&\/G>Rq]P.bc^Z>E6^:)\mXmW>S2YH@3+.CECEtbiP0@)a;hTZ[r'9'fhDOCJm
%_'3:]Q!+q$;Tcbi,-A<E5hCg^5FSus`q(5'3>?)3<BJ@rF`]kq9NHB7nO16@iehr"^a/Kfj-/-0rMo2%7bG;!Kjn2JLnfMU^$AE2
%K16,g##d[=JBFP"'V(]F&9e#8%?)U$qAG-MpdE]J@tUUk4*)&nj,\FsB_YiImbQ,hj>stGp/1N#7L/`Z9;2T;eYJ>pJk^un]HOh2
%VbgXII7$9;:K1=7l7'hP\6h%>6uo]/[g>(:BKY7gnDP!AWadfnIPf<c!VD*,G\AZ1P-KZB5M5YUraepLK.U5:oniU4CiDSWR_\nh
%`,cV+]d@loTR\p>YG4.pM(o]?A]krHHPSCRZ&'_@&m!`7W/,kQDR,ft.O#U=;fD@l!l7TPB6I1V@ZkN3ZNTjb!6Kbq^L<[`5Rh(Z
%]0Ej3:<cqQq>ATh@#Uk9cHWjse6&MVm)RQaL-Q^]NE*tnYH+]Y3(AHgR>E+;EAm1r-!V7e#5b540hq[-F0s`HdB_BB>26^W,YVW%
%q0jJM6^*?,JQg`>ZP.eQ*m!>`DElSGAePjk0'"@r@5MgM>m/]eO(lW5DL<Hi,@KS?RkCj^oXCo)I/WIJg!m&7(\SOG0i`QRJcE->
%/?,Xj2EPSigEPU1<T/SlB<_ET2D*A`P+1mE`/T1l&%]?P%cD.XCpqV2-`D^J!S+NSSp1h>dPY8*4@2\5U'@2cCn:2r5gBd&O$,r`
%*:,sRfluiWG=E*"r&ppL<h]g/Zmu/G&;'<c'"JDF1gp,S-TN.`L"o<-SA1dpm@l:(?dY@/R$<\[$N2bTj=s%`c3p[DS)G9<=qlra
%k!lFj;Fi!o1)]6)D7u-7M:^!k:Vaq,1>@f0%1*CB:&)enL:ss@THL70/F0E9^Q=8u*7V<OXYeGI#rYh`l8[]0Du30D1-Q#$\Dj1S
%YgacqPp?$@1foEN!g?TPRX_P#TZX2PgWWJZ+=fF9;EY6<-B6jDNnlL5<qB;8BKH?WoHIne6ulpDY-9C[-U8KW1H$r:c@D)*Up7.2
%Go^"K#X@1q5lqZr)j8OVlT0H*BXk-%-P5.)#<A#2+;3r-8$RAq$3?pWQu\2>WIPfELnc?O`L?WQi>h3/%sjkI5(u><PKeNBjQ9uQ
%SMJ)eRP8NYB6Fsc6%9FDIIlL2,uYGbja-H.D"#mi_ZE/Df&6Hfio:_"J]2>j=kH3o8\)<):RShE`qHBg"Q`X-b?]e5Csg+C=tM0G
%b/QEH#Eg,2M,YNAh6`<NSgV&%IA*nk%p_`YGAOhu1/I^Zs+1G<8`r3q<-F3@QDh8!Rci$:7@</g0i2L/E.X@i;F(L*$KfSb*/Eq[
%>37g@c,^*@N<58Lck#\CZ>62(O%:1Y4\^A9FLQe%W4V)jA1AZ)4\Xg$S7^Zpq1:LgO:2b`ZDp=]N;b`rOTHmSp(\N\1?Jhb'<H';
%"-i%Dh"GQ%2*1Jr_/IsoC]E[C5*^X/;5HT58W2E%>3f$PT<E1eZQ@&$].?FW^f$>_UWj-RnD9Y*"nHMV'J<Y)/ZBLqkRAULrr+ms
%<FLAE#"gef236Br'bk/MTAcC^Af52s:C?8Zp+GF-1<\I[+X&;%'M;bnpd,V`6-,'-poqWLpSNsAOJp>9>#QY:i"^6QmO!XAh5/1*
%Ppmi42V(p&h[N/$P;t6gRc[<VqcE4g3h&*HX':Z\C0F0\KFNfJpOtc`bQD&dcSu2SG!^n(_=UnEPI#RFq<#U%=^R#]'8JRd,?eG'
%[bKX7j]*cbdn]:91ud$IYfbp1d)0FQkmWae[HQ9qLsY0npWr'*i1*`d'j(\dSf0sZaQ]Yi54?mDL8psYFV\UW/i*%7L;<>qaq)4_
%gTp?1:eBd\iX60M9.8b0TM#T>P*#0"Ycr!AqD7sbQ6;1iUYp;HBr#V"&jj[2I9Rg69a1cl!0)DjO]-;nKi"<n[Y:T^",H9EA\\R=
%aE&Y\o'O"UJ2"D9nn?6SluoG6Xk68f((EkJ''KL71=-m.4BdfBMc+:j\,0rKW5]0rYXOEbPl@mULTM'>U9GI9U'unB2FI%Ui>>'s
%XR&%QTS`rbZQWO1$QSTh8k,3UEZ\%h.Z9/8..AYKE0C`Ke,JJJIe0g3<cR,0fQ00EH*Q,b`p+:1)Ld<.&3f1jYsoh#`"'`=D&T*R
%#FBOU#>@VNo8$[.^rEJ&]+/G8)Fq;h#Gc,U1;&?$Xu<nuAJT"p'grbJ(/R@4\2/b;PCD$21kl>ZnMYbb>X_ZVn/2BnF,l["mH(=e
%E\T#uL/4"Y&CBE)ktQ_j4XY]>)NsK2Rb#.40Pg2CMS>XqeAIcgIF"D<oWZUGcgC,dCn%GHnkP`>:rT/1iT#0VgFD0DiYKIS-O(d+
%>9uY5B8q^Sj@'tmGAgL!9ItH]$<85!`A[H!,LR!f2&6A/&k+<q?$8ke7/lc$rsDfUcgP`q0J6CCU9;Lb<LtqSbXSWJpB`a?m+HEG
%#CJ;1ZPm&mNH'5Sq(n4Be^lgo];`[Q7_n445$+.e,<4u>c>gS:i+kQ2mn)(Hr)P_mgX5WI&=GTKpt`Oi'Xd9=>[c-B*dn)'_I)eU
%3kR]Ne7O%2oUt7HCfsC4c$<eBTaNL-S/3t6,8sM%P$LbaS_-T?l8S7t+j7U$7W,DDX-E+]Wu#>=H6>\M5%<R9J]1CAie6dg,2_)K
%aq4Y*DJ$Eo_)V^[@s@dTcJF9XC7^GEHTU9G=%`VaJg0=R,5XW8gs0ma,g\@taq-Yn!(ug??o:lE:XtCn?0m9(W1f8Bek-afKm<Sn
%0;!>!,1Mbm"%H?;G63P=CWR>0'I3UD#?l=!5"_8[Y=$:'@un(Tn9IT0>f;2,jU3S*3f63?>Fce2*7"8=SZV(MGq&*P`m<Hufe?<a
%Br`;,eNS=PB*kAR)1A`?)!\bY\RDb]O(p(.#l[C[;CEK5.?t\.PmA&@9rIZDpo<=S2';2-'&o.,O9*Z4_1-M?(/4c'R[((3paVgm
%`+mu;]pcFFpuNJhV'F6%#O;J3d_m[;kcHL^(pA;?LX1>?E^r@_qe+aS\2#:`aJPhJPe(kl\K`gQ+e9'b]?_Z00"raB/"?NHHotP?
%ST8N<V!`9L.lOiQGAG*o`VCi([j'TB7728P(\f=G!iD%;qc64q?nKjfmU!X^%@^!7#aBo$3-X\+4$G8IkR+-4/%\V8qc\hoET2t=
%I/s+K%Ud;4MQ#$7Dk7#[g_X7m(Rn``:TsfE@E2f3QDdmr.h!Z,N'V>LTdApR[EZk'Gn[q\34gk:VAE^uL?*Y`a#([+HtP?sn&Gdt
%$e-cRK7!r>lfJ08`_YHN0+-q3\usd#V4l,fGP.Q$K_F7s&dK(fY82Q-g=)G,*b!qJKKX*O"8TPTp%=ekX5A^Y5"^%6f>W+odGH3s
%oF%:>a*1e4b-hP2/#D`';cPY&b?MA`@aHLHA$jj]mG!>35o<%KTm*!V8/LcWlq6\,oq5?g:jZkAOr,4l'XqL$kY"?lV6?M6qN^2m
%?BJ$ap<!ZP0U3]=W@NnmaXhcog`ET0Yk[Y1^fQ5V1'>Zi_9dKr2p(KhM%g'%k*to]Vr*c0.mcH23F9fV<OC,8K8<2XB;M,i;C#S:
%06"9alD)AWUWICZoK?_q"IYih#WP[u>;!NlZ_-L(ZZ#$hFV^l*\nKf;VA=F,&*89NT-N\7/\fVlfk.QCSHfOc=)Drn3L`,[2f!O]
%ZacU(md#qL6b']X!ktNqqs_F]cDgeb1DJk7pl(gf.CnnU&,Q0:@*+suT6Y-sO\P(&Uodf[+#D3$W[Jd[PI`hZ+`OV@&_OTsH05tq
%413MQY8Y1=`b]dsC/aqHH-uTF:m>8nMTnu]YHFNnXRkV?s6XfZp=l*[h_Kj\DQIdYpHJmNV3i>\>&7.OO[=2W6dLV2r9/6/(g&"n
%dibWZ1L]$;cNsl6[q*X_Z-C`o4<"p!*\pJK*%5;O^fL[Ifps$)4Z936dFa+\^TIR%RdLe\>>dlJLtWGcDVp`I@?3i(%^Q4>7p.]8
%Yg.O>C_Z;DMZRMmE$4M&hI6nic)0C&DnIa);,"A(,uF!M,eGJ#0.W?uKbqYfBKf*u;E.H405f]B,>aRN8DGthdE(#e,hA@9CGsX.
%.[DCb1>L#E-FGJ3%cM-J<,YdVS>ZuGQBb@kC8@T"oTkO'NqE",WQprRBr!)8U^ii9WZ<,_WH(RJh]2$B+sYDK;:,P^-oIksW%a:E
%;u)lNl7U]n%kt1Xe!DHpUqio2M$doo_LCLh$u4OGW2,$h0tQp$KV>94B>NGC$?i;FD&@!iB-jaIA1+;V1Uj7q:8NSnQ0V^F^+\8'
%@3TCQ[HWN0P(Sk#.p.[Hjuc\aIK2,]K&Rp.N#^N.;&_k&NK)%q!'=@ZOj]`cQ37$iNYc@-K^:BT@T0`QSr^t%qSLugQA*;D_:7%M
%'>B.5b'<ih))^D85aqMU*F41M/k-,&Hm5AU=G&?`FrCU$nW]'RJ08$BU!$\MqkbP.O9g.ZrRBMBBFR$:kgiqBBTVuC'l'OJ6%E_h
%*(5_hXj`cA/NahgB%)R31p_16L,S^a/Z%8oeJGfZ.6qLe#Uli,TZkbh',!8!DSekj<F/L+MSLNITQ$u:U3ILFY3MG,oTZNh'b3I5
%'ZN#A!!SU+7WH]h_l4--7sEuuU9N,ZDKeGor_3%bQqc0QcjAA%h<:tqc]_Q)F$G4tpq6fHWFkUEWh31q7tYo<HE25Ki<d;0VNaWR
%0kpiVBmh2&9G?P8\1+n;$C4En$[fZVdmIH.UB[e=LB2Keeak9<:@Rh`U7X-Y7#*+go+k!4n@\$5QWS%ontCXp#A$,h[oPHKqa.eC
%e35B`WqMso%+jL6V`;K7+:4L*Oeln#hMB5W)aF_aaX:]fCW8)4h#e@kc?KV=&-TuO@9GMX9`m8.;Kea*),^@4L^V*%7%p@C-..fl
%&TM51-+T!i,!=??)un(tV[!K47R>Qge3f4k)PS^&8=0%>3Yl$;J1h^+&Jku=XbtN+=s$YJ9=mrm8\Z_dbU(4!!bED](DA&)a+Bqg
%/9iI!`:J\?+VD':"\bL>38W"iR?EdZpSJ.Q&<=Oio=1.*(h`RA^&&7kDdRqO$)9*S<mMFo?$,%9do^K4_[Z\B-?(%TSE#U-,7jo#
%FGnGO;Z]DdY(^j:c2k`A1).;==ts2Y<eSik?*QjaR2L#Y;LGb\+u/GSHYBYO,I^)E@&Pb]=Fqrr">XBqK58)?IOg[8OpK<?H%%L-
%&9`UCfGTYeL?HY1oQlPR*j)_kT^<W$f\HL_oe9?lijWK=Qn]FcNR0ae'?PA1[;e7-.2_N-qtWnYqhF*1OD^2b6`),7&pJl$3\SL*
%,\U=#.Jm`PM,L'-FDBAs8I*mYGKh#n8jEWm!%OWtKQe+_-M]%N3""@/SjK0NiA8BOjR)7I%S)Bj$)DB6eSp'g@nP!Y42G?e&?Mg_
%SOqHdo?>d>qCo4W@?UrZp!^%ri#]2W48_#?<<JV.-Stfph7(e?ch4j`Q6NfCF`U/AW&<H67uKaK&,VMHOF[!YY\IOm:jX,s%QV(p
%NSTcRpoA8S/_q6@ea;s!8/N)8>hLe_J[WsL:Q(mFO.b;63QFj[2nY/?]aO$rhrMSWL4Sc5%HM"a)1$G$(4K!rQ3[jYjasP[@nVA"
%;%OZpOOf't:qPiW_G!M3h"/m0^gQA!<lG@&[;j;bdm.+NU8QgE"Qk"b>&g"7L=dK@qfEB:QrQ+=Ht$R<?e.FiTcWF,6Xs^1)\4K/
%3rtK/-qQ!FF^\k_0@UAQe<>shZ;frVe0%6u_D]]82EIs,C_K"$kRo1=bB0OH?j/C<9`Y&r]l[CZ^g?@pW';1<l:3rFab&ELH@_Pr
%\*XHBAP^i'k9fMj'2Xj%_nsm)\N>).Eu7GjfN-f6WWp1,N&P%c*YS;i"KoAo4d@ZF6+KKl@^rBn(8:"%fTqbf&!j-DX:!<^1grj]
%&f/u_S>I&fNF>q#>C\lB*Y:ps7Wo]I(1U^u:!'gZ4.=mE/]TQTT*^;=1AH+\ck*)!KWu>?%4Ec(a%gl*<VABkg@Lm"i'?VW=,*O%
%)&F'NDKZ9:]$#XQd8;ZirPgBA`<M<.(-XrXjH1G6U/gu@[!0nQ+u%@nS`RpBYfF4CpX3J2GF!P?1/aEKQKGu+M?8qY&4tsLi`:#R
%3*3^POf0e$YjLeU%R14F)_!Zn,cWQ`=XXXD!>[WklSD]F'/o"Zdu3jC=,f=^!RrNr@t9!LeM^D__7IVH6_)1R*'H^pA,X6q9K(t#
%&YU`]JBFX8O;V)Y5VlgR?.DfON!#T4ffBq[^C?2q)bs[)Z04tW,`GW%JA,\qLado^b,/ug-0V^R#$#'O0qSL$\B_ufiU@s@YigjX
%U&0LR+Iuf6LRCiU33ds?[.,^fG"Gmp==mg%.8,\a]PHfP:`+!^bK:5I#ST[;n!XG%*M`,52b0rQ=J`5`)<kmE>dBN1kRHY0dO0$O
%(L^iWg]fnk%-a>mAPorF3+(J<2b@J#W-'>fiJ.)Mpk/2q(`]GHO7fa1?((neCau)FVdJB-?@Hf`WdiQB"&S#Z/B#Qg7%dAB6o5PH
%9%CKp1*l.sNTCTL);c`]*d1L.+50`:>=[*bfbM<[eb,7"-V"SYlLV=h/;G.Q]c>"%fsTgp:O9>J<8_h%b*$T?('cN2hEn'r=<3^D
%fu&!S,u/fKc8EXm%dZ&>QOH;ko5%]fQ;Y@A&qk49a)n>.F<>#)qp-'$XZMTY3h6(Ze`H1O<4!956Ld<<Va=GE'"05uCn"p<8M6uc
%mbS%8f'M`;<bL`eU#JEq'g/,98oPBM/<b@ZY3/MGjkCrKedj73JmN)_+c\_ncLpQu`Dhf@Q+LN^'e[Pqb2'n16QCD5.sK#dqjR<i
%\5+`c*XXRI<S_2ao4IX7>]IRU#D0$#6,XXq%mC7%S#W0I2#XGtR-:9*aN+l;4JEZ::VKR=lL+<b(Xe,TMP2st8N3/^g<!qY0nS,a
%#Vdf;>'AS1HlIZ((nO2S-GkQI2:6\mN!^`Lh2,[Rme#K";/c$@iTKCK$)\'2,F(coXks$XNPZ!ucD\0a&4TL1]/nj1BS0K!=6+e?
%U:,S,YQU?qD=sBK5lDLI6('fWQf;CeCd:[i>\XSt$hT5_pDC-nKh6WJbC8jdGj*XDp6$eL9cCY<$W/Uj5Kf<ga46qMNFg$[\3B11
%V-t0E?:Y7/Kh5679TgDp@E3E,-`1<.K-c]-#b#G>Ls)KZ)X6OE_+6^g4ma?^RT-=WQ`$)s"%;r7rN*HH=AeD<S-S7H>#qm.4?0ti
%!/qbF@OM%*7#W#CRe9C9b3YhgT.O)jaI<N&-t-KiVutTQGF..&NJOep%\V(l$A1G<)6<aeEnGOu0X+XA@FGs]B?:Q;7?EHk)T-@q
%3-KTE=_4sK>$$8(8CGGgCQi\jP*?62mdR<]X-oB@AqLgc=3dV[BbO^)T<]FmUF^_3(mk:]B6EGjo@pK+%8k435^."Ka2$,boqbfe
%L:+89WKTaTA-H:V`5,nR#>Q,i2Frj-/^k:Q'*3./:*X-g`WWO"h90tO,qD@eGT?,PW`Q,uB(qGI+oadT7,Hul#8/.Y$m+#f@O,(`
%/(ALp(?GR[UiW`fLP-4E9-@(X)/j(K(i/[b@4LQCPeN)MCh]d0:eEAJ@T*@@aLYM9N,4h"YKCM_Pm@V\Ie;q\"+\-$$&8`=N6&j8
%1;AkL*LidAMA5Z-Bm5ebC'6UjSK-Kd!<Ye%*s<]GL;EB%r5eY&K[unP(4+4Y\97BQUgOC7',Q=K98*2N@?]D<!K*Z\9ujmlk#6^M
%ls;`/R.I,Gm,;F(W9u-)#P!ldZ^U&a,1aQ>4He`PQ0L.6DjktQ):X*"J[IBf=U"L"\VjQFf!4]^dnqXZ]j.s1dVdeLKpHfmOu".Y
%@9O^5^7)rN>f;.$^uQnRC8n\XW8+hmE^/J[^gl:bnQ<c@`+VrmZ3S1,&H4f]S\u[N=&,YAXe7S,%g\$$A7+>ge^6^RQTZ5[8%T!p
%`N3fC-qJ;/<"Reu7IVao8W:hAF`S(Lr<7+qnj\Ai@D_Heks`2-PSkqeEIXYq76kXp=5IaV73%sZKrrgS-\g+a,971s)_A)/,\+!;
%/$fd5aaDN7lQs'ZL/TXn;:jtc_Z$8Y[>?bOQFpDBAVqm(=E_LIQ3_psPHP!p9CNB5/.p24^0&D$E$[#&%E7+U)"3uWE9s:<&],_i
%QsM4BeOW2$ARj^9-sK#=HLf3pjW29Zdaj)`5^*E&NPH+4`c]TW#VrOHLu$Q+UJ[_-q"(5H+6"rI6mq\)g%pW_IR.D*4D_e$c;f\P
%KRHILdK'L[&d"0_:.T=*I'Y@Z4e0&,R\Pu7#CN:mM!0Mrf2[4,,k;?^jBAWU1_lGBG+]r5!kSh2/M"=\ZfXufluLo2'Z&o6Y`md6
%n?6.VKtD'%]I58dQ"k%(SrG$0fDopR:"4a2`@1r4Li1:5Der_p7bL@ed-ZlCm`s8??1A"%j'B>,rYO2h5W=P&&:(B`(TO'C/n>aH
%0gW;\7GoNeJ:P*4051^W/52Zf+=74L/Jo7C;pp:;W%n6)*$]*E=5T&HR3or3GB4<\W$8RBLouH5-g$pf2MsgikN>MLZHcEsgecu*
%E.T4cG8E+-GTY"o)%rD_1,uA/+PcW*/^co?*!`7[6`+C<3/Y84WC-uL^_tNEL*_;gZjj\QgjG,,12)F:0!GOiOi3s"r5M#rV[0kc
%lB.]:L4Dc.doB;2aqufk`14up4Nh?NJ5DZ;h/tDBhCq$GkZhe,YmX5[qH,\C5sS0[hMU$u\`4AT2kCHu,k-D,*!IIt#>p35rM?f3
%]Fke#)&W"I`9e<K%Z!/D(#4g-)C!*90TuW)0iSVn7%n\GgM'A_A`!P@<29MBG41k)L9J.ni(JX'+l\RdP0o^b.U&[p[_A,ZDtC?V
%7dW_,WJ5[DCC$j;bVC99m:Z_M@nC+>pk_EGrh87+D\Y"OS]PT)J[?pMY1\j+.XCL,>UK\U'ndp#eaQ41e!36)i2\]1J^g?TiRFV0
%JupQjm:&i`SIsH,N=^^C;6iN/KI?9eAr)\f2&(>?1hB9W_G`rs[i9E@b7O^m3ZA5re[q2hLkarDh*aui@ckX,9)c7,'d28-WNf<)
%gQR8Mk"$CXI$ok\2/,kS4ji77TkHT@VJsm`.JliEael'O@D7L`X&(uJj7;t4/E6`r"b$J=;B=`KTV[]&7baOt#L2.F3'\!_1S@@;
%.4!E8ORUVMA5<)XkI[?g'N]-P]KfE%OKF1J,>tOuJW$H<?RWMh!BusmaNZ&ei/1EiRpg*OF=#5`.LH<N+;oEP6pCf%!N\rqR/Q+D
%iY/6LkX=KO;Al$Y^IB1WcF_n=(\8;(PP-]OlXh%@O`q:j["jM(3;//UO(#g9:iW<(!N;HWX,&!/Fp7osB3c$(!<h>90Wp4?0hY.Z
%9?JXWR_GpJ8=YGYPsiV'6ES@;;4U[!B"PREVY#0'%qQeX2,NOf0FQqs!]kV5,FOZ\lnl0k(O"3o:@Vsg_M0;4J<5F\f1j?L(LJS"
%fX$8OK]]M_+@B$"RtG68FSGaAKpse?*em!WYVoX[J_/\rnj5;JBpVe<dR4<7U'YmLBG2[$VbeP]V@_UJ/J]\e@Cd0WNe05U]I:a,
%SnS6OV3'jo*-alKGrqC;'Wm#(;6mL`Ep[RmR!4=a*hK<jOj;],0ZHGZB\4&-:RF=i70Wt7n1^KO_7)@3-96Km5\1bp1*qm;bT=h9
%ZQm0I_EI]0-P7)!3-]I\N`:s%eh8opnYjs.&0NCn9l)Vc!pE1rbe=(?Bhu3j3_=!BSefiZ97u)$ZJ.PfpAn&J.()`1"IV9AMPE$g
%D@:*SW)f##W;Vu!a_[J^N&jb`3Ufe&C]Ut<'#9uiS(8*L;QE=0%gGW3Cc;s4W">sS$tR?sC=-R(<#,I'G*!-.#Lp_k@N)+W`,oR7
%[1o9H##-1@8/J")jK<H;C-="oAFd<^$%c^%KYfi6L>X_7:dX.FK*7T%)kon6N/$gP7>BkHiIsR!#bdW?EWC!;>NKg9We,">\kn5b
%36S)/\jNrIY5h+H7><u+']2\CEk[r=,:e(4E;aZ"plL!;bF81GQW&po!Ot6[WF<Lmjh7l`9Xr>WnZ/f3B'-MX.OSo$27nOCVkE,l
%6,c\G2mPLrJAi:g)VnfurP7gHK>1*b@us<+"7$iV#NEK-h1l`19U2u6/5[Fc8?POp2+NIYr6&D69Nj5nB.+R>F>l"C#Rb7*Gl`4k
%1fS!&@As+R:4):.%*Ehrrs<,$8Gt68%e:87^ld0!L4?I3,J,h7qj+Nb6aZTW&8#H,,8;$ci[sMol"It/]ku$5(PH-OM8,Hl97W[P
%q1(9lCe8P;M'<'N-q\gD]uGO^>=a3moicJA28HLp!KFEkl'gV5.+q?ITNTA&9;5gKA]:$EGH_QA6MeHb=l?5iDCR2>YL8K+aI=pN
%,54Z#-J+sCEE[A47G^mVM%D.8U)8sp%km):'@,.*kWQu)pMIn`e3J9K@Wr<=g[?J)50D?T=C.:J1ln?pp%U3K3$XIL`fH"+1l`/^
%b<?Cj:4@7J+9n/.8aS@(MKak*UFK\karc?f+_aLQM%L9$+Z6),_[7BM/*\T7imnm>V<0P%VQHsV;T*mqc,1*&jK:WKU>Ql6=2+mo
%c#cV/PQ3nfRRc5#OnW?jqTREpLP1a'hS[5n#!e!!OQE!U(25*o&soQG6%K)Im`Ds,NqpI"%!;a[B9gN6c%&'5"^:]Z#W)#M0mgq@
%4?&4`<-`#g.O^"oq7\'mfFh1c_u'K7=&<m#^0&$dPE!D1OEfY4s.)"j<8bZq"XP+o2nW<r2<#?t<"'RmpI4#&MjY-.o;_),<mT4`
%k:ElA*f'O`PGhgo(c"o<4uIA3%'C:UI0Ccc*Z@\qdf!6bq_@\G$LRa*3FG-XHDlmbmhJ8+_"R!Cek6#1L_o&ZFT,Uk3tTn(n\#3r
%g'!]T3H]jZd*lq.DBhDb1%WZ%]504KIU:"LrV3T6_m$^%9$RZUP1?L/1<lGR$kTb8M.*?`]cGb2j!Z&*\!`fnlC$W*a(N@&bZP&J
%q&nas/nGA5dnin-cV<<0fLQl%T;),fZ#pu$@J@7AHWZ6#>H_[/'KlgJ<[8Yo)T?98KJI%<N]9+q?EI@eU0sa48rR?=H,A2WGgBmd
%;/+_'nT[NH%OM2FEn$uAofBml;0@68TYCD\huE*Ts8G75s8EOYrZA=nr9'^OqW5mpn;%&7a$9Op?iTuCs7O-VqWmU"pSYe)nXk:,
%iK&Kfo3_Lra1qZHIr>;Z_k6r)e)10(QbWOl_r(IV?iD](\ELH\%tFA0s83sgs1A:9YfI+;~>
%AI9_PrivateDataEnd
